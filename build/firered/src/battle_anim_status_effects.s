@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sAnim_FlickeringOrb,object
sAnim_FlickeringOrb:
	.short	0x0
	.byte	0x3
	.space	1
	.short	0x4
	.byte	0x3
	.space	1
	.short	0x8
	.byte	0x3
	.space	1
	.short	0xc
	.byte	0x3
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_FlickeringOrb,20
	.align	2, 0
	.type	 sAnims_FlickeringOrb,object
sAnims_FlickeringOrb:
	.word	sAnim_FlickeringOrb
	.size	 sAnims_FlickeringOrb,4
	.align	2, 0
	.type	 sFlickeringOrbSpriteTemplate,object
	.size	 sFlickeringOrbSpriteTemplate,24
sFlickeringOrbSpriteTemplate:
	.short	0x2714
	.short	0x2714
	.word	gOamData_AffineOff_ObjNormal_16x16
	.word	sAnims_FlickeringOrb
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimTranslateLinearAndFlicker
	.align	2, 0
	.type	 sFlickeringOrbFlippedSpriteTemplate,object
	.size	 sFlickeringOrbFlippedSpriteTemplate,24
sFlickeringOrbFlippedSpriteTemplate:
	.short	0x2714
	.short	0x2714
	.word	gOamData_AffineOff_ObjNormal_16x16
	.word	sAnims_FlickeringOrb
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimTranslateLinearAndFlicker_Flipped
	.align	2, 0
	.type	 sAnim_WeatherBallNormal,object
sAnim_WeatherBallNormal:
	.short	0x0
	.byte	0x3
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_WeatherBallNormal,8
	.align	2, 0
	.type	 sAnims_WeatherBallNormal,object
sAnims_WeatherBallNormal:
	.word	sAnim_WeatherBallNormal
	.size	 sAnims_WeatherBallNormal,4
	.globl	gWeatherBallUpSpriteTemplate
	.align	2, 0
	.type	 gWeatherBallUpSpriteTemplate,object
	.size	 gWeatherBallUpSpriteTemplate,24
gWeatherBallUpSpriteTemplate:
	.short	0x282b
	.short	0x282b
	.word	gOamData_AffineOff_ObjNormal_32x32
	.word	sAnims_WeatherBallNormal
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimWeatherBallUp
	.globl	gWeatherBallNormalDownSpriteTemplate
	.align	2, 0
	.type	 gWeatherBallNormalDownSpriteTemplate,object
	.size	 gWeatherBallNormalDownSpriteTemplate,24
gWeatherBallNormalDownSpriteTemplate:
	.short	0x282b
	.short	0x282b
	.word	gOamData_AffineOff_ObjNormal_32x32
	.word	sAnims_WeatherBallNormal
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimWeatherBallDown
	.align	2, 0
	.type	 sAnim_SpinningSparkle,object
sAnim_SpinningSparkle:
	.short	0x0
	.byte	0x3
	.space	1
	.short	0x10
	.byte	0x3
	.space	1
	.short	0x20
	.byte	0x3
	.space	1
	.short	0x30
	.byte	0x3
	.space	1
	.short	0x40
	.byte	0x3
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_SpinningSparkle,24
	.align	2, 0
	.type	 sAnims_SpinningSparkle,object
sAnims_SpinningSparkle:
	.word	sAnim_SpinningSparkle
	.size	 sAnims_SpinningSparkle,4
	.globl	gSpinningSparkleSpriteTemplate
	.align	2, 0
	.type	 gSpinningSparkleSpriteTemplate,object
	.size	 gSpinningSparkleSpriteTemplate,24
gSpinningSparkleSpriteTemplate:
	.short	0x2757
	.short	0x2757
	.word	gOamData_AffineOff_ObjNormal_32x32
	.word	sAnims_SpinningSparkle
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimSpinningSparkle
	.align	2, 0
	.type	 sFlickeringFootSpriteTemplate,object
	.size	 sFlickeringFootSpriteTemplate,24
sFlickeringFootSpriteTemplate:
	.short	0x2743
	.short	0x2743
	.word	gOamData_AffineOff_ObjNormal_32x32
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimTranslateLinearAndFlicker
	.align	2, 0
	.type	 sAnim_FlickeringImpact_0,object
sAnim_FlickeringImpact_0:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_FlickeringImpact_0,8
	.align	2, 0
	.type	 sAnim_FlickeringImpact_1,object
sAnim_FlickeringImpact_1:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_FlickeringImpact_1,8
	.align	2, 0
	.type	 sAnim_FlickeringImpact_2,object
sAnim_FlickeringImpact_2:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_FlickeringImpact_2,8
	.align	2, 0
	.type	 sAnims_FlickeringImpact,object
sAnims_FlickeringImpact:
	.word	sAnim_FlickeringImpact_0
	.word	sAnim_FlickeringImpact_1
	.word	sAnim_FlickeringImpact_2
	.size	 sAnims_FlickeringImpact,12
	.align	2, 0
	.type	 sFlickeringImpactSpriteTemplate,object
	.size	 sFlickeringImpactSpriteTemplate,24
sFlickeringImpactSpriteTemplate:
	.short	0x2797
	.short	0x2797
	.word	gOamData_AffineOff_ObjNormal_32x32
	.word	sAnims_FlickeringImpact
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimTranslateLinearAndFlicker
	.align	2, 0
	.type	 sAnim_FlickeringShrinkOrb,object
sAnim_FlickeringShrinkOrb:
	.short	0x0
	.byte	0xf
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnim_FlickeringShrinkOrb,8
	.align	2, 0
	.type	 sAnims_FlickeringShrinkOrb,object
sAnims_FlickeringShrinkOrb:
	.word	sAnim_FlickeringShrinkOrb
	.size	 sAnims_FlickeringShrinkOrb,4
	.align	2, 0
	.type	 sAffineAnim_FlickeringShrinkOrb,object
sAffineAnim_FlickeringShrinkOrb:
	.short	0x60
	.short	0x60
	.byte	0x0
	.byte	0x0
	.space	2
	.short	0x2
	.short	0x2
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x7ffe
	.short	0x1
	.space	4
	.size	 sAffineAnim_FlickeringShrinkOrb,24
	.align	2, 0
	.type	 sAffineAnims_FlickeringShrinkOrb,object
sAffineAnims_FlickeringShrinkOrb:
	.word	sAffineAnim_FlickeringShrinkOrb
	.size	 sAffineAnims_FlickeringShrinkOrb,4
	.align	2, 0
	.type	 sFlickeringShrinkOrbSpriteTemplate,object
	.size	 sFlickeringShrinkOrbSpriteTemplate,24
sFlickeringShrinkOrbSpriteTemplate:
	.short	0x2714
	.short	0x2714
	.word	gOamData_AffineDouble_ObjNormal_16x16
	.word	sAnims_FlickeringShrinkOrb
	.word	0x0
	.word	sAffineAnims_FlickeringShrinkOrb
	.word	AnimTranslateLinearAndFlicker_Flipped
	.type	 sText_TaskOver,object
sText_TaskOver:
	.byte	0xce
	.byte	0xbb
	.byte	0xcd
	.byte	0xc5
	.byte	0x0
	.byte	0xc9
	.byte	0xd0
	.byte	0xbf
	.byte	0xcc
	.byte	0xfe
	.byte	0x60
	.byte	0x5d
	.byte	0x58
	.byte	0x37
	.byte	0x55
	.byte	0xae
	.byte	0x96
	.byte	0xae
	.byte	0xc
	.byte	0x1f
	.byte	0xc
	.byte	0x10
	.byte	0xff
	.size	 sText_TaskOver,23
	.align	2, 0
	.type	 sFrozenIceCubeSubsprites,object
	.size	 sFrozenIceCubeSubsprites,16
sFrozenIceCubeSubsprites:
	.byte	-0x10
	.byte	-0x10
	.byte	0xc
	.byte	0x80
	.byte	-0x10
	.byte	0x30
	.byte	0xd
	.byte	0x84
	.byte	0x30
	.byte	-0x10
	.byte	0xe
	.byte	0x86
	.byte	0x30
	.byte	0x30
	.byte	0x8
	.byte	0x88
	.align	2, 0
	.type	 sFrozenIceCubeSubspriteTable,object
sFrozenIceCubeSubspriteTable:
	.byte	0x4
	.space	3
	.word	sFrozenIceCubeSubsprites
	.size	 sFrozenIceCubeSubspriteTable,8
	.align	2, 0
	.type	 sFrozenIceCubeSpriteTemplate,object
	.size	 sFrozenIceCubeSpriteTemplate,24
sFrozenIceCubeSpriteTemplate:
	.short	0x271a
	.short	0x271a
	.word	gOamData_AffineOff_ObjBlend_64x64
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sFlashingCircleImpactSpriteTemplate,object
	.size	 sFlashingCircleImpactSpriteTemplate,24
sFlashingCircleImpactSpriteTemplate:
	.short	0x2798
	.short	0x2798
	.word	gOamData_AffineOff_ObjNormal_8x8
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	AnimFlashingCircleImpact
.text
	.align	2, 0
	.type	 Task_FlashingCircleImpacts,function
	.thumb_func
Task_FlashingCircleImpacts:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r0, .L19
	add	r0, r4, r0
	ldrb	r6, [r0]
	ldr	r0, .L19+0x4
	mov	r1, #0xa
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L19+0x8
	bl	LoadCompressedSpriteSheetUsingHeap
	ldr	r0, .L19+0xc
	bl	LoadCompressedSpritePaletteUsingHeap
	ldr	r1, .L19+0x10
	mov	r2, r8
	lsl	r0, r2, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	strh	r4, [r1, #0x8]
	cmp	r5, #0
	beq	.L5	@cond_branch
	mov	r0, #0x1f
	strh	r0, [r1, #0xa]
	mov	r5, #0x0
	lsl	r0, r6, #0x4
	ldr	r7, .L19+0x14
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r6, r0, r7
.L9:
	mov	r0, #0x20
	ldrsh	r1, [r6, r0]
	ldrh	r2, [r6, #0x22]
	add	r2, r2, #0x20
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	ldr	r0, .L19+0x18
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r3, r0, r7
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r1, r0, #0x4
	add	r0, r0, r1
	strh	r0, [r3, #0x2e]
	mov	r0, #0xff
	lsl	r0, r0, #0x8
	strh	r0, [r3, #0x30]
	add	r2, r3, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	cmp	r5, #0x4
	bls	.L8	@cond_branch
	mov	r0, #0x15
	strh	r0, [r3, #0x3a]
.L8:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x9
	bls	.L9	@cond_branch
	b	.L12
.L20:
	.align	2, 0
.L19:
	.word	gBattlerSpriteIds
	.word	Task_UpdateFlashingCircleImpacts
	.word	gBattleAnimPicTable+0x440
	.word	gBattleAnimPaletteTable+0x440
	.word	gTasks
	.word	gSprites
	.word	sFlashingCircleImpactSpriteTemplate
.L5:
	mov	r0, #0xf8
	lsl	r0, r0, #0x7
	strh	r0, [r1, #0xa]
	mov	r5, #0x0
	lsl	r0, r6, #0x4
	ldr	r7, .L21
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r6, r0, r7
.L16:
	mov	r2, #0x20
	ldrsh	r1, [r6, r2]
	ldrh	r2, [r6, #0x22]
	sub	r2, r2, #0x20
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	ldr	r0, .L21+0x4
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r3, r0, r7
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r1, r0, #0x4
	add	r0, r0, r1
	strh	r0, [r3, #0x2e]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	strh	r0, [r3, #0x30]
	add	r2, r3, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	cmp	r5, #0x4
	bls	.L15	@cond_branch
	mov	r0, #0x15
	strh	r0, [r3, #0x3a]
.L15:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x9
	bls	.L16	@cond_branch
.L12:
	ldr	r0, .L21
	lsl	r1, r4, #0x4
	add	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r0, #0x1
	strh	r0, [r1, #0x3c]
	mov	r0, r8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L22:
	.align	2, 0
.L21:
	.word	gSprites
	.word	sFlashingCircleImpactSpriteTemplate
.Lfe1:
	.size	 Task_FlashingCircleImpacts,.Lfe1-Task_FlashingCircleImpacts
	.align	2, 0
	.type	 Task_UpdateFlashingCircleImpacts,function
	.thumb_func
Task_UpdateFlashingCircleImpacts:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L31
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	ldrh	r1, [r4, #0xc]
	mov	r2, #0xc
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x2
	bne	.L24	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4, #0xc]
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x14
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r0, r0, r2
	lsr	r0, r0, #0x10
	ldrb	r2, [r4, #0x10]
	ldrh	r3, [r4, #0xa]
	mov	r1, #0x10
	bl	BlendPalette
	ldrh	r2, [r4, #0x12]
	mov	r1, #0x12
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L25	@cond_branch
	ldrh	r0, [r4, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x10]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x8
	ble	.L30	@cond_branch
	mov	r0, #0x1
	eor	r0, r0, r2
	strh	r0, [r4, #0x12]
	b	.L30
.L32:
	.align	2, 0
.L31:
	.word	gTasks
.L25:
	ldrh	r1, [r4, #0x10]
	sub	r0, r1, #0x1
	strh	r0, [r4, #0x10]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L30	@cond_branch
	strh	r1, [r4, #0x10]
	mov	r0, #0x1
	eor	r0, r0, r2
	strh	r0, [r4, #0x12]
	ldrh	r0, [r4, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	bne	.L30	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
	b	.L30
.L24:
	add	r0, r1, #0x1
	strh	r0, [r4, #0xc]
.L30:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 Task_UpdateFlashingCircleImpacts,.Lfe2-Task_UpdateFlashingCircleImpacts
	.align	2, 0
	.type	 AnimFlashingCircleImpact,function
	.thumb_func
AnimFlashingCircleImpact:
	push	{lr}
	add	r2, r0, #0
	ldrh	r1, [r2, #0x3a]
	mov	r3, #0x3a
	ldrsh	r0, [r2, r3]
	cmp	r0, #0
	bne	.L34	@cond_branch
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r0
	strb	r1, [r3]
	ldr	r1, .L36
	str	r1, [r2, #0x1c]
	add	r0, r2, #0
	bl	_call_via_r1
	b	.L35
.L37:
	.align	2, 0
.L36:
	.word	AnimFlashingCircleImpact_Step
.L34:
	sub	r0, r1, #0x1
	strh	r0, [r2, #0x3a]
.L35:
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 AnimFlashingCircleImpact,.Lfe3-AnimFlashingCircleImpact
	.align	2, 0
	.type	 AnimFlashingCircleImpact_Step,function
	.thumb_func
AnimFlashingCircleImpact_Step:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	mov	r1, #0x20
	bl	Cos
	strh	r0, [r4, #0x24]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	mov	r1, #0x8
	bl	Sin
	strh	r0, [r4, #0x26]
	mov	r1, #0x2e
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x7f
	bgt	.L39	@cond_branch
	add	r1, r4, #0
	add	r1, r1, #0x43
	mov	r0, #0x1d
	b	.L44
.L39:
	add	r1, r4, #0
	add	r1, r1, #0x43
	mov	r0, #0x1f
.L44:
	strb	r0, [r1]
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x8
	mov	r1, #0xff
	and	r0, r0, r1
	strh	r0, [r4, #0x2e]
	ldrh	r0, [r4, #0x30]
	ldrh	r1, [r4, #0x38]
	add	r0, r0, r1
	strh	r0, [r4, #0x38]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x18
	ldrh	r1, [r4, #0x26]
	add	r0, r0, r1
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x34
	bne	.L41	@cond_branch
	mov	r1, #0x3c
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L42	@cond_branch
	add	r0, r4, #0
	bl	DestroySpriteAndFreeResources
	b	.L41
.L42:
	add	r0, r4, #0
	bl	DestroySprite
.L41:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 AnimFlashingCircleImpact_Step,.Lfe4-AnimFlashingCircleImpact_Step
	.align	2, 0
	.globl	AnimTask_FrozenIceCube
	.type	 AnimTask_FrozenIceCube,function
	.thumb_func
AnimTask_FrozenIceCube:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r4, .L48
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x8
	ldr	r1, .L48+0x4
	add	r0, r0, r1
	lsr	r5, r0, #0x10
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	GetBattlerSpriteCoord
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x8
	ldr	r1, .L48+0x8
	add	r0, r0, r1
	lsr	r4, r0, #0x10
	bl	IsContest
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L46	@cond_branch
	lsl	r0, r5, #0x10
	ldr	r1, .L48+0xc
	add	r0, r0, r1
	lsr	r5, r0, #0x10
.L46:
	mov	r1, #0xfd
	lsl	r1, r1, #0x6
	mov	r0, #0x50
	bl	SetGpuReg
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	mov	r0, #0x52
	bl	SetGpuReg
	ldr	r0, .L48+0x10
	lsl	r1, r5, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r4, #0x10
	asr	r2, r2, #0x10
	mov	r3, #0x4
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L48+0x14
	bl	GetSpriteTileStartByTag
	lsl	r0, r0, #0x10
	ldr	r1, .L48+0x18
	cmp	r0, r1
	bne	.L47	@cond_branch
	ldr	r1, .L48+0x1c
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
.L47:
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r1, .L48+0x1c
	add	r0, r0, r1
	ldr	r1, .L48+0x20
	bl	SetSubspriteTables
	ldr	r1, .L48+0x24
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	strh	r4, [r0, #0x26]
	ldr	r1, .L48+0x28
	str	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L49:
	.align	2, 0
.L48:
	.word	gBattleAnimTarget
	.word	-0x200000
	.word	-0x240000
	.word	-0x60000
	.word	sFrozenIceCubeSpriteTemplate
	.word	0x271a
	.word	-0x10000
	.word	gSprites
	.word	sFrozenIceCubeSubspriteTable
	.word	gTasks
	.word	AnimTask_FrozenIceCube_Step1
.Lfe5:
	.size	 AnimTask_FrozenIceCube,.Lfe5-AnimTask_FrozenIceCube
	.align	2, 0
	.type	 AnimTask_FrozenIceCube_Step1,function
	.thumb_func
AnimTask_FrozenIceCube_Step1:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L53
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	add	r2, r0, #0
	strh	r0, [r1, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xa
	bne	.L51	@cond_branch
	ldr	r0, .L53+0x4
	str	r0, [r1]
	mov	r0, #0x0
	strh	r0, [r1, #0xa]
	b	.L52
.L54:
	.align	2, 0
.L53:
	.word	gTasks
	.word	AnimTask_FrozenIceCube_Step2
.L51:
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x10
	sub	r1, r1, r0
	lsl	r1, r1, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
.L52:
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 AnimTask_FrozenIceCube_Step1,.Lfe6-AnimTask_FrozenIceCube_Step1
	.align	2, 0
	.type	 AnimTask_FrozenIceCube_Step2,function
	.thumb_func
AnimTask_FrozenIceCube_Step2:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L60
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L60+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	ldrh	r0, [r5, #0xa]
	add	r1, r0, #0x1
	strh	r1, [r5, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xd
	ble	.L56	@cond_branch
	ldrh	r0, [r5, #0xc]
	add	r0, r0, #0x1
	mov	r6, #0x0
	strh	r0, [r5, #0xc]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L56	@cond_branch
	ldr	r3, .L60+0x8
	lsl	r2, r2, #0x4
	mov	ip, r2
	ldr	r1, .L60+0xc
	add	r1, r1, ip
	lsl	r1, r1, #0x1
	add	r1, r1, r3
	ldrh	r4, [r1]
	mov	r2, #0x87
	lsl	r2, r2, #0x1
	add	r2, r2, ip
	lsl	r2, r2, #0x1
	add	r2, r2, r3
	ldrh	r0, [r2]
	strh	r0, [r1]
	ldr	r0, .L60+0x10
	add	r0, r0, ip
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	ldrh	r1, [r0]
	strh	r1, [r2]
	strh	r4, [r0]
	strh	r6, [r5, #0xc]
	ldrh	r0, [r5, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r5, #0xe]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L56	@cond_branch
	strh	r6, [r5, #0xe]
	strh	r6, [r5, #0xa]
	ldrh	r0, [r5, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x10]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	bne	.L56	@cond_branch
	mov	r0, #0x9
	strh	r0, [r5, #0xa]
	ldr	r0, .L60+0x14
	str	r0, [r5]
.L56:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	0x271a
	.word	gTasks
	.word	gPlttBufferFaded
	.word	0x10d
	.word	0x10f
	.word	AnimTask_FrozenIceCube_Step3
.Lfe7:
	.size	 AnimTask_FrozenIceCube_Step2,.Lfe7-AnimTask_FrozenIceCube_Step2
	.align	2, 0
	.type	 AnimTask_FrozenIceCube_Step3,function
	.thumb_func
AnimTask_FrozenIceCube_Step3:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L65
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r2, r1, r2
	ldrh	r0, [r2, #0xa]
	sub	r0, r0, #0x1
	add	r3, r0, #0
	strh	r0, [r2, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	bne	.L63	@cond_branch
	ldr	r0, .L65+0x4
	str	r0, [r2]
	mov	r0, #0x0
	strh	r0, [r2, #0xa]
	b	.L64
.L66:
	.align	2, 0
.L65:
	.word	gTasks
	.word	AnimTask_FrozenIceCube_Step4
.L63:
	lsl	r0, r3, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x10
	sub	r1, r1, r0
	lsl	r1, r1, #0x8
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x52
	bl	SetGpuReg
.L64:
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 AnimTask_FrozenIceCube_Step3,.Lfe8-AnimTask_FrozenIceCube_Step3
	.align	2, 0
	.type	 AnimTask_FrozenIceCube_Step4,function
	.thumb_func
AnimTask_FrozenIceCube_Step4:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r4, r0, #0
	ldr	r1, .L71
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x25
	bne	.L68	@cond_branch
	ldrh	r0, [r1, #0x26]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x4
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L71+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	bl	FreeSpriteOamMatrix
	add	r0, r4, #0
	bl	DestroySprite
	b	.L69
.L72:
	.align	2, 0
.L71:
	.word	gTasks
	.word	gSprites
.L68:
	cmp	r0, #0x27
	bne	.L69	@cond_branch
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	add	r0, r4, #0
	bl	DestroyAnimVisualTask
.L69:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 AnimTask_FrozenIceCube_Step4,.Lfe9-AnimTask_FrozenIceCube_Step4
	.align	2, 0
	.globl	AnimTask_StatsChange
	.type	 AnimTask_StatsChange,function
	.thumb_func
AnimTask_StatsChange:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r3, #0x0
	ldr	r0, .L118
	ldr	r0, [r0]
	ldr	r0, [r0, #0x8]
	ldrh	r0, [r0]
	sub	r0, r0, #0xf
	cmp	r0, #0x2b
	bls	.LCB854
	b	.L107	@long jump
.LCB854:
	lsl	r0, r0, #0x2
	ldr	r1, .L118+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L119:
	.align	2, 0
.L118:
	.word	gBattleSpritesDataPtr
	.word	.L108
	.align	2, 0
	.align	2, 0
.L108:
	.word	.L75
	.word	.L76
	.word	.L77
	.word	.L78
	.word	.L79
	.word	.L80
	.word	.L81
	.word	.L82
	.word	.L83
	.word	.L84
	.word	.L85
	.word	.L86
	.word	.L87
	.word	.L88
	.word	.L107
	.word	.L107
	.word	.L107
	.word	.L107
	.word	.L107
	.word	.L107
	.word	.L107
	.word	.L107
	.word	.L107
	.word	.L107
	.word	.L89
	.word	.L90
	.word	.L91
	.word	.L92
	.word	.L93
	.word	.L94
	.word	.L95
	.word	.L96
	.word	.L97
	.word	.L98
	.word	.L99
	.word	.L100
	.word	.L101
	.word	.L102
	.word	.L107
	.word	.L107
	.word	.L103
	.word	.L104
	.word	.L105
	.word	.L106
.L75:
	mov	r5, #0x0
	mov	r2, #0x0
	b	.L74
.L76:
	mov	r5, #0x0
	mov	r2, #0x1
	b	.L74
.L77:
	mov	r5, #0x0
	mov	r2, #0x3
	b	.L74
.L78:
	mov	r5, #0x0
	mov	r2, #0x5
	b	.L74
.L79:
	mov	r5, #0x0
	mov	r2, #0x6
	b	.L74
.L80:
	mov	r5, #0x0
	mov	r2, #0x2
	b	.L74
.L81:
	mov	r5, #0x0
	mov	r2, #0x4
	b	.L74
.L82:
	mov	r5, #0x1
	mov	r2, #0x0
	b	.L74
.L83:
	mov	r5, #0x1
	mov	r2, #0x1
	b	.L74
.L84:
	mov	r5, #0x1
	mov	r2, #0x3
	b	.L74
.L85:
	mov	r5, #0x1
	mov	r2, #0x5
	b	.L74
.L86:
	mov	r5, #0x1
	mov	r2, #0x6
	b	.L74
.L87:
	mov	r5, #0x1
	mov	r2, #0x2
	b	.L74
.L88:
	mov	r5, #0x1
	mov	r2, #0x4
	b	.L74
.L89:
	mov	r5, #0x0
	b	.L109
.L90:
	mov	r5, #0x0
	b	.L110
.L91:
	mov	r5, #0x0
	b	.L111
.L92:
	mov	r5, #0x0
	b	.L112
.L93:
	mov	r5, #0x0
	b	.L113
.L94:
	mov	r5, #0x0
	b	.L114
.L95:
	mov	r5, #0x0
	b	.L115
.L96:
	mov	r5, #0x1
.L109:
	mov	r2, #0x0
	mov	r3, #0x1
	b	.L74
.L97:
	mov	r5, #0x1
.L110:
	mov	r2, #0x1
	mov	r3, #0x1
	b	.L74
.L98:
	mov	r5, #0x1
.L111:
	mov	r2, #0x3
	mov	r3, #0x1
	b	.L74
.L99:
	mov	r5, #0x1
.L112:
	mov	r2, #0x5
	mov	r3, #0x1
	b	.L74
.L100:
	mov	r5, #0x1
.L113:
	mov	r2, #0x6
	mov	r3, #0x1
	b	.L74
.L101:
	mov	r5, #0x1
.L114:
	mov	r2, #0x2
	mov	r3, #0x1
	b	.L74
.L102:
	mov	r5, #0x1
.L115:
	mov	r2, #0x4
	mov	r3, #0x1
	b	.L74
.L103:
	mov	r5, #0x0
	b	.L116
.L104:
	mov	r5, #0x0
	b	.L117
.L105:
	mov	r5, #0x1
.L116:
	mov	r2, #0xff
	mov	r3, #0x0
	b	.L74
.L106:
	mov	r5, #0x1
.L117:
	mov	r2, #0xff
	mov	r3, #0x1
	b	.L74
.L107:
	add	r0, r4, #0
	bl	DestroyAnimVisualTask
	b	.L73
.L74:
	ldr	r0, .L120
	mov	r1, #0x0
	strh	r5, [r0]
	strh	r2, [r0, #0x2]
	strh	r1, [r0, #0x4]
	strh	r1, [r0, #0x6]
	strh	r3, [r0, #0x8]
	ldr	r1, .L120+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L120+0x8
	str	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
.L73:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L121:
	.align	2, 0
.L120:
	.word	gBattleAnimArgs
	.word	gTasks
	.word	InitStatsChangeAnimation
.Lfe10:
	.size	 AnimTask_StatsChange,.Lfe10-AnimTask_StatsChange
	.align	2, 0
	.globl	LaunchStatusAnimation
	.type	 LaunchStatusAnimation,function
	.thumb_func
LaunchStatusAnimation:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L123
	strb	r4, [r0]
	ldr	r0, .L123+0x4
	strb	r4, [r0]
	ldr	r0, .L123+0x8
	mov	r2, #0x0
	bl	LaunchBattleAnimation
	ldr	r0, .L123+0xc
	mov	r1, #0xa
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L123+0x10
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L124:
	.align	2, 0
.L123:
	.word	gBattleAnimAttacker
	.word	gBattleAnimTarget
	.word	gBattleAnims_StatusConditions
	.word	Task_DoStatusAnimation
	.word	gTasks
.Lfe11:
	.size	 LaunchStatusAnimation,.Lfe11-LaunchStatusAnimation
	.align	2, 0
	.type	 Task_DoStatusAnimation,function
	.thumb_func
Task_DoStatusAnimation:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L127
	ldr	r0, [r0]
	bl	_call_via_r0
	ldr	r0, .L127+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L126	@cond_branch
	ldr	r0, .L127+0x8
	ldr	r2, [r0]
	ldr	r1, .L127+0xc
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r0, r1]
	ldr	r2, [r2, #0x4]
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r2, [r1]
	mov	r0, #0x11
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	add	r0, r4, #0
	bl	DestroyTask
.L126:
	pop	{r4}
	pop	{r0}
	bx	r0
.L128:
	.align	2, 0
.L127:
	.word	gAnimScriptCallback
	.word	gAnimScriptActive
	.word	gBattleSpritesDataPtr
	.word	gTasks
.Lfe12:
	.size	 Task_DoStatusAnimation,.Lfe12-Task_DoStatusAnimation
.text
	.align	2, 0 @ Don't pad with nop

