@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sBg3TilemapBuffer_p,object
	.size	 sBg3TilemapBuffer_p,4
sBg3TilemapBuffer_p:
	.word	0x0
	.section .rodata
	.align	1, 0
	.type	 sTiles,object
sTiles:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x6111
	.short	0x2222
	.short	0x2611
	.short	0x3333
	.short	0x3211
	.short	0x3333
	.short	0x3211
	.short	0x2233
	.short	0x3211
	.short	0x6223
	.short	0x3211
	.short	0x8623
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x1111
	.short	0x2222
	.short	0x2222
	.short	0x3333
	.short	0x3333
	.short	0x3333
	.short	0x3333
	.short	0x2222
	.short	0x2222
	.short	0x6666
	.short	0x6666
	.short	0x7777
	.short	0x7777
	.short	0x3211
	.short	0x7623
	.short	0x3211
	.short	0x7623
	.short	0x3211
	.short	0x7623
	.short	0x3211
	.short	0x7623
	.short	0x3211
	.short	0x7623
	.short	0x3211
	.short	0x7623
	.short	0x3211
	.short	0x7623
	.short	0x3211
	.short	0x7623
	.short	0x5555
	.short	0x5555
	.short	0x4444
	.short	0x4444
	.short	0x4444
	.short	0x4444
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x5555
	.short	0x4444
	.short	0x4444
	.short	0x4444
	.short	0x4444
	.short	0x5555
	.short	0x5555
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sTiles,192
	.align	1, 0
	.type	 sPalette,object
sPalette:
	.short	0x530e
	.short	0x2529
	.short	0x4e17
	.short	0x6a7c
	.short	0x7fbb
	.short	0x7fdc
	.short	0x45d2
	.short	0x6f58
	.short	0x5e95
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sPalette,32
	.align	1, 0
	.type	 sTilemap,object
sTilemap:
	.short	0x1
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x2
	.short	0x401
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x3
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x403
	.short	0x0
	.short	0x0
	.short	0x801
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0x802
	.short	0xc01
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sTilemap,2048
	.align	2, 0
	.type	 sWindowTemplates,object
sWindowTemplates:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x1b
	.byte	0x12
	.byte	0xf
	.short	0x14
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates,16
	.type	 sTextColor,object
	.size	 sTextColor,3
sTextColor:
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.align	2, 0
	.type	 sBgTemplates,object
	.size	 sBgTemplates,8
sBgTemplates:
	.byte	0xf0
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xe7
	.byte	0x31
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sStringVars,object
	.size	 sStringVars,12
sStringVars:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
.text
	.align	2, 0
	.globl	ShowBattleRecords
	.type	 ShowBattleRecords,function
	.thumb_func
ShowBattleRecords:
	push	{lr}
	mov	r0, #0x0
	bl	SetVBlankCallback
	ldr	r0, .L5
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L6:
	.align	2, 0
.L5:
	.word	MainCB2_SetUp
.Lfe1:
	.size	 ShowBattleRecords,.Lfe1-ShowBattleRecords
	.align	2, 0
	.type	 MainCB2_SetUp,function
	.thumb_func
MainCB2_SetUp:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L23
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x7
	bls	.LCB34
	b	.L8	@long jump
.LCB34:
	lsl	r0, r0, #0x2
	ldr	r1, .L23+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L24:
	.align	2, 0
.L23:
	.word	gMain
	.word	.L20
	.align	2, 0
	.align	2, 0
.L20:
	.word	.L9
	.word	.L10
	.word	.L11
	.word	.L12
	.word	.L13
	.word	.L15
	.word	.L16
	.word	.L17
.L9:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ResetGpu
	b	.L22
.L10:
	bl	StopAllRunningTasks
	b	.L22
.L11:
	ldr	r4, .L25
	mov	r0, #0x80
	lsl	r0, r0, #0x4
	bl	AllocZeroed
	str	r0, [r4]
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L25+0x4
	mov	r0, #0x0
	mov	r2, #0x2
	bl	InitBgsFromTemplates
	ldr	r1, [r4]
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	bl	ResetBGPos
	b	.L22
.L26:
	.align	2, 0
.L25:
	.word	sBg3TilemapBuffer_p
	.word	sBgTemplates
.L12:
	mov	r0, #0x3
	bl	LoadFrameGfxOnBg
	mov	r0, #0x0
	bl	GetTextWindowPalette
	mov	r1, #0xf0
	mov	r2, #0x20
	bl	LoadPalette
	b	.L22
.L13:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L8	@cond_branch
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	b	.L22
.L15:
	ldr	r0, .L27
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	b	.L22
.L28:
	.align	2, 0
.L27:
	.word	sWindowTemplates
.L16:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
.L22:
	ldr	r1, .L29
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L8
.L30:
	.align	2, 0
.L29:
	.word	gMain
.L17:
	bl	EnableDisplay
	ldr	r0, .L31
	bl	SetVBlankCallback
	ldr	r0, .L31+0x4
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L18	@cond_branch
	bl	PrintTrainerTowerRecords
	b	.L19
.L32:
	.align	2, 0
.L31:
	.word	VBlankCB
	.word	gSpecialVar_0x8004
.L18:
	bl	PrintBattleRecords
.L19:
	ldr	r0, .L33
	mov	r1, #0x8
	bl	CreateTask
	ldr	r0, .L33+0x4
	bl	SetMainCallback2
	ldr	r0, .L33+0x8
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
.L8:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L34:
	.align	2, 0
.L33:
	.word	Task_WaitFadeIn
	.word	MainCB2
	.word	gMain
.Lfe2:
	.size	 MainCB2_SetUp,.Lfe2-MainCB2_SetUp
	.align	2, 0
	.type	 VBlankCB,function
	.thumb_func
VBlankCB:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 VBlankCB,.Lfe3-VBlankCB
	.align	2, 0
	.type	 MainCB2,function
	.thumb_func
MainCB2:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 MainCB2,.Lfe4-MainCB2
	.align	2, 0
	.type	 Task_WaitFadeIn,function
	.thumb_func
Task_WaitFadeIn:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L39
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L38	@cond_branch
	ldr	r0, .L39+0x4
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L39+0x8
	str	r0, [r1]
.L38:
	pop	{r0}
	bx	r0
.L40:
	.align	2, 0
.L39:
	.word	gPaletteFade
	.word	gTasks
	.word	Task_WaitButton
.Lfe5:
	.size	 Task_WaitFadeIn,.Lfe5-Task_WaitFadeIn
	.align	2, 0
	.type	 Task_WaitButton,function
	.thumb_func
Task_WaitButton:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L44
	add	r4, r1, r0
	ldr	r0, .L44+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L43	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L42	@cond_branch
.L43:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L44+0x8
	str	r0, [r4]
.L42:
	pop	{r4}
	pop	{r0}
	bx	r0
.L45:
	.align	2, 0
.L44:
	.word	gTasks
	.word	gMain
	.word	Task_FadeOut
.Lfe6:
	.size	 Task_WaitButton,.Lfe6-Task_WaitButton
	.align	2, 0
	.type	 Task_FadeOut,function
	.thumb_func
Task_FadeOut:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L47
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L47+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L48:
	.align	2, 0
.L47:
	.word	gTasks
	.word	Task_DestroyAndReturnToField
.Lfe7:
	.size	 Task_FadeOut,.Lfe7-Task_FadeOut
	.align	2, 0
	.type	 Task_DestroyAndReturnToField,function
	.thumb_func
Task_DestroyAndReturnToField:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L51
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L50	@cond_branch
	ldr	r0, .L51+0x4
	bl	SetMainCallback2
	ldr	r0, .L51+0x8
	ldr	r0, [r0]
	bl	Free
	mov	r0, #0x0
	bl	ClearWindowCommitAndRemove
	bl	FreeAllWindowBuffers
	add	r0, r4, #0
	bl	DestroyTask
.L50:
	pop	{r4}
	pop	{r0}
	bx	r0
.L52:
	.align	2, 0
.L51:
	.word	gPaletteFade
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
	.word	sBg3TilemapBuffer_p
.Lfe8:
	.size	 Task_DestroyAndReturnToField,.Lfe8-Task_DestroyAndReturnToField
	.align	2, 0
	.type	 ClearWindowCommitAndRemove,function
	.thumb_func
ClearWindowCommitAndRemove:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r4, #0
	bl	ClearWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	r0, r4, #0
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 ClearWindowCommitAndRemove,.Lfe9-ClearWindowCommitAndRemove
	.align	2, 0
	.type	 ResetGpu,function
	.thumb_func
ResetGpu:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	mov	r3, #0xc0
	lsl	r3, r3, #0x13
	mov	r4, #0xc0
	lsl	r4, r4, #0x9
	add	r0, sp, #0x4
	mov	r8, r0
	mov	r2, sp
	mov	r6, #0x0
	ldr	r1, .L60
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L60+0x4
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L57:
	strh	r6, [r2]
	mov	r0, sp
	str	r0, [r1]
	str	r3, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r3, r3, r5
	sub	r4, r4, r5
	cmp	r4, r5
	bhi	.L57	@cond_branch
	strh	r6, [r2]
	mov	r2, sp
	str	r2, [r1]
	str	r3, [r1, #0x4]
	lsr	r0, r4, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0xe0
	lsl	r0, r0, #0x13
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r2, .L60
	mov	r1, r8
	str	r1, [r2]
	str	r0, [r2, #0x4]
	lsr	r0, r3, #0x2
	mov	r1, #0x85
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	str	r0, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	mov	r0, sp
	strh	r4, [r0]
	str	r0, [r2]
	str	r1, [r2, #0x4]
	lsr	r3, r3, #0x1
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	orr	r3, r3, r0
	str	r3, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x8
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xa
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x16
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xc
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xe
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1c
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1e
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	0x40000d4
	.word	-0x7efff800
.Lfe10:
	.size	 ResetGpu,.Lfe10-ResetGpu
	.align	2, 0
	.type	 StopAllRunningTasks,function
	.thumb_func
StopAllRunningTasks:
	push	{lr}
	bl	ScanlineEffect_Stop
	bl	ResetTasks
	bl	ResetSpriteData
	bl	ResetAllPicSprites
	bl	ResetPaletteFade
	bl	FreeAllSpritePalettes
	pop	{r0}
	bx	r0
.Lfe11:
	.size	 StopAllRunningTasks,.Lfe11-StopAllRunningTasks
	.align	2, 0
	.type	 EnableDisplay,function
	.thumb_func
EnableDisplay:
	push	{lr}
	mov	r1, #0x94
	lsl	r1, r1, #0x4
	mov	r0, #0x0
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 EnableDisplay,.Lfe12-EnableDisplay
	.align	2, 0
	.type	 ResetBGPos,function
	.thumb_func
ResetBGPos:
	push	{lr}
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 ResetBGPos,.Lfe13-ResetBGPos
	.align	2, 0
	.type	 ClearLinkBattleRecord,function
	.thumb_func
ClearLinkBattleRecord:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r2, .L66
	mov	r0, sp
	add	r1, r4, #0
	bl	CpuSet
	mov	r0, #0xff
	strb	r0, [r4]
	mov	r0, #0x0
	strh	r0, [r4, #0x8]
	strh	r0, [r4, #0xa]
	strh	r0, [r4, #0xc]
	strh	r0, [r4, #0xe]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L67:
	.align	2, 0
.L66:
	.word	0x1000008
.Lfe14:
	.size	 ClearLinkBattleRecord,.Lfe14-ClearLinkBattleRecord
	.align	2, 0
	.type	 ClearLinkBattleRecords,function
	.thumb_func
ClearLinkBattleRecords:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r5, #0x4
.L72:
	add	r0, r4, #0
	bl	ClearLinkBattleRecord
	add	r4, r4, #0x10
	sub	r5, r5, #0x1
	cmp	r5, #0
	bge	.L72	@cond_branch
	mov	r0, #0x17
	mov	r1, #0x0
	bl	SetGameStat
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGameStat
	mov	r0, #0x19
	mov	r1, #0x0
	bl	SetGameStat
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 ClearLinkBattleRecords,.Lfe15-ClearLinkBattleRecords
	.align	2, 0
	.type	 GetLinkBattleRecordTotalBattles,function
	.thumb_func
GetLinkBattleRecordTotalBattles:
	add	r1, r0, #0
	ldrh	r0, [r1, #0xa]
	ldrh	r2, [r1, #0xc]
	add	r0, r0, r2
	ldrh	r1, [r1, #0xe]
	add	r0, r0, r1
	bx	lr
.Lfe16:
	.size	 GetLinkBattleRecordTotalBattles,.Lfe16-GetLinkBattleRecordTotalBattles
	.align	2, 0
	.type	 IndexOfOpponentLinkBattleRecord,function
	.thumb_func
IndexOfOpponentLinkBattleRecord:
	push	{r4, r5, r6, r7, lr}
	add	r7, r1, #0
	lsl	r2, r2, #0x10
	lsr	r6, r2, #0x10
	mov	r5, #0x0
	add	r4, r0, #0
.L79:
	add	r0, r4, #0
	add	r1, r7, #0
	mov	r2, #0x7
	bl	StringCompareN
	cmp	r0, #0
	bne	.L78	@cond_branch
	ldrh	r0, [r4, #0x8]
	cmp	r0, r6
	bne	.L78	@cond_branch
	add	r0, r5, #0
	b	.L82
.L78:
	add	r4, r4, #0x10
	add	r5, r5, #0x1
	cmp	r5, #0x4
	ble	.L79	@cond_branch
	mov	r0, #0x5
.L82:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 IndexOfOpponentLinkBattleRecord,.Lfe17-IndexOfOpponentLinkBattleRecord
	.align	2, 0
	.type	 SortLinkBattleRecords,function
	.thumb_func
SortLinkBattleRecords:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x14
	mov	r8, r0
	mov	r0, #0x4
.L87:
	sub	r2, r0, #0x1
	mov	r9, r2
	cmp	r2, #0
	blt	.L86	@cond_branch
	lsl	r0, r0, #0x4
	mov	r1, r8
	add	r6, r1, r0
	lsl	r0, r2, #0x4
	add	r5, r0, r1
.L91:
	add	r0, r6, #0
	str	r2, [sp, #0x10]
	bl	GetLinkBattleRecordTotalBattles
	add	r4, r0, #0
	add	r0, r5, #0
	bl	GetLinkBattleRecordTotalBattles
	ldr	r2, [sp, #0x10]
	cmp	r4, r0
	ble	.L90	@cond_branch
	mov	r1, sp
	add	r0, r6, #0
	ldmia	r0!, {r3, r4, r7}
	stmia	r1!, {r3, r4, r7}
	ldr	r0, [r0]
	str	r0, [r1]
	add	r1, r6, #0
	add	r0, r5, #0
	ldmia	r0!, {r3, r4, r7}
	stmia	r1!, {r3, r4, r7}
	ldr	r0, [r0]
	str	r0, [r1]
	add	r1, r5, #0
	mov	r0, sp
	ldmia	r0!, {r3, r4, r7}
	stmia	r1!, {r3, r4, r7}
	ldr	r0, [r0]
	str	r0, [r1]
.L90:
	sub	r5, r5, #0x10
	mov	r0, #0x1
	neg	r0, r0
	add	r9, r9, r0
	mov	r1, r9
	cmp	r1, #0
	bge	.L91	@cond_branch
.L86:
	add	r0, r2, #0
	cmp	r0, #0
	bgt	.L87	@cond_branch
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 SortLinkBattleRecords,.Lfe18-SortLinkBattleRecords
	.align	2, 0
	.type	 UpdateLinkBattleRecord,function
	.thumb_func
UpdateLinkBattleRecord:
	push	{lr}
	add	r2, r0, #0
	cmp	r1, #0x2
	beq	.L99	@cond_branch
	cmp	r1, #0x2
	bgt	.L105	@cond_branch
	cmp	r1, #0x1
	beq	.L97	@cond_branch
	b	.L96
.L105:
	cmp	r1, #0x3
	beq	.L101	@cond_branch
	b	.L96
.L97:
	ldrh	r0, [r2, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xa]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L106
	cmp	r0, r1
	bls	.L96	@cond_branch
	strh	r1, [r2, #0xa]
	b	.L96
.L107:
	.align	2, 0
.L106:
	.word	0x270f
.L99:
	ldrh	r0, [r2, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xc]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L108
	cmp	r0, r1
	bls	.L96	@cond_branch
	strh	r1, [r2, #0xc]
	b	.L96
.L109:
	.align	2, 0
.L108:
	.word	0x270f
.L101:
	ldrh	r0, [r2, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r2, #0xe]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L110
	cmp	r0, r1
	bls	.L96	@cond_branch
	strh	r1, [r2, #0xe]
.L96:
	pop	{r0}
	bx	r0
.L111:
	.align	2, 0
.L110:
	.word	0x270f
.Lfe19:
	.size	 UpdateLinkBattleRecord,.Lfe19-UpdateLinkBattleRecord
	.align	2, 0
	.type	 UpdateLinkBattleGameStats,function
	.thumb_func
UpdateLinkBattleGameStats:
	push	{r4, lr}
	cmp	r0, #0x2
	beq	.L115	@cond_branch
	cmp	r0, #0x2
	bgt	.L119	@cond_branch
	cmp	r0, #0x1
	beq	.L114	@cond_branch
	b	.L112
.L119:
	cmp	r0, #0x3
	beq	.L116	@cond_branch
	b	.L112
.L114:
	mov	r4, #0x17
	b	.L113
.L115:
	mov	r4, #0x18
	b	.L113
.L116:
	mov	r4, #0x19
.L113:
	add	r0, r4, #0
	bl	GetGameStat
	ldr	r1, .L121
	cmp	r0, r1
	bhi	.L112	@cond_branch
	add	r0, r4, #0
	bl	IncrementGameStat
.L112:
	pop	{r4}
	pop	{r0}
	bx	r0
.L122:
	.align	2, 0
.L121:
	.word	0x270e
.Lfe20:
	.size	 UpdateLinkBattleGameStats,.Lfe20-UpdateLinkBattleGameStats
	.align	2, 0
	.type	 AddOpponentLinkBattleRecord,function
	.thumb_func
AddOpponentLinkBattleRecord:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	add	r6, r0, #0
	add	r4, r1, #0
	mov	r8, r3
	ldr	r0, [sp, #0x20]
	lsl	r2, r2, #0x10
	lsr	r7, r2, #0x10
	cmp	r0, #0x1
	bne	.L124	@cond_branch
	mov	r1, sp
	mov	r0, #0xfc
	strb	r0, [r1]
	mov	r0, #0x15
	strb	r0, [r1, #0x1]
	mov	r0, sp
	add	r0, r0, #0x2
	add	r1, r4, #0
	bl	StringCopy
	b	.L125
.L124:
	mov	r0, sp
	add	r1, r4, #0
	bl	StringCopy
.L125:
	mov	r0, r8
	bl	UpdateLinkBattleGameStats
	add	r0, r6, #0
	bl	SortLinkBattleRecords
	add	r0, r6, #0
	mov	r1, sp
	add	r2, r7, #0
	bl	IndexOfOpponentLinkBattleRecord
	add	r5, r0, #0
	cmp	r5, #0x5
	bne	.L126	@cond_branch
	mov	r5, #0x4
	add	r4, r6, #0
	add	r4, r4, #0x40
	add	r0, r4, #0
	bl	ClearLinkBattleRecord
	add	r0, r4, #0
	mov	r1, sp
	mov	r2, #0x7
	bl	StringCopyN
	strh	r7, [r4, #0x8]
.L126:
	lsl	r0, r5, #0x4
	add	r0, r6, r0
	mov	r1, r8
	bl	UpdateLinkBattleRecord
	add	r0, r6, #0
	bl	SortLinkBattleRecords
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 AddOpponentLinkBattleRecord,.Lfe21-AddOpponentLinkBattleRecord
	.align	2, 0
	.globl	ClearPlayerLinkBattleRecords
	.type	 ClearPlayerLinkBattleRecords,function
	.thumb_func
ClearPlayerLinkBattleRecords:
	push	{lr}
	ldr	r0, .L128
	ldr	r0, [r0]
	ldr	r1, .L128+0x4
	add	r0, r0, r1
	bl	ClearLinkBattleRecords
	pop	{r0}
	bx	r0
.L129:
	.align	2, 0
.L128:
	.word	gSaveBlock2Ptr
	.word	0xa98
.Lfe22:
	.size	 ClearPlayerLinkBattleRecords,.Lfe22-ClearPlayerLinkBattleRecords
	.align	2, 0
	.type	 IncTrainerCardWinCount,function
	.thumb_func
IncTrainerCardWinCount:
	push	{lr}
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x5
	ldr	r0, .L132
	add	r1, r1, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L132+0x4
	cmp	r0, r2
	bls	.L131	@cond_branch
	strh	r2, [r1]
.L131:
	pop	{r0}
	bx	r0
.L133:
	.align	2, 0
.L132:
	.word	gTrainerCards+0x14
	.word	0x270f
.Lfe23:
	.size	 IncTrainerCardWinCount,.Lfe23-IncTrainerCardWinCount
	.align	2, 0
	.type	 IncTrainerCardLossCount,function
	.thumb_func
IncTrainerCardLossCount:
	push	{lr}
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x5
	ldr	r0, .L136
	add	r1, r1, r0
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L136+0x4
	cmp	r0, r2
	bls	.L135	@cond_branch
	strh	r2, [r1]
.L135:
	pop	{r0}
	bx	r0
.L137:
	.align	2, 0
.L136:
	.word	gTrainerCards+0x16
	.word	0x270f
.Lfe24:
	.size	 IncTrainerCardLossCount,.Lfe24-IncTrainerCardLossCount
	.align	2, 0
	.type	 UpdateBattleOutcomeOnTrainerCards,function
	.thumb_func
UpdateBattleOutcomeOnTrainerCards:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L144
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L140	@cond_branch
	cmp	r0, #0x2
	beq	.L141	@cond_branch
	b	.L139
.L145:
	.align	2, 0
.L144:
	.word	gBattleOutcome
.L140:
	eor	r0, r0, r4
	bl	IncTrainerCardWinCount
	add	r0, r4, #0
	bl	IncTrainerCardLossCount
	b	.L139
.L141:
	mov	r0, #0x1
	eor	r0, r0, r4
	bl	IncTrainerCardLossCount
	add	r0, r4, #0
	bl	IncTrainerCardWinCount
.L139:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 UpdateBattleOutcomeOnTrainerCards,.Lfe25-UpdateBattleOutcomeOnTrainerCards
	.align	2, 0
	.globl	UpdatePlayerLinkBattleRecords
	.type	 UpdatePlayerLinkBattleRecords,function
	.thumb_func
UpdatePlayerLinkBattleRecords:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	add	r6, r0, #0
	ldr	r0, .L148
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	beq	.L147	@cond_branch
	add	r0, r6, #0
	bl	UpdateBattleOutcomeOnTrainerCards
	ldr	r0, .L148+0x4
	ldr	r0, [r0]
	ldr	r1, .L148+0x8
	add	r0, r0, r1
	lsl	r2, r6, #0x1
	add	r2, r2, r6
	lsl	r2, r2, #0x5
	ldr	r3, .L148+0xc
	add	r1, r2, r3
	sub	r3, r3, #0x30
	add	r2, r2, r3
	ldrh	r2, [r2, #0xe]
	ldr	r3, .L148+0x10
	ldrb	r3, [r3]
	ldr	r5, .L148+0x14
	lsl	r4, r6, #0x3
	sub	r4, r4, r6
	lsl	r4, r4, #0x2
	add	r4, r4, r5
	ldrh	r4, [r4, #0x1a]
	str	r4, [sp]
	bl	AddOpponentLinkBattleRecord
.L147:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L149:
	.align	2, 0
.L148:
	.word	gSaveBlock1Ptr
	.word	gSaveBlock2Ptr
	.word	0xa98
	.word	gTrainerCards+0x30
	.word	gBattleOutcome
	.word	gLinkPlayers
.Lfe26:
	.size	 UpdatePlayerLinkBattleRecords,.Lfe26-UpdatePlayerLinkBattleRecords
	.align	2, 0
	.type	 PrintTotalRecord,function
	.thumb_func
PrintTotalRecord:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	mov	r0, #0x17
	bl	GetGameStat
	add	r4, r0, #0
	mov	r0, #0x18
	bl	GetGameStat
	add	r5, r0, #0
	mov	r0, #0x19
	bl	GetGameStat
	add	r6, r0, #0
	ldr	r0, .L167
	cmp	r4, r0
	bls	.L151	@cond_branch
	add	r4, r0, #0
.L151:
	cmp	r5, r0
	bls	.L152	@cond_branch
	add	r5, r0, #0
.L152:
	cmp	r6, r0
	bls	.L153	@cond_branch
	add	r6, r0, #0
.L153:
	ldr	r0, .L167+0x4
	add	r1, r4, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L167+0x8
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L167+0xc
	add	r1, r6, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	mov	r3, #0x0
	ldr	r6, .L167+0x10
	ldr	r7, .L167+0x14
	ldr	r0, .L167+0x18
	mov	ip, r0
	mov	r5, #0x0
.L157:
	lsl	r0, r3, #0x2
	add	r0, r0, r6
	ldr	r2, [r0]
	mov	r1, #0x0
	add	r4, r3, #0x1
	mov	r3, #0x3
.L161:
	cmp	r1, #0
	bne	.L166	@cond_branch
	ldrb	r0, [r2]
	cmp	r0, #0xff
	bne	.L162	@cond_branch
	mov	r1, #0x1
.L162:
	cmp	r1, #0
	beq	.L163	@cond_branch
.L166:
	strb	r5, [r2]
.L163:
	add	r2, r2, #0x1
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L161	@cond_branch
	mov	r0, #0xff
	strb	r0, [r2]
	add	r3, r4, #0
	cmp	r3, #0x2
	bls	.L157	@cond_branch
	add	r0, r7, #0
	mov	r1, ip
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	str	r0, [sp]
	mov	r1, #0x2
	str	r1, [sp, #0x4]
	ldr	r1, .L167+0x1c
	str	r1, [sp, #0x8]
	str	r0, [sp, #0xc]
	str	r7, [sp, #0x10]
	mov	r1, #0x2
	mov	r2, #0xc
	mov	r3, #0x18
	bl	AddTextPrinterParameterized4
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L168:
	.align	2, 0
.L167:
	.word	0x270f
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	sStringVars
	.word	gStringVar4
	.word	gString_BattleRecords_TotalRecord
	.word	sTextColor
.Lfe27:
	.size	 PrintTotalRecord,.Lfe27-PrintTotalRecord
	.align	2, 0
	.type	 PrintOpponentBattleRecord,function
	.thumb_func
PrintOpponentBattleRecord:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x14
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	mov	r5, #0x0
	ldrh	r0, [r6, #0xa]
	cmp	r0, #0
	bne	.L170	@cond_branch
	ldr	r0, [r6, #0xc]
	cmp	r0, #0
	bne	.L170	@cond_branch
	str	r5, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	ldr	r0, .L193
	str	r0, [sp, #0x8]
	str	r5, [sp, #0xc]
	ldr	r0, .L193+0x4
	str	r0, [sp, #0x10]
	mov	r0, #0x0
	mov	r1, #0x2
	mov	r2, #0x0
	mov	r3, r8
	bl	AddTextPrinterParameterized4
	mov	r6, #0x0
.L174:
	mov	r4, #0x54
	cmp	r5, #0
	beq	.L176	@cond_branch
	mov	r4, #0xb4
	cmp	r5, #0x1
	bne	.L176	@cond_branch
	mov	r4, #0x84
.L176:
	add	r2, r4, #0
	str	r6, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	ldr	r0, .L193
	str	r0, [sp, #0x8]
	str	r6, [sp, #0xc]
	ldr	r0, .L193+0x8
	str	r0, [sp, #0x10]
	mov	r0, #0x0
	mov	r1, #0x2
	mov	r3, r8
	bl	AddTextPrinterParameterized4
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L174	@cond_branch
	b	.L180
.L194:
	.align	2, 0
.L193:
	.word	sTextColor
	.word	gString_BattleRecords_7Dashes
	.word	gString_BattleRecords_4Dashes
.L170:
	mov	r5, #0x0
	ldr	r7, .L195
	mov	r9, r5
.L184:
	cmp	r5, #0
	bne	.L185	@cond_branch
	mov	r4, #0x0
	add	r0, r7, #0
	mov	r1, #0x8
	bl	StringFillWithTerminator
	add	r0, r7, #0
	add	r1, r6, #0
	mov	r2, #0x7
	bl	StringCopyN
	b	.L186
.L196:
	.align	2, 0
.L195:
	.word	gStringVar1
.L185:
	cmp	r5, #0x1
	bne	.L187	@cond_branch
	mov	r4, #0x54
	ldrh	r1, [r6, #0xa]
	b	.L192
.L187:
	cmp	r5, #0x2
	bne	.L189	@cond_branch
	mov	r4, #0x84
	ldrh	r1, [r6, #0xc]
.L192:
	ldr	r0, .L197
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	b	.L186
.L198:
	.align	2, 0
.L197:
	.word	gStringVar1
.L189:
	mov	r4, #0xb4
	ldrh	r1, [r6, #0xe]
	ldr	r0, .L199
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
.L186:
	add	r2, r4, #0
	mov	r0, r9
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	ldr	r0, .L199+0x4
	str	r0, [sp, #0x8]
	mov	r0, r9
	str	r0, [sp, #0xc]
	str	r7, [sp, #0x10]
	mov	r0, #0x0
	mov	r1, #0x2
	mov	r3, r8
	bl	AddTextPrinterParameterized4
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L184	@cond_branch
.L180:
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L200:
	.align	2, 0
.L199:
	.word	gStringVar1
	.word	sTextColor
.Lfe28:
	.size	 PrintOpponentBattleRecord,.Lfe28-PrintOpponentBattleRecord
	.align	2, 0
	.type	 PrintBattleRecords,function
	.thumb_func
PrintBattleRecords:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x14
	mov	r0, #0xd8
	str	r0, [sp]
	mov	r0, #0x90
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillWindowPixelRect
	ldr	r5, .L207
	ldr	r1, .L207+0x4
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	mov	r2, #0x1
	neg	r2, r2
	mov	r0, #0x2
	add	r1, r5, #0
	bl	GetStringWidth
	mov	r2, #0xd0
	sub	r2, r2, r0
	lsr	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r4, #0x0
	str	r4, [sp]
	mov	r0, #0x2
	mov	r9, r0
	str	r0, [sp, #0x4]
	ldr	r6, .L207+0x8
	str	r6, [sp, #0x8]
	str	r4, [sp, #0xc]
	str	r5, [sp, #0x10]
	mov	r0, #0x0
	mov	r1, #0x2
	mov	r3, #0x4
	bl	AddTextPrinterParameterized4
	ldr	r5, .L207+0xc
	ldr	r0, [r5]
	ldr	r1, .L207+0x10
	mov	r8, r1
	add	r0, r0, r8
	bl	PrintTotalRecord
	str	r4, [sp]
	mov	r0, r9
	str	r0, [sp, #0x4]
	str	r6, [sp, #0x8]
	str	r4, [sp, #0xc]
	ldr	r0, .L207+0x14
	str	r0, [sp, #0x10]
	mov	r0, #0x0
	mov	r1, #0x2
	mov	r2, #0x54
	mov	r3, #0x30
	bl	AddTextPrinterParameterized4
	add	r7, r5, #0
	mov	r5, #0xf4
	lsl	r5, r5, #0x16
	mov	r6, r8
	mov	r4, #0x4
.L205:
	ldr	r0, [r7]
	add	r0, r0, r6
	lsr	r1, r5, #0x18
	bl	PrintOpponentBattleRecord
	mov	r1, #0xe0
	lsl	r1, r1, #0x14
	add	r5, r5, r1
	add	r6, r6, #0x10
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L205	@cond_branch
	mov	r0, #0x0
	bl	CommitWindow
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L208:
	.align	2, 0
.L207:
	.word	gStringVar4
	.word	gString_BattleRecords_PlayersBattleResults
	.word	sTextColor
	.word	gSaveBlock2Ptr
	.word	0xa98
	.word	gString_BattleRecords_ColumnHeaders
.Lfe29:
	.size	 PrintBattleRecords,.Lfe29-PrintBattleRecords
	.align	2, 0
	.type	 CommitWindow,function
	.thumb_func
CommitWindow:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe30:
	.size	 CommitWindow,.Lfe30-CommitWindow
	.align	2, 0
	.type	 LoadFrameGfxOnBg,function
	.thumb_func
LoadFrameGfxOnBg:
	push	{r4, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L211
	add	r0, r4, #0
	mov	r2, #0xc0
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, .L211+0x4
	mov	r0, #0x20
	str	r0, [sp]
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect
	ldr	r0, .L211+0x8
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r0}
	bx	r0
.L212:
	.align	2, 0
.L211:
	.word	sTiles
	.word	sTilemap
	.word	sPalette
.Lfe31:
	.size	 LoadFrameGfxOnBg,.Lfe31-LoadFrameGfxOnBg
.text
	.align	2, 0 @ Don't pad with nop

