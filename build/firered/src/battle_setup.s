@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	1, 0
	.type	 sTrainerBattleMode,object
	.size	 sTrainerBattleMode,2
sTrainerBattleMode:
	.short	0x0
	.globl	gTrainerBattleOpponent_A
	.align	1, 0
	.type	 gTrainerBattleOpponent_A,object
	.size	 gTrainerBattleOpponent_A,2
gTrainerBattleOpponent_A:
	.short	0x0
	.align	1, 0
	.type	 sTrainerObjectEventLocalId,object
	.size	 sTrainerObjectEventLocalId,2
sTrainerObjectEventLocalId:
	.short	0x0
	.align	2, 0
	.type	 sTrainerAIntroSpeech,object
	.size	 sTrainerAIntroSpeech,4
sTrainerAIntroSpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerADefeatSpeech,object
	.size	 sTrainerADefeatSpeech,4
sTrainerADefeatSpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerVictorySpeech,object
	.size	 sTrainerVictorySpeech,4
sTrainerVictorySpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerCannotBattleSpeech,object
	.size	 sTrainerCannotBattleSpeech,4
sTrainerCannotBattleSpeech:
	.word	0x0
	.align	2, 0
	.type	 sTrainerBattleEndScript,object
	.size	 sTrainerBattleEndScript,4
sTrainerBattleEndScript:
	.word	0x0
	.align	2, 0
	.type	 sTrainerABattleScriptRetAddr,object
	.size	 sTrainerABattleScriptRetAddr,4
sTrainerABattleScriptRetAddr:
	.word	0x0
	.align	1, 0
	.type	 sRivalBattleFlags,object
	.size	 sRivalBattleFlags,2
sRivalBattleFlags:
	.short	0x0
	.section .rodata
	.type	 sBattleTransitionTable_Wild,object
sBattleTransitionTable_Wild:
	.byte	0x8
	.byte	0x9
	.byte	0x5
	.byte	0xa
	.byte	0x0
	.byte	0xa
	.byte	0x7
	.byte	0x6
	.size	 sBattleTransitionTable_Wild,8
	.type	 sBattleTransitionTable_Trainer,object
sBattleTransitionTable_Trainer:
	.byte	0x4
	.byte	0xb
	.byte	0x2
	.byte	0x3
	.byte	0x0
	.byte	0xa
	.byte	0x1
	.byte	0x6
	.size	 sBattleTransitionTable_Trainer,8
	.align	2, 0
	.type	 sOrdinaryBattleParams,object
sOrdinaryBattleParams:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent_A
	.byte	0x1
	.space	3
	.word	sTrainerObjectEventLocalId
	.byte	0x1
	.space	3
	.word	sTrainerAIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerADefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x5
	.space	3
	.word	sTrainerABattleScriptRetAddr
	.byte	0x5
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x6
	.space	3
	.size	 sOrdinaryBattleParams,72
	.align	2, 0
	.type	 sContinueScriptBattleParams,object
sContinueScriptBattleParams:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent_A
	.byte	0x1
	.space	3
	.word	sTrainerObjectEventLocalId
	.byte	0x1
	.space	3
	.word	sTrainerAIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerADefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x5
	.space	3
	.word	sTrainerABattleScriptRetAddr
	.byte	0x2
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x6
	.space	3
	.size	 sContinueScriptBattleParams,72
	.align	2, 0
	.type	 sDoubleBattleParams,object
sDoubleBattleParams:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent_A
	.byte	0x1
	.space	3
	.word	sTrainerObjectEventLocalId
	.byte	0x1
	.space	3
	.word	sTrainerAIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerADefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x2
	.space	3
	.word	sTrainerABattleScriptRetAddr
	.byte	0x5
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x6
	.space	3
	.size	 sDoubleBattleParams,72
	.align	2, 0
	.type	 sOrdinaryNoIntroBattleParams,object
sOrdinaryNoIntroBattleParams:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent_A
	.byte	0x1
	.space	3
	.word	sTrainerObjectEventLocalId
	.byte	0x1
	.space	3
	.word	sTrainerAIntroSpeech
	.byte	0x5
	.space	3
	.word	sTrainerADefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x5
	.space	3
	.word	sTrainerABattleScriptRetAddr
	.byte	0x5
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x6
	.space	3
	.size	 sOrdinaryNoIntroBattleParams,72
	.align	2, 0
	.type	 sEarlyRivalBattleParams,object
sEarlyRivalBattleParams:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent_A
	.byte	0x1
	.space	3
	.word	sRivalBattleFlags
	.byte	0x1
	.space	3
	.word	sTrainerAIntroSpeech
	.byte	0x5
	.space	3
	.word	sTrainerADefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x2
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x5
	.space	3
	.word	sTrainerABattleScriptRetAddr
	.byte	0x5
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x6
	.space	3
	.size	 sEarlyRivalBattleParams,72
	.align	2, 0
	.type	 sContinueScriptDoubleBattleParams,object
sContinueScriptDoubleBattleParams:
	.word	sTrainerBattleMode
	.byte	0x0
	.space	3
	.word	gTrainerBattleOpponent_A
	.byte	0x1
	.space	3
	.word	sTrainerObjectEventLocalId
	.byte	0x1
	.space	3
	.word	sTrainerAIntroSpeech
	.byte	0x2
	.space	3
	.word	sTrainerADefeatSpeech
	.byte	0x2
	.space	3
	.word	sTrainerVictorySpeech
	.byte	0x5
	.space	3
	.word	sTrainerCannotBattleSpeech
	.byte	0x2
	.space	3
	.word	sTrainerABattleScriptRetAddr
	.byte	0x2
	.space	3
	.word	sTrainerBattleEndScript
	.byte	0x6
	.space	3
	.size	 sContinueScriptDoubleBattleParams,72
.text
	.align	2, 0
	.type	 Task_BattleStart,function
	.thumb_func
Task_BattleStart:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L10
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L4	@cond_branch
	cmp	r0, #0x1
	beq	.L6	@cond_branch
	b	.L3
.L11:
	.align	2, 0
.L10:
	.word	gTasks+0x8
.L4:
	bl	FldEffPoison_IsActive
	cmp	r0, #0
	bne	.L3	@cond_branch
	bl	HelpSystem_Disable
	ldrb	r0, [r4, #0x2]
	bl	BattleTransition_StartOnField
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L3
.L6:
	bl	IsBattleTransitionDone
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L3	@cond_branch
	bl	HelpSystem_Enable
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L12
	bl	SetMainCallback2
	bl	RestartWildEncounterImmunitySteps
	bl	ClearPoisonStepCounter
	add	r0, r5, #0
	bl	DestroyTask
.L3:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L13:
	.align	2, 0
.L12:
	.word	CB2_InitBattle
.Lfe1:
	.size	 Task_BattleStart,.Lfe1-Task_BattleStart
	.align	2, 0
	.type	 CreateBattleStartTask,function
	.thumb_func
CreateBattleStartTask:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L15
	mov	r1, #0x1
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L15+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xa]
	add	r0, r5, #0
	bl	PlayMapChosenOrBattleBGM
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	Task_BattleStart
	.word	gTasks
.Lfe2:
	.size	 CreateBattleStartTask,.Lfe2-CreateBattleStartTask
	.align	2, 0
	.type	 CheckSilphScopeInPokemonTower,function
	.thumb_func
CheckSilphScopeInPokemonTower:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	cmp	r0, #0x1
	bne	.L18	@cond_branch
	add	r0, r1, #0
	sub	r0, r0, #0x58
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x6
	bhi	.L18	@cond_branch
	ldr	r0, .L21
	mov	r1, #0x1
	bl	CheckBagHasItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L18	@cond_branch
	mov	r0, #0x1
	b	.L20
.L22:
	.align	2, 0
.L21:
	.word	0x167
.L18:
	mov	r0, #0x0
.L20:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 CheckSilphScopeInPokemonTower,.Lfe3-CheckSilphScopeInPokemonTower
	.align	2, 0
	.globl	StartWildBattle
	.type	 StartWildBattle,function
	.thumb_func
StartWildBattle:
	push	{lr}
	bl	GetSafariZoneFlag
	cmp	r0, #0
	beq	.L24	@cond_branch
	bl	DoSafariBattle
	b	.L25
.L24:
	ldr	r0, .L28
	ldr	r1, [r0]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	CheckSilphScopeInPokemonTower
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L26	@cond_branch
	bl	DoGhostBattle
	b	.L25
.L29:
	.align	2, 0
.L28:
	.word	gSaveBlock1Ptr
.L26:
	bl	DoStandardWildBattle
.L25:
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 StartWildBattle,.Lfe4-StartWildBattle
	.align	2, 0
	.type	 DoStandardWildBattle,function
	.thumb_func
DoStandardWildBattle:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	bl	StopPlayerAvatar
	ldr	r1, .L31
	ldr	r0, .L31+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L31+0x8
	mov	r0, #0x0
	str	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.L32:
	.align	2, 0
.L31:
	.word	gMain
	.word	CB2_EndWildBattle
	.word	gBattleTypeFlags
.Lfe5:
	.size	 DoStandardWildBattle,.Lfe5-DoStandardWildBattle
	.align	2, 0
	.globl	StartRoamerBattle
	.type	 StartRoamerBattle,function
	.thumb_func
StartRoamerBattle:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	bl	StopPlayerAvatar
	ldr	r1, .L34
	ldr	r0, .L34+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L34+0x8
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	str	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L34+0xc
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.L35:
	.align	2, 0
.L34:
	.word	gMain
	.word	CB2_EndWildBattle
	.word	gBattleTypeFlags
	.word	0x155
.Lfe6:
	.size	 StartRoamerBattle,.Lfe6-StartRoamerBattle
	.align	2, 0
	.type	 DoSafariBattle,function
	.thumb_func
DoSafariBattle:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	bl	StopPlayerAvatar
	ldr	r1, .L37
	ldr	r0, .L37+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L37+0x8
	mov	r0, #0x80
	str	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	pop	{r0}
	bx	r0
.L38:
	.align	2, 0
.L37:
	.word	gMain
	.word	CB2_EndSafariBattle
	.word	gBattleTypeFlags
.Lfe7:
	.size	 DoSafariBattle,.Lfe7-DoSafariBattle
	.align	2, 0
	.type	 DoGhostBattle,function
	.thumb_func
DoGhostBattle:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	bl	StopPlayerAvatar
	ldr	r1, .L40
	ldr	r0, .L40+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L40+0x8
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	str	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	ldr	r0, .L40+0xc
	ldr	r2, .L40+0x10
	mov	r1, #0x2
	bl	SetMonData
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	gMain
	.word	CB2_EndWildBattle
	.word	gBattleTypeFlags
	.word	gEnemyParty
	.word	gText_Ghost
.Lfe8:
	.size	 DoGhostBattle,.Lfe8-DoGhostBattle
	.align	2, 0
	.type	 DoTrainerBattle,function
	.thumb_func
DoTrainerBattle:
	push	{lr}
	bl	GetTrainerBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x9
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 DoTrainerBattle,.Lfe9-DoTrainerBattle
	.align	2, 0
	.globl	StartOldManTutorialBattle
	.type	 StartOldManTutorialBattle,function
	.thumb_func
StartOldManTutorialBattle:
	push	{lr}
	ldr	r0, .L44
	mov	r1, #0xd
	mov	r2, #0x5
	bl	CreateMaleMon
	bl	LockPlayerFieldControls
	ldr	r1, .L44+0x4
	ldr	r0, .L44+0x8
	str	r0, [r1, #0x8]
	ldr	r1, .L44+0xc
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	str	r0, [r1]
	mov	r0, #0x8
	mov	r1, #0x0
	bl	CreateBattleStartTask
	pop	{r0}
	bx	r0
.L45:
	.align	2, 0
.L44:
	.word	gEnemyParty
	.word	gMain
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
	.word	gBattleTypeFlags
.Lfe10:
	.size	 StartOldManTutorialBattle,.Lfe10-StartOldManTutorialBattle
	.align	2, 0
	.globl	StartScriptedWildBattle
	.type	 StartScriptedWildBattle,function
	.thumb_func
StartScriptedWildBattle:
	push	{lr}
	bl	LockPlayerFieldControls
	ldr	r1, .L47
	ldr	r0, .L47+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L47+0x8
	mov	r0, #0x80
	lsl	r0, r0, #0xa
	str	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.L48:
	.align	2, 0
.L47:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
.Lfe11:
	.size	 StartScriptedWildBattle,.Lfe11-StartScriptedWildBattle
	.align	2, 0
	.globl	StartMarowakBattle
	.type	 StartMarowakBattle,function
	.thumb_func
StartMarowakBattle:
	push	{lr}
	add	sp, sp, #-0xc
	bl	LockPlayerFieldControls
	ldr	r1, .L52
	ldr	r0, .L52+0x4
	str	r0, [r1, #0x8]
	ldr	r0, .L52+0x8
	mov	r1, #0x1
	bl	CheckBagHasItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L50	@cond_branch
	ldr	r1, .L52+0xc
	mov	r0, #0xa0
	lsl	r0, r0, #0x8
	str	r0, [r1]
	ldr	r0, .L52+0x10
	mov	r1, #0xfe
	str	r1, [sp]
	mov	r1, #0xc
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x69
	mov	r2, #0x1e
	mov	r3, #0x1f
	bl	CreateMonWithGenderNatureLetter
	b	.L51
.L53:
	.align	2, 0
.L52:
	.word	gMain
	.word	CB2_EndMarowakBattle
	.word	0x167
	.word	gBattleTypeFlags
	.word	gEnemyParty
.L50:
	ldr	r1, .L54
	mov	r0, #0x80
	lsl	r0, r0, #0x8
	str	r0, [r1]
.L51:
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	ldr	r0, .L54+0x4
	ldr	r2, .L54+0x8
	mov	r1, #0x2
	bl	SetMonData
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L55:
	.align	2, 0
.L54:
	.word	gBattleTypeFlags
	.word	gEnemyParty
	.word	gText_Ghost
.Lfe12:
	.size	 StartMarowakBattle,.Lfe12-StartMarowakBattle
	.align	2, 0
	.globl	StartSouthernIslandBattle
	.type	 StartSouthernIslandBattle,function
	.thumb_func
StartSouthernIslandBattle:
	push	{lr}
	bl	LockPlayerFieldControls
	ldr	r1, .L57
	ldr	r0, .L57+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L57+0x8
	mov	r0, #0x80
	lsl	r0, r0, #0x6
	str	r0, [r1]
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.L58:
	.align	2, 0
.L57:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
.Lfe13:
	.size	 StartSouthernIslandBattle,.Lfe13-StartSouthernIslandBattle
	.align	2, 0
	.globl	StartLegendaryBattle
	.type	 StartLegendaryBattle,function
	.thumb_func
StartLegendaryBattle:
	push	{lr}
	bl	LockPlayerFieldControls
	ldr	r1, .L72
	ldr	r0, .L72+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L72+0x8
	mov	r0, #0x84
	lsl	r0, r0, #0xb
	str	r0, [r1]
	ldr	r0, .L72+0xc
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r0, #0
	cmp	r0, #0x96
	beq	.L61	@cond_branch
	cmp	r0, #0x96
	bgt	.L70	@cond_branch
	cmp	r0, #0x92
	bgt	.L68	@cond_branch
	cmp	r0, #0x90
	blt	.L68	@cond_branch
	b	.L67
.L73:
	.align	2, 0
.L72:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
	.word	gEnemyParty
.L70:
	cmp	r1, #0xf9
	blt	.L68	@cond_branch
	cmp	r1, #0xfa
	ble	.L67	@cond_branch
	mov	r0, #0xcd
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L62	@cond_branch
	b	.L68
.L61:
	mov	r1, #0xaa
	lsl	r1, r1, #0x1
	b	.L71
.L62:
	ldr	r1, .L74
	b	.L71
.L75:
	.align	2, 0
.L74:
	.word	0x153
.L67:
	ldr	r1, .L76
.L71:
	mov	r0, #0x0
	bl	CreateBattleStartTask
	b	.L60
.L77:
	.align	2, 0
.L76:
	.word	0x155
.L68:
	mov	r1, #0x85
	lsl	r1, r1, #0x1
	mov	r0, #0x0
	bl	CreateBattleStartTask
.L60:
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 StartLegendaryBattle,.Lfe14-StartLegendaryBattle
	.align	2, 0
	.globl	StartGroudonKyogreBattle
	.type	 StartGroudonKyogreBattle,function
	.thumb_func
StartGroudonKyogreBattle:
	push	{lr}
	bl	LockPlayerFieldControls
	ldr	r1, .L81
	ldr	r0, .L81+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L81+0x8
	mov	r0, #0xc0
	lsl	r0, r0, #0x6
	str	r0, [r1]
	ldr	r0, .L81+0xc
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L79	@cond_branch
	mov	r1, #0x85
	lsl	r1, r1, #0x1
	mov	r0, #0xb
	bl	CreateBattleStartTask
	b	.L80
.L82:
	.align	2, 0
.L81:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
	.word	gGameVersion
.L79:
	mov	r1, #0x85
	lsl	r1, r1, #0x1
	mov	r0, #0xb
	bl	CreateBattleStartTask
.L80:
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 StartGroudonKyogreBattle,.Lfe15-StartGroudonKyogreBattle
	.align	2, 0
	.globl	StartRegiBattle
	.type	 StartRegiBattle,function
	.thumb_func
StartRegiBattle:
	push	{lr}
	bl	LockPlayerFieldControls
	ldr	r1, .L84
	ldr	r0, .L84+0x4
	str	r0, [r1, #0x8]
	ldr	r1, .L84+0x8
	mov	r0, #0xc0
	lsl	r0, r0, #0x7
	str	r0, [r1]
	mov	r1, #0x85
	lsl	r1, r1, #0x1
	mov	r0, #0x0
	bl	CreateBattleStartTask
	mov	r0, #0x7
	bl	IncrementGameStat
	mov	r0, #0x8
	bl	IncrementGameStat
	pop	{r0}
	bx	r0
.L85:
	.align	2, 0
.L84:
	.word	gMain
	.word	CB2_EndScriptedWildBattle
	.word	gBattleTypeFlags
.Lfe16:
	.size	 StartRegiBattle,.Lfe16-StartRegiBattle
	.align	2, 0
	.type	 EndPokedudeBattle,function
	.thumb_func
EndPokedudeBattle:
	push	{lr}
	bl	LoadPlayerParty
	bl	CB2_EndWildBattle
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 EndPokedudeBattle,.Lfe17-EndPokedudeBattle
	.align	2, 0
	.type	 StartPokedudeBattle,function
	.thumb_func
StartPokedudeBattle:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	bl	StopPlayerAvatar
	ldr	r1, .L88
	ldr	r0, .L88+0x4
	str	r0, [r1, #0x8]
	bl	SavePlayerParty
	bl	InitPokedudePartyAndOpponent
	bl	GetWildBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	CreateBattleStartTask
	pop	{r0}
	bx	r0
.L89:
	.align	2, 0
.L88:
	.word	gMain
	.word	EndPokedudeBattle
.Lfe18:
	.size	 StartPokedudeBattle,.Lfe18-StartPokedudeBattle
	.align	2, 0
	.type	 CB2_EndWildBattle,function
	.thumb_func
CB2_EndWildBattle:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	ldr	r2, .L93
	mov	r0, sp
	bl	CpuSet
	mov	r0, #0x0
	mov	r1, #0x80
	bl	ResetOamRange
	ldr	r0, .L93+0x4
	ldrb	r0, [r0]
	bl	IsPlayerDefeated
	cmp	r0, #0x1
	bne	.L91	@cond_branch
	ldr	r0, .L93+0x8
	bl	SetMainCallback2
	b	.L92
.L94:
	.align	2, 0
.L93:
	.word	0x1000100
	.word	gBattleOutcome
	.word	CB2_WhiteOut
.L91:
	ldr	r0, .L95
	bl	SetMainCallback2
	ldr	r1, .L95+0x4
	ldr	r0, .L95+0x8
	str	r0, [r1]
.L92:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L96:
	.align	2, 0
.L95:
	.word	CB2_ReturnToField
	.word	gFieldCallback
	.word	FieldCB_SafariZoneRanOutOfBalls
.Lfe19:
	.size	 CB2_EndWildBattle,.Lfe19-CB2_EndWildBattle
	.align	2, 0
	.type	 CB2_EndScriptedWildBattle,function
	.thumb_func
CB2_EndScriptedWildBattle:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	ldr	r2, .L100
	mov	r0, sp
	bl	CpuSet
	mov	r0, #0x0
	mov	r1, #0x80
	bl	ResetOamRange
	ldr	r0, .L100+0x4
	ldrb	r0, [r0]
	bl	IsPlayerDefeated
	cmp	r0, #0x1
	bne	.L98	@cond_branch
	ldr	r0, .L100+0x8
	bl	SetMainCallback2
	b	.L99
.L101:
	.align	2, 0
.L100:
	.word	0x1000100
	.word	gBattleOutcome
	.word	CB2_WhiteOut
.L98:
	ldr	r0, .L102
	bl	SetMainCallback2
.L99:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L103:
	.align	2, 0
.L102:
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe20:
	.size	 CB2_EndScriptedWildBattle,.Lfe20-CB2_EndScriptedWildBattle
	.align	2, 0
	.type	 CB2_EndMarowakBattle,function
	.thumb_func
CB2_EndMarowakBattle:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	ldr	r2, .L109
	mov	r0, sp
	bl	CpuSet
	mov	r0, #0x0
	mov	r1, #0x80
	bl	ResetOamRange
	ldr	r4, .L109+0x4
	ldrb	r0, [r4]
	bl	IsPlayerDefeated
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L105	@cond_branch
	ldr	r0, .L109+0x8
	bl	SetMainCallback2
	b	.L106
.L110:
	.align	2, 0
.L109:
	.word	0x1000100
	.word	gBattleOutcome
	.word	CB2_WhiteOut
.L105:
	ldrb	r0, [r4]
	cmp	r0, #0x1
	bne	.L107	@cond_branch
	ldr	r0, .L111
	strh	r1, [r0]
	b	.L108
.L112:
	.align	2, 0
.L111:
	.word	gSpecialVar_Result
.L107:
	ldr	r1, .L113
	mov	r0, #0x1
	strh	r0, [r1]
.L108:
	ldr	r0, .L113+0x4
	bl	SetMainCallback2
.L106:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L114:
	.align	2, 0
.L113:
	.word	gSpecialVar_Result
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe21:
	.size	 CB2_EndMarowakBattle,.Lfe21-CB2_EndMarowakBattle
	.align	2, 0
	.globl	BattleSetup_GetTerrainId
	.type	 BattleSetup_GetTerrainId,function
	.thumb_func
BattleSetup_GetTerrainId:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsTallGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L116	@cond_branch
	mov	r0, #0x0
	b	.L139
.L116:
	add	r0, r4, #0
	bl	MetatileBehavior_IsLongGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L117	@cond_branch
	mov	r0, #0x1
	b	.L139
.L117:
	add	r0, r4, #0
	bl	MetatileBehavior_IsSandOrShallowFlowingWater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L118	@cond_branch
	mov	r0, #0x2
	b	.L139
.L118:
	ldr	r0, .L143
	ldrb	r0, [r0, #0x17]
	sub	r0, r0, #0x1
	cmp	r0, #0x8
	bhi	.L119	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L143+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L144:
	.align	2, 0
.L143:
	.word	gMapHeader
	.word	.L131
	.align	2, 0
	.align	2, 0
.L131:
	.word	.L119
	.word	.L119
	.word	.L119
	.word	.L123
	.word	.L128
	.word	.L129
	.word	.L119
	.word	.L141
	.word	.L141
.L123:
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsIndoorEncounter
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L124	@cond_branch
.L141:
	mov	r0, #0x8
	b	.L139
.L124:
	add	r0, r4, #0
	bl	MetatileBehavior_IsSurfable
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L140	@cond_branch
	mov	r0, #0x7
	b	.L139
.L128:
	mov	r0, #0x3
	b	.L139
.L129:
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSurfable
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L142	@cond_branch
	b	.L136
.L119:
	lsl	r0, r5, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsDeepWaterTerrain
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L142	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsSurfable
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L140	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsMountain
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L135	@cond_branch
	mov	r0, #0x6
	b	.L139
.L135:
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L136	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_GetBridgeType
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L137	@cond_branch
.L140:
	mov	r0, #0x5
	b	.L139
.L137:
	add	r0, r4, #0
	bl	MetatileBehavior_IsBridge
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L136	@cond_branch
.L142:
	mov	r0, #0x4
	b	.L139
.L136:
	mov	r0, #0x9
.L139:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 BattleSetup_GetTerrainId,.Lfe22-BattleSetup_GetTerrainId
	.align	2, 0
	.type	 GetBattleTransitionTypeByMap,function
	.thumb_func
GetBattleTransitionTypeByMap:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	bl	Overworld_GetFlashLevel
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L146	@cond_branch
	mov	r0, #0x2
	b	.L153
.L146:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSurfable
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L150	@cond_branch
	ldr	r0, .L154
	ldrb	r0, [r0, #0x17]
	cmp	r0, #0x4
	beq	.L149	@cond_branch
	cmp	r0, #0x5
	beq	.L150	@cond_branch
	mov	r0, #0x0
	b	.L153
.L155:
	.align	2, 0
.L154:
	.word	gMapHeader
.L149:
	mov	r0, #0x1
	b	.L153
.L150:
	mov	r0, #0x3
.L153:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 GetBattleTransitionTypeByMap,.Lfe23-GetBattleTransitionTypeByMap
	.align	2, 0
	.type	 GetSumOfPlayerPartyLevel,function
	.thumb_func
GetSumOfPlayerPartyLevel:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r7, #0x0
	mov	r6, #0x0
.L160:
	mov	r0, #0x64
	mov	r1, r6
	mul	r1, r1, r0
	ldr	r0, .L164
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	add	r1, r0, #0
	ldr	r0, .L164+0x4
	cmp	r1, r0
	beq	.L159	@cond_branch
	cmp	r1, #0
	beq	.L159	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	beq	.L159	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	add	r0, r7, r0
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	beq	.L158	@cond_branch
.L159:
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L160	@cond_branch
.L158:
	add	r0, r7, #0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L165:
	.align	2, 0
.L164:
	.word	gPlayerParty
	.word	0x19d
.Lfe24:
	.size	 GetSumOfPlayerPartyLevel,.Lfe24-GetSumOfPlayerPartyLevel
	.align	2, 0
	.type	 GetSumOfEnemyPartyLevel,function
	.thumb_func
GetSumOfEnemyPartyLevel:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldr	r5, .L196
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r2, r1, r5
	add	r0, r2, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	cmp	r0, r4
	bcs	.L167	@cond_branch
	add	r4, r0, #0
.L167:
	mov	r3, #0x0
	ldrb	r0, [r2]
	cmp	r0, #0x1
	beq	.L175	@cond_branch
	cmp	r0, #0x1
	bgt	.L195	@cond_branch
	cmp	r0, #0
	beq	.L169	@cond_branch
	b	.L168
.L197:
	.align	2, 0
.L196:
	.word	gTrainers
.L195:
	cmp	r0, #0x2
	beq	.L181	@cond_branch
	cmp	r0, #0x3
	beq	.L187	@cond_branch
	b	.L168
.L169:
	add	r0, r5, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r1, [r0]
	mov	r2, #0x0
	cmp	r3, r4
	bcs	.L168	@cond_branch
.L173:
	lsl	r0, r2, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	add	r0, r3, r0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r4
	bcc	.L173	@cond_branch
	b	.L168
.L175:
	add	r0, r5, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r1, [r0]
	mov	r2, #0x0
	cmp	r3, r4
	bcs	.L168	@cond_branch
.L179:
	lsl	r0, r2, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	add	r0, r3, r0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r4
	bcc	.L179	@cond_branch
	b	.L168
.L181:
	add	r0, r5, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r1, [r0]
	mov	r2, #0x0
	cmp	r3, r4
	bcs	.L168	@cond_branch
.L185:
	lsl	r0, r2, #0x3
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	add	r0, r3, r0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r4
	bcc	.L185	@cond_branch
	b	.L168
.L187:
	add	r0, r5, #0
	add	r0, r0, #0x24
	add	r0, r1, r0
	ldr	r1, [r0]
	mov	r2, #0x0
	cmp	r3, r4
	bcs	.L168	@cond_branch
.L191:
	lsl	r0, r2, #0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	add	r0, r3, r0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, r4
	bcc	.L191	@cond_branch
.L168:
	add	r0, r3, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe25:
	.size	 GetSumOfEnemyPartyLevel,.Lfe25-GetSumOfEnemyPartyLevel
	.align	2, 0
	.type	 GetWildBattleTransition,function
	.thumb_func
GetWildBattleTransition:
	push	{r4, r5, lr}
	bl	GetBattleTransitionTypeByMap
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L204
	mov	r1, #0x38
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	bl	GetSumOfPlayerPartyLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L199	@cond_branch
	ldr	r0, .L204+0x4
	lsl	r1, r5, #0x1
	add	r0, r0, #0x1
	b	.L203
.L205:
	.align	2, 0
.L204:
	.word	gEnemyParty
	.word	sBattleTransitionTable_Wild
.L199:
	ldr	r0, .L206
	lsl	r1, r5, #0x1
.L203:
	add	r1, r1, r0
	ldrb	r0, [r1]
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L207:
	.align	2, 0
.L206:
	.word	sBattleTransitionTable_Wild
.Lfe26:
	.size	 GetWildBattleTransition,.Lfe26-GetWildBattleTransition
	.align	2, 0
	.type	 GetTrainerBattleTransition,function
	.thumb_func
GetTrainerBattleTransition:
	push	{r4, r5, r6, lr}
	ldr	r4, .L228
	ldrh	r1, [r4]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	beq	.L225	@cond_branch
	ldr	r1, .L228+0x4
	ldrh	r2, [r4]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrb	r1, [r0, #0x1]
	cmp	r1, #0x57
	bne	.L210	@cond_branch
	add	r1, r2, #0
	mov	r0, #0xcd
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L212	@cond_branch
	ldr	r0, .L228+0x8
	cmp	r1, r0
	bne	.L211	@cond_branch
.L212:
	mov	r0, #0xc
	b	.L224
.L229:
	.align	2, 0
.L228:
	.word	gTrainerBattleOpponent_A
	.word	gTrainers
	.word	0x2df
.L211:
	ldr	r0, .L230
	cmp	r1, r0
	beq	.L214	@cond_branch
	mov	r0, #0xb8
	lsl	r0, r0, #0x2
	cmp	r1, r0
	bne	.L213	@cond_branch
.L214:
	mov	r0, #0xd
	b	.L224
.L231:
	.align	2, 0
.L230:
	.word	0x19b
.L213:
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L216	@cond_branch
	ldr	r0, .L232
	cmp	r1, r0
	bne	.L215	@cond_branch
.L216:
	mov	r0, #0xe
	b	.L224
.L233:
	.align	2, 0
.L232:
	.word	0x2e1
.L215:
	ldr	r0, .L234
	cmp	r1, r0
	beq	.L218	@cond_branch
	ldr	r0, .L234+0x4
	cmp	r1, r0
	bne	.L225	@cond_branch
.L218:
	mov	r0, #0xf
	b	.L224
.L235:
	.align	2, 0
.L234:
	.word	0x19d
	.word	0x2e2
.L210:
	cmp	r1, #0x5a
	bne	.L219	@cond_branch
.L225:
	mov	r0, #0x10
	b	.L224
.L219:
	ldrb	r0, [r0, #0x18]
	mov	r5, #0x1
	cmp	r0, #0x1
	bne	.L220	@cond_branch
	mov	r5, #0x2
.L220:
	bl	GetBattleTransitionTypeByMap
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldrh	r0, [r4]
	add	r1, r5, #0
	bl	GetSumOfEnemyPartyLevel
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	bl	GetSumOfPlayerPartyLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L222	@cond_branch
	ldr	r0, .L236
	lsl	r1, r6, #0x1
	add	r0, r0, #0x1
	b	.L227
.L237:
	.align	2, 0
.L236:
	.word	sBattleTransitionTable_Trainer
.L222:
	ldr	r0, .L238
	lsl	r1, r6, #0x1
.L227:
	add	r1, r1, r0
	ldrb	r0, [r1]
.L224:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L239:
	.align	2, 0
.L238:
	.word	sBattleTransitionTable_Trainer
.Lfe27:
	.size	 GetTrainerBattleTransition,.Lfe27-GetTrainerBattleTransition
	.align	2, 0
	.globl	BattleSetup_GetBattleTowerBattleTransition
	.type	 BattleSetup_GetBattleTowerBattleTransition,function
	.thumb_func
BattleSetup_GetBattleTowerBattleTransition:
	push	{r4, lr}
	ldr	r0, .L244
	mov	r1, #0x38
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	bl	GetSumOfPlayerPartyLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bcc	.L241	@cond_branch
	mov	r0, #0x3
	b	.L243
.L245:
	.align	2, 0
.L244:
	.word	gEnemyParty
.L241:
	mov	r0, #0x4
.L243:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 BattleSetup_GetBattleTowerBattleTransition,.Lfe28-BattleSetup_GetBattleTowerBattleTransition
	.align	2, 0
	.type	 TrainerBattleLoadArg32,function
	.thumb_func
TrainerBattleLoadArg32:
	add	r2, r0, #0
	ldrb	r0, [r2]
	ldrb	r1, [r2, #0x1]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	ldrb	r1, [r2, #0x2]
	lsl	r1, r1, #0x10
	orr	r0, r0, r1
	ldrb	r1, [r2, #0x3]
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	bx	lr
.Lfe29:
	.size	 TrainerBattleLoadArg32,.Lfe29-TrainerBattleLoadArg32
	.align	2, 0
	.type	 TrainerBattleLoadArg16,function
	.thumb_func
TrainerBattleLoadArg16:
	add	r1, r0, #0
	ldrb	r0, [r1]
	ldrb	r1, [r1, #0x1]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	bx	lr
.Lfe30:
	.size	 TrainerBattleLoadArg16,.Lfe30-TrainerBattleLoadArg16
	.align	2, 0
	.type	 TrainerBattleLoadArg8,function
	.thumb_func
TrainerBattleLoadArg8:
	ldrb	r0, [r0]
	bx	lr
.Lfe31:
	.size	 TrainerBattleLoadArg8,.Lfe31-TrainerBattleLoadArg8
	.align	2, 0
	.type	 GetTrainerAFlag,function
	.thumb_func
GetTrainerAFlag:
	ldr	r1, .L250
	ldr	r2, .L250+0x4
	add	r0, r2, #0
	ldrh	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bx	lr
.L251:
	.align	2, 0
.L250:
	.word	gTrainerBattleOpponent_A
	.word	0x503
.Lfe32:
	.size	 GetTrainerAFlag,.Lfe32-GetTrainerAFlag
	.align	2, 0
	.type	 IsPlayerDefeated,function
	.thumb_func
IsPlayerDefeated:
	push	{lr}
	sub	r0, r0, #0x1
	cmp	r0, #0x6
	bhi	.L261	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L264
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L265:
	.align	2, 0
.L264:
	.word	.L262
	.align	2, 0
	.align	2, 0
.L262:
	.word	.L260
	.word	.L255
	.word	.L255
	.word	.L260
	.word	.L260
	.word	.L260
	.word	.L260
.L255:
	mov	r0, #0x1
	b	.L263
.L260:
.L261:
	mov	r0, #0x0
.L263:
	pop	{r1}
	bx	r1
.Lfe33:
	.size	 IsPlayerDefeated,.Lfe33-IsPlayerDefeated
	.align	2, 0
	.type	 InitTrainerBattleVariables,function
	.thumb_func
InitTrainerBattleVariables:
	ldr	r0, .L267
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L267+0x4
	strh	r1, [r0]
	ldr	r0, .L267+0x8
	strh	r1, [r0]
	ldr	r0, .L267+0xc
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r0, .L267+0x10
	str	r1, [r0]
	ldr	r0, .L267+0x14
	str	r1, [r0]
	ldr	r0, .L267+0x18
	str	r1, [r0]
	ldr	r0, .L267+0x1c
	str	r1, [r0]
	ldr	r0, .L267+0x20
	str	r1, [r0]
	ldr	r0, .L267+0x24
	strh	r1, [r0]
	bx	lr
.L268:
	.align	2, 0
.L267:
	.word	sTrainerBattleMode
	.word	gTrainerBattleOpponent_A
	.word	sTrainerObjectEventLocalId
	.word	sTrainerAIntroSpeech
	.word	sTrainerADefeatSpeech
	.word	sTrainerVictorySpeech
	.word	sTrainerCannotBattleSpeech
	.word	sTrainerBattleEndScript
	.word	sTrainerABattleScriptRetAddr
	.word	sRivalBattleFlags
.Lfe34:
	.size	 InitTrainerBattleVariables,.Lfe34-InitTrainerBattleVariables
	.align	2, 0
	.type	 TrainerBattleLoadArgs,function
	.thumb_func
TrainerBattleLoadArgs:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
.L276:
	ldrb	r0, [r4, #0x4]
	cmp	r0, #0x6
	bhi	.L277	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L295
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L296:
	.align	2, 0
.L295:
	.word	.L292
	.align	2, 0
	.align	2, 0
.L292:
	.word	.L278
	.word	.L280
	.word	.L282
	.word	.L284
	.word	.L286
	.word	.L288
	.word	.L273
.L278:
	add	r0, r5, #0
	bl	TrainerBattleLoadArg8
	ldr	r1, [r4]
	strb	r0, [r1]
	add	r5, r5, #0x1
	b	.L277
.L280:
	add	r0, r5, #0
	bl	TrainerBattleLoadArg16
	ldr	r1, [r4]
	strh	r0, [r1]
	add	r5, r5, #0x2
	b	.L277
.L282:
	add	r0, r5, #0
	bl	TrainerBattleLoadArg32
	ldr	r1, [r4]
	str	r0, [r1]
	add	r5, r5, #0x4
	b	.L277
.L284:
	ldr	r1, [r4]
	mov	r0, #0x0
	strb	r0, [r1]
	b	.L277
.L286:
	ldr	r1, [r4]
	mov	r0, #0x0
	strh	r0, [r1]
	b	.L277
.L288:
	ldr	r1, [r4]
	mov	r0, #0x0
	str	r0, [r1]
.L277:
	add	r4, r4, #0x8
	b	.L276
.L273:
	ldr	r0, [r4]
	str	r5, [r0]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe35:
	.size	 TrainerBattleLoadArgs,.Lfe35-TrainerBattleLoadArgs
	.align	2, 0
	.type	 SetMapVarsToTrainer,function
	.thumb_func
SetMapVarsToTrainer:
	push	{lr}
	ldr	r0, .L299
	ldrh	r1, [r0]
	cmp	r1, #0
	beq	.L298	@cond_branch
	ldr	r0, .L299+0x4
	strh	r1, [r0]
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L299+0x8
	ldr	r2, [r1]
	ldrb	r1, [r2, #0x5]
	ldrb	r2, [r2, #0x4]
	bl	GetObjectEventIdByLocalIdAndMap
	ldr	r1, .L299+0xc
	strb	r0, [r1]
.L298:
	pop	{r0}
	bx	r0
.L300:
	.align	2, 0
.L299:
	.word	sTrainerObjectEventLocalId
	.word	gSpecialVar_LastTalked
	.word	gSaveBlock1Ptr
	.word	gSelectedObjectEvent
.Lfe36:
	.size	 SetMapVarsToTrainer,.Lfe36-SetMapVarsToTrainer
	.align	2, 0
	.globl	BattleSetup_ConfigureTrainerBattle
	.type	 BattleSetup_ConfigureTrainerBattle,function
	.thumb_func
BattleSetup_ConfigureTrainerBattle:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	InitTrainerBattleVariables
	ldr	r4, .L318
	add	r0, r5, #0
	bl	TrainerBattleLoadArg8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	ldrh	r0, [r4]
	sub	r0, r0, #0x1
	cmp	r0, #0x8
	bhi	.L312	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L318+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L319:
	.align	2, 0
.L318:
	.word	sTrainerBattleMode
	.word	.L313
	.align	2, 0
	.align	2, 0
.L313:
	.word	.L306
	.word	.L306
	.word	.L303
	.word	.L304
	.word	.L310
	.word	.L308
	.word	.L309
	.word	.L308
	.word	.L311
.L303:
	ldr	r0, .L320
	b	.L315
.L321:
	.align	2, 0
.L320:
	.word	sOrdinaryNoIntroBattleParams
.L304:
	ldr	r0, .L322
	b	.L316
.L323:
	.align	2, 0
.L322:
	.word	sDoubleBattleParams
.L306:
	ldr	r0, .L324
	b	.L317
.L325:
	.align	2, 0
.L324:
	.word	sContinueScriptBattleParams
.L308:
	ldr	r0, .L326
.L316:
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	SetMapVarsToTrainer
	ldr	r0, .L326+0x4
	b	.L314
.L327:
	.align	2, 0
.L326:
	.word	sContinueScriptDoubleBattleParams
	.word	EventScript_TryDoDoubleTrainerBattle
.L309:
	bl	QL_FinishRecordingScene
	ldr	r0, .L328
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	SetMapVarsToTrainer
	ldr	r4, .L328+0x4
	ldrh	r0, [r4]
	bl	GetRematchTrainerId
	strh	r0, [r4]
	ldr	r0, .L328+0x8
	b	.L314
.L329:
	.align	2, 0
.L328:
	.word	sDoubleBattleParams
	.word	gTrainerBattleOpponent_A
	.word	EventScript_TryDoDoubleRematchBattle
.L310:
	bl	QL_FinishRecordingScene
	ldr	r0, .L330
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	SetMapVarsToTrainer
	ldr	r4, .L330+0x4
	ldrh	r0, [r4]
	bl	GetRematchTrainerId
	strh	r0, [r4]
	ldr	r0, .L330+0x8
	b	.L314
.L331:
	.align	2, 0
.L330:
	.word	sOrdinaryBattleParams
	.word	gTrainerBattleOpponent_A
	.word	EventScript_TryDoRematchBattle
.L311:
	ldr	r0, .L332
.L315:
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	ldr	r0, .L332+0x4
	b	.L314
.L333:
	.align	2, 0
.L332:
	.word	sEarlyRivalBattleParams
	.word	EventScript_DoNoIntroTrainerBattle
.L312:
	ldr	r0, .L334
.L317:
	add	r1, r5, #0
	bl	TrainerBattleLoadArgs
	bl	SetMapVarsToTrainer
	ldr	r0, .L334+0x4
.L314:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L335:
	.align	2, 0
.L334:
	.word	sOrdinaryBattleParams
	.word	EventScript_TryDoNormalTrainerBattle
.Lfe37:
	.size	 BattleSetup_ConfigureTrainerBattle,.Lfe37-BattleSetup_ConfigureTrainerBattle
	.align	2, 0
	.globl	ConfigureAndSetUpOneTrainerBattle
	.type	 ConfigureAndSetUpOneTrainerBattle,function
	.thumb_func
ConfigureAndSetUpOneTrainerBattle:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L337
	strb	r0, [r2]
	ldr	r4, .L337+0x4
	ldr	r3, .L337+0x8
	lsl	r2, r0, #0x3
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	ldrb	r0, [r2, #0x8]
	strh	r0, [r4]
	add	r1, r1, #0x1
	add	r0, r1, #0
	bl	BattleSetup_ConfigureTrainerBattle
	ldr	r0, .L337+0xc
	bl	ScriptContext_SetupScript
	bl	LockPlayerFieldControls
	pop	{r4}
	pop	{r0}
	bx	r0
.L338:
	.align	2, 0
.L337:
	.word	gSelectedObjectEvent
	.word	gSpecialVar_LastTalked
	.word	gObjectEvents
	.word	EventScript_DoTrainerBattleFromApproach
.Lfe38:
	.size	 ConfigureAndSetUpOneTrainerBattle,.Lfe38-ConfigureAndSetUpOneTrainerBattle
	.align	2, 0
	.globl	GetTrainerFlagFromScriptPointer
	.type	 GetTrainerFlagFromScriptPointer,function
	.thumb_func
GetTrainerFlagFromScriptPointer:
	push	{lr}
	add	r0, r0, #0x2
	bl	TrainerBattleLoadArg16
	lsl	r0, r0, #0x10
	ldr	r1, .L340
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L341:
	.align	2, 0
.L340:
	.word	0x5030000
.Lfe39:
	.size	 GetTrainerFlagFromScriptPointer,.Lfe39-GetTrainerFlagFromScriptPointer
	.align	2, 0
	.globl	SetUpTrainerMovement
	.type	 SetUpTrainerMovement,function
	.thumb_func
SetUpTrainerMovement:
	push	{r4, lr}
	ldr	r0, .L343
	ldrb	r0, [r0]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L343+0x4
	add	r4, r4, r0
	ldrb	r0, [r4, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	GetTrainerFacingDirectionMovementType
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	SetTrainerMovementType
	pop	{r4}
	pop	{r0}
	bx	r0
.L344:
	.align	2, 0
.L343:
	.word	gSelectedObjectEvent
	.word	gObjectEvents
.Lfe40:
	.size	 SetUpTrainerMovement,.Lfe40-SetUpTrainerMovement
	.align	2, 0
	.globl	GetTrainerBattleMode
	.type	 GetTrainerBattleMode,function
	.thumb_func
GetTrainerBattleMode:
	ldr	r0, .L346
	ldrb	r0, [r0]
	bx	lr
.L347:
	.align	2, 0
.L346:
	.word	sTrainerBattleMode
.Lfe41:
	.size	 GetTrainerBattleMode,.Lfe41-GetTrainerBattleMode
	.align	2, 0
	.globl	GetRivalBattleFlags
	.type	 GetRivalBattleFlags,function
	.thumb_func
GetRivalBattleFlags:
	ldr	r0, .L349
	ldrh	r0, [r0]
	bx	lr
.L350:
	.align	2, 0
.L349:
	.word	sRivalBattleFlags
.Lfe42:
	.size	 GetRivalBattleFlags,.Lfe42-GetRivalBattleFlags
	.align	2, 0
	.globl	Script_HasTrainerBeenFought
	.type	 Script_HasTrainerBeenFought,function
	.thumb_func
Script_HasTrainerBeenFought:
	push	{lr}
	bl	GetTrainerAFlag
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe43:
	.size	 Script_HasTrainerBeenFought,.Lfe43-Script_HasTrainerBeenFought
	.align	2, 0
	.globl	SetBattledTrainerFlag
	.type	 SetBattledTrainerFlag,function
	.thumb_func
SetBattledTrainerFlag:
	push	{lr}
	bl	GetTrainerAFlag
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagSet
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 SetBattledTrainerFlag,.Lfe44-SetBattledTrainerFlag
	.align	2, 0
	.type	 SetBattledTrainerFlag2,function
	.thumb_func
SetBattledTrainerFlag2:
	push	{lr}
	bl	GetTrainerAFlag
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagSet
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 SetBattledTrainerFlag2,.Lfe45-SetBattledTrainerFlag2
	.align	2, 0
	.globl	HasTrainerBeenFought
	.type	 HasTrainerBeenFought,function
	.thumb_func
HasTrainerBeenFought:
	push	{lr}
	lsl	r0, r0, #0x10
	ldr	r1, .L355
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L356:
	.align	2, 0
.L355:
	.word	0x5030000
.Lfe46:
	.size	 HasTrainerBeenFought,.Lfe46-HasTrainerBeenFought
	.align	2, 0
	.globl	SetTrainerFlag
	.type	 SetTrainerFlag,function
	.thumb_func
SetTrainerFlag:
	push	{lr}
	lsl	r0, r0, #0x10
	ldr	r1, .L358
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	FlagSet
	pop	{r0}
	bx	r0
.L359:
	.align	2, 0
.L358:
	.word	0x5030000
.Lfe47:
	.size	 SetTrainerFlag,.Lfe47-SetTrainerFlag
	.align	2, 0
	.globl	ClearTrainerFlag
	.type	 ClearTrainerFlag,function
	.thumb_func
ClearTrainerFlag:
	push	{lr}
	lsl	r0, r0, #0x10
	ldr	r1, .L361
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	FlagClear
	pop	{r0}
	bx	r0
.L362:
	.align	2, 0
.L361:
	.word	0x5030000
.Lfe48:
	.size	 ClearTrainerFlag,.Lfe48-ClearTrainerFlag
	.align	2, 0
	.globl	StartTrainerBattle
	.type	 StartTrainerBattle,function
	.thumb_func
StartTrainerBattle:
	push	{r4, lr}
	ldr	r4, .L365
	mov	r0, #0x8
	str	r0, [r4]
	bl	GetTrainerBattleMode
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x9
	bne	.L364	@cond_branch
	bl	GetRivalBattleFlags
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L364	@cond_branch
	ldr	r0, [r4]
	mov	r1, #0x10
	orr	r0, r0, r1
	str	r0, [r4]
.L364:
	ldr	r1, .L365+0x4
	ldr	r0, .L365+0x8
	str	r0, [r1, #0x8]
	bl	DoTrainerBattle
	bl	ScriptContext_Stop
	pop	{r4}
	pop	{r0}
	bx	r0
.L366:
	.align	2, 0
.L365:
	.word	gBattleTypeFlags
	.word	gMain
	.word	CB2_EndTrainerBattle
.Lfe49:
	.size	 StartTrainerBattle,.Lfe49-StartTrainerBattle
	.align	2, 0
	.type	 CB2_EndTrainerBattle,function
	.thumb_func
CB2_EndTrainerBattle:
	push	{lr}
	ldr	r0, .L380
	ldrh	r0, [r0]
	cmp	r0, #0x9
	bne	.L368	@cond_branch
	ldr	r0, .L380+0x4
	ldrb	r0, [r0]
	bl	IsPlayerDefeated
	add	r1, r0, #0
	cmp	r1, #0x1
	bne	.L369	@cond_branch
	ldr	r0, .L380+0x8
	strh	r1, [r0]
	ldr	r0, .L380+0xc
	ldrh	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L378	@cond_branch
	bl	HealPlayerParty
	b	.L379
.L381:
	.align	2, 0
.L380:
	.word	sTrainerBattleMode
	.word	gBattleOutcome
	.word	gSpecialVar_Result
	.word	sRivalBattleFlags
.L369:
	ldr	r0, .L382
	mov	r1, #0x0
	strh	r1, [r0]
.L379:
	ldr	r0, .L382+0x4
	bl	SetMainCallback2
	bl	SetBattledTrainerFlag
	bl	QuestLogEvents_HandleEndTrainerBattle
	b	.L367
.L383:
	.align	2, 0
.L382:
	.word	gSpecialVar_Result
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.L368:
	ldr	r0, .L384
	ldrh	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	bne	.L374	@cond_branch
	ldr	r0, .L384+0x4
	bl	SetMainCallback2
	b	.L367
.L385:
	.align	2, 0
.L384:
	.word	gTrainerBattleOpponent_A
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.L374:
	ldr	r0, .L386
	ldrb	r0, [r0]
	bl	IsPlayerDefeated
	cmp	r0, #0x1
	bne	.L376	@cond_branch
.L378:
	ldr	r0, .L386+0x4
	bl	SetMainCallback2
	b	.L367
.L387:
	.align	2, 0
.L386:
	.word	gBattleOutcome
	.word	CB2_WhiteOut
.L376:
	ldr	r0, .L388
	bl	SetMainCallback2
	bl	SetBattledTrainerFlag
	bl	QuestLogEvents_HandleEndTrainerBattle
.L367:
	pop	{r0}
	bx	r0
.L389:
	.align	2, 0
.L388:
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe50:
	.size	 CB2_EndTrainerBattle,.Lfe50-CB2_EndTrainerBattle
	.align	2, 0
	.type	 CB2_EndRematchBattle,function
	.thumb_func
CB2_EndRematchBattle:
	push	{lr}
	ldr	r0, .L395
	ldrh	r1, [r0]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	bne	.L391	@cond_branch
	ldr	r0, .L395+0x4
	bl	SetMainCallback2
	b	.L392
.L396:
	.align	2, 0
.L395:
	.word	gTrainerBattleOpponent_A
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.L391:
	ldr	r0, .L397
	ldrb	r0, [r0]
	bl	IsPlayerDefeated
	cmp	r0, #0x1
	bne	.L393	@cond_branch
	ldr	r0, .L397+0x4
	bl	SetMainCallback2
	b	.L392
.L398:
	.align	2, 0
.L397:
	.word	gBattleOutcome
	.word	CB2_WhiteOut
.L393:
	ldr	r0, .L399
	bl	SetMainCallback2
	bl	SetBattledTrainerFlag
	bl	ClearRematchStateOfLastTalked
	bl	ResetDeferredLinkEvent
.L392:
	pop	{r0}
	bx	r0
.L400:
	.align	2, 0
.L399:
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe51:
	.size	 CB2_EndRematchBattle,.Lfe51-CB2_EndRematchBattle
	.align	2, 0
	.globl	StartRematchBattle
	.type	 StartRematchBattle,function
	.thumb_func
StartRematchBattle:
	push	{lr}
	ldr	r1, .L402
	mov	r0, #0x8
	str	r0, [r1]
	ldr	r1, .L402+0x4
	ldr	r0, .L402+0x8
	str	r0, [r1, #0x8]
	bl	DoTrainerBattle
	bl	ScriptContext_Stop
	pop	{r0}
	bx	r0
.L403:
	.align	2, 0
.L402:
	.word	gBattleTypeFlags
	.word	gMain
	.word	CB2_EndRematchBattle
.Lfe52:
	.size	 StartRematchBattle,.Lfe52-StartRematchBattle
	.align	2, 0
	.globl	ShowTrainerIntroSpeech
	.type	 ShowTrainerIntroSpeech,function
	.thumb_func
ShowTrainerIntroSpeech:
	push	{lr}
	bl	GetIntroSpeechOfApproachingTrainer
	bl	ShowFieldMessage
	pop	{r0}
	bx	r0
.Lfe53:
	.size	 ShowTrainerIntroSpeech,.Lfe53-ShowTrainerIntroSpeech
	.align	2, 0
	.globl	BattleSetup_GetScriptAddrAfterBattle
	.type	 BattleSetup_GetScriptAddrAfterBattle,function
	.thumb_func
BattleSetup_GetScriptAddrAfterBattle:
	push	{lr}
	ldr	r0, .L409
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L408	@cond_branch
	ldr	r0, .L409+0x4
.L408:
	pop	{r1}
	bx	r1
.L410:
	.align	2, 0
.L409:
	.word	sTrainerBattleEndScript
	.word	EventScript_TestSignpostMsg
.Lfe54:
	.size	 BattleSetup_GetScriptAddrAfterBattle,.Lfe54-BattleSetup_GetScriptAddrAfterBattle
	.align	2, 0
	.globl	BattleSetup_GetTrainerPostBattleScript
	.type	 BattleSetup_GetTrainerPostBattleScript,function
	.thumb_func
BattleSetup_GetTrainerPostBattleScript:
	push	{lr}
	ldr	r0, .L415
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L414	@cond_branch
	ldr	r0, .L415+0x4
.L414:
	pop	{r1}
	bx	r1
.L416:
	.align	2, 0
.L415:
	.word	sTrainerABattleScriptRetAddr
	.word	EventScript_TestSignpostMsg
.Lfe55:
	.size	 BattleSetup_GetTrainerPostBattleScript,.Lfe55-BattleSetup_GetTrainerPostBattleScript
	.align	2, 0
	.globl	ShowTrainerCantBattleSpeech
	.type	 ShowTrainerCantBattleSpeech,function
	.thumb_func
ShowTrainerCantBattleSpeech:
	push	{lr}
	bl	GetTrainerCantBattleSpeech
	bl	ShowFieldMessage
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 ShowTrainerCantBattleSpeech,.Lfe56-ShowTrainerCantBattleSpeech
	.align	2, 0
	.globl	PlayTrainerEncounterMusic
	.type	 PlayTrainerEncounterMusic,function
	.thumb_func
PlayTrainerEncounterMusic:
	push	{lr}
	ldr	r0, .L434
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L419	@cond_branch
	ldr	r0, .L434+0x4
	ldrh	r0, [r0]
	cmp	r0, #0x1
	beq	.L419	@cond_branch
	cmp	r0, #0x8
	beq	.L419	@cond_branch
	ldr	r0, .L434+0x8
	ldrh	r0, [r0]
	bl	GetTrainerEncounterMusicId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xd
	bhi	.L432	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L434+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L435:
	.align	2, 0
.L434:
	.word	gQuestLogState
	.word	sTrainerBattleMode
	.word	gTrainerBattleOpponent_A
	.word	.L433
	.align	2, 0
	.align	2, 0
.L433:
	.word	.L431
	.word	.L423
	.word	.L423
	.word	.L432
	.word	.L431
	.word	.L431
	.word	.L432
	.word	.L432
	.word	.L431
	.word	.L423
	.word	.L431
	.word	.L431
	.word	.L431
	.word	.L431
.L423:
	mov	r0, #0x8e
	lsl	r0, r0, #0x1
	b	.L420
.L431:
	ldr	r0, .L436
	b	.L420
.L437:
	.align	2, 0
.L436:
	.word	0x11d
.L432:
	ldr	r0, .L438
.L420:
	bl	PlayNewMapMusic
.L419:
	pop	{r0}
	bx	r0
.L439:
	.align	2, 0
.L438:
	.word	0x11b
.Lfe57:
	.size	 PlayTrainerEncounterMusic,.Lfe57-PlayTrainerEncounterMusic
	.align	2, 0
	.type	 ReturnEmptyStringIfNull,function
	.thumb_func
ReturnEmptyStringIfNull:
	push	{lr}
	cmp	r0, #0
	bne	.L443	@cond_branch
	ldr	r0, .L444
.L443:
	pop	{r1}
	bx	r1
.L445:
	.align	2, 0
.L444:
	.word	gString_Dummy
.Lfe58:
	.size	 ReturnEmptyStringIfNull,.Lfe58-ReturnEmptyStringIfNull
	.align	2, 0
	.type	 GetIntroSpeechOfApproachingTrainer,function
	.thumb_func
GetIntroSpeechOfApproachingTrainer:
	push	{lr}
	ldr	r0, .L447
	ldr	r0, [r0]
	bl	ReturnEmptyStringIfNull
	pop	{r1}
	bx	r1
.L448:
	.align	2, 0
.L447:
	.word	sTrainerAIntroSpeech
.Lfe59:
	.size	 GetIntroSpeechOfApproachingTrainer,.Lfe59-GetIntroSpeechOfApproachingTrainer
	.align	2, 0
	.globl	GetTrainerALoseText
	.type	 GetTrainerALoseText,function
	.thumb_func
GetTrainerALoseText:
	push	{r4, lr}
	ldr	r0, .L450
	ldr	r0, [r0]
	ldr	r4, .L450+0x4
	bl	ReturnEmptyStringIfNull
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L451:
	.align	2, 0
.L450:
	.word	sTrainerADefeatSpeech
	.word	gStringVar4
.Lfe60:
	.size	 GetTrainerALoseText,.Lfe60-GetTrainerALoseText
	.align	2, 0
	.globl	GetTrainerWonSpeech
	.type	 GetTrainerWonSpeech,function
	.thumb_func
GetTrainerWonSpeech:
	push	{r4, lr}
	ldr	r4, .L453
	ldr	r0, .L453+0x4
	ldr	r0, [r0]
	bl	ReturnEmptyStringIfNull
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L454:
	.align	2, 0
.L453:
	.word	gStringVar4
	.word	sTrainerVictorySpeech
.Lfe61:
	.size	 GetTrainerWonSpeech,.Lfe61-GetTrainerWonSpeech
	.align	2, 0
	.type	 GetTrainerCantBattleSpeech,function
	.thumb_func
GetTrainerCantBattleSpeech:
	push	{lr}
	ldr	r0, .L456
	ldr	r0, [r0]
	bl	ReturnEmptyStringIfNull
	pop	{r1}
	bx	r1
.L457:
	.align	2, 0
.L456:
	.word	sTrainerCannotBattleSpeech
.Lfe62:
	.size	 GetTrainerCantBattleSpeech,.Lfe62-GetTrainerCantBattleSpeech
.text
	.align	2, 0 @ Don't pad with nop

