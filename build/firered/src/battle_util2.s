@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	AllocateBattleResources
	.type	 AllocateBattleResources,function
	.thumb_func
AllocateBattleResources:
	push	{r4, r5, lr}
	ldr	r4, .L10
	ldr	r0, [r4]
	mov	r1, #0x80
	lsl	r1, r1, #0xc
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L3	@cond_branch
	bl	InitTrainerTowerBattleStruct
.L3:
	ldr	r0, [r4]
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L4	@cond_branch
	ldr	r5, .L10+0x4
	mov	r4, #0x3
.L8:
	mov	r0, #0x8
	bl	AllocZeroed
	stmia	r5!, {r0}
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L8	@cond_branch
.L4:
	ldr	r4, .L10+0x8
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r4, .L10+0xc
	mov	r0, #0x20
	bl	AllocZeroed
	str	r0, [r4]
	mov	r0, #0xa0
	bl	AllocZeroed
	ldr	r1, [r4]
	str	r0, [r1]
	mov	r0, #0x10
	bl	AllocZeroed
	ldr	r1, [r4]
	str	r0, [r1, #0x4]
	mov	r0, #0x24
	bl	AllocZeroed
	ldr	r1, [r4]
	str	r0, [r1, #0x8]
	mov	r0, #0x24
	bl	AllocZeroed
	ldr	r1, [r4]
	str	r0, [r1, #0xc]
	mov	r0, #0xc
	bl	AllocZeroed
	ldr	r1, [r4]
	str	r0, [r1, #0x10]
	mov	r0, #0x1c
	bl	AllocZeroed
	ldr	r1, [r4]
	str	r0, [r1, #0x14]
	mov	r0, #0x30
	bl	AllocZeroed
	ldr	r1, [r4]
	str	r0, [r1, #0x18]
	mov	r0, #0x24
	bl	AllocZeroed
	ldr	r1, [r4]
	str	r0, [r1, #0x1c]
	ldr	r4, .L10+0x10
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	add	r0, r5, #0
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r4, .L10+0x14
	add	r0, r5, #0
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r4, .L10+0x18
	mov	r0, #0x80
	lsl	r0, r0, #0x6
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r4, .L10+0x1c
	add	r0, r5, #0
	bl	AllocZeroed
	add	r1, r0, #0
	str	r1, [r4]
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L11:
	.align	2, 0
.L10:
	.word	gBattleTypeFlags
	.word	gPokedudeBattlerStates
	.word	gBattleStruct
	.word	gBattleResources
	.word	gLinkBattleSendBuffer
	.word	gLinkBattleRecvBuffer
	.word	gBattleAnimBgTileBuffer
	.word	gBattleAnimBgTilemapBuffer
.Lfe1:
	.size	 AllocateBattleResources,.Lfe1-AllocateBattleResources
	.align	2, 0
	.globl	FreeBattleResources
	.type	 FreeBattleResources,function
	.thumb_func
FreeBattleResources:
	push	{r4, r5, r6, lr}
	ldr	r4, .L21
	ldr	r0, [r4]
	mov	r1, #0x80
	lsl	r1, r1, #0xc
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L13	@cond_branch
	bl	FreeTrainerTowerBattleStruct
.L13:
	ldr	r0, [r4]
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L14	@cond_branch
	ldr	r5, .L21+0x4
	mov	r6, #0x0
	mov	r4, #0x3
.L18:
	ldr	r0, [r5]
	bl	Free
	stmia	r5!, {r6}
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L18	@cond_branch
.L14:
	ldr	r6, .L21+0x8
	ldr	r0, [r6]
	cmp	r0, #0
	beq	.L20	@cond_branch
	ldr	r4, .L21+0xc
	ldr	r0, [r4]
	bl	Free
	mov	r5, #0x0
	str	r5, [r4]
	ldr	r0, [r6]
	ldr	r0, [r0]
	bl	Free
	ldr	r0, [r6]
	str	r5, [r0]
	ldr	r0, [r0, #0x4]
	bl	Free
	ldr	r0, [r6]
	str	r5, [r0, #0x4]
	ldr	r0, [r0, #0x8]
	bl	Free
	ldr	r0, [r6]
	str	r5, [r0, #0x8]
	ldr	r0, [r0, #0xc]
	bl	Free
	ldr	r0, [r6]
	str	r5, [r0, #0xc]
	ldr	r0, [r0, #0x10]
	bl	Free
	ldr	r0, [r6]
	str	r5, [r0, #0x10]
	ldr	r0, [r0, #0x14]
	bl	Free
	ldr	r0, [r6]
	str	r5, [r0, #0x14]
	ldr	r0, [r0, #0x18]
	bl	Free
	ldr	r0, [r6]
	str	r5, [r0, #0x18]
	ldr	r0, [r0, #0x1c]
	bl	Free
	ldr	r0, [r6]
	str	r5, [r0, #0x1c]
	bl	Free
	str	r5, [r6]
	ldr	r4, .L21+0x10
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L21+0x14
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L21+0x18
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
	ldr	r4, .L21+0x1c
	ldr	r0, [r4]
	bl	Free
	str	r5, [r4]
.L20:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L22:
	.align	2, 0
.L21:
	.word	gBattleTypeFlags
	.word	gPokedudeBattlerStates
	.word	gBattleResources
	.word	gBattleStruct
	.word	gLinkBattleSendBuffer
	.word	gLinkBattleRecvBuffer
	.word	gBattleAnimBgTileBuffer
	.word	gBattleAnimBgTilemapBuffer
.Lfe2:
	.size	 FreeBattleResources,.Lfe2-FreeBattleResources
	.align	2, 0
	.globl	AdjustFriendshipOnBattleFaint
	.type	 AdjustFriendshipOnBattleFaint,function
	.thumb_func
AdjustFriendshipOnBattleFaint:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L31
	ldr	r0, [r0]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L24	@cond_branch
	mov	r0, #0x1
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x3
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r2, .L31+0x4
	mov	r0, #0x58
	mov	r1, r3
	mul	r1, r1, r0
	add	r1, r1, r2
	add	r1, r1, #0x2a
	mul	r0, r0, r4
	add	r0, r0, r2
	add	r0, r0, #0x2a
	ldrb	r1, [r1]
	ldrb	r0, [r0]
	cmp	r1, r0
	bls	.L26	@cond_branch
	add	r4, r3, #0
	b	.L26
.L32:
	.align	2, 0
.L31:
	.word	gBattleTypeFlags
	.word	gBattleMons
.L24:
	mov	r0, #0x1
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L26:
	ldr	r2, .L33
	mov	r1, #0x58
	mov	r0, r4
	mul	r0, r0, r1
	add	r0, r0, r2
	add	r3, r0, #0
	add	r3, r3, #0x2a
	mov	r0, r5
	mul	r0, r0, r1
	add	r0, r0, r2
	add	r1, r0, #0
	add	r1, r1, #0x2a
	ldrb	r0, [r3]
	ldrb	r2, [r1]
	cmp	r0, r2
	bls	.L27	@cond_branch
	ldrb	r1, [r1]
	sub	r0, r0, r1
	cmp	r0, #0x1d
	ble	.L28	@cond_branch
	ldr	r1, .L33+0x4
	lsl	r0, r5, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L33+0x8
	add	r0, r0, r1
	mov	r1, #0x9
	bl	AdjustFriendship
	b	.L30
.L34:
	.align	2, 0
.L33:
	.word	gBattleMons
	.word	gBattlerPartyIndexes
	.word	gPlayerParty
.L28:
	ldr	r1, .L35
	lsl	r0, r5, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L35+0x4
	add	r0, r0, r1
	mov	r1, #0x7
	bl	AdjustFriendship
	b	.L30
.L36:
	.align	2, 0
.L35:
	.word	gBattlerPartyIndexes
	.word	gPlayerParty
.L27:
	ldr	r1, .L37
	lsl	r0, r5, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L37+0x4
	add	r0, r0, r1
	mov	r1, #0x7
	bl	AdjustFriendship
.L30:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L38:
	.align	2, 0
.L37:
	.word	gBattlerPartyIndexes
	.word	gPlayerParty
.Lfe3:
	.size	 AdjustFriendshipOnBattleFaint,.Lfe3-AdjustFriendshipOnBattleFaint
.text
	.align	2, 0 @ Don't pad with nop

