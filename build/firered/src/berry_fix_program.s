@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sBerryFixGraphics,object
sBerryFixGraphics:
	.word	gBerryFixGameboy_Gfx
	.word	gBerryFixGameboy_Tilemap
	.word	gBerryFixGameboy_Pal
	.word	gBerryFixGameboyLogo_Gfx
	.word	gBerryFixGameboyLogo_Tilemap
	.word	gBerryFixGameboyLogo_Pal
	.word	gBerryFixGbaTransfer_Gfx
	.word	gBerryFixGbaTransfer_Tilemap
	.word	gBerryFixGbaTransfer_Pal
	.word	gBerryFixGbaTransferHighlight_Gfx
	.word	gBerryFixGbaTransferHighlight_Tilemap
	.word	gBerryFixGbaTransferHighlight_Pal
	.word	gBerryFixGbaTransferError_Gfx
	.word	gBerryFixGbaTransferError_Tilemap
	.word	gBerryFixGbaTransferError_Pal
	.word	gBerryFixWindow_Gfx
	.word	gBerryFixWindow_Tilemap
	.word	gBerryFixWindow_Pal
	.size	 sBerryFixGraphics,72
.text
	.align	2, 0
	.type	 SetScene,function
	.thumb_func
SetScene:
	push	{r4, r5, r6, lr}
	mov	r6, #0x80
	lsl	r6, r6, #0x13
	mov	r2, #0x0
	strh	r2, [r6]
	ldr	r1, .L3
	strh	r2, [r1]
	add	r1, r1, #0x2
	strh	r2, [r1]
	add	r1, r1, #0x3e
	strh	r2, [r1]
	ldr	r5, .L3+0x4
	lsl	r4, r0, #0x1
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	add	r0, r4, r5
	ldr	r0, [r0]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	bl	LZ77UnCompVram
	add	r0, r5, #0x4
	add	r0, r4, r0
	ldr	r0, [r0]
	ldr	r1, .L3+0x8
	bl	LZ77UnCompVram
	add	r5, r5, #0x8
	add	r4, r4, r5
	ldr	r0, [r4]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	mov	r4, #0x80
	lsl	r4, r4, #0x1
	add	r2, r4, #0
	bl	CpuSet
	ldr	r1, .L3+0xc
	mov	r2, #0xf8
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	strh	r0, [r1]
	strh	r4, [r6]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	0x4000010
	.word	sBerryFixGraphics
	.word	0x600f800
	.word	0x4000008
.Lfe1:
	.size	 SetScene,.Lfe1-SetScene
	.align	2, 0
	.globl	CB2_InitBerryFixProgram
	.type	 CB2_InitBerryFixProgram,function
	.thumb_func
CB2_InitBerryFixProgram:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L6
	bl	DisableInterrupts
	mov	r0, #0x1
	bl	EnableInterrupts
	bl	m4aSoundVSyncOff
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r4, #0x0
	str	r4, [sp]
	ldr	r0, .L6+0x4
	mov	r1, sp
	str	r1, [r0]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	str	r1, [r0, #0x4]
	ldr	r1, .L6+0x8
	str	r1, [r0, #0x8]
	ldr	r1, [r0, #0x8]
	str	r4, [sp]
	mov	r1, sp
	str	r1, [r0]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	str	r1, [r0, #0x4]
	ldr	r1, .L6+0xc
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	bl	ResetSpriteData
	bl	ResetTasks
	bl	ScanlineEffect_Stop
	ldr	r0, .L6+0x10
	strb	r4, [r0]
	ldr	r0, .L6+0x14
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L6+0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0x8]
	ldr	r0, .L6+0x1c
	bl	SetMainCallback2
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	0xffff
	.word	0x40000d4
	.word	-0x7affa000
	.word	-0x7affff00
	.word	gHelpSystemEnabled
	.word	Task_BerryFixMain
	.word	gTasks
	.word	CB2_BerryFix
.Lfe2:
	.size	 CB2_InitBerryFixProgram,.Lfe2-CB2_InitBerryFixProgram
	.align	2, 0
	.type	 CB2_BerryFix,function
	.thumb_func
CB2_BerryFix:
	push	{lr}
	bl	RunTasks
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 CB2_BerryFix,.Lfe3-CB2_BerryFix
	.align	2, 0
	.type	 Task_BerryFixMain,function
	.thumb_func
Task_BerryFixMain:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r1, .L36
	add	r5, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0xa
	bls	.LCB175
	b	.L10	@long jump
.LCB175:
	lsl	r0, r0, #0x2
	ldr	r1, .L36+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L37:
	.align	2, 0
.L36:
	.word	gTasks+0x8
	.word	.L32
	.align	2, 0
	.align	2, 0
.L32:
	.word	.L11
	.word	.L12
	.word	.L14
	.word	.L10
	.word	.L16
	.word	.L17
	.word	.L22
	.word	.L26
	.word	.L27
	.word	.L29
	.word	.L30
.L11:
	mov	r0, #0x5
	bl	SetScene
	mov	r0, #0x1
	b	.L34
.L12:
	ldr	r0, .L38
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB211
	b	.L10	@long jump
.LCB211:
	mov	r0, #0x0
	bl	SetScene
	mov	r0, #0x2
	b	.L34
.L39:
	.align	2, 0
.L38:
	.word	gMain
.L14:
	ldr	r0, .L40
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB235
	b	.L10	@long jump
.LCB235:
	mov	r0, #0x1
	bl	SetScene
	mov	r0, #0x4
	b	.L34
.L41:
	.align	2, 0
.L40:
	.word	gMain
.L16:
	ldr	r0, .L42
	ldr	r1, .L42+0x4
	str	r1, [r0]
	ldr	r2, .L42+0x8
	ldr	r0, .L42+0xc
	sub	r0, r0, r1
	str	r0, [r2]
	ldr	r0, .L42+0x10
	str	r1, [r0, #0x28]
	add	r1, r0, #0
	add	r1, r1, #0x4b
	mov	r4, #0x0
	strb	r4, [r1]
	bl	MultiBootInit
	strh	r4, [r5, #0x2]
	mov	r0, #0x5
	b	.L34
.L43:
	.align	2, 0
.L42:
	.word	gMultibootStart
	.word	gMultiBootProgram_BerryGlitchFix_Start
	.word	gMultibootSize
	.word	gMultiBootProgram_BerryGlitchFix_End
	.word	gMultibootParam
.L17:
	ldr	r0, .L44
	ldrb	r6, [r0, #0x18]
	add	r4, r0, #0
	cmp	r6, #0
	bne	.L18	@cond_branch
	ldr	r0, [r4, #0x1c]
	ldr	r1, .L44+0x4
	and	r0, r0, r1
	cmp	r0, r1
	bne	.L18	@cond_branch
	ldrh	r0, [r5, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xb4
	ble	.L35	@cond_branch
	mov	r0, #0x2
	bl	SetScene
	ldr	r0, .L44+0x8
	ldr	r1, [r0]
	add	r1, r1, #0xc0
	ldr	r0, .L44+0xc
	ldr	r2, [r0]
	sub	r2, r2, #0xc0
	mov	r0, #0x1
	str	r0, [sp]
	add	r0, r4, #0
	mov	r3, #0x4
	bl	MultiBootStartMaster
	strh	r6, [r5, #0x2]
	mov	r0, #0x6
	b	.L34
.L45:
	.align	2, 0
.L44:
	.word	gMultibootParam
	.word	0x20200
	.word	gMultibootStart
	.word	gMultibootSize
.L18:
	mov	r0, #0x0
	strh	r0, [r5, #0x2]
.L35:
	add	r0, r4, #0
	bl	MultiBootMain
	ldr	r1, .L46
	str	r0, [r1]
	b	.L10
.L47:
	.align	2, 0
.L46:
	.word	gMultibootStatus
.L22:
	ldr	r4, .L48
	add	r0, r4, #0
	bl	MultiBootMain
	ldr	r1, .L48+0x4
	str	r0, [r1]
	add	r0, r4, #0
	bl	MultiBootCheckComplete
	cmp	r0, #0
	beq	.L23	@cond_branch
	mov	r0, #0x3
	bl	SetScene
	mov	r0, #0x7
	b	.L34
.L49:
	.align	2, 0
.L48:
	.word	gMultibootParam
	.word	gMultibootStatus
.L23:
	ldrb	r1, [r4, #0x1e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L10	@cond_branch
	mov	r0, #0x9
	b	.L34
.L26:
	mov	r0, #0x8
	b	.L34
.L27:
	ldr	r0, .L50
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L10	@cond_branch
	add	r0, r2, #0
	bl	DestroyTask
	bl	DoSoftReset
	b	.L10
.L51:
	.align	2, 0
.L50:
	.word	gMain
.L29:
	mov	r0, #0x4
	bl	SetScene
	mov	r0, #0xa
	b	.L34
.L30:
	ldr	r0, .L52
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L10	@cond_branch
	mov	r0, #0x0
.L34:
	strh	r0, [r5]
.L10:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L53:
	.align	2, 0
.L52:
	.word	gMain
.Lfe4:
	.size	 Task_BerryFixMain,.Lfe4-Task_BerryFixMain
	.comm	gMultibootStart, 4	@ 4
	.comm	gMultibootStatus, 4	@ 4
	.comm	gMultibootSize, 4	@ 4
	.comm	gMultibootParam, 76	@ 76
.text
	.align	2, 0 @ Don't pad with nop

