@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.type	 CableCarUtil_FillWrapped,function
	.thumb_func
CableCarUtil_FillWrapped:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	sl, r0
	ldr	r0, [sp, #0x24]
	ldr	r4, [sp, #0x28]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r9, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp]
	lsl	r3, r3, #0x18
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r8, r4
	mov	r0, #0x0
	lsr	r4, r3, #0x18
	cmp	r0, r8
	bcs	.L4	@cond_branch
.L6:
	ldr	r2, [sp]
	mov	r3, #0x0
	add	r6, r4, #0x1
	add	r0, r0, #0x1
	mov	ip, r0
	cmp	r3, r7
	bcs	.L8	@cond_branch
	lsl	r5, r4, #0x6
.L10:
	lsl	r0, r2, #0x1
	add	r0, r0, r5
	add	r0, r0, sl
	mov	r1, r9
	strh	r1, [r0]
	add	r1, r2, #0x1
	add	r0, r1, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r1, r0
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, r7
	bcc	.L10	@cond_branch
.L8:
	add	r0, r6, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r6, r0
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r1, ip
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, r8
	bcc	.L6	@cond_branch
.L4:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 CableCarUtil_FillWrapped,.Lfe1-CableCarUtil_FillWrapped
	.align	2, 0
	.type	 CableCarUtil_CopyWrapped,function
	.thumb_func
CableCarUtil_CopyWrapped:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	sl, r0
	ldr	r0, [sp, #0x24]
	ldr	r4, [sp, #0x28]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp]
	lsl	r3, r3, #0x18
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	ip, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r9, r4
	mov	r0, #0x0
	add	r5, r1, #0
	lsr	r4, r3, #0x18
	cmp	r0, r9
	bcs	.L17	@cond_branch
.L19:
	ldr	r2, [sp]
	mov	r3, #0x0
	add	r7, r4, #0x1
	add	r0, r0, #0x1
	mov	r8, r0
	cmp	r3, ip
	bcs	.L21	@cond_branch
	lsl	r6, r4, #0x6
.L23:
	lsl	r0, r2, #0x1
	add	r0, r0, r6
	add	r0, r0, sl
	ldrh	r1, [r5]
	strh	r1, [r0]
	add	r5, r5, #0x2
	add	r1, r2, #0x1
	add	r0, r1, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r1, r0
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, ip
	bcc	.L23	@cond_branch
.L21:
	add	r0, r7, #0
	asr	r0, r0, #0x5
	lsl	r0, r0, #0x5
	sub	r0, r7, r0
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r1, r8
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, r9
	bcc	.L19	@cond_branch
.L17:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 CableCarUtil_CopyWrapped,.Lfe2-CableCarUtil_CopyWrapped
.text
	.align	2, 0 @ Don't pad with nop

