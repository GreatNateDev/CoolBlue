@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sWindowTemplate_LinkPlayerCount,object
	.size	 sWindowTemplate_LinkPlayerCount,8
sWindowTemplate_LinkPlayerCount:
	.byte	0x0
	.byte	0x10
	.byte	0xb
	.byte	0xb
	.byte	0x2
	.byte	0xf
	.short	0x125
	.align	2, 0
	.type	 sTrainerCardColorNames,object
sTrainerCardColorNames:
	.word	gText_BronzeCard
	.word	gText_CopperCard
	.word	gText_SilverCard
	.word	gText_GoldCard
	.size	 sTrainerCardColorNames,16
.text
	.align	2, 0
	.type	 CreateLinkupTask,function
	.thumb_func
CreateLinkupTask:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r4, .L6
	add	r0, r4, #0
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	bne	.L5	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L6+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r6, [r1, #0xa]
	strh	r5, [r1, #0xc]
.L5:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	Task_LinkupStart
	.word	gTasks
.Lfe1:
	.size	 CreateLinkupTask,.Lfe1-CreateLinkupTask
	.align	2, 0
	.type	 PrintNumPlayersInLink,function
	.thumb_func
PrintNumPlayersInLink:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L9
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	SetStdWindowBorderStyle
	ldr	r5, .L9+0x4
	ldr	r1, .L9+0x8
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	mov	r1, #0x0
	str	r1, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	add	r0, r4, #0
	mov	r1, #0x2
	add	r2, r5, #0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_NumPlayerLink
.Lfe2:
	.size	 PrintNumPlayersInLink,.Lfe2-PrintNumPlayersInLink
	.align	2, 0
	.type	 ClearLinkPlayerCountWindow,function
	.thumb_func
ClearLinkPlayerCountWindow:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 ClearLinkPlayerCountWindow,.Lfe3-ClearLinkPlayerCountWindow
	.align	2, 0
	.type	 UpdateLinkPlayerCountDisplay,function
	.thumb_func
UpdateLinkPlayerCountDisplay:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L16
	add	r4, r1, r0
	mov	r1, #0x6
	ldrsh	r0, [r4, r1]
	cmp	r5, r0
	beq	.L13	@cond_branch
	cmp	r5, #0x1
	bhi	.L14	@cond_branch
	ldrh	r0, [r4, #0xa]
	bl	ClearLinkPlayerCountWindow
	b	.L15
.L17:
	.align	2, 0
.L16:
	.word	gTasks+0x8
.L14:
	ldrh	r0, [r4, #0xa]
	add	r1, r5, #0
	bl	PrintNumPlayersInLink
.L15:
	strh	r5, [r4, #0x6]
.L13:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 UpdateLinkPlayerCountDisplay,.Lfe4-UpdateLinkPlayerCountDisplay
	.align	2, 0
	.type	 ExchangeDataAndGetLinkupStatus,function
	.thumb_func
ExchangeDataAndGetLinkupStatus:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	GetLinkPlayerDataExchangeStatusTimed
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x5
	bhi	.L25	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L28
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L29:
	.align	2, 0
.L28:
	.word	.L26
	.align	2, 0
	.align	2, 0
.L26:
	.word	.L20
	.word	.L25
	.word	.L21
	.word	.L22
	.word	.L23
	.word	.L24
.L20:
	mov	r0, #0x1
	b	.L27
.L21:
	mov	r0, #0x3
	b	.L27
.L22:
	mov	r0, #0x7
	b	.L27
.L23:
	mov	r0, #0x9
	b	.L27
.L24:
	ldr	r4, .L30
	bl	GetLinkPlayerCount_2
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x4
	b	.L27
.L31:
	.align	2, 0
.L30:
	.word	gStringVar1
.L25:
	mov	r0, #0x0
.L27:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 ExchangeDataAndGetLinkupStatus,.Lfe5-ExchangeDataAndGetLinkupStatus
	.align	2, 0
	.type	 CheckLinkErrored,function
	.thumb_func
CheckLinkErrored:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	HasLinkErrorOccurred
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L33	@cond_branch
	mov	r0, #0x0
	b	.L34
.L33:
	ldr	r0, .L35
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L35+0x4
	str	r0, [r1]
	mov	r0, #0x1
.L34:
	pop	{r4}
	pop	{r1}
	bx	r1
.L36:
	.align	2, 0
.L35:
	.word	gTasks
	.word	Task_LinkupConnectionError
.Lfe6:
	.size	 CheckLinkErrored,.Lfe6-CheckLinkErrored
	.align	2, 0
	.type	 CheckLinkCanceledBeforeConnection,function
	.thumb_func
CheckLinkCanceledBeforeConnection:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L40
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L38	@cond_branch
	bl	IsLinkConnectionEstablished
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L38	@cond_branch
	ldr	r0, .L40+0x4
	strh	r1, [r0]
	ldr	r1, .L40+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L40+0xc
	str	r1, [r0]
	mov	r0, #0x1
	b	.L39
.L41:
	.align	2, 0
.L40:
	.word	gMain
	.word	gLinkType
	.word	gTasks
	.word	Task_LinkupFailed
.L38:
	mov	r0, #0x0
.L39:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 CheckLinkCanceledBeforeConnection,.Lfe7-CheckLinkCanceledBeforeConnection
	.align	2, 0
	.type	 CheckLinkCanceled,function
	.thumb_func
CheckLinkCanceled:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsLinkConnectionEstablished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L43	@cond_branch
	mov	r0, #0x1
	bl	SetSuppressLinkErrorMessage
.L43:
	ldr	r0, .L46
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L44	@cond_branch
	mov	r0, #0x0
	b	.L45
.L47:
	.align	2, 0
.L46:
	.word	gMain
.L44:
	ldr	r1, .L48
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L48+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L48+0x8
	str	r1, [r0]
	mov	r0, #0x1
.L45:
	pop	{r4}
	pop	{r1}
	bx	r1
.L49:
	.align	2, 0
.L48:
	.word	gLinkType
	.word	gTasks
	.word	Task_LinkupFailed
.Lfe8:
	.size	 CheckLinkCanceled,.Lfe8-CheckLinkCanceled
	.align	2, 0
	.type	 CheckSioErrored,function
	.thumb_func
CheckSioErrored:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	GetSioMultiSI
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L51	@cond_branch
	mov	r0, #0x0
	b	.L52
.L51:
	ldr	r0, .L53
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L53+0x4
	str	r0, [r1]
	mov	r0, #0x1
.L52:
	pop	{r4}
	pop	{r1}
	bx	r1
.L54:
	.align	2, 0
.L53:
	.word	gTasks
	.word	Task_LinkupConnectionError
.Lfe9:
	.size	 CheckSioErrored,.Lfe9-CheckSioErrored
	.align	2, 0
	.type	 Task_DelayedBlockRequest,function
	.thumb_func
Task_DelayedBlockRequest:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L57
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xa
	bne	.L56	@cond_branch
	mov	r0, #0x2
	bl	SendBlockRequest
	add	r0, r4, #0
	bl	DestroyTask
.L56:
	pop	{r4}
	pop	{r0}
	bx	r0
.L58:
	.align	2, 0
.L57:
	.word	gTasks
.Lfe10:
	.size	 Task_DelayedBlockRequest,.Lfe10-Task_DelayedBlockRequest
	.align	2, 0
	.type	 Task_LinkupStart,function
	.thumb_func
Task_LinkupStart:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L63
	add	r4, r1, r0
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	cmp	r2, #0
	bne	.L60	@cond_branch
	bl	OpenLinkTimed
	bl	ResetLinkPlayerCount
	bl	ResetLinkPlayers
	ldr	r0, .L63+0x4
	bl	AddWindow
	strh	r0, [r4, #0xa]
	b	.L61
.L64:
	.align	2, 0
.L63:
	.word	gTasks+0x8
	.word	sWindowTemplate_LinkPlayerCount
.L60:
	cmp	r2, #0x9
	ble	.L61	@cond_branch
	sub	r0, r0, #0x8
	add	r0, r1, r0
	ldr	r1, .L65
	str	r1, [r0]
.L61:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L66:
	.align	2, 0
.L65:
	.word	Task_LinkupAwaitConnection
.Lfe11:
	.size	 Task_LinkupStart,.Lfe11-Task_LinkupStart
	.align	2, 0
	.type	 Task_LinkupAwaitConnection,function
	.thumb_func
Task_LinkupAwaitConnection:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L67	@cond_branch
	add	r0, r4, #0
	bl	CheckLinkCanceled
	cmp	r0, #0x1
	beq	.L67	@cond_branch
	cmp	r5, #0x1
	bls	.L67	@cond_branch
	mov	r0, #0x1
	bl	SetSuppressLinkErrorMessage
	ldr	r1, .L73
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r0, #0x0
	strh	r0, [r4, #0xe]
	bl	IsLinkMaster
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L70	@cond_branch
	mov	r0, #0x15
	bl	PlaySE
	ldr	r0, .L73+0x4
	bl	ShowFieldAutoScrollMessage
	ldr	r0, .L73+0x8
	b	.L72
.L74:
	.align	2, 0
.L73:
	.word	gTasks
	.word	CableClub_Text_WhenAllPlayersReadyAConfirmBCancel
	.word	Task_LinkupConfirmWhenReady
.L70:
	mov	r0, #0x16
	bl	PlaySE
	ldr	r0, .L75
	bl	ShowFieldAutoScrollMessage
	ldr	r0, .L75+0x4
.L72:
	str	r0, [r4]
.L67:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L76:
	.align	2, 0
.L75:
	.word	CableClub_Text_AwaitingLinkupBCancel
	.word	Task_LinkupExchangeDataWithLeader
.Lfe12:
	.size	 Task_LinkupAwaitConnection,.Lfe12-Task_LinkupAwaitConnection
	.align	2, 0
	.type	 Task_LinkupConfirmWhenReady,function
	.thumb_func
Task_LinkupConfirmWhenReady:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L77	@cond_branch
	add	r0, r4, #0
	bl	CheckSioErrored
	cmp	r0, #0x1
	beq	.L77	@cond_branch
	add	r0, r4, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L77	@cond_branch
	bl	GetFieldMessageBoxType
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L77	@cond_branch
	ldr	r0, .L81
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	strh	r2, [r1, #0xe]
	ldr	r0, .L81+0x4
	str	r0, [r1]
.L77:
	pop	{r4}
	pop	{r0}
	bx	r0
.L82:
	.align	2, 0
.L81:
	.word	gTasks
	.word	Task_LinkupAwaitConfirmation
.Lfe13:
	.size	 Task_LinkupConfirmWhenReady,.Lfe13-Task_LinkupConfirmWhenReady
	.align	2, 0
	.type	 Task_LinkupAwaitConfirmation,function
	.thumb_func
Task_LinkupAwaitConfirmation:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	mov	r8, r0
	ldr	r0, .L87
	mov	r9, r0
	mov	r7, r8
	add	r7, r7, r9
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L83	@cond_branch
	add	r0, r4, #0
	bl	CheckSioErrored
	cmp	r0, #0x1
	beq	.L83	@cond_branch
	add	r0, r4, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L83	@cond_branch
	add	r6, r5, #0
	add	r0, r4, #0
	add	r1, r6, #0
	bl	UpdateLinkPlayerCountDisplay
	ldr	r0, .L87+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L83	@cond_branch
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	cmp	r5, r0
	blt	.L83	@cond_branch
	add	r0, r6, #0
	bl	SaveLinkPlayers
	ldrh	r0, [r7, #0xa]
	bl	ClearLinkPlayerCountWindow
	ldr	r0, .L87+0x8
	add	r1, r5, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L87+0xc
	bl	ShowFieldAutoScrollMessage
	mov	r0, r9
	sub	r0, r0, #0x8
	add	r0, r0, r8
	ldr	r1, .L87+0x10
	str	r1, [r0]
.L83:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L88:
	.align	2, 0
.L87:
	.word	gTasks+0x8
	.word	gMain
	.word	gStringVar1
	.word	CableClub_Text_StartLinkWithXPlayersAConfirmBCancel
	.word	Task_LinkupTryConfirmation
.Lfe14:
	.size	 Task_LinkupAwaitConfirmation,.Lfe14-Task_LinkupAwaitConfirmation
	.align	2, 0
	.type	 Task_LinkupTryConfirmation,function
	.thumb_func
Task_LinkupTryConfirmation:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r6, r5, #0
	add	r0, r5, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L89	@cond_branch
	add	r0, r5, #0
	bl	CheckSioErrored
	cmp	r0, #0x1
	beq	.L89	@cond_branch
	add	r0, r5, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L89	@cond_branch
	bl	GetFieldMessageBoxType
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L89	@cond_branch
	bl	GetSavedPlayerCount
	add	r4, r0, #0
	bl	GetLinkPlayerCount_2
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L98	@cond_branch
	ldr	r0, .L99
	ldrh	r1, [r0, #0x2c]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L95	@cond_branch
.L98:
	ldr	r0, .L99+0x4
	bl	ShowFieldAutoScrollMessage
	ldr	r1, .L99+0x8
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L99+0xc
	str	r1, [r0]
	b	.L89
.L100:
	.align	2, 0
.L99:
	.word	gMain
	.word	CableClub_Text_WhenAllPlayersReadyAConfirmBCancel
	.word	gTasks
	.word	Task_LinkupConfirmWhenReady
.L95:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L89	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	CheckShouldAdvanceLinkState
	ldr	r0, .L101
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L101+0x4
	str	r0, [r1]
.L89:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L102:
	.align	2, 0
.L101:
	.word	gTasks
	.word	Task_LinkupConfirm
.Lfe15:
	.size	 Task_LinkupTryConfirmation,.Lfe15-Task_LinkupTryConfirmation
	.align	2, 0
	.type	 Task_LinkupConfirm,function
	.thumb_func
Task_LinkupConfirm:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L110
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	ldrb	r7, [r5, #0xa]
	ldrb	r6, [r5, #0xc]
	add	r0, r4, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L103	@cond_branch
	add	r0, r4, #0
	bl	TryLinkTimeout
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L103	@cond_branch
	bl	GetLinkPlayerCount_2
	add	r4, r0, #0
	bl	GetSavedPlayerCount
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	beq	.L106	@cond_branch
	ldr	r0, .L110+0x4
	b	.L109
.L111:
	.align	2, 0
.L110:
	.word	gTasks
	.word	Task_LinkupConnectionError
.L106:
	ldr	r4, .L112
	add	r0, r7, #0
	add	r1, r6, #0
	bl	ExchangeDataAndGetLinkupStatus
	strh	r0, [r4]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L103	@cond_branch
	ldr	r0, .L112+0x4
.L109:
	str	r0, [r5]
.L103:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L113:
	.align	2, 0
.L112:
	.word	gSpecialVar_Result
	.word	Task_LinkupCheckStatusAfterConfirm
.Lfe16:
	.size	 Task_LinkupConfirm,.Lfe16-Task_LinkupConfirm
	.align	2, 0
	.type	 Task_LinkupExchangeDataWithLeader,function
	.thumb_func
Task_LinkupExchangeDataWithLeader:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L124
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	ldrb	r7, [r5, #0xa]
	ldrb	r6, [r5, #0xc]
	add	r0, r4, #0
	bl	CheckLinkCanceledBeforeConnection
	cmp	r0, #0x1
	beq	.L114	@cond_branch
	add	r0, r4, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L114	@cond_branch
	ldr	r4, .L124+0x4
	add	r0, r7, #0
	add	r1, r6, #0
	bl	ExchangeDataAndGetLinkupStatus
	add	r1, r0, #0
	strh	r1, [r4]
	lsl	r0, r1, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0
	beq	.L114	@cond_branch
	sub	r0, r1, #0x3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bhi	.L118	@cond_branch
	bl	SetCloseLinkCallback
	bl	HideFieldMessageBox
	ldr	r0, .L124+0x8
	b	.L123
.L125:
	.align	2, 0
.L124:
	.word	gTasks
	.word	gSpecialVar_Result
	.word	Task_StopLinkup
.L118:
	cmp	r2, #0x7
	beq	.L121	@cond_branch
	cmp	r2, #0x9
	bne	.L120	@cond_branch
.L121:
	bl	CloseLink
	bl	HideFieldMessageBox
	ldr	r0, .L126
	b	.L123
.L127:
	.align	2, 0
.L126:
	.word	Task_StopLinkup
.L120:
	bl	GetLinkPlayerCount_2
	ldr	r4, .L128
	strb	r0, [r4]
	bl	GetMultiplayerId
	ldr	r1, .L128+0x4
	strb	r0, [r1]
	ldrb	r0, [r4]
	bl	SaveLinkPlayers
	ldr	r0, .L128+0x8
	bl	TrainerCard_GenerateCardForLinkPlayer
	ldr	r0, .L128+0xc
.L123:
	str	r0, [r5]
.L114:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L129:
	.align	2, 0
.L128:
	.word	gFieldLinkPlayerCount
	.word	gLocalLinkPlayerId
	.word	gBlockSendBuffer
	.word	Task_LinkupAwaitTrainerCardData
.Lfe17:
	.size	 Task_LinkupExchangeDataWithLeader,.Lfe17-Task_LinkupExchangeDataWithLeader
	.align	2, 0
	.type	 AnyConnectedPartnersPlayingRS,function
	.thumb_func
AnyConnectedPartnersPlayingRS:
	push	{r4, r5, lr}
	mov	r5, #0x0
	ldr	r4, .L138
	b	.L131
.L139:
	.align	2, 0
.L138:
	.word	gLinkPlayers
.L134:
	ldrb	r0, [r4]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bhi	.L133	@cond_branch
	mov	r0, #0x1
	b	.L137
.L133:
	add	r4, r4, #0x1c
	add	r5, r5, #0x1
.L131:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	blt	.L134	@cond_branch
	mov	r0, #0x0
.L137:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 AnyConnectedPartnersPlayingRS,.Lfe18-AnyConnectedPartnersPlayingRS
	.align	2, 0
	.type	 Task_LinkupCheckStatusAfterConfirm,function
	.thumb_func
Task_LinkupCheckStatusAfterConfirm:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r5, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L140	@cond_branch
	ldr	r0, .L152
	ldrh	r0, [r0]
	cmp	r0, #0x4
	bne	.L142	@cond_branch
	bl	AnyConnectedPartnersPlayingRS
	cmp	r0, #0x1
	beq	.L149	@cond_branch
	bl	SetCloseLinkCallback
	b	.L151
.L153:
	.align	2, 0
.L152:
	.word	gSpecialVar_Result
.L142:
	cmp	r0, #0x3
	bne	.L146	@cond_branch
	bl	SetCloseLinkCallback
	b	.L151
.L146:
	cmp	r0, #0x7
	beq	.L149	@cond_branch
	cmp	r0, #0x9
	bne	.L148	@cond_branch
.L149:
	bl	CloseLink
.L151:
	bl	HideFieldMessageBox
	ldr	r0, .L154
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L154+0x4
	str	r0, [r1]
	b	.L140
.L155:
	.align	2, 0
.L154:
	.word	gTasks
	.word	Task_StopLinkup
.L148:
	bl	GetLinkPlayerCount_2
	ldr	r4, .L156
	strb	r0, [r4]
	bl	GetMultiplayerId
	ldr	r1, .L156+0x4
	strb	r0, [r1]
	ldrb	r0, [r4]
	bl	SaveLinkPlayers
	ldr	r0, .L156+0x8
	bl	TrainerCard_GenerateCardForLinkPlayer
	ldr	r1, .L156+0xc
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L156+0x10
	str	r1, [r0]
	mov	r0, #0x2
	bl	SendBlockRequest
.L140:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L157:
	.align	2, 0
.L156:
	.word	gFieldLinkPlayerCount
	.word	gLocalLinkPlayerId
	.word	gBlockSendBuffer
	.word	gTasks
	.word	Task_LinkupAwaitTrainerCardData
.Lfe19:
	.size	 Task_LinkupCheckStatusAfterConfirm,.Lfe19-Task_LinkupCheckStatusAfterConfirm
	.align	2, 0
	.type	 Task_LinkupAwaitTrainerCardData,function
	.thumb_func
Task_LinkupAwaitTrainerCardData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	add	r0, r7, #0
	bl	CheckLinkErrored
	cmp	r0, #0x1
	beq	.L158	@cond_branch
	bl	GetBlockReceivedStatus
	add	r4, r0, #0
	bl	GetSavedLinkPlayerCountAsBitFlags
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L158	@cond_branch
	mov	r5, #0x0
	lsl	r0, r7, #0x2
	mov	r8, r0
	b	.L161
.L164:
	ldr	r1, .L171
	lsl	r0, r5, #0x3
	sub	r0, r0, r5
	lsl	r0, r0, #0x2
	add	r6, r0, r1
	ldrb	r0, [r6]
	sub	r0, r0, #0x4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L165	@cond_branch
	lsl	r1, r5, #0x8
	ldr	r0, .L171+0x4
	add	r1, r1, r0
	ldr	r0, .L171+0x8
	lsl	r4, r5, #0x1
	add	r4, r4, r5
	lsl	r4, r4, #0x5
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r2, #0x38
	bl	memcpy
	ldrh	r0, [r6]
	add	r4, r4, #0x38
	strb	r0, [r4]
	b	.L163
.L172:
	.align	2, 0
.L171:
	.word	gLinkPlayers
	.word	gBlockRecvBuffer
	.word	gTrainerCards
.L165:
	lsl	r1, r5, #0x8
	ldr	r0, .L173
	add	r1, r1, r0
	ldr	r2, .L173+0x4
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r0, r0, #0x5
	add	r0, r0, r2
	mov	r2, #0x60
	bl	memcpy
.L163:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L161:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r5, r0
	bcc	.L164	@cond_branch
	mov	r0, #0x0
	bl	SetSuppressLinkErrorMessage
	bl	ResetBlockReceivedFlags
	bl	HideFieldMessageBox
	ldr	r0, .L173+0x8
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L168	@cond_branch
	ldr	r0, .L173+0xc
	ldrh	r1, [r0]
	ldr	r0, .L173+0x10
	ldr	r0, .L173+0x14
	mov	r2, r8
	add	r1, r2, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x12]
	bl	ClearLinkPlayerCountWindow
	bl	ScriptContext_Enable
	add	r0, r7, #0
	bl	DestroyTask
	b	.L158
.L174:
	.align	2, 0
.L173:
	.word	gBlockRecvBuffer
	.word	gTrainerCards
	.word	gSpecialVar_Result
	.word	gLinkType
	.word	0x4411
	.word	gTasks
.L168:
	bl	SetCloseLinkCallback
	ldr	r0, .L175
	mov	r2, r8
	add	r1, r2, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L175+0x4
	str	r0, [r1]
.L158:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L176:
	.align	2, 0
.L175:
	.word	gTasks
	.word	Task_StopLinkup
.Lfe20:
	.size	 Task_LinkupAwaitTrainerCardData,.Lfe20-Task_LinkupAwaitTrainerCardData
	.align	2, 0
	.type	 Task_StopLinkup,function
	.thumb_func
Task_StopLinkup:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L179
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L178	@cond_branch
	ldr	r0, .L179+0x4
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	add	r4, r4, r0
	ldrh	r0, [r4, #0x12]
	bl	ClearLinkPlayerCountWindow
	bl	ScriptContext_Enable
	ldrb	r0, [r4, #0x12]
	bl	RemoveWindow
	add	r0, r5, #0
	bl	DestroyTask
.L178:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L180:
	.align	2, 0
.L179:
	.word	gReceivedRemoteLinkPlayers
	.word	gTasks
.Lfe21:
	.size	 Task_StopLinkup,.Lfe21-Task_StopLinkup
	.align	2, 0
	.type	 Task_LinkupFailed,function
	.thumb_func
Task_LinkupFailed:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L182
	mov	r0, #0x5
	strh	r0, [r1]
	ldr	r1, .L182+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x12]
	bl	ClearLinkPlayerCountWindow
	bl	HideFieldMessageBox
	bl	ScriptContext_Enable
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L183:
	.align	2, 0
.L182:
	.word	gSpecialVar_Result
	.word	gTasks
.Lfe22:
	.size	 Task_LinkupFailed,.Lfe22-Task_LinkupFailed
	.align	2, 0
	.type	 Task_LinkupConnectionError,function
	.thumb_func
Task_LinkupConnectionError:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L185
	mov	r0, #0x6
	strh	r0, [r1]
	ldr	r1, .L185+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x12]
	bl	ClearLinkPlayerCountWindow
	bl	HideFieldMessageBox
	bl	ScriptContext_Enable
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L186:
	.align	2, 0
.L185:
	.word	gSpecialVar_Result
	.word	gTasks
.Lfe23:
	.size	 Task_LinkupConnectionError,.Lfe23-Task_LinkupConnectionError
	.align	2, 0
	.type	 TryLinkTimeout,function
	.thumb_func
TryLinkTimeout:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L190
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r2, r1, r2
	ldrh	r0, [r2, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x10]
	lsl	r0, r0, #0x10
	mov	r1, #0x96
	lsl	r1, r1, #0x12
	cmp	r0, r1
	bgt	.L188	@cond_branch
	mov	r0, #0x0
	b	.L189
.L191:
	.align	2, 0
.L190:
	.word	gTasks
.L188:
	ldr	r0, .L192
	str	r0, [r2]
	mov	r0, #0x1
.L189:
	pop	{r1}
	bx	r1
.L193:
	.align	2, 0
.L192:
	.word	Task_LinkupConnectionError
.Lfe24:
	.size	 TryLinkTimeout,.Lfe24-TryLinkTimeout
	.align	2, 0
	.globl	TryBattleLinkup
	.type	 TryBattleLinkup,function
	.thumb_func
TryBattleLinkup:
	push	{r4, lr}
	mov	r3, #0x2
	mov	r2, #0x2
	ldr	r0, .L203
	ldrh	r0, [r0]
	cmp	r0, #0x2
	beq	.L197	@cond_branch
	cmp	r0, #0x2
	bgt	.L201	@cond_branch
	cmp	r0, #0x1
	beq	.L196	@cond_branch
	b	.L195
.L204:
	.align	2, 0
.L203:
	.word	gSpecialVar_0x8004
.L201:
	cmp	r0, #0x5
	beq	.L198	@cond_branch
	b	.L195
.L196:
	mov	r3, #0x2
	ldr	r1, .L205
	ldr	r4, .L205+0x4
	b	.L202
.L206:
	.align	2, 0
.L205:
	.word	gLinkType
	.word	0x2233
.L197:
	mov	r3, #0x2
	ldr	r1, .L207
	ldr	r4, .L207+0x4
	b	.L202
.L208:
	.align	2, 0
.L207:
	.word	gLinkType
	.word	0x2244
.L198:
	mov	r3, #0x4
	mov	r2, #0x4
	ldr	r1, .L209
	ldr	r4, .L209+0x4
.L202:
	add	r0, r4, #0
	strh	r0, [r1]
.L195:
	add	r0, r3, #0
	add	r1, r2, #0
	bl	CreateLinkupTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L210:
	.align	2, 0
.L209:
	.word	gLinkType
	.word	0x2255
.Lfe25:
	.size	 TryBattleLinkup,.Lfe25-TryBattleLinkup
	.align	2, 0
	.globl	TryTradeLinkup
	.type	 TryTradeLinkup,function
	.thumb_func
TryTradeLinkup:
	push	{lr}
	ldr	r1, .L212
	ldr	r2, .L212+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L212+0x8
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x2
	mov	r1, #0x2
	bl	CreateLinkupTask
	pop	{r0}
	bx	r0
.L213:
	.align	2, 0
.L212:
	.word	gLinkType
	.word	0x1133
	.word	gBattleTypeFlags
.Lfe26:
	.size	 TryTradeLinkup,.Lfe26-TryTradeLinkup
	.align	2, 0
	.globl	TryRecordMixLinkup
	.type	 TryRecordMixLinkup,function
	.thumb_func
TryRecordMixLinkup:
	push	{lr}
	ldr	r1, .L215
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L215+0x4
	ldr	r2, .L215+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L215+0xc
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x2
	mov	r1, #0x4
	bl	CreateLinkupTask
	pop	{r0}
	bx	r0
.L216:
	.align	2, 0
.L215:
	.word	gSpecialVar_Result
	.word	gLinkType
	.word	0x3311
	.word	gBattleTypeFlags
.Lfe27:
	.size	 TryRecordMixLinkup,.Lfe27-TryRecordMixLinkup
	.align	2, 0
	.globl	TryContestLinkup
	.type	 TryContestLinkup,function
	.thumb_func
TryContestLinkup:
	push	{lr}
	ldr	r1, .L218
	ldr	r2, .L218+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L218+0x8
	mov	r0, #0x0
	str	r0, [r1]
	mov	r0, #0x4
	mov	r1, #0x4
	bl	CreateLinkupTask
	pop	{r0}
	bx	r0
.L219:
	.align	2, 0
.L218:
	.word	gLinkType
	.word	0x6601
	.word	gBattleTypeFlags
.Lfe28:
	.size	 TryContestLinkup,.Lfe28-TryContestLinkup
	.align	2, 0
	.globl	CreateTask_ReestablishCableClubLink
	.type	 CreateTask_ReestablishCableClubLink,function
	.thumb_func
CreateTask_ReestablishCableClubLink:
	push	{lr}
	ldr	r0, .L232
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L221	@cond_branch
	mov	r0, #0xff
	b	.L230
.L233:
	.align	2, 0
.L232:
	.word	Task_ReestablishLink
.L221:
	ldr	r0, .L234
	ldrh	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x4
	bhi	.L222	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L234+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L235:
	.align	2, 0
.L234:
	.word	gSpecialVar_0x8004
	.word	.L228
	.align	2, 0
	.align	2, 0
.L228:
	.word	.L223
	.word	.L224
	.word	.L226
	.word	.L227
	.word	.L225
.L223:
	ldr	r1, .L236
	ldr	r2, .L236+0x4
	b	.L231
.L237:
	.align	2, 0
.L236:
	.word	gLinkType
	.word	0x2233
.L224:
	ldr	r1, .L238
	ldr	r2, .L238+0x4
	b	.L231
.L239:
	.align	2, 0
.L238:
	.word	gLinkType
	.word	0x2244
.L225:
	ldr	r1, .L240
	ldr	r2, .L240+0x4
	b	.L231
.L241:
	.align	2, 0
.L240:
	.word	gLinkType
	.word	0x2255
.L226:
	ldr	r1, .L242
	ldr	r2, .L242+0x4
	b	.L231
.L243:
	.align	2, 0
.L242:
	.word	gLinkType
	.word	0x1111
.L227:
	ldr	r1, .L244
	ldr	r2, .L244+0x4
.L231:
	add	r0, r2, #0
	strh	r0, [r1]
.L222:
	ldr	r0, .L244+0x8
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L230:
	pop	{r1}
	bx	r1
.L245:
	.align	2, 0
.L244:
	.word	gLinkType
	.word	0x3322
	.word	Task_ReestablishLink
.Lfe29:
	.size	 CreateTask_ReestablishCableClubLink,.Lfe29-CreateTask_ReestablishCableClubLink
	.align	2, 0
	.type	 Task_ReestablishLink,function
	.thumb_func
Task_ReestablishLink:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L250
	add	r4, r1, r0
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	cmp	r2, #0
	bne	.L247	@cond_branch
	bl	OpenLink
	bl	ResetLinkPlayers
	ldr	r0, .L250+0x4
	mov	r1, #0x50
	bl	CreateTask
	b	.L248
.L251:
	.align	2, 0
.L250:
	.word	gTasks+0x8
	.word	Task_WaitForLinkPlayerConnection
.L247:
	cmp	r2, #0x9
	ble	.L248	@cond_branch
	sub	r0, r0, #0x8
	add	r0, r1, r0
	ldr	r1, .L252
	str	r1, [r0]
.L248:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L253:
	.align	2, 0
.L252:
	.word	Task_ReestablishLinkAwaitConnection
.Lfe30:
	.size	 Task_ReestablishLink,.Lfe30-Task_ReestablishLink
	.align	2, 0
	.type	 Task_ReestablishLinkAwaitConnection,function
	.thumb_func
Task_ReestablishLinkAwaitConnection:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L255	@cond_branch
	bl	IsLinkMaster
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L256	@cond_branch
	ldr	r0, .L259
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L259+0x4
	b	.L258
.L260:
	.align	2, 0
.L259:
	.word	gTasks
	.word	Task_ReestablishLinkLeader
.L256:
	ldr	r0, .L261
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L261+0x4
.L258:
	str	r0, [r1]
.L255:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L262:
	.align	2, 0
.L261:
	.word	gTasks
	.word	Task_ReestablishLinkAwaitConfirmation
.Lfe31:
	.size	 Task_ReestablishLinkAwaitConnection,.Lfe31-Task_ReestablishLinkAwaitConnection
	.align	2, 0
	.type	 Task_ReestablishLinkLeader,function
	.thumb_func
Task_ReestablishLinkLeader:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	GetSavedPlayerCount
	add	r4, r0, #0
	bl	GetLinkPlayerCount_2
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L264	@cond_branch
	bl	CheckShouldAdvanceLinkState
	ldr	r0, .L265
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L265+0x4
	str	r0, [r1]
.L264:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L266:
	.align	2, 0
.L265:
	.word	gTasks
	.word	Task_ReestablishLinkAwaitConfirmation
.Lfe32:
	.size	 Task_ReestablishLinkLeader,.Lfe32-Task_ReestablishLinkLeader
	.align	2, 0
	.type	 Task_ReestablishLinkAwaitConfirmation,function
	.thumb_func
Task_ReestablishLinkAwaitConfirmation:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L269
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L268	@cond_branch
	bl	IsLinkPlayerDataExchangeComplete
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L268	@cond_branch
	bl	CheckLinkPlayersMatchSaved
	bl	StartSendingKeysToLink
	add	r0, r4, #0
	bl	DestroyTask
.L268:
	pop	{r4}
	pop	{r0}
	bx	r0
.L270:
	.align	2, 0
.L269:
	.word	gReceivedRemoteLinkPlayers
.Lfe33:
	.size	 Task_ReestablishLinkAwaitConfirmation,.Lfe33-Task_ReestablishLinkAwaitConfirmation
	.align	2, 0
	.globl	CableClub_AskSaveTheGame
	.type	 CableClub_AskSaveTheGame,function
	.thumb_func
CableClub_AskSaveTheGame:
	push	{lr}
	bl	Field_AskSaveTheGame
	pop	{r0}
	bx	r0
.Lfe34:
	.size	 CableClub_AskSaveTheGame,.Lfe34-CableClub_AskSaveTheGame
	.align	2, 0
	.type	 Task_StartWiredCableClubBattle,function
	.thumb_func
Task_StartWiredCableClubBattle:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L297
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x5
	bls	.LCB2091
	b	.L273	@long jump
.LCB2091:
	lsl	r0, r0, #0x2
	ldr	r1, .L297+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L298:
	.align	2, 0
.L297:
	.word	gTasks
	.word	.L292
	.align	2, 0
	.align	2, 0
.L292:
	.word	.L274
	.word	.L275
	.word	.L277
	.word	.L279
	.word	.L280
	.word	.L282
.L274:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r1, .L299
	ldr	r2, .L299+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	bl	ClearLinkCallback_2
	b	.L294
.L300:
	.align	2, 0
.L299:
	.word	gLinkType
	.word	0x2211
.L275:
	ldr	r0, .L301
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	b	.L295
.L302:
	.align	2, 0
.L301:
	.word	gPaletteFade
.L277:
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L273	@cond_branch
	b	.L294
.L279:
	bl	SetCloseLinkCallback
	b	.L294
.L280:
	ldr	r0, .L303
	ldrb	r0, [r0]
.L295:
	cmp	r0, #0
	bne	.L273	@cond_branch
.L294:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L273
.L304:
	.align	2, 0
.L303:
	.word	gReceivedRemoteLinkPlayers
.L282:
	ldr	r0, .L305
	ldr	r0, [r0, #0x4]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L283	@cond_branch
	ldr	r0, .L305+0x4
	bl	PlayMapChosenOrBattleBGM
	b	.L284
.L306:
	.align	2, 0
.L305:
	.word	gLinkPlayers
	.word	0x109
.L283:
	mov	r0, #0x85
	lsl	r0, r0, #0x1
	bl	PlayMapChosenOrBattleBGM
.L284:
	ldr	r0, .L307
	ldrh	r0, [r0]
	cmp	r0, #0x2
	beq	.L287	@cond_branch
	cmp	r0, #0x2
	bgt	.L291	@cond_branch
	cmp	r0, #0x1
	beq	.L286	@cond_branch
	b	.L285
.L308:
	.align	2, 0
.L307:
	.word	gSpecialVar_0x8004
.L291:
	cmp	r0, #0x5
	beq	.L288	@cond_branch
	b	.L285
.L286:
	ldr	r1, .L309
	mov	r0, #0xa
	b	.L296
.L310:
	.align	2, 0
.L309:
	.word	gBattleTypeFlags
.L287:
	ldr	r1, .L311
	mov	r0, #0xb
	b	.L296
.L312:
	.align	2, 0
.L311:
	.word	gBattleTypeFlags
.L288:
	bl	ReducePlayerPartyToThree
	ldr	r1, .L313
	mov	r0, #0x4b
.L296:
	str	r0, [r1]
.L285:
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r1, .L313+0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L313+0x8
	bl	SetMainCallback2
	ldr	r1, .L313+0xc
	ldr	r0, .L313+0x10
	str	r0, [r1, #0x8]
	add	r0, r5, #0
	bl	DestroyTask
.L273:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L314:
	.align	2, 0
.L313:
	.word	gBattleTypeFlags
	.word	gTrainerBattleOpponent_A
	.word	CB2_InitBattle
	.word	gMain
	.word	CB2_ReturnFromCableClubBattle
.Lfe35:
	.size	 Task_StartWiredCableClubBattle,.Lfe35-Task_StartWiredCableClubBattle
	.align	2, 0
	.type	 Task_StartWirelessCableClubBattle,function
	.thumb_func
Task_StartWirelessCableClubBattle:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L346
	add	r6, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0x7
	bls	.LCB2303
	b	.L316	@long jump
.LCB2303:
	lsl	r0, r0, #0x2
	ldr	r1, .L346+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L347:
	.align	2, 0
.L346:
	.word	gTasks+0x8
	.word	.L343
	.align	2, 0
	.align	2, 0
.L343:
	.word	.L317
	.word	.L318
	.word	.L320
	.word	.L321
	.word	.L328
	.word	.L330
	.word	.L331
	.word	.L333
.L317:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r0, .L348
	ldr	r2, .L348+0x4
	add	r1, r2, #0
	strh	r1, [r0]
	bl	ClearLinkCallback_2
	mov	r0, #0x1
	strh	r0, [r6]
	b	.L316
.L349:
	.align	2, 0
.L348:
	.word	gLinkType
	.word	0x2211
.L318:
	ldr	r0, .L350
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB2350
	b	.L316	@long jump
.LCB2350:
	mov	r0, #0x2
	strh	r0, [r6]
	b	.L316
.L351:
	.align	2, 0
.L350:
	.word	gPaletteFade
.L320:
	ldr	r1, .L352
	mov	r0, #0x0
	mov	r2, #0x1c
	bl	SendBlock
	mov	r0, #0x3
	strh	r0, [r6]
	b	.L316
.L353:
	.align	2, 0
.L352:
	.word	gLocalLinkPlayer
.L321:
	bl	GetBlockReceivedStatus
	add	r4, r0, #0
	bl	GetLinkPlayerCountAsBitFlags
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	beq	.LCB2387
	b	.L316	@long jump
.LCB2387:
	mov	r4, #0x0
	ldr	r5, .L354
	b	.L323
.L355:
	.align	2, 0
.L354:
	.word	gLinkPlayers
.L326:
	lsl	r1, r4, #0x8
	ldr	r2, .L356
	add	r0, r5, #0
	add	r1, r1, r2
	ldmia	r1!, {r2, r3, r7}
	stmia	r0!, {r2, r3, r7}
	ldmia	r1!, {r2, r3, r7}
	stmia	r0!, {r2, r3, r7}
	ldr	r1, [r1]
	str	r1, [r0]
	add	r0, r5, #0
	bl	ConvertLinkPlayerName
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	ResetBlockReceivedFlag
	add	r5, r5, #0x1c
	add	r4, r4, #0x1
.L323:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	blt	.L326	@cond_branch
	mov	r0, #0x4
	strh	r0, [r6]
	b	.L316
.L357:
	.align	2, 0
.L356:
	.word	gBlockRecvBuffer
.L328:
	ldrh	r0, [r6, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L316	@cond_branch
	mov	r0, #0x5
	strh	r0, [r6]
	b	.L316
.L330:
	bl	SetLinkStandbyCallback
	mov	r0, #0x6
	strh	r0, [r6]
	b	.L316
.L331:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L316	@cond_branch
	mov	r0, #0x7
	strh	r0, [r6]
	b	.L316
.L333:
	ldr	r0, .L358
	ldr	r0, [r0, #0x4]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L334	@cond_branch
	ldr	r0, .L358+0x4
	bl	PlayMapChosenOrBattleBGM
	b	.L335
.L359:
	.align	2, 0
.L358:
	.word	gLinkPlayers
	.word	0x109
.L334:
	mov	r0, #0x85
	lsl	r0, r0, #0x1
	bl	PlayMapChosenOrBattleBGM
.L335:
	ldr	r0, .L360
	ldr	r1, .L360+0x4
	str	r1, [r0, #0x14]
	ldr	r0, .L360+0x8
	ldrh	r0, [r0]
	cmp	r0, #0x2
	beq	.L338	@cond_branch
	cmp	r0, #0x2
	bgt	.L342	@cond_branch
	cmp	r0, #0x1
	beq	.L337	@cond_branch
	b	.L336
.L361:
	.align	2, 0
.L360:
	.word	gLinkPlayers
	.word	0x2211
	.word	gSpecialVar_0x8004
.L342:
	cmp	r0, #0x5
	beq	.L339	@cond_branch
	b	.L336
.L337:
	ldr	r1, .L362
	mov	r0, #0xa
	b	.L345
.L363:
	.align	2, 0
.L362:
	.word	gBattleTypeFlags
.L338:
	ldr	r1, .L364
	mov	r0, #0xb
	b	.L345
.L365:
	.align	2, 0
.L364:
	.word	gBattleTypeFlags
.L339:
	bl	ReducePlayerPartyToThree
	ldr	r1, .L366
	mov	r0, #0x4b
.L345:
	str	r0, [r1]
.L336:
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r1, .L366+0x4
	mov	r3, #0x80
	lsl	r3, r3, #0x4
	add	r0, r3, #0
	strh	r0, [r1]
	ldr	r0, .L366+0x8
	bl	SetMainCallback2
	ldr	r1, .L366+0xc
	ldr	r0, .L366+0x10
	str	r0, [r1, #0x8]
	add	r0, r4, #0
	bl	DestroyTask
.L316:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L367:
	.align	2, 0
.L366:
	.word	gBattleTypeFlags
	.word	gTrainerBattleOpponent_A
	.word	CB2_InitBattle
	.word	gMain
	.word	CB2_ReturnFromCableClubBattle
.Lfe36:
	.size	 Task_StartWirelessCableClubBattle,.Lfe36-Task_StartWirelessCableClubBattle
	.align	2, 0
	.type	 CB2_ReturnFromUnionRoomBattle,function
	.thumb_func
CB2_ReturnFromUnionRoomBattle:
	push	{r4, lr}
	ldr	r0, .L375
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L370	@cond_branch
	cmp	r0, #0x1
	beq	.L371	@cond_branch
	b	.L369
.L376:
	.align	2, 0
.L375:
	.word	gMain
.L370:
	bl	SetCloseLinkCallback
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L369
.L371:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L369	@cond_branch
	ldr	r0, .L377
	bl	SetMainCallback2
.L369:
	pop	{r4}
	pop	{r0}
	bx	r0
.L378:
	.align	2, 0
.L377:
	.word	CB2_ReturnToField
.Lfe37:
	.size	 CB2_ReturnFromUnionRoomBattle,.Lfe37-CB2_ReturnFromUnionRoomBattle
	.align	2, 0
	.globl	CB2_ReturnFromCableClubBattle
	.type	 CB2_ReturnFromCableClubBattle,function
	.thumb_func
CB2_ReturnFromCableClubBattle:
	push	{r4, r5, lr}
	ldr	r2, .L390
	ldr	r0, [r2]
	ldr	r1, .L390+0x4
	and	r0, r0, r1
	str	r0, [r2]
	bl	Overworld_ResetMapMusic
	bl	LoadPlayerParty
	bl	SavePlayerBag
	bl	Special_UpdateTrainerFansAfterLinkBattle
	ldr	r0, .L390+0x8
	ldrh	r0, [r0]
	cmp	r0, #0x5
	beq	.L380	@cond_branch
	ldr	r0, .L390+0xc
	ldrb	r0, [r0]
	mov	r5, #0x1
	eor	r0, r0, r5
	bl	UpdatePlayerLinkBattleRecords
	ldr	r0, .L390+0x10
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L380	@cond_branch
	ldr	r0, .L390+0x14
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L383	@cond_branch
	cmp	r0, #0x2
	beq	.L384	@cond_branch
	b	.L380
.L391:
	.align	2, 0
.L390:
	.word	gBattleTypeFlags
	.word	0xffdf
	.word	gSpecialVar_0x8004
	.word	gLocalLinkPlayerId
	.word	gWirelessCommType
	.word	gBattleOutcome
.L383:
	ldr	r4, .L392
	bl	GetMultiplayerId
	eor	r0, r0, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r4, r4, #0x4
	add	r1, r1, r4
	ldr	r1, [r1]
	mov	r0, #0x0
	bl	MysteryGift_TryIncrementStat
	b	.L380
.L393:
	.align	2, 0
.L392:
	.word	gLinkPlayers
.L384:
	ldr	r4, .L394
	bl	GetMultiplayerId
	eor	r0, r0, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r4, r4, #0x4
	add	r1, r1, r4
	ldr	r1, [r1]
	mov	r0, #0x1
	bl	MysteryGift_TryIncrementStat
.L380:
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L387	@cond_branch
	ldr	r1, .L394+0x4
	ldr	r0, .L394+0x8
	b	.L389
.L395:
	.align	2, 0
.L394:
	.word	gLinkPlayers
	.word	gMain
	.word	CB2_ReturnFromUnionRoomBattle
.L387:
	ldr	r1, .L396
	ldr	r0, .L396+0x4
.L389:
	str	r0, [r1, #0x8]
	ldr	r0, .L396+0x8
	bl	SetMainCallback2
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L397:
	.align	2, 0
.L396:
	.word	gMain
	.word	CB2_ReturnToFieldFromMultiplayer
	.word	CB2_SetUpSaveAfterLinkBattle
.Lfe38:
	.size	 CB2_ReturnFromCableClubBattle,.Lfe38-CB2_ReturnFromCableClubBattle
	.align	2, 0
	.globl	CleanupLinkRoomState
	.type	 CleanupLinkRoomState,function
	.thumb_func
CleanupLinkRoomState:
	push	{lr}
	ldr	r0, .L401
	ldrh	r1, [r0]
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L400	@cond_branch
	cmp	r1, #0x5
	bne	.L399	@cond_branch
.L400:
	bl	LoadPlayerParty
	bl	SavePlayerBag
.L399:
	mov	r0, #0x7f
	bl	SetWarpDestinationToDynamicWarp
	pop	{r0}
	bx	r0
.L402:
	.align	2, 0
.L401:
	.word	gSpecialVar_0x8004
.Lfe39:
	.size	 CleanupLinkRoomState,.Lfe39-CleanupLinkRoomState
	.align	2, 0
	.globl	ExitLinkRoom
	.type	 ExitLinkRoom,function
	.thumb_func
ExitLinkRoom:
	push	{lr}
	bl	QueueExitLinkRoomKey
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 ExitLinkRoom,.Lfe40-ExitLinkRoom
	.align	2, 0
	.type	 Task_EnterCableClubSeat,function
	.thumb_func
Task_EnterCableClubSeat:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L420
	add	r5, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L407	@cond_branch
	cmp	r0, #0x1
	bgt	.L419	@cond_branch
	cmp	r0, #0
	beq	.L406	@cond_branch
	b	.L405
.L421:
	.align	2, 0
.L420:
	.word	gTasks
.L419:
	cmp	r0, #0x2
	beq	.L409	@cond_branch
	cmp	r0, #0x3
	beq	.L416	@cond_branch
	b	.L405
.L406:
	ldr	r0, .L422
	bl	ShowFieldMessage
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L405
.L423:
	.align	2, 0
.L422:
	.word	CableClub_Text_PleaseWaitBCancel
.L407:
	bl	IsFieldMessageBoxHidden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L405	@cond_branch
	bl	SetInCableClubSeat
	ldr	r0, .L424
	ldrb	r0, [r0]
	bl	SetLocalLinkPlayerId
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	b	.L405
.L425:
	.align	2, 0
.L424:
	.word	gSpecialVar_0x8005
.L409:
	bl	GetCableClubPartnersReady
	cmp	r0, #0x1
	beq	.L412	@cond_branch
	cmp	r0, #0x1
	bcc	.L405	@cond_branch
	cmp	r0, #0x2
	beq	.L413	@cond_branch
	b	.L405
.L412:
	bl	HideFieldMessageBox
	mov	r0, #0x0
	strh	r0, [r5, #0x8]
	bl	SetStartedCableClubActivity
	add	r0, r4, #0
	bl	SwitchTaskToFollowupFunc
	b	.L405
.L413:
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	b	.L405
.L416:
	bl	SetLinkWaitingForScript
	mov	r0, #0x1
	bl	EraseFieldMessageBox
	add	r0, r4, #0
	bl	DestroyTask
	bl	ScriptContext_Enable
.L405:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 Task_EnterCableClubSeat,.Lfe41-Task_EnterCableClubSeat
	.align	2, 0
	.type	 CreateTask_EnterCableClubSeat,function
	.thumb_func
CreateTask_EnterCableClubSeat:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r4, .L427
	add	r0, r4, #0
	mov	r1, #0x50
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	add	r2, r5, #0
	bl	SetTaskFuncWithFollowupFunc
	bl	ScriptContext_Stop
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L428:
	.align	2, 0
.L427:
	.word	Task_EnterCableClubSeat
.Lfe42:
	.size	 CreateTask_EnterCableClubSeat,.Lfe42-CreateTask_EnterCableClubSeat
	.align	2, 0
	.type	 Task_StartWiredTrade,function
	.thumb_func
Task_StartWiredTrade:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L441
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L432	@cond_branch
	cmp	r0, #0x1
	bgt	.L439	@cond_branch
	cmp	r0, #0
	beq	.L431	@cond_branch
	b	.L430
.L442:
	.align	2, 0
.L441:
	.word	gTasks
.L439:
	cmp	r0, #0x2
	beq	.L434	@cond_branch
	cmp	r0, #0x3
	beq	.L435	@cond_branch
	b	.L430
.L431:
	bl	LockPlayerFieldControls
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	bl	ClearLinkCallback_2
	b	.L440
.L432:
	ldr	r0, .L443
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L430	@cond_branch
	b	.L440
.L444:
	.align	2, 0
.L443:
	.word	gPaletteFade
.L434:
	ldr	r1, .L445
	mov	r0, #0x0
	strb	r0, [r1]
	strb	r0, [r1, #0x1]
	bl	m4aMPlayAllStop
	bl	SetCloseLinkCallback
.L440:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L430
.L446:
	.align	2, 0
.L445:
	.word	gSelectedTradeMonPositions
.L435:
	ldr	r0, .L447
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L430	@cond_branch
	ldr	r0, .L447+0x4
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L430:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L448:
	.align	2, 0
.L447:
	.word	gReceivedRemoteLinkPlayers
	.word	CB2_StartCreateTradeMenu
.Lfe43:
	.size	 Task_StartWiredTrade,.Lfe43-Task_StartWiredTrade
	.align	2, 0
	.type	 Task_StartWirelessTrade,function
	.thumb_func
Task_StartWirelessTrade:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L461
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L452	@cond_branch
	cmp	r0, #0x1
	bgt	.L459	@cond_branch
	cmp	r0, #0
	beq	.L451	@cond_branch
	b	.L450
.L462:
	.align	2, 0
.L461:
	.word	gTasks+0x8
.L459:
	cmp	r0, #0x2
	beq	.L454	@cond_branch
	cmp	r0, #0x3
	beq	.L455	@cond_branch
	b	.L450
.L451:
	bl	LockPlayerFieldControls
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	bl	ClearLinkRfuCallback
	b	.L460
.L452:
	ldr	r0, .L463
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L450	@cond_branch
	b	.L460
.L464:
	.align	2, 0
.L463:
	.word	gPaletteFade
.L454:
	ldr	r1, .L465
	mov	r0, #0x0
	strb	r0, [r1]
	strb	r0, [r1, #0x1]
	bl	m4aMPlayAllStop
	bl	SetLinkStandbyCallback
.L460:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L450
.L466:
	.align	2, 0
.L465:
	.word	gSelectedTradeMonPositions
.L455:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L450	@cond_branch
	bl	CreateTask_CreateTradeMenu
	add	r0, r5, #0
	bl	DestroyTask
.L450:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 Task_StartWirelessTrade,.Lfe44-Task_StartWirelessTrade
	.align	2, 0
	.globl	EnterTradeSeat
	.type	 EnterTradeSeat,function
	.thumb_func
EnterTradeSeat:
	push	{lr}
	ldr	r0, .L470
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L468	@cond_branch
	ldr	r0, .L470+0x4
	bl	CreateTask_EnterCableClubSeat
	b	.L469
.L471:
	.align	2, 0
.L470:
	.word	gWirelessCommType
	.word	Task_StartWirelessTrade
.L468:
	ldr	r0, .L472
	bl	CreateTask_EnterCableClubSeat
.L469:
	pop	{r0}
	bx	r0
.L473:
	.align	2, 0
.L472:
	.word	Task_StartWiredTrade
.Lfe45:
	.size	 EnterTradeSeat,.Lfe45-EnterTradeSeat
	.align	2, 0
	.type	 CreateTask_StartWiredTrade,function
	.thumb_func
CreateTask_StartWiredTrade:
	push	{lr}
	ldr	r0, .L475
	mov	r1, #0x50
	bl	CreateTask
	pop	{r0}
	bx	r0
.L476:
	.align	2, 0
.L475:
	.word	Task_StartWiredTrade
.Lfe46:
	.size	 CreateTask_StartWiredTrade,.Lfe46-CreateTask_StartWiredTrade
	.align	2, 0
	.globl	StartWiredCableClubTrade
	.type	 StartWiredCableClubTrade,function
	.thumb_func
StartWiredCableClubTrade:
	push	{lr}
	bl	CreateTask_StartWiredTrade
	bl	ScriptContext_Stop
	pop	{r0}
	bx	r0
.Lfe47:
	.size	 StartWiredCableClubTrade,.Lfe47-StartWiredCableClubTrade
	.align	2, 0
	.globl	EnterColosseumPlayerSpot
	.type	 EnterColosseumPlayerSpot,function
	.thumb_func
EnterColosseumPlayerSpot:
	push	{lr}
	ldr	r1, .L481
	ldr	r2, .L481+0x4
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r0, .L481+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L479	@cond_branch
	ldr	r0, .L481+0xc
	bl	CreateTask_EnterCableClubSeat
	b	.L480
.L482:
	.align	2, 0
.L481:
	.word	gLinkType
	.word	0x2211
	.word	gWirelessCommType
	.word	Task_StartWirelessCableClubBattle
.L479:
	ldr	r0, .L483
	bl	CreateTask_EnterCableClubSeat
.L480:
	pop	{r0}
	bx	r0
.L484:
	.align	2, 0
.L483:
	.word	Task_StartWiredCableClubBattle
.Lfe48:
	.size	 EnterColosseumPlayerSpot,.Lfe48-EnterColosseumPlayerSpot
	.align	2, 0
	.type	 CreateTask_EnterCableClubSeatNoFollowup,function
	.thumb_func
CreateTask_EnterCableClubSeatNoFollowup:
	push	{lr}
	ldr	r0, .L486
	mov	r1, #0x50
	bl	CreateTask
	bl	ScriptContext_Stop
	pop	{r0}
	bx	r0
.L487:
	.align	2, 0
.L486:
	.word	Task_EnterCableClubSeat
.Lfe49:
	.size	 CreateTask_EnterCableClubSeatNoFollowup,.Lfe49-CreateTask_EnterCableClubSeatNoFollowup
	.align	2, 0
	.globl	Script_ShowLinkTrainerCard
	.type	 Script_ShowLinkTrainerCard,function
	.thumb_func
Script_ShowLinkTrainerCard:
	push	{lr}
	ldr	r0, .L489
	ldrb	r0, [r0]
	ldr	r1, .L489+0x4
	bl	ShowTrainerCardInLink
	pop	{r0}
	bx	r0
.L490:
	.align	2, 0
.L489:
	.word	gSpecialVar_0x8006
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe50:
	.size	 Script_ShowLinkTrainerCard,.Lfe50-Script_ShowLinkTrainerCard
	.align	2, 0
	.globl	GetSeeingLinkPlayerCardMsg
	.type	 GetSeeingLinkPlayerCardMsg,function
	.thumb_func
GetSeeingLinkPlayerCardMsg:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L494
	strh	r4, [r0]
	ldr	r0, .L494+0x4
	lsl	r1, r4, #0x3
	sub	r1, r1, r4
	lsl	r1, r1, #0x2
	ldr	r2, .L494+0x8
	add	r1, r1, r2
	bl	StringCopy
	add	r0, r4, #0
	bl	GetTrainerCardStars
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L492	@cond_branch
	ldr	r0, .L494+0xc
	ldr	r2, .L494+0x10
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0x1
	b	.L493
.L495:
	.align	2, 0
.L494:
	.word	gSpecialVar_0x8006
	.word	gStringVar1
	.word	gLinkPlayers+0x8
	.word	gStringVar2
	.word	sTrainerCardColorNames
.L492:
	mov	r0, #0x0
.L493:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 GetSeeingLinkPlayerCardMsg,.Lfe51-GetSeeingLinkPlayerCardMsg
	.align	2, 0
	.globl	Task_WaitForLinkPlayerConnection
	.type	 Task_WaitForLinkPlayerConnection,function
	.thumb_func
Task_WaitForLinkPlayerConnection:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L499
	add	r0, r0, r1
	ldrh	r1, [r0, #0x8]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x8]
	lsl	r1, r1, #0x10
	mov	r0, #0x96
	lsl	r0, r0, #0x11
	cmp	r1, r0
	ble	.L497	@cond_branch
	bl	CloseLink
	ldr	r0, .L499+0x4
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L497:
	ldr	r0, .L499+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L498	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
.L498:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L500:
	.align	2, 0
.L499:
	.word	gTasks
	.word	CB2_LinkError
	.word	gReceivedRemoteLinkPlayers
.Lfe52:
	.size	 Task_WaitForLinkPlayerConnection,.Lfe52-Task_WaitForLinkPlayerConnection
	.align	2, 0
	.type	 Task_WaitExitToScript,function
	.thumb_func
Task_WaitExitToScript:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L503
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L502	@cond_branch
	bl	ScriptContext_Enable
	add	r0, r4, #0
	bl	DestroyTask
.L502:
	pop	{r4}
	pop	{r0}
	bx	r0
.L504:
	.align	2, 0
.L503:
	.word	gReceivedRemoteLinkPlayers
.Lfe53:
	.size	 Task_WaitExitToScript,.Lfe53-Task_WaitExitToScript
	.align	2, 0
	.type	 ExitLinkToScript,function
	.thumb_func
ExitLinkToScript:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	SetCloseLinkCallback
	ldr	r1, .L506
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L506+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L507:
	.align	2, 0
.L506:
	.word	gTasks
	.word	Task_WaitExitToScript
.Lfe54:
	.size	 ExitLinkToScript,.Lfe54-ExitLinkToScript
	.comm	UnusedVarNeededToMatch, 32	@ 32
.text
	.align	2, 0 @ Don't pad with nop

