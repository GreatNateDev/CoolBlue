@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.type	 GetTrainerHillUnkVal,function
	.thumb_func
GetTrainerHillUnkVal:
	push	{lr}
	ldr	r0, .L6
	ldr	r0, [r0]
	ldr	r1, .L6+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	add	r2, r1, #0x1
	add	r0, r2, #0
	asr	r0, r0, #0x8
	lsl	r0, r0, #0x8
	sub	r0, r2, r0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L7:
	.align	2, 0
.L6:
	.word	gSaveBlock1Ptr
	.word	0x3d55
.Lfe1:
	.size	 GetTrainerHillUnkVal,.Lfe1-GetTrainerHillUnkVal
	.align	2, 0
	.type	 ValidateTrainerTowerTrainer,function
	.thumb_func
ValidateTrainerTowerTrainer:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldrb	r0, [r5, #0x1]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x7
	bhi	.L11	@cond_branch
	ldrb	r0, [r5, #0x2]
	cmp	r0, #0x2
	bhi	.L11	@cond_branch
	mov	r4, #0xf7
	lsl	r4, r4, #0x2
	add	r0, r5, #0
	add	r1, r4, #0
	bl	CalcByteArraySum
	add	r4, r5, r4
	ldr	r1, [r4]
	cmp	r0, r1
	bne	.L11	@cond_branch
	mov	r0, #0x1
	b	.L12
.L11:
	mov	r0, #0x0
.L12:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 ValidateTrainerTowerTrainer,.Lfe2-ValidateTrainerTowerTrainer
	.align	2, 0
	.globl	ValidateTrainerTowerData
	.type	 ValidateTrainerTowerData,function
	.thumb_func
ValidateTrainerTowerData:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	ldrb	r6, [r7]
	sub	r0, r6, #0x1
	cmp	r0, #0x7
	bhi	.L21	@cond_branch
	mov	r5, #0x0
	cmp	r5, r6
	bcs	.L16	@cond_branch
	add	r4, r7, #0
	add	r4, r4, #0x8
.L18:
	add	r0, r4, #0
	bl	ValidateTrainerTowerTrainer
	cmp	r0, #0
	beq	.L23	@cond_branch
	mov	r0, #0xf8
	lsl	r0, r0, #0x2
	add	r4, r4, r0
	add	r5, r5, #0x1
	cmp	r5, r6
	bcc	.L18	@cond_branch
.L16:
	add	r0, r7, #0
	add	r0, r0, #0x8
	lsl	r1, r6, #0x5
	sub	r1, r1, r6
	lsl	r1, r1, #0x5
	bl	CalcByteArraySum
	ldr	r1, [r7, #0x4]
	cmp	r0, r1
	bne	.L21	@cond_branch
	mov	r0, #0x1
	b	.L22
.L23:
.L21:
	mov	r0, #0x0
.L22:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 ValidateTrainerTowerData,.Lfe3-ValidateTrainerTowerData
	.section .rodata
	.align	2, 0
.LC1:
	.ascii	"C:/WORK/POKeFRLG/src/pm_lgfr_ose/source/cereader_tool.c\000"
	.align	2, 0
.LC3:
	.ascii	"ttdata->dummy == 0\000"
	.align	2, 0
.LC5:
	.ascii	"ttdata->id == 0\000"
.text
	.align	2, 0
	.type	 CEReaderTool_SaveTrainerTower_r,function
	.thumb_func
CEReaderTool_SaveTrainerTower_r:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	ldrh	r0, [r5, #0x2]
	cmp	r0, #0
	beq	.L26	@cond_branch
	ldr	r0, .L32
	ldr	r2, .L32+0x4
	mov	r1, #0xc6
	mov	r3, #0x1
	bl	AGBAssert
.L26:
	ldrb	r0, [r5, #0x1]
	cmp	r0, #0
	beq	.L28	@cond_branch
	ldr	r0, .L32
	ldr	r2, .L32+0x8
	mov	r1, #0xc7
	mov	r3, #0x1
	bl	AGBAssert
.L28:
	mov	r6, #0x80
	lsl	r6, r6, #0x5
	add	r0, r4, #0
	mov	r1, #0x0
	add	r2, r6, #0
	bl	memset
	ldr	r2, .L32+0xc
	add	r0, r4, #0
	add	r1, r5, #0
	bl	memcpy
	bl	GetTrainerHillUnkVal
	strb	r0, [r4, #0x1]
	mov	r0, #0x1e
	add	r1, r4, #0
	bl	TryWriteSpecialSaveSector
	cmp	r0, #0x1
	bne	.L30	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	add	r2, r6, #0
	bl	memset
	ldr	r0, .L32+0xc
	add	r1, r5, r0
	mov	r2, #0xf8
	lsl	r2, r2, #0x4
	add	r0, r4, #0
	bl	memcpy
	mov	r0, #0x1f
	add	r1, r4, #0
	bl	TryWriteSpecialSaveSector
	cmp	r0, #0x1
	bne	.L30	@cond_branch
	mov	r0, #0x1
	b	.L31
.L33:
	.align	2, 0
.L32:
	.word	.LC1
	.word	.LC3
	.word	.LC5
	.word	0xf88
.L30:
	mov	r0, #0x0
.L31:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 CEReaderTool_SaveTrainerTower_r,.Lfe4-CEReaderTool_SaveTrainerTower_r
	.align	2, 0
	.globl	CEReaderTool_SaveTrainerTower
	.type	 CEReaderTool_SaveTrainerTower,function
	.thumb_func
CEReaderTool_SaveTrainerTower:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0x80
	lsl	r0, r0, #0x5
	bl	AllocZeroed
	add	r5, r0, #0
	add	r0, r4, #0
	add	r1, r5, #0
	bl	CEReaderTool_SaveTrainerTower_r
	add	r4, r0, #0
	add	r0, r5, #0
	bl	Free
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 CEReaderTool_SaveTrainerTower,.Lfe5-CEReaderTool_SaveTrainerTower
	.align	2, 0
	.type	 CEReaderTool_LoadTrainerTower_r,function
	.thumb_func
CEReaderTool_LoadTrainerTower_r:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	mov	r0, #0x1e
	bl	TryReadSpecialSaveSector
	cmp	r0, #0x1
	bne	.L38	@cond_branch
	ldr	r2, .L40
	add	r0, r5, #0
	add	r1, r4, #0
	bl	memcpy
	mov	r0, #0x1f
	add	r1, r4, #0
	bl	TryReadSpecialSaveSector
	cmp	r0, #0x1
	bne	.L38	@cond_branch
	ldr	r1, .L40
	add	r0, r5, r1
	mov	r2, #0xf8
	lsl	r2, r2, #0x4
	add	r1, r4, #0
	bl	memcpy
	add	r0, r5, #0
	bl	ValidateTrainerTowerData
	cmp	r0, #0
	beq	.L38	@cond_branch
	mov	r0, #0x1
	b	.L39
.L41:
	.align	2, 0
.L40:
	.word	0xf88
.L38:
	mov	r0, #0x0
.L39:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 CEReaderTool_LoadTrainerTower_r,.Lfe6-CEReaderTool_LoadTrainerTower_r
	.align	2, 0
	.globl	CEReaderTool_LoadTrainerTower
	.type	 CEReaderTool_LoadTrainerTower,function
	.thumb_func
CEReaderTool_LoadTrainerTower:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r0, #0x80
	lsl	r0, r0, #0x5
	bl	AllocZeroed
	add	r5, r0, #0
	add	r0, r4, #0
	add	r1, r5, #0
	bl	CEReaderTool_LoadTrainerTower_r
	add	r4, r0, #0
	add	r0, r5, #0
	bl	Free
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 CEReaderTool_LoadTrainerTower,.Lfe7-CEReaderTool_LoadTrainerTower
	.align	2, 0
	.globl	ReadTrainerTowerAndValidate
	.type	 ReadTrainerTowerAndValidate,function
	.thumb_func
ReadTrainerTowerAndValidate:
	mov	r0, #0x0
	bx	lr
.Lfe8:
	.size	 ReadTrainerTowerAndValidate,.Lfe8-ReadTrainerTowerAndValidate
.text
	.align	2, 0 @ Don't pad with nop

