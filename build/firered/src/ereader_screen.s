@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.type	 EReader_Load,function
	.thumb_func
EReader_Load:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r8, r2
	mov	r1, sp
	ldr	r4, .L3
	ldrh	r0, [r4]
	strh	r0, [r1]
	mov	r0, #0x0
	strh	r0, [r4]
	ldr	r1, .L3+0x4
	ldr	r0, .L3+0x8
	str	r0, [r1, #0x4]
	ldr	r0, .L3+0xc
	str	r0, [r1, #0x8]
	bl	EReaderHelper_SaveRegsState
	bl	EReaderHelper_ClearsSendRecvMgr
	ldr	r2, .L3+0x10
	ldrh	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strh	r0, [r2]
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r4]
	mov	r0, #0x0
	strh	r0, [r5]
	str	r6, [r5, #0x4]
	mov	r0, r8
	str	r0, [r5, #0x8]
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	0x4000208
	.word	gIntrTable
	.word	EReaderHelper_SerialCallback
	.word	EReaderHelper_Timer3Callback
	.word	0x4000200
.Lfe1:
	.size	 EReader_Load,.Lfe1-EReader_Load
	.align	2, 0
	.type	 EReader_Reset,function
	.thumb_func
EReader_Reset:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r1, sp
	ldr	r4, .L6
	ldrh	r0, [r4]
	strh	r0, [r1]
	mov	r0, #0x0
	strh	r0, [r4]
	bl	EReaderHelper_ClearsSendRecvMgr
	bl	EReaderHelper_RestoreRegsState
	bl	RestoreSerialTimer3IntrHandlers
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r4]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	0x4000208
.Lfe2:
	.size	 EReader_Reset,.Lfe2-EReader_Reset
	.align	2, 0
	.type	 EReader_Transfer,function
	.thumb_func
EReader_Transfer:
	push	{r4, r5, lr}
	add	r4, r0, #0
	mov	r5, #0x0
	ldr	r1, [r4, #0x4]
	ldr	r2, [r4, #0x8]
	mov	r0, #0x1
	mov	r3, #0x0
	bl	EReaderHandleTransfer
	add	r1, r0, #0
	strh	r1, [r4]
	mov	r0, #0x13
	and	r0, r0, r1
	cmp	r0, #0x10
	bne	.L9	@cond_branch
	mov	r5, #0x1
.L9:
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L10	@cond_branch
	mov	r5, #0x2
.L10:
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L11	@cond_branch
	mov	r5, #0x3
.L11:
	ldr	r1, .L12
	mov	r0, #0x0
	strb	r0, [r1]
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L13:
	.align	2, 0
.L12:
	.word	gShouldAdvanceLinkState
.Lfe3:
	.size	 EReader_Transfer,.Lfe3-EReader_Transfer
	.align	2, 0
	.type	 OpenEReaderLink,function
	.thumb_func
OpenEReaderLink:
	push	{lr}
	ldr	r0, .L15
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	mov	r1, #0x0
	bl	memset
	ldr	r1, .L15+0x4
	ldr	r2, .L15+0x8
	add	r0, r2, #0
	strh	r0, [r1]
	bl	OpenLink
	mov	r0, #0x1
	bl	SetSuppressLinkErrorMessage
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	gDecompressionBuffer
	.word	gLinkType
	.word	0x5502
.Lfe4:
	.size	 OpenEReaderLink,.Lfe4-OpenEReaderLink
	.align	2, 0
	.type	 ValidateEReaderConnection,function
	.thumb_func
ValidateEReaderConnection:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r1, sp
	ldr	r2, .L20
	ldrh	r0, [r2]
	strh	r0, [r1]
	mov	r0, #0x0
	strh	r0, [r2]
	ldr	r0, .L20+0x4
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r2]
	add	r2, sp, #0x4
	ldrh	r1, [r2]
	ldr	r0, .L20+0x8
	cmp	r1, r0
	bne	.L18	@cond_branch
	ldrh	r1, [r2, #0x2]
	ldr	r0, .L20+0xc
	cmp	r1, r0
	bne	.L18	@cond_branch
	ldrh	r1, [r2, #0x4]
	ldr	r0, .L20+0x10
	cmp	r1, r0
	bne	.L18	@cond_branch
	ldrh	r0, [r2, #0x6]
	cmp	r0, r1
	bne	.L18	@cond_branch
	mov	r0, #0x1
	b	.L19
.L21:
	.align	2, 0
.L20:
	.word	0x4000208
	.word	gLink+0x4
	.word	0xb9a0
	.word	0xccd0
	.word	0xffff
.L18:
	mov	r0, #0x0
.L19:
	add	sp, sp, #0xc
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 ValidateEReaderConnection,.Lfe5-ValidateEReaderConnection
	.align	2, 0
	.type	 IsEReaderConnectionSane,function
	.thumb_func
IsEReaderConnectionSane:
	push	{lr}
	bl	IsLinkMaster
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L23	@cond_branch
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L23	@cond_branch
	mov	r0, #0x1
	b	.L24
.L23:
	mov	r0, #0x0
.L24:
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 IsEReaderConnectionSane,.Lfe6-IsEReaderConnectionSane
	.align	2, 0
	.type	 TryReceiveCard,function
	.thumb_func
TryReceiveCard:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldrb	r0, [r4]
	sub	r0, r0, #0x3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bhi	.L26	@cond_branch
	bl	HasLinkErrorOccurred
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L26	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4]
	mov	r0, #0x3
	b	.L50
.L26:
	ldrb	r0, [r4]
	cmp	r0, #0x5
	bls	.LCB304
	b	.L27	@long jump
.LCB304:
	lsl	r0, r0, #0x2
	ldr	r1, .L51
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L52:
	.align	2, 0
.L51:
	.word	.L48
	.align	2, 0
	.align	2, 0
.L48:
	.word	.L28
	.word	.L32
	.word	.L34
	.word	.L38
	.word	.L45
	.word	.L46
.L28:
	bl	IsLinkMaster
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L35	@cond_branch
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L35	@cond_branch
	mov	r0, #0x1
	strb	r0, [r4]
	b	.L27
.L32:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x5
	bls	.L27	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5]
	mov	r0, #0x2
	strb	r0, [r4]
	b	.L27
.L34:
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L35	@cond_branch
	mov	r0, #0x42
	bl	PlaySE
	bl	CheckShouldAdvanceLinkState
	mov	r0, #0x0
	strh	r0, [r5]
	b	.L41
.L35:
	ldr	r0, .L53
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L27	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4]
	mov	r0, #0x1
	b	.L50
.L54:
	.align	2, 0
.L53:
	.word	gMain
.L38:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1e
	bls	.L39	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4]
	mov	r0, #0x5
	b	.L50
.L39:
	bl	IsLinkConnectionEstablished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L27	@cond_branch
	ldr	r0, .L55
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L41	@cond_branch
	bl	IsLinkPlayerDataExchangeComplete
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L42	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4]
	mov	r0, #0x2
	b	.L50
.L56:
	.align	2, 0
.L55:
	.word	gReceivedRemoteLinkPlayers
.L42:
	mov	r0, #0x4
	strb	r0, [r4]
	b	.L27
.L41:
	mov	r0, #0x3
	strb	r0, [r4]
	b	.L27
.L45:
	mov	r0, #0x0
	bl	SetCloseLinkCallbackAndType
	mov	r0, #0x5
	strb	r0, [r4]
	b	.L27
.L46:
	ldr	r0, .L57
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L27	@cond_branch
	strb	r0, [r4]
	mov	r0, #0x4
	b	.L50
.L58:
	.align	2, 0
.L57:
	.word	gReceivedRemoteLinkPlayers
.L27:
	mov	r0, #0x0
.L50:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 TryReceiveCard,.Lfe7-TryReceiveCard
	.align	2, 0
	.globl	CreateEReaderTask
	.type	 CreateEReaderTask,function
	.thumb_func
CreateEReaderTask:
	push	{r4, lr}
	ldr	r0, .L60
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L60+0x4
	add	r4, r4, r0
	mov	r0, #0x0
	strb	r0, [r4, #0x8]
	strb	r0, [r4, #0x9]
	strb	r0, [r4, #0xa]
	strb	r0, [r4, #0xb]
	strb	r0, [r4, #0xc]
	strb	r0, [r4, #0xd]
	mov	r1, #0x0
	strh	r0, [r4]
	strh	r0, [r4, #0x2]
	strh	r0, [r4, #0x4]
	strh	r0, [r4, #0x6]
	strb	r1, [r4, #0xe]
	mov	r0, #0x40
	bl	AllocZeroed
	str	r0, [r4, #0x10]
	pop	{r4}
	pop	{r0}
	bx	r0
.L61:
	.align	2, 0
.L60:
	.word	Task_EReader
	.word	gTasks+0x8
.Lfe8:
	.size	 CreateEReaderTask,.Lfe8-CreateEReaderTask
	.align	2, 0
	.type	 ResetTimer,function
	.thumb_func
ResetTimer:
	mov	r1, #0x0
	strh	r1, [r0]
	bx	lr
.Lfe9:
	.size	 ResetTimer,.Lfe9-ResetTimer
	.align	2, 0
	.type	 UpdateTimer,function
	.thumb_func
UpdateTimer:
	push	{lr}
	add	r2, r0, #0
	lsl	r1, r1, #0x10
	ldrh	r0, [r2]
	add	r0, r0, #0x1
	strh	r0, [r2]
	lsl	r0, r0, #0x10
	cmp	r0, r1
	bhi	.L64	@cond_branch
	mov	r0, #0x0
	b	.L65
.L64:
	mov	r0, #0x0
	strh	r0, [r2]
	mov	r0, #0x1
.L65:
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 UpdateTimer,.Lfe10-UpdateTimer
	.align	2, 0
	.type	 Task_EReader,function
	.thumb_func
Task_EReader:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L147
	add	r4, r0, r1
	ldrb	r0, [r4, #0x8]
	cmp	r0, #0x1a
	bls	.LCB600
	b	.L67	@long jump
.LCB600:
	lsl	r0, r0, #0x2
	ldr	r1, .L147+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L148:
	.align	2, 0
.L147:
	.word	gTasks+0x8
	.word	.L138
	.align	2, 0
	.align	2, 0
.L138:
	.word	.L68
	.word	.L70
	.word	.L71
	.word	.L73
	.word	.L76
	.word	.L78
	.word	.L82
	.word	.L90
	.word	.L92
	.word	.L93
	.word	.L95
	.word	.L100
	.word	.L102
	.word	.L103
	.word	.L113
	.word	.L117
	.word	.L118
	.word	.L122
	.word	.L125
	.word	.L127
	.word	.L131
	.word	.L133
	.word	.L135
	.word	.L129
	.word	.L67
	.word	.L67
	.word	.L137
.L68:
	add	r0, r4, #0
	add	r0, r0, #0x9
	ldr	r1, .L149
	bl	PrintMysteryGiftMenuMessage
	cmp	r0, #0
	bne	.LCB628
	b	.L67	@long jump
.LCB628:
	mov	r0, #0x1
	strb	r0, [r4, #0x8]
	b	.L67
.L150:
	.align	2, 0
.L149:
	.word	gJPText_ReceiveMysteryGiftWithEReader
.L70:
	bl	OpenEReaderLink
	add	r0, r4, #0
	bl	ResetTimer
	mov	r0, #0x2
	strb	r0, [r4, #0x8]
	b	.L67
.L71:
	add	r0, r4, #0
	mov	r1, #0xa
	bl	UpdateTimer
	cmp	r0, #0
	bne	.LCB653
	b	.L67	@long jump
.LCB653:
	mov	r0, #0x3
	strb	r0, [r4, #0x8]
	b	.L67
.L73:
	bl	IsEReaderConnectionSane
	cmp	r0, #0
	beq	.LCB662
	b	.L141	@long jump
.LCB662:
	bl	CloseLink
	b	.L140
.L76:
	add	r0, r4, #0
	add	r0, r0, #0x9
	ldr	r1, .L151
	bl	PrintMysteryGiftMenuMessage
	cmp	r0, #0
	bne	.LCB676
	b	.L67	@long jump
.LCB676:
	ldr	r0, .L151+0x4
	bl	AddTextPrinterToWindow1
	add	r0, r4, #0
	bl	ResetTimer
	mov	r0, #0x5
	strb	r0, [r4, #0x8]
	b	.L67
.L152:
	.align	2, 0
.L151:
	.word	gJPText_SelectConnectFromEReaderMenu
	.word	gJPText_SelectConnectWithGBA
.L78:
	add	r0, r4, #0
	mov	r1, #0x5a
	bl	UpdateTimer
	cmp	r0, #0
	beq	.L79	@cond_branch
	bl	OpenEReaderLink
	mov	r0, #0x6
	strb	r0, [r4, #0x8]
	b	.L67
.L79:
	ldr	r0, .L153
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB718
	b	.L67	@long jump
.LCB718:
	add	r0, r4, #0
	bl	ResetTimer
	mov	r0, #0x5
	bl	PlaySE
	b	.L142
.L154:
	.align	2, 0
.L153:
	.word	gMain
.L82:
	ldr	r0, .L155
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L83	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	CloseLink
	add	r0, r4, #0
	bl	ResetTimer
	b	.L142
.L156:
	.align	2, 0
.L155:
	.word	gMain
.L83:
	bl	GetLinkPlayerCount_2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L85	@cond_branch
	add	r0, r4, #0
	bl	ResetTimer
	bl	CloseLink
	mov	r0, #0x7
	strb	r0, [r4, #0x8]
	b	.L67
.L85:
	bl	ValidateEReaderConnection
	cmp	r0, #0
	beq	.L87	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	CloseLink
	add	r0, r4, #0
	bl	ResetTimer
	mov	r0, #0x8
	strb	r0, [r4, #0x8]
	b	.L67
.L87:
	add	r0, r4, #0
	mov	r1, #0xa
	bl	UpdateTimer
	cmp	r0, #0
	bne	.LCB794
	b	.L67	@long jump
.LCB794:
	bl	CloseLink
	bl	OpenEReaderLink
	add	r0, r4, #0
	bl	ResetTimer
	b	.L67
.L90:
	add	r0, r4, #0
	add	r0, r0, #0x9
	ldr	r1, .L157
	bl	PrintMysteryGiftMenuMessage
	cmp	r0, #0
	bne	.LCB811
	b	.L67	@long jump
.LCB811:
.L140:
	mov	r0, #0x4
	strb	r0, [r4, #0x8]
	b	.L67
.L158:
	.align	2, 0
.L157:
	.word	gJPText_LinkIsIncorrect
.L92:
	ldr	r0, .L159
	bl	AddTextPrinterToWindow1
	ldr	r0, .L159+0x4
	ldr	r1, .L159+0x8
	ldr	r2, .L159+0xc
	sub	r1, r1, r2
	bl	EReader_Load
	mov	r0, #0x9
	strb	r0, [r4, #0x8]
	b	.L67
.L160:
	.align	2, 0
.L159:
	.word	gJPText_Connecting
	.word	gEReaderData
	.word	gMultiBootProgram_EReader_End
	.word	gMultiBootProgram_EReader_Start
.L93:
	ldr	r0, .L161
	bl	EReader_Transfer
	strb	r0, [r4, #0xe]
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB857
	b	.L67	@long jump
.LCB857:
	mov	r0, #0xa
	strb	r0, [r4, #0x8]
	b	.L67
.L162:
	.align	2, 0
.L161:
	.word	gEReaderData
.L95:
	ldr	r0, .L163
	bl	EReader_Reset
	ldrb	r0, [r4, #0xe]
	cmp	r0, #0x3
	bne	.LCB876
	b	.L120	@long jump
.LCB876:
	cmp	r0, #0x1
	beq	.LCB879
	b	.L143	@long jump
.LCB879:
	add	r0, r4, #0
	bl	ResetTimer
	ldr	r0, .L163+0x4
	bl	AddTextPrinterToWindow1
	mov	r0, #0xb
	strb	r0, [r4, #0x8]
	b	.L67
.L164:
	.align	2, 0
.L163:
	.word	gEReaderData
	.word	gJPText_PleaseWaitAMoment
.L100:
	mov	r1, #0xd2
	lsl	r1, r1, #0x2
	add	r0, r4, #0
	bl	UpdateTimer
	cmp	r0, #0
	bne	.LCB906
	b	.L67	@long jump
.LCB906:
	mov	r0, #0xc
	strb	r0, [r4, #0x8]
	b	.L67
.L102:
	bl	OpenEReaderLink
	ldr	r0, .L165
	bl	AddTextPrinterToWindow1
.L141:
	mov	r0, #0xd
	strb	r0, [r4, #0x8]
	b	.L67
.L166:
	.align	2, 0
.L165:
	.word	gJPText_AllowEReaderToLoadCard
.L103:
	add	r0, r4, #0
	add	r0, r0, #0x9
	add	r1, r4, #0
	bl	TryReceiveCard
	cmp	r0, #0x5
	bls	.LCB936
	b	.L67	@long jump
.LCB936:
	lsl	r0, r0, #0x2
	ldr	r1, .L167
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L168:
	.align	2, 0
.L167:
	.word	.L111
	.align	2, 0
	.align	2, 0
.L111:
	.word	.L67
	.word	.L107
	.word	.L106
	.word	.L146
	.word	.L146
	.word	.L108
.L106:
	ldr	r0, .L169
	bl	AddTextPrinterToWindow1
	mov	r0, #0xe
	strb	r0, [r4, #0x8]
	b	.L67
.L170:
	.align	2, 0
.L169:
	.word	gJPText_Connecting
.L107:
	mov	r0, #0x5
	bl	PlaySE
	bl	CloseLink
.L142:
	mov	r0, #0x17
	strb	r0, [r4, #0x8]
	b	.L67
.L108:
	bl	CloseLink
	mov	r0, #0x15
	strb	r0, [r4, #0x8]
	b	.L67
.L113:
	bl	HasLinkErrorOccurred
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L114	@cond_branch
.L146:
	bl	CloseLink
	b	.L120
.L114:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1001
	b	.L67	@long jump
.LCB1001:
	bl	ResetBlockReceivedFlags
	mov	r0, #0xf
	strb	r0, [r4, #0x8]
	b	.L67
.L117:
	ldr	r0, .L171
	bl	ValidateTrainerTowerData
	strb	r0, [r4, #0xe]
	ldrb	r0, [r4, #0xe]
	bl	SetCloseLinkCallbackAndType
	mov	r0, #0x10
	strb	r0, [r4, #0x8]
	b	.L67
.L172:
	.align	2, 0
.L171:
	.word	gDecompressionBuffer
.L118:
	ldr	r0, .L173
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L67	@cond_branch
	ldrb	r0, [r4, #0xe]
	cmp	r0, #0x1
	bne	.L120	@cond_branch
	mov	r0, #0x11
	strb	r0, [r4, #0x8]
	b	.L67
.L174:
	.align	2, 0
.L173:
	.word	gReceivedRemoteLinkPlayers
.L120:
	mov	r0, #0x14
	strb	r0, [r4, #0x8]
	b	.L67
.L122:
	ldr	r0, .L175
	bl	CEReaderTool_SaveTrainerTower
	cmp	r0, #0
	beq	.L123	@cond_branch
	ldr	r0, .L175+0x4
	bl	AddTextPrinterToWindow1
	add	r0, r4, #0
	bl	ResetTimer
	mov	r0, #0x12
	strb	r0, [r4, #0x8]
	b	.L67
.L176:
	.align	2, 0
.L175:
	.word	gDecompressionBuffer
	.word	gJPText_ConnectionComplete
.L123:
	mov	r0, #0x16
	strb	r0, [r4, #0x8]
	b	.L67
.L125:
	add	r0, r4, #0
	mov	r1, #0x78
	bl	UpdateTimer
	cmp	r0, #0
	beq	.L67	@cond_branch
	ldr	r0, .L177
	bl	AddTextPrinterToWindow1
	mov	r0, #0x81
	lsl	r0, r0, #0x1
	bl	PlayFanfare
	mov	r0, #0x13
	strb	r0, [r4, #0x8]
	b	.L67
.L178:
	.align	2, 0
.L177:
	.word	gJPText_NewTrainerHasComeToSevii
.L127:
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L67	@cond_branch
	ldr	r0, .L179
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	b	.L144
.L180:
	.align	2, 0
.L179:
	.word	gMain
.L129:
	add	r0, r4, #0
	add	r0, r0, #0x9
	ldr	r1, .L181
	bl	PrintMysteryGiftMenuMessage
.L144:
	cmp	r0, #0
	beq	.L67	@cond_branch
	mov	r0, #0x1a
	strb	r0, [r4, #0x8]
	b	.L67
.L182:
	.align	2, 0
.L181:
	.word	gJPText_CardReadingHasBeenHalted
.L131:
	add	r0, r4, #0
	add	r0, r0, #0x9
	ldr	r1, .L183
	b	.L145
.L184:
	.align	2, 0
.L183:
	.word	gJPText_ConnectionErrorCheckLink
.L133:
	add	r0, r4, #0
	add	r0, r0, #0x9
	ldr	r1, .L185
	b	.L145
.L186:
	.align	2, 0
.L185:
	.word	gJPText_ConnectionErrorTryAgain
.L135:
	add	r0, r4, #0
	add	r0, r0, #0x9
	ldr	r1, .L187
.L145:
	bl	PrintMysteryGiftMenuMessage
	cmp	r0, #0
	beq	.L67	@cond_branch
.L143:
	mov	r0, #0x0
	strb	r0, [r4, #0x8]
	b	.L67
.L188:
	.align	2, 0
.L187:
	.word	gJPText_WriteErrorUnableToSaveData
.L137:
	bl	HelpSystem_Enable
	ldr	r0, [r4, #0x10]
	bl	Free
	add	r0, r5, #0
	bl	DestroyTask
	ldr	r0, .L189
	bl	SetMainCallback2
.L67:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L190:
	.align	2, 0
.L189:
	.word	MainCB_FreeAllBuffersAndReturnToInitTitleScreen
.Lfe11:
	.size	 Task_EReader,.Lfe11-Task_EReader
	.comm	gEReaderData, 12	@ 12
.text
	.align	2, 0 @ Don't pad with nop

