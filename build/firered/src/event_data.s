@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gSpecialVar_0x8000
	.section ewram_data,"aw"
	.align	1, 0
	.type	 gSpecialVar_0x8000,object
	.size	 gSpecialVar_0x8000,2
gSpecialVar_0x8000:
	.short	0x0
	.globl	gSpecialVar_0x8001
	.align	1, 0
	.type	 gSpecialVar_0x8001,object
	.size	 gSpecialVar_0x8001,2
gSpecialVar_0x8001:
	.short	0x0
	.globl	gSpecialVar_0x8002
	.align	1, 0
	.type	 gSpecialVar_0x8002,object
	.size	 gSpecialVar_0x8002,2
gSpecialVar_0x8002:
	.short	0x0
	.globl	gSpecialVar_0x8003
	.align	1, 0
	.type	 gSpecialVar_0x8003,object
	.size	 gSpecialVar_0x8003,2
gSpecialVar_0x8003:
	.short	0x0
	.globl	gSpecialVar_0x8004
	.align	1, 0
	.type	 gSpecialVar_0x8004,object
	.size	 gSpecialVar_0x8004,2
gSpecialVar_0x8004:
	.short	0x0
	.globl	gSpecialVar_0x8005
	.align	1, 0
	.type	 gSpecialVar_0x8005,object
	.size	 gSpecialVar_0x8005,2
gSpecialVar_0x8005:
	.short	0x0
	.globl	gSpecialVar_0x8006
	.align	1, 0
	.type	 gSpecialVar_0x8006,object
	.size	 gSpecialVar_0x8006,2
gSpecialVar_0x8006:
	.short	0x0
	.globl	gSpecialVar_0x8007
	.align	1, 0
	.type	 gSpecialVar_0x8007,object
	.size	 gSpecialVar_0x8007,2
gSpecialVar_0x8007:
	.short	0x0
	.globl	gSpecialVar_0x8008
	.align	1, 0
	.type	 gSpecialVar_0x8008,object
	.size	 gSpecialVar_0x8008,2
gSpecialVar_0x8008:
	.short	0x0
	.globl	gSpecialVar_0x8009
	.align	1, 0
	.type	 gSpecialVar_0x8009,object
	.size	 gSpecialVar_0x8009,2
gSpecialVar_0x8009:
	.short	0x0
	.globl	gSpecialVar_0x800A
	.align	1, 0
	.type	 gSpecialVar_0x800A,object
	.size	 gSpecialVar_0x800A,2
gSpecialVar_0x800A:
	.short	0x0
	.globl	gSpecialVar_0x800B
	.align	1, 0
	.type	 gSpecialVar_0x800B,object
	.size	 gSpecialVar_0x800B,2
gSpecialVar_0x800B:
	.short	0x0
	.globl	gSpecialVar_Result
	.align	1, 0
	.type	 gSpecialVar_Result,object
	.size	 gSpecialVar_Result,2
gSpecialVar_Result:
	.short	0x0
	.globl	gSpecialVar_LastTalked
	.align	1, 0
	.type	 gSpecialVar_LastTalked,object
	.size	 gSpecialVar_LastTalked,2
gSpecialVar_LastTalked:
	.short	0x0
	.globl	gSpecialVar_Facing
	.align	1, 0
	.type	 gSpecialVar_Facing,object
	.size	 gSpecialVar_Facing,2
gSpecialVar_Facing:
	.short	0x0
	.globl	gSpecialVar_MonBoxId
	.align	1, 0
	.type	 gSpecialVar_MonBoxId,object
	.size	 gSpecialVar_MonBoxId,2
gSpecialVar_MonBoxId:
	.short	0x0
	.globl	gSpecialVar_MonBoxPos
	.align	1, 0
	.type	 gSpecialVar_MonBoxPos,object
	.size	 gSpecialVar_MonBoxPos,2
gSpecialVar_MonBoxPos:
	.short	0x0
	.globl	gSpecialVar_TextColor
	.align	1, 0
	.type	 gSpecialVar_TextColor,object
	.size	 gSpecialVar_TextColor,2
gSpecialVar_TextColor:
	.short	0x0
	.globl	gSpecialVar_PrevTextColor
	.align	1, 0
	.type	 gSpecialVar_PrevTextColor,object
	.size	 gSpecialVar_PrevTextColor,2
gSpecialVar_PrevTextColor:
	.short	0x0
	.globl	gSpecialVar_0x8014
	.align	1, 0
	.type	 gSpecialVar_0x8014,object
	.size	 gSpecialVar_0x8014,2
gSpecialVar_0x8014:
	.short	0x0
	.globl	sSpecialFlags
	.type	 sSpecialFlags,object
	.size	 sSpecialFlags,16
sSpecialFlags:
	.space	16
.text
	.align	2, 0
	.globl	InitEventData
	.type	 InitEventData,function
	.thumb_func
InitEventData:
	push	{r4, lr}
	ldr	r4, .L3
	ldr	r0, [r4]
	mov	r1, #0xee
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	ldr	r2, .L3+0x4
	mov	r1, #0x0
	bl	memset
	ldr	r0, [r4]
	ldr	r1, .L3+0x8
	add	r0, r0, r1
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	mov	r1, #0x0
	bl	memset
	ldr	r0, .L3+0xc
	mov	r1, #0x0
	mov	r2, #0x10
	bl	memset
	pop	{r4}
	pop	{r0}
	bx	r0
.L4:
	.align	2, 0
.L3:
	.word	gSaveBlock1Ptr
	.word	0x121
	.word	0x1002
	.word	sSpecialFlags
.Lfe1:
	.size	 InitEventData,.Lfe1-InitEventData
	.align	2, 0
	.globl	ClearTempFieldEventData
	.type	 ClearTempFieldEventData,function
	.thumb_func
ClearTempFieldEventData:
	push	{lr}
	ldr	r0, .L6
	ldr	r0, [r0]
	mov	r1, #0xee
	lsl	r1, r1, #0x4
	add	r2, r0, r1
	mov	r1, #0x0
	str	r1, [r2]
	ldr	r1, .L6+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	mov	r2, #0x20
	bl	memset
	ldr	r0, .L6+0x8
	bl	FlagClear
	ldr	r0, .L6+0xc
	bl	FlagClear
	ldr	r0, .L6+0x10
	bl	FlagClear
	ldr	r0, .L6+0x14
	bl	FlagClear
	ldr	r0, .L6+0x18
	bl	FlagClear
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	gSaveBlock1Ptr
	.word	0x1002
	.word	0x806
	.word	0x807
	.word	0x808
	.word	0x80a
	.word	0x845
.Lfe2:
	.size	 ClearTempFieldEventData,.Lfe2-ClearTempFieldEventData
	.align	2, 0
	.type	 DisableNationalPokedex_RSE,function
	.thumb_func
DisableNationalPokedex_RSE:
	push	{lr}
	ldr	r0, .L9
	bl	GetVarPointer
	ldr	r1, .L9+0x4
	ldr	r2, [r1]
	mov	r1, #0x0
	strb	r1, [r2, #0x1a]
	strh	r1, [r0]
	ldr	r0, .L9+0x8
	bl	FlagClear
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	0x403c
	.word	gSaveBlock2Ptr
	.word	0x83b
.Lfe3:
	.size	 DisableNationalPokedex_RSE,.Lfe3-DisableNationalPokedex_RSE
	.align	2, 0
	.globl	EnableNationalPokedex_RSE
	.type	 EnableNationalPokedex_RSE,function
	.thumb_func
EnableNationalPokedex_RSE:
	push	{lr}
	ldr	r0, .L12
	bl	GetVarPointer
	ldr	r1, .L12+0x4
	ldr	r2, [r1]
	mov	r1, #0xda
	strb	r1, [r2, #0x1a]
	ldr	r2, .L12+0x8
	add	r1, r2, #0
	strh	r1, [r0]
	ldr	r0, .L12+0xc
	bl	FlagSet
	pop	{r0}
	bx	r0
.L13:
	.align	2, 0
.L12:
	.word	0x403c
	.word	gSaveBlock2Ptr
	.word	0x302
	.word	0x83b
.Lfe4:
	.size	 EnableNationalPokedex_RSE,.Lfe4-EnableNationalPokedex_RSE
	.align	2, 0
	.type	 IsNationalPokedexEnabled_RSE,function
	.thumb_func
IsNationalPokedexEnabled_RSE:
	push	{lr}
	ldr	r0, .L17
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1a]
	cmp	r0, #0xda
	bne	.L15	@cond_branch
	ldr	r0, .L17+0x4
	bl	VarGet
	lsl	r0, r0, #0x10
	ldr	r1, .L17+0x8
	cmp	r0, r1
	bne	.L15	@cond_branch
	ldr	r0, .L17+0xc
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L15	@cond_branch
	mov	r0, #0x1
	b	.L16
.L18:
	.align	2, 0
.L17:
	.word	gSaveBlock2Ptr
	.word	0x403c
	.word	0x3020000
	.word	0x83b
.L15:
	mov	r0, #0x0
.L16:
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 IsNationalPokedexEnabled_RSE,.Lfe5-IsNationalPokedexEnabled_RSE
	.align	2, 0
	.globl	DisableNationalPokedex
	.type	 DisableNationalPokedex,function
	.thumb_func
DisableNationalPokedex:
	push	{lr}
	ldr	r0, .L20
	bl	GetVarPointer
	ldr	r1, .L20+0x4
	ldr	r2, [r1]
	mov	r1, #0x0
	strb	r1, [r2, #0x1b]
	strh	r1, [r0]
	ldr	r0, .L20+0x8
	bl	FlagClear
	pop	{r0}
	bx	r0
.L21:
	.align	2, 0
.L20:
	.word	0x404e
	.word	gSaveBlock2Ptr
	.word	0x843
.Lfe6:
	.size	 DisableNationalPokedex,.Lfe6-DisableNationalPokedex
	.align	2, 0
	.globl	EnableNationalPokedex
	.type	 EnableNationalPokedex,function
	.thumb_func
EnableNationalPokedex:
	push	{lr}
	ldr	r0, .L23
	bl	GetVarPointer
	ldr	r1, .L23+0x4
	ldr	r2, [r1]
	mov	r1, #0xb9
	strb	r1, [r2, #0x1b]
	ldr	r2, .L23+0x8
	add	r1, r2, #0
	strh	r1, [r0]
	ldr	r0, .L23+0xc
	bl	FlagSet
	pop	{r0}
	bx	r0
.L24:
	.align	2, 0
.L23:
	.word	0x404e
	.word	gSaveBlock2Ptr
	.word	0x6258
	.word	0x843
.Lfe7:
	.size	 EnableNationalPokedex,.Lfe7-EnableNationalPokedex
	.align	2, 0
	.globl	IsNationalPokedexEnabled
	.type	 IsNationalPokedexEnabled,function
	.thumb_func
IsNationalPokedexEnabled:
	push	{lr}
	ldr	r0, .L28
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x1b]
	cmp	r0, #0xb9
	bne	.L26	@cond_branch
	ldr	r0, .L28+0x4
	bl	VarGet
	lsl	r0, r0, #0x10
	ldr	r1, .L28+0x8
	cmp	r0, r1
	bne	.L26	@cond_branch
	ldr	r0, .L28+0xc
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L26	@cond_branch
	mov	r0, #0x1
	b	.L27
.L29:
	.align	2, 0
.L28:
	.word	gSaveBlock2Ptr
	.word	0x404e
	.word	0x62580000
	.word	0x843
.L26:
	mov	r0, #0x0
.L27:
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 IsNationalPokedexEnabled,.Lfe8-IsNationalPokedexEnabled
	.align	2, 0
	.globl	DisableMysteryGift
	.type	 DisableMysteryGift,function
	.thumb_func
DisableMysteryGift:
	push	{lr}
	ldr	r0, .L31
	bl	FlagClear
	pop	{r0}
	bx	r0
.L32:
	.align	2, 0
.L31:
	.word	0x83c
.Lfe9:
	.size	 DisableMysteryGift,.Lfe9-DisableMysteryGift
	.align	2, 0
	.globl	EnableMysteryGift
	.type	 EnableMysteryGift,function
	.thumb_func
EnableMysteryGift:
	push	{lr}
	ldr	r0, .L34
	bl	FlagSet
	pop	{r0}
	bx	r0
.L35:
	.align	2, 0
.L34:
	.word	0x83c
.Lfe10:
	.size	 EnableMysteryGift,.Lfe10-EnableMysteryGift
	.align	2, 0
	.globl	IsMysteryGiftEnabled
	.type	 IsMysteryGiftEnabled,function
	.thumb_func
IsMysteryGiftEnabled:
	push	{lr}
	ldr	r0, .L37
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L38:
	.align	2, 0
.L37:
	.word	0x83c
.Lfe11:
	.size	 IsMysteryGiftEnabled,.Lfe11-IsMysteryGiftEnabled
	.align	2, 0
	.globl	ClearMysteryGiftFlags
	.type	 ClearMysteryGiftFlags,function
	.thumb_func
ClearMysteryGiftFlags:
	push	{lr}
	mov	r0, #0xf6
	lsl	r0, r0, #0x2
	bl	FlagClear
	ldr	r0, .L40
	bl	FlagClear
	ldr	r0, .L40+0x4
	bl	FlagClear
	ldr	r0, .L40+0x8
	bl	FlagClear
	mov	r0, #0xf7
	lsl	r0, r0, #0x2
	bl	FlagClear
	ldr	r0, .L40+0xc
	bl	FlagClear
	ldr	r0, .L40+0x10
	bl	FlagClear
	ldr	r0, .L40+0x14
	bl	FlagClear
	mov	r0, #0xf8
	lsl	r0, r0, #0x2
	bl	FlagClear
	ldr	r0, .L40+0x18
	bl	FlagClear
	ldr	r0, .L40+0x1c
	bl	FlagClear
	ldr	r0, .L40+0x20
	bl	FlagClear
	mov	r0, #0xf9
	lsl	r0, r0, #0x2
	bl	FlagClear
	ldr	r0, .L40+0x24
	bl	FlagClear
	ldr	r0, .L40+0x28
	bl	FlagClear
	ldr	r0, .L40+0x2c
	bl	FlagClear
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	0x3d9
	.word	0x3da
	.word	0x3db
	.word	0x3dd
	.word	0x3de
	.word	0x3df
	.word	0x3e1
	.word	0x3e2
	.word	0x3e3
	.word	0x3e5
	.word	0x3e6
	.word	0x3e7
.Lfe12:
	.size	 ClearMysteryGiftFlags,.Lfe12-ClearMysteryGiftFlags
	.align	2, 0
	.globl	ClearMysteryGiftVars
	.type	 ClearMysteryGiftVars,function
	.thumb_func
ClearMysteryGiftVars:
	push	{lr}
	ldr	r0, .L43
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L43+0x4
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L43+0x8
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L43+0xc
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L43+0x10
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L43+0x14
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L43+0x18
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L43+0x1c
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L43+0x20
	mov	r1, #0x0
	bl	VarSet
	pop	{r0}
	bx	r0
.L44:
	.align	2, 0
.L43:
	.word	0x40b5
	.word	0x40b6
	.word	0x40b7
	.word	0x40b8
	.word	0x40b9
	.word	0x40ba
	.word	0x40bb
	.word	0x40bc
	.word	0x4024
.Lfe13:
	.size	 ClearMysteryGiftVars,.Lfe13-ClearMysteryGiftVars
	.align	2, 0
	.globl	DisableResetRTC
	.type	 DisableResetRTC,function
	.thumb_func
DisableResetRTC:
	push	{lr}
	ldr	r0, .L46
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L46+0x4
	bl	FlagClear
	pop	{r0}
	bx	r0
.L47:
	.align	2, 0
.L46:
	.word	0x4032
	.word	0x83a
.Lfe14:
	.size	 DisableResetRTC,.Lfe14-DisableResetRTC
	.align	2, 0
	.globl	EnableResetRTC
	.type	 EnableResetRTC,function
	.thumb_func
EnableResetRTC:
	push	{lr}
	ldr	r0, .L49
	mov	r1, #0x92
	lsl	r1, r1, #0x4
	bl	VarSet
	ldr	r0, .L49+0x4
	bl	FlagSet
	pop	{r0}
	bx	r0
.L50:
	.align	2, 0
.L49:
	.word	0x4032
	.word	0x83a
.Lfe15:
	.size	 EnableResetRTC,.Lfe15-EnableResetRTC
	.align	2, 0
	.globl	CanResetRTC
	.type	 CanResetRTC,function
	.thumb_func
CanResetRTC:
	push	{lr}
	ldr	r0, .L55
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L53	@cond_branch
	ldr	r0, .L55+0x4
	bl	VarGet
	lsl	r0, r0, #0x10
	mov	r1, #0x92
	lsl	r1, r1, #0x14
	cmp	r0, r1
	bne	.L53	@cond_branch
	mov	r0, #0x1
	b	.L54
.L56:
	.align	2, 0
.L55:
	.word	0x83a
	.word	0x4032
.L53:
	mov	r0, #0x0
.L54:
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 CanResetRTC,.Lfe16-CanResetRTC
	.align	2, 0
	.globl	GetVarPointer
	.type	 GetVarPointer,function
	.thumb_func
GetVarPointer:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r6, r4, #0
	ldr	r0, .L71
	cmp	r4, r0
	bhi	.L58	@cond_branch
	mov	r0, #0x0
	b	.L69
.L72:
	.align	2, 0
.L71:
	.word	0x3fff
.L58:
	lsl	r0, r4, #0x10
	cmp	r0, #0
	blt	.L59	@cond_branch
	ldr	r0, .L73
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L63	@cond_branch
	cmp	r0, #0x1
	ble	.L60	@cond_branch
	cmp	r0, #0x2
	beq	.L65	@cond_branch
	b	.L60
.L74:
	.align	2, 0
.L73:
	.word	gQuestLogPlaybackState
.L63:
	mov	r0, #0x0
	add	r1, r4, #0
	bl	QuestLogGetFlagOrVarPtr
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L60	@cond_branch
	ldr	r0, .L75
	ldr	r1, [r0]
	ldr	r3, .L75+0x4
	add	r0, r4, r3
	lsl	r0, r0, #0x1
	ldr	r3, .L75+0x8
	add	r1, r1, r3
	add	r1, r1, r0
	ldrh	r0, [r2]
	strh	r0, [r1]
	b	.L60
.L76:
	.align	2, 0
.L75:
	.word	gSaveBlock1Ptr
	.word	-0x4000
	.word	0x1002
.L65:
	ldr	r0, .L77
	add	r5, r4, r0
	lsl	r0, r5, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	bl	IsFlagOrVarStoredInQuestLog
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L60	@cond_branch
	ldr	r0, .L77+0x4
	strh	r5, [r0]
	ldr	r0, .L77+0x8
	ldr	r1, [r0]
	ldr	r2, .L77
	add	r0, r4, r2
	lsl	r0, r0, #0x1
	ldr	r3, .L77+0xc
	add	r1, r1, r3
	add	r1, r1, r0
	ldrh	r2, [r1]
	mov	r0, #0x0
	add	r1, r4, #0
	bl	QuestLogSetFlagOrVar
.L60:
	ldr	r0, .L77+0x8
	lsl	r1, r6, #0x1
	ldr	r2, .L77+0x10
	add	r1, r1, r2
	ldr	r0, [r0]
	add	r0, r0, r1
	b	.L70
.L78:
	.align	2, 0
.L77:
	.word	-0x4000
	.word	gLastQuestLogStoredFlagOrVarIdx
	.word	gSaveBlock1Ptr
	.word	0x1002
	.word	-0x6ffe
.L59:
	ldr	r0, .L79
	ldr	r3, .L79+0x4
	add	r1, r6, r3
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
.L70:
.L69:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L80:
	.align	2, 0
.L79:
	.word	gSpecialVars
	.word	-0x8000
.Lfe17:
	.size	 GetVarPointer,.Lfe17-GetVarPointer
	.align	2, 0
	.type	 IsFlagOrVarStoredInQuestLog,function
	.thumb_func
IsFlagOrVarStoredInQuestLog:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	add	r0, r2, #0
	lsl	r1, r1, #0x18
	cmp	r1, #0
	bne	.L82	@cond_branch
	ldr	r0, .L91
	cmp	r2, r0
	bls	.L90	@cond_branch
	ldr	r1, .L91+0x4
	add	r0, r2, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1f
	bhi	.L85	@cond_branch
.L90:
	mov	r0, #0x0
	b	.L88
.L92:
	.align	2, 0
.L91:
	.word	0x22f
	.word	-0x803
.L82:
	cmp	r2, #0x2f
	bls	.L90	@cond_branch
	sub	r0, r0, #0x50
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x63
	bls	.L90	@cond_branch
.L85:
	mov	r0, #0x1
.L88:
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 IsFlagOrVarStoredInQuestLog,.Lfe18-IsFlagOrVarStoredInQuestLog
	.align	2, 0
	.globl	VarGet
	.type	 VarGet,function
	.thumb_func
VarGet:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	GetVarPointer
	cmp	r0, #0
	beq	.L94	@cond_branch
	ldrh	r0, [r0]
	b	.L95
.L94:
	add	r0, r4, #0
.L95:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 VarGet,.Lfe19-VarGet
	.align	2, 0
	.globl	VarSet
	.type	 VarSet,function
	.thumb_func
VarSet:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	bl	GetVarPointer
	cmp	r0, #0
	beq	.L97	@cond_branch
	strh	r4, [r0]
	mov	r0, #0x1
	b	.L98
.L97:
	mov	r0, #0x0
.L98:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe20:
	.size	 VarSet,.Lfe20-VarSet
	.align	2, 0
	.globl	VarGetObjectEventGraphicsId
	.type	 VarGetObjectEventGraphicsId,function
	.thumb_func
VarGetObjectEventGraphicsId:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x8
	ldr	r1, .L100
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	bl	VarGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L101:
	.align	2, 0
.L100:
	.word	0x40100000
.Lfe21:
	.size	 VarGetObjectEventGraphicsId,.Lfe21-VarGetObjectEventGraphicsId
	.align	2, 0
	.globl	GetFlagAddr
	.type	 GetFlagAddr,function
	.thumb_func
GetFlagAddr:
	push	{r4, r5, r6, lr}
	lsl	r5, r0, #0x10
	lsr	r4, r5, #0x10
	add	r6, r4, #0
	cmp	r4, #0
	bne	.L103	@cond_branch
	mov	r0, #0x0
	b	.L115
.L103:
	ldr	r0, .L118
	cmp	r4, r0
	bhi	.L104	@cond_branch
	ldr	r0, .L118+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L108	@cond_branch
	cmp	r0, #0x1
	ble	.L105	@cond_branch
	cmp	r0, #0x2
	beq	.L110	@cond_branch
	b	.L105
.L119:
	.align	2, 0
.L118:
	.word	0x3fff
	.word	gQuestLogPlaybackState
.L108:
	mov	r0, #0x1
	add	r1, r4, #0
	bl	QuestLogGetFlagOrVarPtr
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L105	@cond_branch
	ldr	r0, .L120
	ldr	r0, [r0]
	lsr	r1, r5, #0x13
	mov	r3, #0xee
	lsl	r3, r3, #0x4
	add	r0, r0, r3
	add	r0, r0, r1
	ldrb	r1, [r2]
	strb	r1, [r0]
	b	.L105
.L121:
	.align	2, 0
.L120:
	.word	gSaveBlock1Ptr
.L110:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	IsFlagOrVarStoredInQuestLog
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L105	@cond_branch
	ldr	r0, .L122
	strh	r4, [r0]
	ldr	r0, .L122+0x4
	ldr	r0, [r0]
	lsr	r1, r5, #0x13
	mov	r2, #0xee
	lsl	r2, r2, #0x4
	add	r0, r0, r2
	add	r0, r0, r1
	ldrb	r2, [r0]
	mov	r0, #0x1
	add	r1, r4, #0
	bl	QuestLogSetFlagOrVar
.L105:
	ldr	r0, .L122+0x4
	lsr	r1, r6, #0x3
	mov	r3, #0xee
	lsl	r3, r3, #0x4
	add	r1, r1, r3
	ldr	r0, [r0]
	b	.L117
.L123:
	.align	2, 0
.L122:
	.word	gLastQuestLogStoredFlagOrVarIdx
	.word	gSaveBlock1Ptr
.L104:
	ldr	r1, .L124
	add	r0, r6, r1
	cmp	r0, #0
	bge	.L114	@cond_branch
	ldr	r2, .L124+0x4
	add	r0, r6, r2
.L114:
	asr	r0, r0, #0x3
	ldr	r1, .L124+0x8
.L117:
	add	r0, r0, r1
.L115:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L125:
	.align	2, 0
.L124:
	.word	-0x4000
	.word	-0x3ff9
	.word	sSpecialFlags
.Lfe22:
	.size	 GetFlagAddr,.Lfe22-GetFlagAddr
	.align	2, 0
	.globl	FlagSet
	.type	 FlagSet,function
	.thumb_func
FlagSet:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	GetFlagAddr
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L127	@cond_branch
	mov	r0, #0x7
	and	r0, r0, r4
	mov	r1, #0x1
	lsl	r1, r1, r0
	ldrb	r0, [r2]
	orr	r1, r1, r0
	strb	r1, [r2]
.L127:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 FlagSet,.Lfe23-FlagSet
	.align	2, 0
	.globl	FlagClear
	.type	 FlagClear,function
	.thumb_func
FlagClear:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	GetFlagAddr
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L129	@cond_branch
	mov	r0, #0x7
	and	r0, r0, r4
	mov	r1, #0x1
	lsl	r1, r1, r0
	ldrb	r0, [r2]
	bic	r0, r0, r1
	strb	r0, [r2]
.L129:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 FlagClear,.Lfe24-FlagClear
	.align	2, 0
	.globl	FlagGet
	.type	 FlagGet,function
	.thumb_func
FlagGet:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	GetFlagAddr
	cmp	r0, #0
	beq	.L132	@cond_branch
	ldrb	r0, [r0]
	mov	r1, #0x7
	and	r1, r1, r4
	asr	r0, r0, r1
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L132	@cond_branch
	mov	r0, #0x1
	b	.L133
.L132:
	mov	r0, #0x0
.L133:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe25:
	.size	 FlagGet,.Lfe25-FlagGet
	.align	2, 0
	.globl	ResetSpecialVars
	.type	 ResetSpecialVars,function
	.thumb_func
ResetSpecialVars:
	ldr	r1, .L135
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L135+0x4
	strh	r0, [r1]
	ldr	r1, .L135+0x8
	strh	r0, [r1]
	ldr	r1, .L135+0xc
	strh	r0, [r1]
	ldr	r1, .L135+0x10
	strh	r0, [r1]
	ldr	r1, .L135+0x14
	strh	r0, [r1]
	ldr	r1, .L135+0x18
	strh	r0, [r1]
	ldr	r1, .L135+0x1c
	strh	r0, [r1]
	ldr	r1, .L135+0x20
	strh	r0, [r1]
	ldr	r1, .L135+0x24
	strh	r0, [r1]
	ldr	r1, .L135+0x28
	strh	r0, [r1]
	ldr	r1, .L135+0x2c
	strh	r0, [r1]
	ldr	r1, .L135+0x30
	strh	r0, [r1]
	ldr	r1, .L135+0x34
	strh	r0, [r1]
	ldr	r1, .L135+0x38
	strh	r0, [r1]
	ldr	r1, .L135+0x3c
	strh	r0, [r1]
	ldr	r1, .L135+0x40
	strh	r0, [r1]
	ldr	r1, .L135+0x44
	strh	r0, [r1]
	ldr	r1, .L135+0x48
	strh	r0, [r1]
	ldr	r1, .L135+0x4c
	strh	r0, [r1]
	ldr	r1, .L135+0x50
	strh	r0, [r1]
	bx	lr
.L136:
	.align	2, 0
.L135:
	.word	gSpecialVar_0x8000
	.word	gSpecialVar_0x8001
	.word	gSpecialVar_0x8002
	.word	gSpecialVar_0x8003
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_0x8006
	.word	gSpecialVar_0x8007
	.word	gSpecialVar_0x8008
	.word	gSpecialVar_0x8009
	.word	gSpecialVar_0x800A
	.word	gSpecialVar_0x800B
	.word	gSpecialVar_Facing
	.word	gSpecialVar_Result
	.word	gSpecialVar_ItemId
	.word	gSpecialVar_LastTalked
	.word	gSpecialVar_MonBoxId
	.word	gSpecialVar_MonBoxPos
	.word	gSpecialVar_TextColor
	.word	gSpecialVar_PrevTextColor
	.word	gSpecialVar_0x8014
.Lfe26:
	.size	 ResetSpecialVars,.Lfe26-ResetSpecialVars
	.comm	gLastQuestLogStoredFlagOrVarIdx, 4	@ 2
.text
	.align	2, 0 @ Don't pad with nop

