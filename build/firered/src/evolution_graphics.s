@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	1, 0
	.type	 sEvolutionSparklesPalData,object
sEvolutionSparklesPalData:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2946
	.short	0x35aa
	.short	0x420d
	.short	0x4e71
	.short	0x5ad4
	.short	0x6738
	.short	0x739b
	.short	0x7fff
	.size	 sEvolutionSparklesPalData,32
	.align	2, 0
	.type	 sEvolutionSparklesTileData,object
sEvolutionSparklesTileData:
	.word	0x2010
	.word	-0x21130000
	.word	-0x2000
	.word	-0x2fff2
	.word	-0x12001
	.word	0x10f0efff
	.word	0x100b1003
	.word	0x1b1013
	.size	 sEvolutionSparklesTileData,32
	.align	2, 0
	.type	 sSpriteSheet_EvolutionSparkles,object
sSpriteSheet_EvolutionSparkles:
	.word	sEvolutionSparklesTileData
	.short	0x20
	.short	0x3e9
	.space	8
	.size	 sSpriteSheet_EvolutionSparkles,16
	.align	2, 0
	.type	 sSpritePalette_EvolutionSparkles,object
sSpritePalette_EvolutionSparkles:
	.word	sEvolutionSparklesPalData
	.short	0x3e9
	.space	2
	.space	8
	.size	 sSpritePalette_EvolutionSparkles,16
	.align	2, 0
	.type	 sOamData_EvolutionSparkles,object
	.size	 sOamData_EvolutionSparkles,8
sOamData_EvolutionSparkles:
	.byte	0xa0
	.space	4
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 sSpriteAnim_EvolutionSparkles_0,object
sSpriteAnim_EvolutionSparkles_0:
	.short	0x0
	.byte	0x8
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_EvolutionSparkles_0,8
	.align	2, 0
	.type	 sSpriteAnimTable_EvolutionSparkles,object
sSpriteAnimTable_EvolutionSparkles:
	.word	sSpriteAnim_EvolutionSparkles_0
	.size	 sSpriteAnimTable_EvolutionSparkles,4
	.align	2, 0
	.type	 sSpriteTemplate_EvolutionSparkles,object
	.size	 sSpriteTemplate_EvolutionSparkles,24
sSpriteTemplate_EvolutionSparkles:
	.short	0x3e9
	.short	0x3e9
	.word	sOamData_EvolutionSparkles
	.word	sSpriteAnimTable_EvolutionSparkles
	.space	4
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy_EvoSparkles
	.align	1, 0
	.type	 sEvolutionSparkleMatrixScales,object
	.size	 sEvolutionSparkleMatrixScales,24
sEvolutionSparkleMatrixScales:
	.short	0x3c0
	.short	0x380
	.short	0x340
	.short	0x300
	.short	0x2c0
	.short	0x280
	.short	0x240
	.short	0x200
	.short	0x1c0
	.short	0x180
	.short	0x140
	.short	0x100
	.align	1, 0
	.type	 sUnused,object
sUnused:
	.short	-0x4
	.short	0x10
	.short	-0x3
	.short	0x30
	.short	-0x2
	.short	0x50
	.short	-0x1
	.short	0x70
	.short	0x1
	.short	0x70
	.short	0x2
	.short	0x50
	.short	0x3
	.short	0x30
	.short	0x4
	.short	0x10
	.size	 sUnused,32
.text
	.align	2, 0
	.type	 SpriteCallbackDummy_EvoSparkles,function
	.thumb_func
SpriteCallbackDummy_EvoSparkles:
	bx	lr
.Lfe1:
	.size	 SpriteCallbackDummy_EvoSparkles,.Lfe1-SpriteCallbackDummy_EvoSparkles
	.align	2, 0
	.type	 SetEvoSparklesMatrices,function
	.thumb_func
SetEvoSparklesMatrices:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	mov	r4, #0x0
	ldr	r5, .L11
.L9:
	add	r0, r4, #0
	add	r0, r0, #0x14
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r4, #0x1
	add	r1, r1, r5
	ldrh	r1, [r1]
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	SetOamMatrix
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0xb
	bls	.L9	@cond_branch
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L12:
	.align	2, 0
.L11:
	.word	sEvolutionSparkleMatrixScales
.Lfe2:
	.size	 SetEvoSparklesMatrices,.Lfe2-SetEvoSparklesMatrices
	.align	2, 0
	.type	 SpriteCB_PreEvoSparkleSet1,function
	.thumb_func
SpriteCB_PreEvoSparkleSet1:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x22
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x8
	ble	.L14	@cond_branch
	mov	r2, #0x3c
	ldrsh	r0, [r4, r2]
	mov	r1, r0
	mul	r1, r1, r0
	add	r0, r1, #0
	mov	r1, #0x50
	bl	__divsi3
	mov	r1, #0x58
	sub	r1, r1, r0
	strh	r1, [r4, #0x22]
	ldrh	r0, [r4, #0x3a]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, #0x38
	ldrsh	r1, [r4, r2]
	bl	Sin
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bge	.L15	@cond_branch
	add	r0, r0, #0x3
.L15:
	asr	r0, r0, #0x2
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x3a]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, #0x38
	ldrsh	r1, [r4, r2]
	bl	Cos
	strh	r0, [r4, #0x24]
	ldrh	r0, [r4, #0x3a]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x3a]
	ldrh	r1, [r4, #0x3c]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L16	@cond_branch
	ldrh	r0, [r4, #0x38]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x38]
.L16:
	ldrh	r0, [r4, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x3c]
	mov	r1, #0x26
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	ble	.L17	@cond_branch
	add	r1, r4, #0
	add	r1, r1, #0x43
	mov	r0, #0x1
	b	.L22
.L17:
	add	r1, r4, #0
	add	r1, r1, #0x43
	mov	r0, #0x14
.L22:
	strb	r0, [r1]
	mov	r2, #0x38
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bge	.L19	@cond_branch
	add	r0, r0, #0x3
.L19:
	asr	r0, r0, #0x2
	add	r0, r0, #0x14
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x1f
	bls	.L20	@cond_branch
	mov	r2, #0x1f
.L20:
	mov	r0, #0x1f
	and	r2, r2, r0
	lsl	r2, r2, #0x1
	ldrb	r1, [r4, #0x3]
	mov	r0, #0x3f
	neg	r0, r0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r4, #0x3]
	b	.L21
.L14:
	add	r0, r4, #0
	bl	DestroySprite
.L21:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 SpriteCB_PreEvoSparkleSet1,.Lfe3-SpriteCB_PreEvoSparkleSet1
	.align	2, 0
	.type	 CreatePreEvoSparkleSet1,function
	.thumb_func
CreatePreEvoSparkleSet1:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L25
	mov	r1, #0x78
	mov	r2, #0x58
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L24	@cond_branch
	ldr	r4, .L25+0x4
	lsl	r3, r0, #0x4
	add	r3, r3, r0
	lsl	r3, r3, #0x2
	add	r2, r3, r4
	mov	r1, #0x0
	mov	r0, #0x30
	strh	r0, [r2, #0x38]
	strh	r5, [r2, #0x3a]
	strh	r1, [r2, #0x3c]
	ldrb	r1, [r2, #0x1]
	sub	r0, r0, #0x34
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	ldrb	r0, [r2, #0x3]
	mov	r1, #0x3e
	orr	r0, r0, r1
	strb	r0, [r2, #0x3]
	add	r4, r4, #0x1c
	add	r3, r3, r4
	ldr	r0, .L25+0x8
	str	r0, [r3]
.L24:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L26:
	.align	2, 0
.L25:
	.word	sSpriteTemplate_EvolutionSparkles
	.word	gSprites
	.word	SpriteCB_PreEvoSparkleSet1
.Lfe4:
	.size	 CreatePreEvoSparkleSet1,.Lfe4-CreatePreEvoSparkleSet1
	.align	2, 0
	.type	 SpriteCB_PreEvoSparkleSet2,function
	.thumb_func
SpriteCB_PreEvoSparkleSet2:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x22
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x57
	bgt	.L28	@cond_branch
	mov	r2, #0x3c
	ldrsh	r0, [r4, r2]
	mov	r1, r0
	mul	r1, r1, r0
	add	r0, r1, #0
	mov	r1, #0x5
	bl	__divsi3
	add	r0, r0, #0x8
	strh	r0, [r4, #0x22]
	ldrh	r0, [r4, #0x3a]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, #0x38
	ldrsh	r1, [r4, r2]
	bl	Sin
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bge	.L29	@cond_branch
	add	r0, r0, #0x3
.L29:
	asr	r0, r0, #0x2
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x3a]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, #0x38
	ldrsh	r1, [r4, r2]
	bl	Cos
	strh	r0, [r4, #0x24]
	mov	r1, #0x3c
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x18
	mov	r1, #0x28
	bl	Sin
	add	r0, r0, #0x8
	strh	r0, [r4, #0x38]
	ldrh	r0, [r4, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x3c]
	b	.L30
.L28:
	add	r0, r4, #0
	bl	DestroySprite
.L30:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 SpriteCB_PreEvoSparkleSet2,.Lfe5-SpriteCB_PreEvoSparkleSet2
	.align	2, 0
	.type	 CreatePreEvoSparkleSet2,function
	.thumb_func
CreatePreEvoSparkleSet2:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L33
	mov	r1, #0x78
	mov	r2, #0x8
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L32	@cond_branch
	ldr	r4, .L33+0x4
	lsl	r3, r0, #0x4
	add	r3, r3, r0
	lsl	r3, r3, #0x2
	add	r2, r3, r4
	mov	r1, #0x0
	mov	r0, #0x8
	strh	r0, [r2, #0x38]
	strh	r5, [r2, #0x3a]
	strh	r1, [r2, #0x3c]
	ldrb	r1, [r2, #0x1]
	sub	r0, r0, #0xc
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x3f
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x32
	orr	r0, r0, r1
	strb	r0, [r2, #0x3]
	add	r2, r2, #0x43
	mov	r0, #0x1
	strb	r0, [r2]
	add	r4, r4, #0x1c
	add	r3, r3, r4
	ldr	r0, .L33+0x8
	str	r0, [r3]
.L32:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L34:
	.align	2, 0
.L33:
	.word	sSpriteTemplate_EvolutionSparkles
	.word	gSprites
	.word	SpriteCB_PreEvoSparkleSet2
.Lfe6:
	.size	 CreatePreEvoSparkleSet2,.Lfe6-CreatePreEvoSparkleSet2
	.align	2, 0
	.type	 SpriteCB_PostEvoSparkleSet1,function
	.thumb_func
SpriteCB_PostEvoSparkleSet1:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x38
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x8
	ble	.L36	@cond_branch
	ldrh	r0, [r4, #0x3a]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, #0x38
	ldrsh	r1, [r4, r2]
	bl	Sin
	strh	r0, [r4, #0x26]
	ldrh	r0, [r4, #0x3a]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r2, #0x38
	ldrsh	r1, [r4, r2]
	bl	Cos
	strh	r0, [r4, #0x24]
	ldrh	r0, [r4, #0x38]
	ldrh	r1, [r4, #0x34]
	sub	r0, r0, r1
	strh	r0, [r4, #0x38]
	ldrh	r0, [r4, #0x3a]
	add	r0, r0, #0x4
	strh	r0, [r4, #0x3a]
	b	.L37
.L36:
	add	r0, r4, #0
	bl	DestroySprite
.L37:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 SpriteCB_PostEvoSparkleSet1,.Lfe7-SpriteCB_PostEvoSparkleSet1
	.align	2, 0
	.type	 CreatePostEvoSparkleSet1,function
	.thumb_func
CreatePostEvoSparkleSet1:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r0, .L40
	mov	r1, #0x78
	mov	r2, #0x38
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L39	@cond_branch
	ldr	r4, .L40+0x4
	lsl	r3, r0, #0x4
	add	r3, r3, r0
	lsl	r3, r3, #0x2
	add	r2, r3, r4
	mov	r1, #0x0
	strh	r5, [r2, #0x34]
	mov	r0, #0x78
	strh	r0, [r2, #0x38]
	strh	r6, [r2, #0x3a]
	strh	r1, [r2, #0x3c]
	ldrb	r1, [r2, #0x1]
	sub	r0, r0, #0x7c
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	ldrb	r0, [r2, #0x3]
	mov	r1, #0x3e
	orr	r0, r0, r1
	strb	r0, [r2, #0x3]
	add	r2, r2, #0x43
	mov	r0, #0x1
	strb	r0, [r2]
	add	r4, r4, #0x1c
	add	r3, r3, r4
	ldr	r0, .L40+0x8
	str	r0, [r3]
.L39:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	sSpriteTemplate_EvolutionSparkles
	.word	gSprites
	.word	SpriteCB_PostEvoSparkleSet1
.Lfe8:
	.size	 CreatePostEvoSparkleSet1,.Lfe8-CreatePostEvoSparkleSet1
	.align	2, 0
	.type	 SpriteCB_PostEvoSparkleSet2,function
	.thumb_func
SpriteCB_PostEvoSparkleSet2:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldrh	r1, [r4, #0x3c]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L43	@cond_branch
	ldrh	r0, [r4, #0x22]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x22]
.L43:
	ldrh	r1, [r4, #0x3a]
	mov	r2, #0x3a
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x7f
	bgt	.L44	@cond_branch
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	mov	r5, #0x38
	ldrsh	r1, [r4, r5]
	bl	Sin
	neg	r0, r0
	strh	r0, [r4, #0x26]
	mov	r0, #0x34
	ldrsh	r1, [r4, r0]
	mov	r2, #0x3c
	ldrsh	r0, [r4, r2]
	mul	r0, r0, r1
	mov	r1, #0x3
	bl	__divsi3
	add	r0, r0, #0x78
	strh	r0, [r4, #0x20]
	ldrh	r0, [r4, #0x3a]
	add	r3, r0, #0x1
	strh	r3, [r4, #0x3a]
	mov	r5, #0x3a
	ldrsh	r1, [r4, r5]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	cmp	r0, #0
	bge	.L45	@cond_branch
	add	r0, r0, #0x7f
.L45:
	asr	r0, r0, #0x7
	mov	r1, #0x1f
	sub	r1, r1, r0
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x40
	ble	.L46	@cond_branch
	add	r1, r4, #0
	add	r1, r1, #0x43
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L47
.L46:
	add	r3, r4, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3]
	add	r1, r4, #0
	add	r1, r1, #0x43
	mov	r0, #0x14
	strb	r0, [r1]
	ldrh	r1, [r4, #0x3a]
	mov	r5, #0x3a
	ldrsh	r0, [r4, r5]
	cmp	r0, #0x70
	ble	.L47	@cond_branch
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L47	@cond_branch
	ldrb	r0, [r3]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r3]
.L47:
	cmp	r2, #0x13
	bhi	.L49	@cond_branch
	mov	r2, #0x14
.L49:
	mov	r0, #0x1f
	and	r2, r2, r0
	lsl	r2, r2, #0x1
	ldrb	r1, [r4, #0x3]
	mov	r0, #0x3f
	neg	r0, r0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r4, #0x3]
	ldrh	r0, [r4, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x3c]
	b	.L50
.L44:
	add	r0, r4, #0
	bl	DestroySprite
.L50:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 SpriteCB_PostEvoSparkleSet2,.Lfe9-SpriteCB_PostEvoSparkleSet2
	.align	2, 0
	.type	 CreatePostEvoSparkleSet2,function
	.thumb_func
CreatePostEvoSparkleSet2:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r0, .L53
	mov	r1, #0x78
	mov	r2, #0x38
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x40
	beq	.L52	@cond_branch
	bl	Random
	ldr	r6, .L53+0x4
	lsl	r5, r4, #0x4
	add	r5, r5, r4
	lsl	r5, r5, #0x2
	add	r4, r5, r6
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x7
	bl	__umodsi3
	mov	r1, #0x3
	sub	r1, r1, r0
	mov	r0, #0x0
	mov	r8, r0
	strh	r1, [r4, #0x34]
	bl	Random
	mov	r1, #0x3f
	and	r1, r1, r0
	add	r1, r1, #0x30
	strh	r1, [r4, #0x38]
	mov	r0, r8
	strh	r0, [r4, #0x3c]
	ldrb	r1, [r4, #0x1]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldrb	r0, [r4, #0x3]
	mov	r1, #0x3e
	orr	r0, r0, r1
	strb	r0, [r4, #0x3]
	add	r4, r4, #0x43
	mov	r0, #0x14
	strb	r0, [r4]
	add	r6, r6, #0x1c
	add	r5, r5, r6
	ldr	r0, .L53+0x8
	str	r0, [r5]
.L52:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L54:
	.align	2, 0
.L53:
	.word	sSpriteTemplate_EvolutionSparkles
	.word	gSprites
	.word	SpriteCB_PostEvoSparkleSet2
.Lfe10:
	.size	 CreatePostEvoSparkleSet2,.Lfe10-CreatePostEvoSparkleSet2
	.align	2, 0
	.globl	LoadEvoSparkleSpriteAndPal
	.type	 LoadEvoSparkleSpriteAndPal,function
	.thumb_func
LoadEvoSparkleSpriteAndPal:
	push	{lr}
	ldr	r0, .L56
	bl	LoadCompressedSpriteSheetUsingHeap
	ldr	r0, .L56+0x4
	bl	LoadSpritePalettes
	pop	{r0}
	bx	r0
.L57:
	.align	2, 0
.L56:
	.word	sSpriteSheet_EvolutionSparkles
	.word	sSpritePalette_EvolutionSparkles
.Lfe11:
	.size	 LoadEvoSparkleSpriteAndPal,.Lfe11-LoadEvoSparkleSpriteAndPal
	.align	2, 0
	.globl	EvolutionSparkles_SpiralUpward
	.type	 EvolutionSparkles_SpiralUpward,function
	.thumb_func
EvolutionSparkles_SpiralUpward:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L59
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L59+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xa]
	pop	{r4}
	pop	{r1}
	bx	r1
.L60:
	.align	2, 0
.L59:
	.word	EvoTask_PreEvoSparkleSet1Init
	.word	gTasks
.Lfe12:
	.size	 EvolutionSparkles_SpiralUpward,.Lfe12-EvolutionSparkles_SpiralUpward
	.align	2, 0
	.type	 EvoTask_PreEvoSparkleSet1Init,function
	.thumb_func
EvoTask_PreEvoSparkleSet1Init:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	SetEvoSparklesMatrices
	ldr	r0, .L62
	lsl	r5, r4, #0x2
	add	r5, r5, r4
	lsl	r5, r5, #0x3
	add	r5, r5, r0
	mov	r0, #0x0
	strh	r0, [r5, #0x26]
	mov	r0, #0xa
	ldrsh	r1, [r5, r0]
	mov	r0, #0x3
	lsl	r0, r0, r1
	ldr	r1, .L62+0x4
	str	r1, [sp]
	mov	r1, #0xa
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L62+0x8
	str	r0, [r5]
	mov	r0, #0x85
	bl	PlaySE
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L63:
	.align	2, 0
.L62:
	.word	gTasks
	.word	0x7fff
	.word	EvoTask_CreatePreEvoSparkleSet1
.Lfe13:
	.size	 EvoTask_PreEvoSparkleSet1Init,.Lfe13-EvoTask_PreEvoSparkleSet1Init
	.align	2, 0
	.type	 EvoTask_CreatePreEvoSparkleSet1,function
	.thumb_func
EvoTask_CreatePreEvoSparkleSet1:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L73
	lsl	r3, r5, #0x2
	add	r0, r3, r5
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r2, [r1, #0x26]
	mov	r4, #0x26
	ldrsh	r0, [r1, r4]
	cmp	r0, #0x3f
	bgt	.L65	@cond_branch
	mov	r0, #0x7
	and	r0, r0, r2
	add	r7, r3, #0
	cmp	r0, #0
	bne	.L66	@cond_branch
	mov	r4, #0x0
	add	r6, r1, #0
.L70:
	ldrh	r1, [r6, #0x26]
	mov	r0, #0x78
	and	r0, r0, r1
	lsl	r0, r0, #0x1
	lsl	r1, r4, #0x6
	add	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	CreatePreEvoSparkleSet1
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L70	@cond_branch
.L66:
	ldr	r0, .L73
	add	r1, r7, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x26]
	b	.L72
.L74:
	.align	2, 0
.L73:
	.word	gTasks
.L65:
	mov	r0, #0x60
	strh	r0, [r1, #0x26]
	ldr	r0, .L75
	str	r0, [r1]
.L72:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L76:
	.align	2, 0
.L75:
	.word	EvoTask_WaitForPre1SparklesToGoUp
.Lfe14:
	.size	 EvoTask_CreatePreEvoSparkleSet1,.Lfe14-EvoTask_CreatePreEvoSparkleSet1
	.align	2, 0
	.type	 EvoTask_WaitForPre1SparklesToGoUp,function
	.thumb_func
EvoTask_WaitForPre1SparklesToGoUp:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L80
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	ldrh	r3, [r1, #0x26]
	mov	r4, #0x26
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	beq	.L78	@cond_branch
	sub	r0, r3, #0x1
	strh	r0, [r1, #0x26]
	b	.L79
.L81:
	.align	2, 0
.L80:
	.word	gTasks
.L78:
	add	r0, r2, #0
	bl	DestroyTask
.L79:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 EvoTask_WaitForPre1SparklesToGoUp,.Lfe15-EvoTask_WaitForPre1SparklesToGoUp
	.align	2, 0
	.globl	EvolutionSparkles_ArcDown
	.type	 EvolutionSparkles_ArcDown,function
	.thumb_func
EvolutionSparkles_ArcDown:
	push	{lr}
	ldr	r0, .L83
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L84:
	.align	2, 0
.L83:
	.word	EvoTask_PreEvoSparkleSet2Init
.Lfe16:
	.size	 EvolutionSparkles_ArcDown,.Lfe16-EvolutionSparkles_ArcDown
	.align	2, 0
	.type	 EvoTask_PreEvoSparkleSet2Init,function
	.thumb_func
EvoTask_PreEvoSparkleSet2Init:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	SetEvoSparklesMatrices
	ldr	r1, .L86
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x26]
	ldr	r1, .L86+0x4
	str	r1, [r0]
	mov	r0, #0xb0
	bl	PlaySE
	pop	{r4}
	pop	{r0}
	bx	r0
.L87:
	.align	2, 0
.L86:
	.word	gTasks
	.word	EvoTask_CreatePreEvoSparklesSet2
.Lfe17:
	.size	 EvoTask_PreEvoSparkleSet2Init,.Lfe17-EvoTask_PreEvoSparkleSet2Init
	.align	2, 0
	.type	 EvoTask_CreatePreEvoSparklesSet2,function
	.thumb_func
EvoTask_CreatePreEvoSparklesSet2:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L97
	lsl	r2, r5, #0x2
	add	r0, r2, r5
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	mov	r3, #0x26
	ldrsh	r0, [r1, r3]
	cmp	r0, #0x5f
	bgt	.L89	@cond_branch
	add	r6, r2, #0
	cmp	r0, #0x5
	bgt	.L90	@cond_branch
	mov	r4, #0x0
.L94:
	lsl	r0, r4, #0x1c
	lsr	r0, r0, #0x18
	bl	CreatePreEvoSparkleSet2
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x8
	bls	.L94	@cond_branch
.L90:
	ldr	r0, .L97
	add	r1, r6, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x26]
	b	.L96
.L98:
	.align	2, 0
.L97:
	.word	gTasks
.L89:
	ldr	r0, .L99
	str	r0, [r1]
.L96:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L100:
	.align	2, 0
.L99:
	.word	EvoTask_PreEvoSparkleSet2Teardown
.Lfe18:
	.size	 EvoTask_CreatePreEvoSparklesSet2,.Lfe18-EvoTask_CreatePreEvoSparklesSet2
	.align	2, 0
	.type	 EvoTask_PreEvoSparkleSet2Teardown,function
	.thumb_func
EvoTask_PreEvoSparkleSet2Teardown:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 EvoTask_PreEvoSparkleSet2Teardown,.Lfe19-EvoTask_PreEvoSparkleSet2Teardown
	.align	2, 0
	.globl	EvolutionSparkles_CircleInward
	.type	 EvolutionSparkles_CircleInward,function
	.thumb_func
EvolutionSparkles_CircleInward:
	push	{lr}
	ldr	r0, .L103
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L104:
	.align	2, 0
.L103:
	.word	EvoTask_PostEvoSparklesSet1Init
.Lfe20:
	.size	 EvolutionSparkles_CircleInward,.Lfe20-EvolutionSparkles_CircleInward
	.align	2, 0
	.type	 EvoTask_PostEvoSparklesSet1Init,function
	.thumb_func
EvoTask_PostEvoSparklesSet1Init:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	SetEvoSparklesMatrices
	ldr	r1, .L106
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x26]
	ldr	r1, .L106+0x4
	str	r1, [r0]
	mov	r0, #0x5f
	bl	PlaySE
	pop	{r4}
	pop	{r0}
	bx	r0
.L107:
	.align	2, 0
.L106:
	.word	gTasks
	.word	EvoTask_CreatePostEvoSparklesSet1
.Lfe21:
	.size	 EvoTask_PostEvoSparklesSet1Init,.Lfe21-EvoTask_PostEvoSparklesSet1Init
	.align	2, 0
	.type	 EvoTask_CreatePostEvoSparklesSet1,function
	.thumb_func
EvoTask_CreatePostEvoSparklesSet1:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L123
	lsl	r2, r5, #0x2
	add	r0, r2, r5
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	mov	r3, #0x26
	ldrsh	r0, [r1, r3]
	cmp	r0, #0x2f
	bgt	.L109	@cond_branch
	add	r6, r2, #0
	cmp	r0, #0
	bne	.L110	@cond_branch
	mov	r4, #0x0
.L114:
	lsl	r0, r4, #0x1c
	lsr	r0, r0, #0x18
	mov	r1, #0x4
	bl	CreatePostEvoSparkleSet1
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L114	@cond_branch
.L110:
	ldr	r0, .L123
	add	r1, r6, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0x26
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x20
	bne	.L116	@cond_branch
	mov	r4, #0x0
.L120:
	lsl	r0, r4, #0x1c
	lsr	r0, r0, #0x18
	mov	r1, #0x8
	bl	CreatePostEvoSparkleSet1
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L120	@cond_branch
.L116:
	ldr	r0, .L123
	add	r1, r6, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x26]
	b	.L122
.L124:
	.align	2, 0
.L123:
	.word	gTasks
.L109:
	ldr	r0, .L125
	str	r0, [r1]
.L122:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L126:
	.align	2, 0
.L125:
	.word	EvoTask_PostEvoSparklesSet1Teardown
.Lfe22:
	.size	 EvoTask_CreatePostEvoSparklesSet1,.Lfe22-EvoTask_CreatePostEvoSparklesSet1
	.align	2, 0
	.type	 EvoTask_PostEvoSparklesSet1Teardown,function
	.thumb_func
EvoTask_PostEvoSparklesSet1Teardown:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 EvoTask_PostEvoSparklesSet1Teardown,.Lfe23-EvoTask_PostEvoSparklesSet1Teardown
	.align	2, 0
	.globl	EvolutionSparkles_SprayAndFlash
	.type	 EvolutionSparkles_SprayAndFlash,function
	.thumb_func
EvolutionSparkles_SprayAndFlash:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L129
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L129+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xc]
	pop	{r4}
	pop	{r1}
	bx	r1
.L130:
	.align	2, 0
.L129:
	.word	EvoTask_PostEvoSparklesSet2Init
	.word	gTasks
.Lfe24:
	.size	 EvolutionSparkles_SprayAndFlash,.Lfe24-EvolutionSparkles_SprayAndFlash
	.align	2, 0
	.type	 EvoTask_PostEvoSparklesSet2Init,function
	.thumb_func
EvoTask_PostEvoSparklesSet2Init:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	SetEvoSparklesMatrices
	ldr	r0, .L132
	lsl	r5, r4, #0x2
	add	r5, r5, r4
	lsl	r5, r5, #0x3
	add	r5, r5, r0
	mov	r0, #0x0
	strh	r0, [r5, #0x26]
	bl	IsMovingBackgroundTaskRunning
	ldr	r0, .L132+0x4
	ldr	r1, .L132+0x8
	mov	r2, #0x30
	bl	CpuSet
	ldr	r0, .L132+0xc
	ldr	r1, .L132+0x10
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L132+0x14
	str	r0, [r5]
	mov	r0, #0xc3
	bl	PlaySE
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L133:
	.align	2, 0
.L132:
	.word	gTasks
	.word	gPlttBufferFaded+0x40
	.word	gPlttBufferUnfaded+0x40
	.word	-0x6f0e4
	.word	0x7fff
	.word	EvoTask_CreatePostEvoSparklesSet2
.Lfe25:
	.size	 EvoTask_PostEvoSparklesSet2Init,.Lfe25-EvoTask_PostEvoSparklesSet2Init
	.align	2, 0
	.type	 EvoTask_CreatePostEvoSparklesSet2,function
	.thumb_func
EvoTask_CreatePostEvoSparklesSet2:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L148
	lsl	r5, r6, #0x2
	add	r0, r5, r6
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	mov	r0, #0x26
	ldrsh	r2, [r1, r0]
	cmp	r2, #0x7f
	bgt	.L135	@cond_branch
	add	r0, r2, #0
	cmp	r0, #0
	beq	.L139	@cond_branch
	cmp	r0, #0x20
	beq	.L145	@cond_branch
	cmp	r2, #0x31
	bgt	.L136	@cond_branch
	bl	Random
	mov	r1, #0x7
	and	r0, r0, r1
	bl	CreatePostEvoSparkleSet2
	b	.L136
.L149:
	.align	2, 0
.L148:
	.word	gTasks
.L139:
	mov	r4, #0x0
.L143:
	add	r0, r4, #0
	bl	CreatePostEvoSparkleSet2
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x7
	bls	.L143	@cond_branch
	b	.L136
.L145:
	ldr	r0, .L150
	ldr	r1, .L150+0x4
	str	r1, [sp]
	mov	r1, #0x10
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
.L136:
	ldr	r0, .L150+0x8
	add	r1, r5, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x26]
	b	.L147
.L151:
	.align	2, 0
.L150:
	.word	-0xf0e4
	.word	0x7fff
	.word	gTasks
.L135:
	ldr	r0, .L152
	str	r0, [r1]
.L147:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L153:
	.align	2, 0
.L152:
	.word	EvoTask_PostEvoSparklesSet2Teardown
.Lfe26:
	.size	 EvoTask_CreatePostEvoSparklesSet2,.Lfe26-EvoTask_CreatePostEvoSparklesSet2
	.align	2, 0
	.type	 EvoTask_PostEvoSparklesSet2Teardown,function
	.thumb_func
EvoTask_PostEvoSparklesSet2Teardown:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L156
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L155	@cond_branch
	add	r0, r2, #0
	bl	DestroyTask
.L155:
	pop	{r0}
	bx	r0
.L157:
	.align	2, 0
.L156:
	.word	gPaletteFade
.Lfe27:
	.size	 EvoTask_PostEvoSparklesSet2Teardown,.Lfe27-EvoTask_PostEvoSparklesSet2Teardown
	.align	2, 0
	.globl	EvolutionSparkles_SprayAndFlash_Trade
	.type	 EvolutionSparkles_SprayAndFlash_Trade,function
	.thumb_func
EvolutionSparkles_SprayAndFlash_Trade:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L159
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L159+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xc]
	pop	{r4}
	pop	{r1}
	bx	r1
.L160:
	.align	2, 0
.L159:
	.word	EvoTask_PostEvoSparklesSet2TradeInit
	.word	gTasks
.Lfe28:
	.size	 EvolutionSparkles_SprayAndFlash_Trade,.Lfe28-EvolutionSparkles_SprayAndFlash_Trade
	.align	2, 0
	.type	 EvoTask_PostEvoSparklesSet2TradeInit,function
	.thumb_func
EvoTask_PostEvoSparklesSet2TradeInit:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	SetEvoSparklesMatrices
	ldr	r0, .L162
	lsl	r5, r4, #0x2
	add	r5, r5, r4
	lsl	r5, r5, #0x3
	add	r5, r5, r0
	mov	r0, #0x0
	strh	r0, [r5, #0x26]
	bl	IsMovingBackgroundTaskRunning
	ldr	r0, .L162+0x4
	ldr	r1, .L162+0x8
	mov	r2, #0x30
	bl	CpuSet
	ldr	r0, .L162+0xc
	ldr	r1, .L162+0x10
	str	r1, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L162+0x14
	str	r0, [r5]
	mov	r0, #0xc3
	bl	PlaySE
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L163:
	.align	2, 0
.L162:
	.word	gTasks
	.word	gPlttBufferFaded+0x40
	.word	gPlttBufferUnfaded+0x40
	.word	-0x6f100
	.word	0x7fff
	.word	EvoTask_CreatePostEvoSparklesSet2Trade
.Lfe29:
	.size	 EvoTask_PostEvoSparklesSet2TradeInit,.Lfe29-EvoTask_PostEvoSparklesSet2TradeInit
	.align	2, 0
	.type	 EvoTask_CreatePostEvoSparklesSet2Trade,function
	.thumb_func
EvoTask_CreatePostEvoSparklesSet2Trade:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L178
	lsl	r5, r6, #0x2
	add	r0, r5, r6
	lsl	r0, r0, #0x3
	add	r1, r0, r1
	mov	r0, #0x26
	ldrsh	r2, [r1, r0]
	cmp	r2, #0x7f
	bgt	.L165	@cond_branch
	add	r0, r2, #0
	cmp	r0, #0
	beq	.L169	@cond_branch
	cmp	r0, #0x20
	beq	.L175	@cond_branch
	cmp	r2, #0x31
	bgt	.L166	@cond_branch
	bl	Random
	mov	r1, #0x7
	and	r0, r0, r1
	bl	CreatePostEvoSparkleSet2
	b	.L166
.L179:
	.align	2, 0
.L178:
	.word	gTasks
.L169:
	mov	r4, #0x0
.L173:
	add	r0, r4, #0
	bl	CreatePostEvoSparkleSet2
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x7
	bls	.L173	@cond_branch
	b	.L166
.L175:
	ldr	r0, .L180
	ldr	r1, .L180+0x4
	str	r1, [sp]
	mov	r1, #0x10
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
.L166:
	ldr	r0, .L180+0x8
	add	r1, r5, r6
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x26]
	b	.L177
.L181:
	.align	2, 0
.L180:
	.word	-0xf100
	.word	0x7fff
	.word	gTasks
.L165:
	ldr	r0, .L182
	str	r0, [r1]
.L177:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L183:
	.align	2, 0
.L182:
	.word	EvoTask_PostEvoSparklesSet2Teardown
.Lfe30:
	.size	 EvoTask_CreatePostEvoSparklesSet2Trade,.Lfe30-EvoTask_CreatePostEvoSparklesSet2Trade
	.align	2, 0
	.type	 SpriteCallbackDummy_MonSprites,function
	.thumb_func
SpriteCallbackDummy_MonSprites:
	bx	lr
.Lfe31:
	.size	 SpriteCallbackDummy_MonSprites,.Lfe31-SpriteCallbackDummy_MonSprites
	.align	2, 0
	.globl	CycleEvolutionMonSprite
	.type	 CycleEvolutionMonSprite,function
	.thumb_func
CycleEvolutionMonSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x28
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	mov	r1, #0x0
	ldr	r3, .L191
	ldr	r2, .L191+0x4
.L189:
	lsl	r0, r1, #0x1
	add	r0, r0, sp
	add	r0, r0, #0x4
	strh	r2, [r0]
	add	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0xf
	bls	.L189	@cond_branch
	add	r0, r3, #0
	mov	r1, #0x0
	bl	CreateTask
	mov	r8, r0
	mov	r0, r8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L191+0x8
	mov	r1, r8
	lsl	r6, r1, #0x2
	add	r6, r6, r8
	lsl	r6, r6, #0x3
	add	r6, r6, r0
	strh	r5, [r6, #0xa]
	strh	r7, [r6, #0xc]
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	strh	r1, [r6, #0xe]
	mov	r0, #0x10
	strh	r0, [r6, #0x10]
	mov	r4, #0x80
	lsl	r4, r4, #0x9
	str	r1, [sp]
	mov	r0, #0x1e
	mov	r2, #0x0
	mov	r3, #0x0
	bl	SetOamMatrix
	mov	r0, #0x10
	ldrsh	r1, [r6, r0]
	add	r0, r4, #0
	bl	__divsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r1, [sp]
	mov	r0, #0x1f
	mov	r2, #0x0
	mov	r3, #0x0
	bl	SetOamMatrix
	ldr	r1, .L191+0xc
	mov	r9, r1
	lsl	r2, r5, #0x4
	add	r2, r2, r5
	lsl	r2, r2, #0x2
	mov	r3, r9
	add	r3, r3, #0x1c
	add	r0, r2, r3
	ldr	r1, .L191+0x10
	str	r1, [r0]
	add	r2, r2, r9
	ldrb	r1, [r2, #0x1]
	mov	r4, #0x4
	neg	r4, r4
	add	r0, r4, #0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1]
	ldrb	r1, [r2, #0x3]
	mov	r0, #0x3f
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x3c
	orr	r0, r0, r1
	strb	r0, [r2, #0x3]
	mov	r0, #0x3e
	add	r0, r0, r2
	mov	sl, r0
	ldrb	r1, [r0]
	mov	r5, #0x5
	neg	r5, r5
	add	r0, r5, #0
	and	r0, r0, r1
	mov	r1, sl
	strb	r0, [r1]
	ldrb	r1, [r2, #0x5]
	lsr	r1, r1, #0x4
	lsl	r1, r1, #0x5
	ldr	r0, .L191+0x14
	mov	sl, r0
	add	r1, r1, sl
	add	r0, sp, #0x4
	mov	r2, #0x10
	str	r3, [sp, #0x24]
	bl	CpuSet
	lsl	r1, r7, #0x4
	add	r1, r1, r7
	lsl	r1, r1, #0x2
	ldr	r3, [sp, #0x24]
	add	r3, r1, r3
	ldr	r0, .L191+0x10
	str	r0, [r3]
	add	r1, r1, r9
	ldrb	r0, [r1, #0x1]
	and	r4, r4, r0
	mov	r0, #0x1
	orr	r4, r4, r0
	strb	r4, [r1, #0x1]
	ldrb	r0, [r1, #0x3]
	mov	r2, #0x3e
	orr	r0, r0, r2
	strb	r0, [r1, #0x3]
	add	r2, r1, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	and	r5, r5, r0
	strb	r5, [r2]
	ldrb	r1, [r1, #0x5]
	lsr	r1, r1, #0x4
	lsl	r1, r1, #0x5
	add	r1, r1, sl
	add	r0, sp, #0x4
	mov	r2, #0x10
	bl	CpuSet
	mov	r1, #0x0
	strh	r1, [r6, #0x18]
	mov	r0, r8
	add	sp, sp, #0x28
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L192:
	.align	2, 0
.L191:
	.word	EvoTask_PrePostEvoMonSpritesInit
	.word	0x7fff
	.word	gTasks
	.word	gSprites
	.word	SpriteCallbackDummy_MonSprites
	.word	gPlttBufferFaded+0x200
.Lfe32:
	.size	 CycleEvolutionMonSprite,.Lfe32-CycleEvolutionMonSprite
	.align	2, 0
	.type	 EvoTask_PrePostEvoMonSpritesInit,function
	.thumb_func
EvoTask_PrePostEvoMonSpritesInit:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L194
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1, #0x12]
	mov	r0, #0x8
	strh	r0, [r1, #0x14]
	ldr	r0, .L194+0x4
	str	r0, [r1]
	bx	lr
.L195:
	.align	2, 0
.L194:
	.word	gTasks
	.word	EvoTask_ChooseNextEvoSpriteAnim
.Lfe33:
	.size	 EvoTask_PrePostEvoMonSpritesInit,.Lfe33-EvoTask_PrePostEvoMonSpritesInit
	.align	2, 0
	.type	 EvoTask_ChooseNextEvoSpriteAnim,function
	.thumb_func
EvoTask_ChooseNextEvoSpriteAnim:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r1, .L201
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	mov	r1, #0x18
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	beq	.L197	@cond_branch
	add	r0, r3, #0
	bl	PreEvoVisible_PostEvoInvisible_KillTask
	b	.L198
.L202:
	.align	2, 0
.L201:
	.word	gTasks
.L197:
	ldrh	r1, [r2, #0x14]
	mov	r4, #0x14
	ldrsh	r0, [r2, r4]
	cmp	r0, #0x80
	bne	.L199	@cond_branch
	add	r0, r3, #0
	bl	PreEvoInvisible_PostEvoVisible_KillTask
	b	.L198
.L199:
	add	r0, r1, #0x2
	strh	r0, [r2, #0x14]
	ldrh	r0, [r2, #0x12]
	mov	r1, #0x1
	eor	r0, r0, r1
	strh	r0, [r2, #0x12]
	ldr	r0, .L203
	str	r0, [r2]
.L198:
	pop	{r4}
	pop	{r0}
	bx	r0
.L204:
	.align	2, 0
.L203:
	.word	EvoTask_ShrinkOrExpandEvoSprites
.Lfe34:
	.size	 EvoTask_ChooseNextEvoSpriteAnim,.Lfe34-EvoTask_ChooseNextEvoSpriteAnim
	.align	2, 0
	.type	 EvoTask_ShrinkOrExpandEvoSprites,function
	.thumb_func
EvoTask_ShrinkOrExpandEvoSprites:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L220
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r2, r0, r1
	mov	r3, #0x18
	ldrsh	r0, [r2, r3]
	add	r5, r1, #0
	cmp	r0, #0
	beq	.L206	@cond_branch
	ldr	r0, .L220+0x4
	str	r0, [r2]
	b	.L207
.L221:
	.align	2, 0
.L220:
	.word	gTasks
	.word	PreEvoVisible_PostEvoInvisible_KillTask
.L206:
	mov	r6, #0x0
	mov	r7, #0x12
	ldrsh	r0, [r2, r7]
	cmp	r0, #0
	bne	.L208	@cond_branch
	mov	r0, #0xe
	ldrsh	r1, [r2, r0]
	mov	r3, #0x14
	ldrsh	r0, [r2, r3]
	mov	r3, #0x80
	lsl	r3, r3, #0x1
	sub	r0, r3, r0
	cmp	r1, r0
	bge	.L209	@cond_branch
	ldrh	r0, [r2, #0x14]
	ldrh	r7, [r2, #0xe]
	add	r0, r0, r7
	strh	r0, [r2, #0xe]
	b	.L210
.L209:
	strh	r3, [r2, #0xe]
	mov	r6, #0x1
.L210:
	lsl	r2, r4, #0x2
	add	r0, r2, r4
	lsl	r0, r0, #0x3
	add	r3, r0, r5
	mov	r0, #0x10
	ldrsh	r1, [r3, r0]
	mov	r7, #0x14
	ldrsh	r0, [r3, r7]
	add	r0, r0, #0x10
	cmp	r1, r0
	ble	.L211	@cond_branch
	ldrh	r0, [r3, #0x10]
	ldrh	r1, [r3, #0x14]
	sub	r0, r0, r1
	strh	r0, [r3, #0x10]
	b	.L213
.L211:
	mov	r0, #0x10
	strh	r0, [r3, #0x10]
	b	.L219
.L208:
	mov	r0, #0x10
	ldrsh	r1, [r2, r0]
	mov	r3, #0x14
	ldrsh	r0, [r2, r3]
	mov	r3, #0x80
	lsl	r3, r3, #0x1
	sub	r0, r3, r0
	cmp	r1, r0
	bge	.L214	@cond_branch
	ldrh	r0, [r2, #0x14]
	ldrh	r7, [r2, #0x10]
	add	r0, r0, r7
	strh	r0, [r2, #0x10]
	b	.L215
.L214:
	strh	r3, [r2, #0x10]
	mov	r6, #0x1
.L215:
	lsl	r2, r4, #0x2
	add	r0, r2, r4
	lsl	r0, r0, #0x3
	add	r3, r0, r5
	mov	r0, #0xe
	ldrsh	r1, [r3, r0]
	mov	r7, #0x14
	ldrsh	r0, [r3, r7]
	add	r0, r0, #0x10
	cmp	r1, r0
	ble	.L216	@cond_branch
	ldrh	r0, [r3, #0xe]
	ldrh	r1, [r3, #0x14]
	sub	r0, r0, r1
	strh	r0, [r3, #0xe]
	b	.L213
.L216:
	mov	r0, #0x10
	strh	r0, [r3, #0xe]
.L219:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L213:
	add	r0, r2, r4
	lsl	r0, r0, #0x3
	add	r5, r0, r5
	mov	r0, #0xe
	ldrsh	r1, [r5, r0]
	mov	r4, #0x80
	lsl	r4, r4, #0x9
	add	r0, r4, #0
	bl	__divsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r1, [sp]
	mov	r0, #0x1e
	mov	r2, #0x0
	mov	r3, #0x0
	bl	SetOamMatrix
	mov	r3, #0x10
	ldrsh	r1, [r5, r3]
	add	r0, r4, #0
	bl	__divsi3
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r1, [sp]
	mov	r0, #0x1f
	mov	r2, #0x0
	mov	r3, #0x0
	bl	SetOamMatrix
	cmp	r6, #0x2
	bne	.L207	@cond_branch
	ldr	r0, .L222
	str	r0, [r5]
.L207:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L223:
	.align	2, 0
.L222:
	.word	EvoTask_ChooseNextEvoSpriteAnim
.Lfe35:
	.size	 EvoTask_ShrinkOrExpandEvoSprites,.Lfe35-EvoTask_ShrinkOrExpandEvoSprites
	.align	2, 0
	.type	 PreEvoInvisible_PostEvoVisible_KillTask,function
	.thumb_func
PreEvoInvisible_PostEvoVisible_KillTask:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L225
	mov	r8, r1
	ldr	r1, .L225+0x4
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	mov	r2, #0xa
	ldrsh	r1, [r4, r2]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r8
	ldrb	r3, [r2, #0x1]
	mov	r6, #0x4
	neg	r6, r6
	add	r1, r6, #0
	and	r1, r1, r3
	strb	r1, [r2, #0x1]
	mov	r2, #0xa
	ldrsh	r1, [r4, r2]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r8
	ldrb	r3, [r2, #0x3]
	mov	r5, #0x3f
	neg	r5, r5
	add	r1, r5, #0
	and	r1, r1, r3
	strb	r1, [r2, #0x3]
	mov	r1, #0xa
	ldrsh	r2, [r4, r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r3, #0x4
	orr	r2, r2, r3
	strb	r2, [r1]
	mov	r1, #0xc
	ldrsh	r2, [r4, r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldrb	r2, [r1, #0x1]
	and	r6, r6, r2
	strb	r6, [r1, #0x1]
	mov	r1, #0xc
	ldrsh	r2, [r4, r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldrb	r2, [r1, #0x3]
	and	r5, r5, r2
	strb	r5, [r1, #0x3]
	mov	r1, #0xc
	ldrsh	r2, [r4, r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	add	r1, r1, #0x3e
	ldrb	r3, [r1]
	mov	r2, #0x5
	neg	r2, r2
	and	r2, r2, r3
	strb	r2, [r1]
	bl	DestroyTask
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L226:
	.align	2, 0
.L225:
	.word	gSprites
	.word	gTasks
.Lfe36:
	.size	 PreEvoInvisible_PostEvoVisible_KillTask,.Lfe36-PreEvoInvisible_PostEvoVisible_KillTask
	.align	2, 0
	.type	 PreEvoVisible_PostEvoInvisible_KillTask,function
	.thumb_func
PreEvoVisible_PostEvoInvisible_KillTask:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L228
	mov	r8, r1
	ldr	r1, .L228+0x4
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	add	r4, r4, r1
	mov	r2, #0xa
	ldrsh	r1, [r4, r2]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r8
	ldrb	r3, [r2, #0x1]
	mov	r6, #0x4
	neg	r6, r6
	add	r1, r6, #0
	and	r1, r1, r3
	strb	r1, [r2, #0x1]
	mov	r2, #0xa
	ldrsh	r1, [r4, r2]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r8
	ldrb	r3, [r2, #0x3]
	mov	r5, #0x3f
	neg	r5, r5
	add	r1, r5, #0
	and	r1, r1, r3
	strb	r1, [r2, #0x3]
	mov	r1, #0xa
	ldrsh	r2, [r4, r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	add	r1, r1, #0x3e
	ldrb	r3, [r1]
	mov	r2, #0x5
	neg	r2, r2
	and	r2, r2, r3
	strb	r2, [r1]
	mov	r1, #0xc
	ldrsh	r2, [r4, r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldrb	r2, [r1, #0x1]
	and	r6, r6, r2
	strb	r6, [r1, #0x1]
	mov	r1, #0xc
	ldrsh	r2, [r4, r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldrb	r2, [r1, #0x3]
	and	r5, r5, r2
	strb	r5, [r1, #0x3]
	mov	r1, #0xc
	ldrsh	r2, [r4, r1]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r3, #0x4
	orr	r2, r2, r3
	strb	r2, [r1]
	bl	DestroyTask
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L229:
	.align	2, 0
.L228:
	.word	gSprites
	.word	gTasks
.Lfe37:
	.size	 PreEvoVisible_PostEvoInvisible_KillTask,.Lfe37-PreEvoVisible_PostEvoInvisible_KillTask
.text
	.align	2, 0 @ Don't pad with nop

