@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	SetUpReflection
	.type	 SetUpReflection,function
	.thumb_func
SetUpReflection:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	add	r4, r1, #0
	lsl	r5, r2, #0x18
	lsr	r5, r5, #0x18
	mov	r0, #0x20
	ldrsh	r1, [r4, r0]
	mov	r0, #0x22
	ldrsh	r2, [r4, r0]
	add	r0, r4, #0
	mov	r3, #0x98
	bl	CreateCopySpriteAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L6
	add	r7, r1, r0
	ldr	r0, .L6+0x4
	str	r0, [r7, #0x1c]
	ldrb	r1, [r7, #0x5]
	mov	r0, #0xc
	orr	r1, r1, r0
	strb	r1, [r7, #0x5]
	ldr	r2, .L6+0x8
	lsr	r0, r1, #0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x4
	mov	r2, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r7, #0x5]
	mov	r1, #0x3f
	add	r1, r1, r7
	mov	r8, r1
	ldrb	r0, [r1]
	mov	r1, #0x40
	orr	r0, r0, r1
	mov	r1, r8
	strb	r0, [r1]
	ldr	r0, .L6+0xc
	str	r0, [r7, #0x8]
	add	r0, r7, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
	ldr	r0, .L6+0x10
	str	r0, [r7, #0x10]
	mov	r1, r8
	ldrb	r0, [r1]
	mov	r1, #0x8
	orr	r0, r0, r1
	mov	r1, r8
	strb	r0, [r1]
	add	r2, r7, #0
	add	r2, r2, #0x42
	ldrb	r1, [r2]
	mov	r0, #0x3f
	and	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r4, #0x2e]
	strh	r0, [r7, #0x2e]
	ldrb	r0, [r6, #0x8]
	strh	r0, [r7, #0x30]
	strh	r5, [r7, #0x3c]
	add	r0, r6, #0
	add	r1, r7, #0
	bl	LoadObjectReflectionPalette
	cmp	r5, #0
	bne	.L5	@cond_branch
	ldrb	r0, [r7, #0x1]
	mov	r1, #0x4
	neg	r1, r1
	and	r1, r1, r0
	mov	r0, #0x1
	orr	r1, r1, r0
	strb	r1, [r7, #0x1]
.L5:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	gSprites
	.word	UpdateObjectReflectionSprite
	.word	gReflectionEffectPaletteMap
	.word	gDummySpriteAnimTable
	.word	gDummySpriteAffineAnimTable
.Lfe1:
	.size	 SetUpReflection,.Lfe1-SetUpReflection
	.align	2, 0
	.type	 GetReflectionVerticalOffset,function
	.thumb_func
GetReflectionVerticalOffset:
	push	{lr}
	ldrb	r0, [r0, #0x5]
	bl	GetObjectEventGraphicsInfo
	ldrh	r0, [r0, #0xa]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 GetReflectionVerticalOffset,.Lfe2-GetReflectionVerticalOffset
	.section .rodata
	.align	1, 0
.LC5:
	.short	0xc
	.short	0x1c
	.short	0x2c
.text
	.align	2, 0
	.type	 LoadObjectReflectionPalette,function
	.thumb_func
LoadObjectReflectionPalette:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	add	r4, r1, #0
	ldr	r1, .L13
	mov	r0, sp
	mov	r2, #0x6
	bl	memcpy
	mov	r0, #0x0
	strh	r0, [r4, #0x32]
	ldrb	r0, [r5, #0x5]
	bl	GetObjectEventGraphicsInfo
	ldrb	r1, [r0, #0xc]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L10	@cond_branch
	ldrb	r0, [r5, #0x1f]
	bl	MetatileBehavior_GetBridgeType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	bne	.L11	@cond_branch
	ldrb	r0, [r5, #0x1e]
	bl	MetatileBehavior_GetBridgeType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L10	@cond_branch
.L11:
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	strh	r0, [r4, #0x32]
	ldrb	r1, [r4, #0x5]
	lsr	r1, r1, #0x4
	add	r0, r5, #0
	bl	LoadObjectHighBridgeReflectionPalette
	b	.L12
.L14:
	.align	2, 0
.L13:
	.word	.LC5
.L10:
	ldrb	r1, [r4, #0x5]
	lsr	r1, r1, #0x4
	add	r0, r5, #0
	bl	LoadObjectRegularReflectionPalette
.L12:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 LoadObjectReflectionPalette,.Lfe3-LoadObjectReflectionPalette
	.align	2, 0
	.type	 LoadObjectRegularReflectionPalette,function
	.thumb_func
LoadObjectRegularReflectionPalette:
	push	{r4, lr}
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldrb	r0, [r0, #0x5]
	bl	GetObjectEventGraphicsInfo
	add	r2, r0, #0
	ldrh	r1, [r2, #0x4]
	ldr	r0, .L21
	cmp	r1, r0
	beq	.L16	@cond_branch
	ldrb	r0, [r2, #0xc]
	mov	r1, #0xf
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L17	@cond_branch
	ldrh	r0, [r2, #0x2]
	add	r1, r4, #0
	bl	LoadPlayerObjectReflectionPalette
	b	.L18
.L22:
	.align	2, 0
.L21:
	.word	0x11ff
.L17:
	cmp	r1, #0xa
	bne	.L19	@cond_branch
	ldrh	r0, [r2, #0x2]
	add	r1, r4, #0
	bl	LoadSpecialObjectReflectionPalette
	b	.L18
.L19:
	add	r0, r4, #0
	bl	GetObjectPaletteTag
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r4, #0
	bl	PatchObjectPalette
.L18:
	add	r0, r4, #0
	bl	UpdateSpritePaletteWithWeather
.L16:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 LoadObjectRegularReflectionPalette,.Lfe4-LoadObjectRegularReflectionPalette
	.align	2, 0
	.type	 LoadObjectHighBridgeReflectionPalette,function
	.thumb_func
LoadObjectHighBridgeReflectionPalette:
	push	{r4, lr}
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldrb	r0, [r0, #0x5]
	bl	GetObjectEventGraphicsInfo
	add	r2, r0, #0
	ldrh	r1, [r2, #0x4]
	ldr	r0, .L25
	cmp	r1, r0
	beq	.L24	@cond_branch
	add	r0, r1, #0
	add	r1, r4, #0
	bl	PatchObjectPalette
	add	r0, r4, #0
	bl	UpdateSpritePaletteWithWeather
.L24:
	pop	{r4}
	pop	{r0}
	bx	r0
.L26:
	.align	2, 0
.L25:
	.word	0x11ff
.Lfe5:
	.size	 LoadObjectHighBridgeReflectionPalette,.Lfe5-LoadObjectHighBridgeReflectionPalette
	.align	2, 0
	.type	 UpdateObjectReflectionSprite,function
	.thumb_func
UpdateObjectReflectionSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r4, r0, #0
	mov	r0, #0x2e
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L33
	add	r7, r0, r1
	ldrb	r1, [r7, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L33+0x4
	add	r5, r0, r1
	ldr	r0, [r7]
	ldr	r1, .L33+0x8
	and	r0, r0, r1
	cmp	r0, r1
	bne	.L29	@cond_branch
	ldrb	r1, [r7, #0x8]
	mov	r2, #0x30
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	beq	.L28	@cond_branch
.L29:
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	b	.L30
.L34:
	.align	2, 0
.L33:
	.word	gObjectEvents
	.word	gSprites
	.word	0x20001
.L28:
	ldr	r1, .L35
	ldrb	r0, [r5, #0x5]
	lsr	r0, r0, #0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r1, r1, #0x4
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	ldrb	r1, [r5, #0x1]
	lsr	r1, r1, #0x6
	lsl	r1, r1, #0x6
	ldrb	r2, [r4, #0x1]
	mov	r3, #0x3f
	add	r0, r3, #0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldrb	r0, [r5, #0x3]
	lsr	r0, r0, #0x6
	lsl	r0, r0, #0x6
	ldrb	r2, [r4, #0x3]
	add	r1, r3, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x3]
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	mov	r2, #0x10
	orr	r0, r0, r2
	lsl	r0, r0, #0x1
	sub	r2, r2, #0x4f
	mov	r9, r2
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x3]
	ldrh	r1, [r5, #0x4]
	lsl	r1, r1, #0x16
	lsr	r1, r1, #0x16
	ldrh	r2, [r4, #0x4]
	ldr	r0, .L35+0x4
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r4, #0x4]
	ldr	r0, [r5, #0x18]
	str	r0, [r4, #0x18]
	add	r0, r5, #0
	add	r0, r0, #0x42
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1a
	add	r2, r4, #0
	add	r2, r2, #0x42
	and	r3, r3, r0
	ldrb	r1, [r2]
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r1
	orr	r0, r0, r3
	strb	r0, [r2]
	mov	r0, #0x3e
	add	r0, r0, r5
	mov	r8, r0
	ldrb	r0, [r0]
	add	r6, r4, #0
	add	r6, r6, #0x3e
	mov	r1, #0x4
	and	r1, r1, r0
	ldrb	r2, [r6]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r6]
	ldrh	r0, [r5, #0x20]
	strh	r0, [r4, #0x20]
	add	r0, r7, #0
	bl	GetReflectionVerticalOffset
	ldrh	r1, [r5, #0x22]
	add	r0, r0, r1
	ldrh	r1, [r4, #0x32]
	add	r1, r1, r0
	strh	r1, [r4, #0x22]
	add	r0, r5, #0
	add	r0, r0, #0x28
	ldrb	r1, [r0]
	add	r0, r4, #0
	add	r0, r0, #0x28
	strb	r1, [r0]
	add	r0, r5, #0
	add	r0, r0, #0x29
	ldrb	r0, [r0]
	add	r1, r4, #0
	add	r1, r1, #0x29
	strb	r0, [r1]
	ldrh	r0, [r5, #0x24]
	strh	r0, [r4, #0x24]
	ldrh	r0, [r5, #0x26]
	neg	r0, r0
	strh	r0, [r4, #0x26]
	mov	r2, r8
	ldrb	r0, [r2]
	mov	r1, #0x2
	and	r1, r1, r0
	ldrb	r2, [r6]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r6]
	mov	r1, #0x3c
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L30	@cond_branch
	ldrb	r0, [r4, #0x3]
	mov	r2, r9
	and	r2, r2, r0
	strb	r2, [r4, #0x3]
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	mov	r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L30	@cond_branch
	mov	r1, #0x2
	add	r0, r2, #0
	orr	r0, r0, r1
	strb	r0, [r4, #0x3]
.L30:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L36:
	.align	2, 0
.L35:
	.word	gReflectionEffectPaletteMap
	.word	-0x400
.Lfe6:
	.size	 UpdateObjectReflectionSprite,.Lfe6-UpdateObjectReflectionSprite
	.align	2, 0
	.globl	CreateWarpArrowSprite
	.type	 CreateWarpArrowSprite,function
	.thumb_func
CreateWarpArrowSprite:
	push	{r4, lr}
	ldr	r0, .L39
	ldr	r0, [r0, #0x20]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x52
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r4, r0, #0
	cmp	r0, #0x40
	beq	.L38	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L39+0x4
	add	r1, r1, r0
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r3, #0x4
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x2
	orr	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1]
.L38:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L40:
	.align	2, 0
.L39:
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe7:
	.size	 CreateWarpArrowSprite,.Lfe7-CreateWarpArrowSprite
	.align	2, 0
	.globl	SetSpriteInvisible
	.type	 SetSpriteInvisible,function
	.thumb_func
SetSpriteInvisible:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L42
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1]
	bx	lr
.L43:
	.align	2, 0
.L42:
	.word	gSprites
.Lfe8:
	.size	 SetSpriteInvisible,.Lfe8-SetSpriteInvisible
	.align	2, 0
	.globl	ShowWarpArrowSprite
	.type	 ShowWarpArrowSprite,function
	.thumb_func
ShowWarpArrowSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	lsl	r2, r2, #0x10
	lsr	r7, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r6, r3, #0x10
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	ldr	r1, .L47
	add	r2, r0, r1
	add	r0, r2, #0
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L46	@cond_branch
	mov	r0, #0x2e
	ldrsh	r1, [r2, r0]
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	cmp	r1, r0
	bne	.L46	@cond_branch
	mov	r0, #0x30
	ldrsh	r1, [r2, r0]
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	cmp	r1, r0
	beq	.L45	@cond_branch
.L46:
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r6, #0x10
	asr	r1, r1, #0x10
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r2, sp
	add	r3, r4, #0
	bl	SetSpritePosToMapCoords
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	ldr	r1, .L47
	add	r2, r0, r1
	mov	r0, sp
	ldrh	r0, [r0]
	add	r0, r0, #0x8
	strh	r0, [r2, #0x20]
	ldrh	r0, [r4]
	add	r0, r0, #0x8
	strh	r0, [r2, #0x22]
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3]
	strh	r7, [r2, #0x2e]
	strh	r6, [r2, #0x30]
	mov	r1, r8
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r2, #0
	bl	StartSpriteAnim
.L45:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L48:
	.align	2, 0
.L47:
	.word	gSprites
.Lfe9:
	.size	 ShowWarpArrowSprite,.Lfe9-ShowWarpArrowSprite
	.globl	gShadowEffectTemplateIds
	.section .rodata
	.type	 gShadowEffectTemplateIds,object
gShadowEffectTemplateIds:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.size	 gShadowEffectTemplateIds,4
	.globl	gShadowVerticalOffsets
	.align	1, 0
	.type	 gShadowVerticalOffsets,object
gShadowVerticalOffsets:
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x10
	.size	 gShadowVerticalOffsets,8
.text
	.align	2, 0
	.globl	FldEff_Shadow
	.type	 FldEff_Shadow,function
	.thumb_func
FldEff_Shadow:
	push	{r4, r5, lr}
	ldr	r5, .L51
	ldrb	r0, [r5]
	ldrb	r1, [r5, #0x4]
	ldrb	r2, [r5, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L51+0x4
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0x5]
	bl	GetObjectEventGraphicsInfo
	add	r4, r0, #0
	ldr	r2, .L51+0x8
	ldr	r1, .L51+0xc
	ldrb	r0, [r4, #0xc]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x94
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L50	@cond_branch
	ldr	r0, .L51+0x10
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldr	r0, [r5]
	strh	r0, [r2, #0x2e]
	ldr	r0, [r5, #0x4]
	strh	r0, [r2, #0x30]
	ldr	r0, [r5, #0x8]
	strh	r0, [r2, #0x32]
	ldrh	r1, [r4, #0xa]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x11
	ldr	r3, .L51+0x14
	ldrb	r0, [r4, #0xc]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	ldrh	r0, [r0]
	sub	r1, r1, r0
	strh	r1, [r2, #0x34]
.L50:
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L52:
	.align	2, 0
.L51:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gShadowEffectTemplateIds
	.word	gSprites
	.word	gShadowVerticalOffsets
.Lfe10:
	.size	 FldEff_Shadow,.Lfe10-FldEff_Shadow
	.align	2, 0
	.globl	UpdateShadowFieldEffect
	.type	 UpdateShadowFieldEffect,function
	.thumb_func
UpdateShadowFieldEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r0, [r5, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r5, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L54	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x3
	bl	FieldEffectStop
	b	.L55
.L54:
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L58
	add	r4, r0, r1
	ldrb	r0, [r4, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L58+0x4
	add	r1, r1, r0
	ldrb	r0, [r1, #0x5]
	mov	r2, #0xc
	and	r2, r2, r0
	ldrb	r3, [r5, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r2
	strb	r0, [r5, #0x5]
	ldrh	r0, [r1, #0x20]
	strh	r0, [r5, #0x20]
	ldrh	r0, [r5, #0x34]
	ldrh	r1, [r1, #0x22]
	add	r0, r0, r1
	strh	r0, [r5, #0x22]
	ldr	r0, [r4]
	ldr	r1, .L58+0x8
	and	r0, r0, r1
	cmp	r0, r1
	bne	.L57	@cond_branch
	ldrb	r0, [r4, #0x1e]
	bl	MetatileBehavior_IsPokeGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L57	@cond_branch
	ldrb	r0, [r4, #0x1e]
	bl	MetatileBehavior_IsSurfable
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L57	@cond_branch
	ldrb	r0, [r4, #0x1f]
	bl	MetatileBehavior_IsSurfable
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L57	@cond_branch
	ldrb	r0, [r4, #0x1e]
	bl	MetatileBehavior_IsReflective
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L57	@cond_branch
	ldrb	r0, [r4, #0x1f]
	bl	MetatileBehavior_IsReflective
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L55	@cond_branch
.L57:
	add	r0, r5, #0
	mov	r1, #0x3
	bl	FieldEffectStop
.L55:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L59:
	.align	2, 0
.L58:
	.word	gObjectEvents
	.word	gSprites
	.word	0x400001
.Lfe11:
	.size	 UpdateShadowFieldEffect,.Lfe11-UpdateShadowFieldEffect
	.align	2, 0
	.globl	FldEff_TallGrass
	.type	 FldEff_TallGrass,function
	.thumb_func
FldEff_TallGrass:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L63
	ldrh	r1, [r5]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r5, #0x4]
	mov	r4, sp
	add	r4, r4, #0x2
	strh	r0, [r4]
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L63+0x4
	ldr	r0, [r0, #0x10]
	mov	r1, sp
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L61	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L63+0x8
	add	r3, r0, r1
	add	r2, r3, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x3
	ldrb	r1, [r5, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r3, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x5]
	ldr	r0, [r5, #0x8]
	strh	r0, [r3, #0x2e]
	ldr	r0, [r5]
	strh	r0, [r3, #0x30]
	ldr	r0, [r5, #0x4]
	strh	r0, [r3, #0x32]
	ldr	r0, [r5, #0x10]
	strh	r0, [r3, #0x34]
	ldr	r0, [r5, #0x14]
	strh	r0, [r3, #0x36]
	ldr	r0, [r5, #0x18]
	strh	r0, [r3, #0x38]
	ldr	r0, [r5, #0x1c]
	cmp	r0, #0
	beq	.L61	@cond_branch
	add	r0, r3, #0
	mov	r1, #0x4
	bl	SeekSpriteAnim
.L61:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L64:
	.align	2, 0
.L63:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe12:
	.size	 FldEff_TallGrass,.Lfe12-FldEff_TallGrass
	.align	2, 0
	.globl	UpdateTallGrassFieldEffect
	.type	 UpdateTallGrassFieldEffect,function
	.thumb_func
UpdateTallGrassFieldEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r0, [r5, #0x38]
	lsr	r4, r0, #0x8
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r3, .L73
	ldrb	r1, [r3]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L66	@cond_branch
	ldr	r0, .L73+0x4
	ldr	r2, [r0]
	mov	r0, #0x5
	ldrsb	r0, [r2, r0]
	cmp	r0, r4
	bne	.L67	@cond_branch
	mov	r0, #0x4
	ldrsb	r0, [r2, r0]
	cmp	r0, r7
	beq	.L66	@cond_branch
.L67:
	ldr	r1, [r3, #0x4]
	ldrh	r0, [r5, #0x30]
	sub	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldr	r1, [r3, #0x8]
	ldrh	r0, [r5, #0x32]
	sub	r0, r0, r1
	strh	r0, [r5, #0x32]
	ldrb	r1, [r2, #0x5]
	lsl	r1, r1, #0x8
	ldrb	r0, [r2, #0x4]
	orr	r0, r0, r1
	strh	r0, [r5, #0x38]
.L66:
	ldrh	r0, [r5, #0x34]
	lsr	r1, r0, #0x8
	mov	r8, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldrh	r0, [r5, #0x36]
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r2, #0x30
	ldrsh	r0, [r5, r2]
	mov	r2, #0x32
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r0, r8
	add	r1, r4, #0
	add	r2, r7, #0
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L69	@cond_branch
	add	r0, r6, #0
	bl	MetatileBehavior_IsTallGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L69	@cond_branch
	mov	r1, #0x3c
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L68	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L68	@cond_branch
.L69:
	add	r0, r5, #0
	mov	r1, #0x4
	bl	FieldEffectStop
	b	.L70
.L74:
	.align	2, 0
.L73:
	.word	gCamera
	.word	gSaveBlock1Ptr
.L68:
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L75
	add	r2, r0, r1
	ldr	r0, [r2, #0x10]
	ldr	r1, [r5, #0x30]
	cmp	r0, r1
	beq	.L71	@cond_branch
	ldr	r0, [r2, #0x14]
	cmp	r0, r1
	beq	.L71	@cond_branch
	mov	r0, #0x1
	strh	r0, [r5, #0x3c]
.L71:
	mov	r6, #0x0
	add	r0, r5, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L72	@cond_branch
	mov	r6, #0x4
.L72:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteInvisibility
	ldrh	r1, [r5, #0x2e]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	add	r2, r6, #0
	bl	UpdateGrassFieldEffectSubpriority
.L70:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L76:
	.align	2, 0
.L75:
	.word	gObjectEvents
.Lfe13:
	.size	 UpdateTallGrassFieldEffect,.Lfe13-UpdateTallGrassFieldEffect
	.align	2, 0
	.globl	FldEff_JumpTallGrass
	.type	 FldEff_JumpTallGrass,function
	.thumb_func
FldEff_JumpTallGrass:
	push	{r4, lr}
	ldr	r4, .L79
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0xc
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L79+0x4
	ldr	r0, [r0, #0x28]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L78	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L79+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0xc
	strh	r0, [r2, #0x30]
.L78:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L80:
	.align	2, 0
.L79:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe14:
	.size	 FldEff_JumpTallGrass,.Lfe14-FldEff_JumpTallGrass
	.align	2, 0
	.globl	FindTallGrassFieldEffectSpriteId
	.type	 FindTallGrassFieldEffectSpriteId,function
	.thumb_func
FindTallGrassFieldEffectSpriteId:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r4, [sp, #0x18]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	ip, r0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	mov	r5, #0x0
	ldr	r0, .L90
	mov	r8, r0
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
.L85:
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	mov	r1, r8
	add	r2, r0, r1
	add	r0, r2, #0
	add	r0, r0, #0x3e
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L84	@cond_branch
	ldr	r1, [r2, #0x1c]
	ldr	r0, .L90+0x4
	cmp	r1, r0
	bne	.L84	@cond_branch
	mov	r1, #0x30
	ldrsh	r0, [r2, r1]
	cmp	r3, r0
	bne	.L84	@cond_branch
	mov	r1, #0x32
	ldrsh	r0, [r2, r1]
	cmp	r4, r0
	bne	.L84	@cond_branch
	ldrh	r1, [r2, #0x34]
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x18
	cmp	ip, r0
	bne	.L84	@cond_branch
	mov	r0, #0xff
	and	r0, r0, r1
	cmp	r7, r0
	bne	.L84	@cond_branch
	mov	r1, #0x36
	ldrsh	r0, [r2, r1]
	cmp	r6, r0
	bne	.L84	@cond_branch
	add	r0, r5, #0
	b	.L89
.L91:
	.align	2, 0
.L90:
	.word	gSprites
	.word	UpdateTallGrassFieldEffect
.L84:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3f
	bls	.L85	@cond_branch
	mov	r0, #0x40
.L89:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 FindTallGrassFieldEffectSpriteId,.Lfe15-FindTallGrassFieldEffectSpriteId
	.align	2, 0
	.globl	FldEff_LongGrass
	.type	 FldEff_LongGrass,function
	.thumb_func
FldEff_LongGrass:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L95
	ldrh	r1, [r5]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r5, #0x4]
	mov	r4, sp
	add	r4, r4, #0x2
	strh	r0, [r4]
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L95+0x4
	ldr	r0, [r0, #0x3c]
	mov	r1, sp
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L93	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L95+0x8
	add	r4, r0, r1
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrb	r0, [r5, #0x8]
	bl	ElevationToPriority
	mov	r1, #0x3
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	ldr	r0, [r5, #0x8]
	strh	r0, [r4, #0x2e]
	ldr	r0, [r5]
	strh	r0, [r4, #0x30]
	ldr	r0, [r5, #0x4]
	strh	r0, [r4, #0x32]
	ldr	r0, [r5, #0x10]
	strh	r0, [r4, #0x34]
	ldr	r0, [r5, #0x14]
	strh	r0, [r4, #0x36]
	ldr	r0, [r5, #0x18]
	strh	r0, [r4, #0x38]
	ldr	r0, [r5, #0x1c]
	cmp	r0, #0
	beq	.L93	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x6
	bl	SeekSpriteAnim
.L93:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L96:
	.align	2, 0
.L95:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe16:
	.size	 FldEff_LongGrass,.Lfe16-FldEff_LongGrass
	.align	2, 0
	.globl	UpdateLongGrassFieldEffect
	.type	 UpdateLongGrassFieldEffect,function
	.thumb_func
UpdateLongGrassFieldEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r0, [r5, #0x38]
	lsr	r7, r0, #0x8
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r3, .L104
	ldrb	r1, [r3]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L98	@cond_branch
	ldr	r0, .L104+0x4
	ldr	r2, [r0]
	mov	r0, #0x5
	ldrsb	r0, [r2, r0]
	cmp	r0, r7
	bne	.L99	@cond_branch
	mov	r0, #0x4
	ldrsb	r0, [r2, r0]
	cmp	r0, r6
	beq	.L98	@cond_branch
.L99:
	ldr	r1, [r3, #0x4]
	ldrh	r0, [r5, #0x30]
	sub	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldr	r1, [r3, #0x8]
	ldrh	r0, [r5, #0x32]
	sub	r0, r0, r1
	strh	r0, [r5, #0x32]
	ldrb	r1, [r2, #0x5]
	lsl	r1, r1, #0x8
	ldrb	r0, [r2, #0x4]
	orr	r0, r0, r1
	strh	r0, [r5, #0x38]
.L98:
	ldrh	r0, [r5, #0x34]
	lsr	r1, r0, #0x8
	mov	r8, r1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldrh	r0, [r5, #0x36]
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r2, #0x30
	ldrsh	r0, [r5, r2]
	mov	r2, #0x32
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, r8
	add	r1, r7, #0
	add	r2, r6, #0
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L101	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsLongGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L101	@cond_branch
	mov	r1, #0x3c
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L100	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L100	@cond_branch
.L101:
	add	r0, r5, #0
	mov	r1, #0x11
	bl	FieldEffectStop
	b	.L102
.L105:
	.align	2, 0
.L104:
	.word	gCamera
	.word	gSaveBlock1Ptr
.L100:
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L106
	add	r2, r0, r1
	ldr	r0, [r2, #0x10]
	ldr	r1, [r5, #0x30]
	cmp	r0, r1
	beq	.L103	@cond_branch
	ldr	r0, [r2, #0x14]
	cmp	r0, r1
	beq	.L103	@cond_branch
	mov	r0, #0x1
	strh	r0, [r5, #0x3c]
.L103:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteInvisibility
	ldrh	r1, [r5, #0x2e]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	mov	r2, #0x0
	bl	UpdateGrassFieldEffectSubpriority
.L102:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L107:
	.align	2, 0
.L106:
	.word	gObjectEvents
.Lfe17:
	.size	 UpdateLongGrassFieldEffect,.Lfe17-UpdateLongGrassFieldEffect
	.align	2, 0
	.globl	FldEff_JumpLongGrass
	.type	 FldEff_JumpLongGrass,function
	.thumb_func
FldEff_JumpLongGrass:
	push	{r4, lr}
	ldr	r4, .L110
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L110+0x4
	ldr	r0, [r0, #0x40]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L109	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L110+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0x12
	strh	r0, [r2, #0x30]
.L109:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L111:
	.align	2, 0
.L110:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe18:
	.size	 FldEff_JumpLongGrass,.Lfe18-FldEff_JumpLongGrass
	.align	2, 0
	.globl	FldEff_ShortGrass
	.type	 FldEff_ShortGrass,function
	.thumb_func
FldEff_ShortGrass:
	push	{r4, r5, r6, lr}
	ldr	r6, .L114
	ldrb	r0, [r6]
	ldrb	r1, [r6, #0x4]
	ldrb	r2, [r6, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L114+0x4
	add	r5, r1, r0
	ldr	r0, .L114+0x8
	ldr	r0, [r0, #0x78]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L113	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r4, .L114+0xc
	add	r2, r2, r4
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0, #0x5]
	mov	r1, #0xc
	and	r1, r1, r0
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r6]
	strh	r0, [r2, #0x2e]
	ldr	r0, [r6, #0x4]
	strh	r0, [r2, #0x30]
	ldr	r0, [r6, #0x8]
	strh	r0, [r2, #0x32]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x20]
	strh	r0, [r2, #0x34]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x22]
	strh	r0, [r2, #0x36]
.L113:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L115:
	.align	2, 0
.L114:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe19:
	.size	 FldEff_ShortGrass,.Lfe19-FldEff_ShortGrass
	.align	2, 0
	.globl	UpdateShortGrassFieldEffect
	.type	 UpdateShortGrassFieldEffect,function
	.thumb_func
UpdateShortGrassFieldEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L118	@cond_branch
	ldr	r5, .L123
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r5
	ldrb	r0, [r1, #0x2]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	blt	.L117	@cond_branch
.L118:
	add	r0, r4, #0
	mov	r1, #0x29
	bl	FieldEffectStop
	b	.L119
.L124:
	.align	2, 0
.L123:
	.word	gObjectEvents
.L117:
	ldrb	r0, [r1, #0x5]
	bl	GetObjectEventGraphicsInfo
	mov	r8, r0
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L125
	add	r6, r0, r1
	ldrh	r5, [r6, #0x22]
	ldrh	r7, [r6, #0x20]
	mov	r0, #0x20
	ldrsh	r1, [r6, r0]
	mov	r2, #0x34
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	bne	.L121	@cond_branch
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x36
	ldrsh	r1, [r4, r2]
	cmp	r0, r1
	beq	.L120	@cond_branch
.L121:
	strh	r7, [r4, #0x34]
	strh	r5, [r4, #0x36]
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L120	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
.L120:
	strh	r7, [r4, #0x20]
	strh	r5, [r4, #0x22]
	mov	r1, r8
	ldrh	r0, [r1, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x11
	sub	r0, r0, #0x8
	strh	r0, [r4, #0x26]
	add	r0, r6, #0
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r1, r4, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	ldrb	r0, [r6, #0x5]
	mov	r1, #0xc
	and	r1, r1, r0
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	add	r0, r6, #0
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1f
	add	r0, r4, #0
	bl	UpdateObjectEventSpriteInvisibility
.L119:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L126:
	.align	2, 0
.L125:
	.word	gSprites
.Lfe20:
	.size	 UpdateShortGrassFieldEffect,.Lfe20-UpdateShortGrassFieldEffect
	.align	2, 0
	.globl	FldEff_SandFootprints
	.type	 FldEff_SandFootprints,function
	.thumb_func
FldEff_SandFootprints:
	push	{r4, lr}
	ldr	r4, .L129
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L129+0x4
	ldr	r0, [r0, #0x2c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L128	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L129+0x8
	add	r0, r0, r1
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	mov	r1, #0x3
	ldrb	r2, [r4, #0xc]
	and	r2, r2, r1
	lsl	r2, r2, #0x2
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	mov	r1, #0xd
	strh	r1, [r0, #0x3c]
	ldrb	r1, [r4, #0x10]
	bl	StartSpriteAnim
.L128:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L130:
	.align	2, 0
.L129:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe21:
	.size	 FldEff_SandFootprints,.Lfe21-FldEff_SandFootprints
	.align	2, 0
	.globl	FldEff_DeepSandFootprints
	.type	 FldEff_DeepSandFootprints,function
	.thumb_func
FldEff_DeepSandFootprints:
	push	{r4, r5, lr}
	ldr	r4, .L133
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L133+0x4
	ldr	r0, [r0, #0x5c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r5, r1, #0
	cmp	r1, #0x40
	beq	.L132	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L133+0x8
	add	r0, r0, r1
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	mov	r1, #0x3
	ldrb	r2, [r4, #0xc]
	and	r2, r2, r1
	lsl	r2, r2, #0x2
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	mov	r1, #0x18
	strh	r1, [r0, #0x3c]
	ldrb	r1, [r4, #0x10]
	bl	StartSpriteAnim
.L132:
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L134:
	.align	2, 0
.L133:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe22:
	.size	 FldEff_DeepSandFootprints,.Lfe22-FldEff_DeepSandFootprints
	.align	2, 0
	.globl	FldEff_BikeTireTracks
	.type	 FldEff_BikeTireTracks,function
	.thumb_func
FldEff_BikeTireTracks:
	push	{r4, r5, lr}
	ldr	r4, .L137
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L137+0x4
	ldr	r0, [r0, #0x6c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r5, r1, #0
	cmp	r1, #0x40
	beq	.L136	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L137+0x8
	add	r0, r0, r1
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	mov	r1, #0x3
	ldrb	r2, [r4, #0xc]
	and	r2, r2, r1
	lsl	r2, r2, #0x2
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	mov	r1, #0x23
	strh	r1, [r0, #0x3c]
	ldrb	r1, [r4, #0x10]
	bl	StartSpriteAnim
.L136:
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L138:
	.align	2, 0
.L137:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe23:
	.size	 FldEff_BikeTireTracks,.Lfe23-FldEff_BikeTireTracks
	.globl	gFadeFootprintsTireTracksFuncs
	.section .rodata
	.align	2, 0
	.type	 gFadeFootprintsTireTracksFuncs,object
gFadeFootprintsTireTracksFuncs:
	.word	FadeFootprintsTireTracks_Step0
	.word	FadeFootprintsTireTracks_Step1
	.size	 gFadeFootprintsTireTracksFuncs,8
.text
	.align	2, 0
	.globl	UpdateFootprintsTireTracksFieldEffect
	.type	 UpdateFootprintsTireTracksFieldEffect,function
	.thumb_func
UpdateFootprintsTireTracksFieldEffect:
	push	{lr}
	ldr	r2, .L140
	mov	r3, #0x2e
	ldrsh	r1, [r0, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L141:
	.align	2, 0
.L140:
	.word	gFadeFootprintsTireTracksFuncs
.Lfe24:
	.size	 UpdateFootprintsTireTracksFieldEffect,.Lfe24-UpdateFootprintsTireTracksFieldEffect
	.align	2, 0
	.type	 FadeFootprintsTireTracks_Step0,function
	.thumb_func
FadeFootprintsTireTracks_Step0:
	push	{lr}
	add	r1, r0, #0
	ldrh	r0, [r1, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x28
	ble	.L143	@cond_branch
	mov	r0, #0x1
	strh	r0, [r1, #0x2e]
.L143:
	add	r0, r1, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteInvisibility
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 FadeFootprintsTireTracks_Step0,.Lfe25-FadeFootprintsTireTracks_Step0
	.align	2, 0
	.type	 FadeFootprintsTireTracks_Step1,function
	.thumb_func
FadeFootprintsTireTracks_Step1:
	push	{r4, lr}
	add	r4, r0, #0
	add	r3, r4, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x30]
	ldrb	r1, [r3]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1f
	add	r0, r4, #0
	bl	UpdateObjectEventSpriteInvisibility
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x38
	ble	.L145	@cond_branch
	ldrh	r1, [r4, #0x3c]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldEffectStop
.L145:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 FadeFootprintsTireTracks_Step1,.Lfe26-FadeFootprintsTireTracks_Step1
	.align	2, 0
	.globl	FldEff_Splash
	.type	 FldEff_Splash,function
	.thumb_func
FldEff_Splash:
	push	{r4, r5, r6, lr}
	ldr	r6, .L148
	ldrb	r0, [r6]
	ldrb	r1, [r6, #0x4]
	ldrb	r2, [r6, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L148+0x4
	add	r5, r1, r0
	ldr	r0, .L148+0x8
	ldr	r0, [r0, #0x34]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x40
	beq	.L147	@cond_branch
	ldrb	r0, [r5, #0x5]
	bl	GetObjectEventGraphicsInfo
	lsl	r3, r4, #0x4
	add	r3, r3, r4
	lsl	r3, r3, #0x2
	ldr	r4, .L148+0xc
	add	r3, r3, r4
	mov	r1, #0x3e
	add	r1, r1, r3
	mov	ip, r1
	ldrb	r1, [r1]
	mov	r2, #0x2
	orr	r1, r1, r2
	mov	r2, ip
	strb	r1, [r2]
	ldrb	r2, [r5, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r1, [r1, #0x5]
	mov	r2, #0xc
	and	r2, r2, r1
	ldrb	r4, [r3, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r4
	orr	r1, r1, r2
	strb	r1, [r3, #0x5]
	ldr	r1, [r6]
	strh	r1, [r3, #0x2e]
	ldr	r1, [r6, #0x4]
	strh	r1, [r3, #0x30]
	ldr	r1, [r6, #0x8]
	strh	r1, [r3, #0x32]
	ldrh	r0, [r0, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x11
	sub	r0, r0, #0x4
	strh	r0, [r3, #0x26]
	mov	r0, #0x3f
	bl	PlaySE
.L147:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L149:
	.align	2, 0
.L148:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe27:
	.size	 FldEff_Splash,.Lfe27-FldEff_Splash
	.align	2, 0
	.globl	UpdateSplashFieldEffect
	.type	 UpdateSplashFieldEffect,function
	.thumb_func
UpdateSplashFieldEffect:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L152	@cond_branch
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L151	@cond_branch
.L152:
	add	r0, r4, #0
	mov	r1, #0xf
	bl	FieldEffectStop
	b	.L153
.L151:
	ldr	r3, .L154
	ldr	r2, .L154+0x4
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x20]
	strh	r0, [r4, #0x20]
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x22]
	strh	r0, [r4, #0x22]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteInvisibility
.L153:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L155:
	.align	2, 0
.L154:
	.word	gSprites
	.word	gObjectEvents
.Lfe28:
	.size	 UpdateSplashFieldEffect,.Lfe28-UpdateSplashFieldEffect
	.align	2, 0
	.globl	FldEff_JumpSmallSplash
	.type	 FldEff_JumpSmallSplash,function
	.thumb_func
FldEff_JumpSmallSplash:
	push	{r4, lr}
	ldr	r4, .L158
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0xc
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L158+0x4
	ldr	r0, [r0, #0x38]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L157	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L158+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0x10
	strh	r0, [r2, #0x30]
.L157:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L159:
	.align	2, 0
.L158:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe29:
	.size	 FldEff_JumpSmallSplash,.Lfe29-FldEff_JumpSmallSplash
	.align	2, 0
	.globl	FldEff_JumpBigSplash
	.type	 FldEff_JumpBigSplash,function
	.thumb_func
FldEff_JumpBigSplash:
	push	{r4, lr}
	ldr	r4, .L162
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L162+0x4
	ldr	r0, [r0, #0x30]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L161	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L162+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0xe
	strh	r0, [r2, #0x30]
.L161:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L163:
	.align	2, 0
.L162:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe30:
	.size	 FldEff_JumpBigSplash,.Lfe30-FldEff_JumpBigSplash
	.align	2, 0
	.globl	FldEff_FeetInFlowingWater
	.type	 FldEff_FeetInFlowingWater,function
	.thumb_func
FldEff_FeetInFlowingWater:
	push	{r4, r5, r6, r7, lr}
	ldr	r7, .L166
	ldrb	r0, [r7]
	ldrb	r1, [r7, #0x4]
	ldrb	r2, [r7, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L166+0x4
	add	r6, r1, r0
	ldr	r0, .L166+0x8
	ldr	r0, [r0, #0x34]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x40
	beq	.L165	@cond_branch
	ldrb	r0, [r6, #0x5]
	bl	GetObjectEventGraphicsInfo
	add	r4, r0, #0
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	ldr	r3, .L166+0xc
	add	r0, r0, r3
	ldr	r1, .L166+0x10
	str	r1, [r0, #0x1c]
	add	r5, r0, #0
	add	r5, r5, #0x3e
	ldrb	r1, [r5]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r5]
	ldrb	r2, [r6, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r1, [r1, #0x5]
	mov	r2, #0xc
	and	r2, r2, r1
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	ldr	r1, [r7]
	strh	r1, [r0, #0x2e]
	ldr	r1, [r7, #0x4]
	strh	r1, [r0, #0x30]
	ldr	r1, [r7, #0x8]
	strh	r1, [r0, #0x32]
	ldr	r1, .L166+0x14
	strh	r1, [r0, #0x34]
	mov	r1, #0x1
	neg	r1, r1
	strh	r1, [r0, #0x36]
	ldrh	r1, [r4, #0xa]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x11
	sub	r1, r1, #0x4
	strh	r1, [r0, #0x26]
	mov	r1, #0x1
	bl	StartSpriteAnim
.L165:
	mov	r0, #0x0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L167:
	.align	2, 0
.L166:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
	.word	UpdateFeetInFlowingWaterFieldEffect
	.word	0xffff
.Lfe31:
	.size	 FldEff_FeetInFlowingWater,.Lfe31-FldEff_FeetInFlowingWater
	.align	2, 0
	.type	 UpdateFeetInFlowingWaterFieldEffect,function
	.thumb_func
UpdateFeetInFlowingWaterFieldEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L170	@cond_branch
	ldr	r2, .L174
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r5, r0, r2
	ldrb	r0, [r5, #0x2]
	lsl	r0, r0, #0x1c
	cmp	r0, #0
	blt	.L169	@cond_branch
.L170:
	add	r0, r4, #0
	mov	r1, #0x22
	bl	FieldEffectStop
	b	.L171
.L175:
	.align	2, 0
.L174:
	.word	gObjectEvents
.L169:
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L176
	add	r0, r0, r1
	ldrh	r1, [r0, #0x20]
	strh	r1, [r4, #0x20]
	ldrh	r1, [r0, #0x22]
	strh	r1, [r4, #0x22]
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	add	r1, r4, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteInvisibility
	ldr	r1, [r5, #0x10]
	ldr	r0, [r4, #0x34]
	cmp	r1, r0
	beq	.L171	@cond_branch
	ldrh	r0, [r5, #0x10]
	strh	r0, [r4, #0x34]
	ldrh	r0, [r5, #0x12]
	strh	r0, [r4, #0x36]
	add	r0, r4, #0
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L171	@cond_branch
	mov	r0, #0x3f
	bl	PlaySE
.L171:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L177:
	.align	2, 0
.L176:
	.word	gSprites
.Lfe32:
	.size	 UpdateFeetInFlowingWaterFieldEffect,.Lfe32-UpdateFeetInFlowingWaterFieldEffect
	.align	2, 0
	.globl	FldEff_Ripple
	.type	 FldEff_Ripple,function
	.thumb_func
FldEff_Ripple:
	push	{r4, lr}
	ldr	r0, .L180
	ldr	r0, [r0, #0x14]
	ldr	r4, .L180+0x4
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L179	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L180+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x5
	strh	r0, [r2, #0x2e]
.L179:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L181:
	.align	2, 0
.L180:
	.word	gFieldEffectObjectTemplatePointers
	.word	gFieldEffectArguments
	.word	gSprites
.Lfe33:
	.size	 FldEff_Ripple,.Lfe33-FldEff_Ripple
	.align	2, 0
	.globl	FldEff_HotSpringsWater
	.type	 FldEff_HotSpringsWater,function
	.thumb_func
FldEff_HotSpringsWater:
	push	{r4, r5, r6, lr}
	ldr	r6, .L184
	ldrb	r0, [r6]
	ldrb	r1, [r6, #0x4]
	ldrb	r2, [r6, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L184+0x4
	add	r5, r1, r0
	ldr	r0, .L184+0x8
	ldr	r0, [r0, #0x7c]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L183	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r4, .L184+0xc
	add	r2, r2, r4
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0, #0x5]
	mov	r1, #0xc
	and	r1, r1, r0
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r6]
	strh	r0, [r2, #0x2e]
	ldr	r0, [r6, #0x4]
	strh	r0, [r2, #0x30]
	ldr	r0, [r6, #0x8]
	strh	r0, [r2, #0x32]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x20]
	strh	r0, [r2, #0x34]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x22]
	strh	r0, [r2, #0x36]
.L183:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L185:
	.align	2, 0
.L184:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe34:
	.size	 FldEff_HotSpringsWater,.Lfe34-FldEff_HotSpringsWater
	.align	2, 0
	.globl	UpdateHotSpringsWaterFieldEffect
	.type	 UpdateHotSpringsWaterFieldEffect,function
	.thumb_func
UpdateHotSpringsWaterFieldEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L188	@cond_branch
	ldr	r5, .L190
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r5
	ldrb	r0, [r1, #0x2]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	blt	.L187	@cond_branch
.L188:
	add	r0, r4, #0
	mov	r1, #0x2a
	bl	FieldEffectStop
	b	.L189
.L191:
	.align	2, 0
.L190:
	.word	gObjectEvents
.L187:
	ldrb	r0, [r1, #0x5]
	bl	GetObjectEventGraphicsInfo
	mov	r1, sp
	ldrb	r2, [r1]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldrb	r2, [r1, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r2, .L192
	add	r1, r1, r2
	ldrh	r2, [r1, #0x20]
	strh	r2, [r4, #0x20]
	ldrh	r0, [r0, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x11
	ldrh	r2, [r1, #0x22]
	add	r0, r0, r2
	sub	r0, r0, #0x8
	strh	r0, [r4, #0x22]
	add	r1, r1, #0x43
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	add	r1, r4, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteInvisibility
.L189:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L193:
	.align	2, 0
.L192:
	.word	gSprites
.Lfe35:
	.size	 UpdateHotSpringsWaterFieldEffect,.Lfe35-UpdateHotSpringsWaterFieldEffect
	.align	2, 0
	.globl	FldEff_UnusedGrass
	.type	 FldEff_UnusedGrass,function
	.thumb_func
FldEff_UnusedGrass:
	push	{r4, lr}
	ldr	r4, .L196
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L196+0x4
	ldr	r0, [r0, #0x44]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L195	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L196+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x13
	strh	r0, [r2, #0x2e]
.L195:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L197:
	.align	2, 0
.L196:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe36:
	.size	 FldEff_UnusedGrass,.Lfe36-FldEff_UnusedGrass
	.align	2, 0
	.globl	FldEff_UnusedGrass2
	.type	 FldEff_UnusedGrass2,function
	.thumb_func
FldEff_UnusedGrass2:
	push	{r4, lr}
	ldr	r4, .L200
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L200+0x4
	ldr	r0, [r0, #0x48]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L199	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L200+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x14
	strh	r0, [r2, #0x2e]
.L199:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L201:
	.align	2, 0
.L200:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe37:
	.size	 FldEff_UnusedGrass2,.Lfe37-FldEff_UnusedGrass2
	.align	2, 0
	.globl	FldEff_UnusedSand
	.type	 FldEff_UnusedSand,function
	.thumb_func
FldEff_UnusedSand:
	push	{r4, lr}
	ldr	r4, .L204
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L204+0x4
	ldr	r0, [r0, #0x4c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L203	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L204+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x15
	strh	r0, [r2, #0x2e]
.L203:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L205:
	.align	2, 0
.L204:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe38:
	.size	 FldEff_UnusedSand,.Lfe38-FldEff_UnusedSand
	.align	2, 0
	.globl	FldEff_UnusedWaterSurfacing
	.type	 FldEff_UnusedWaterSurfacing,function
	.thumb_func
FldEff_UnusedWaterSurfacing:
	push	{r4, lr}
	ldr	r4, .L208
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L208+0x4
	ldr	r0, [r0, #0x50]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L207	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L208+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x16
	strh	r0, [r2, #0x2e]
.L207:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L209:
	.align	2, 0
.L208:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe39:
	.size	 FldEff_UnusedWaterSurfacing,.Lfe39-FldEff_UnusedWaterSurfacing
	.align	2, 0
	.globl	StartAshFieldEffect
	.type	 StartAshFieldEffect,function
	.thumb_func
StartAshFieldEffect:
	push	{r4, lr}
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r4, .L211
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	str	r0, [r4]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	str	r1, [r4, #0x4]
	mov	r0, #0x52
	str	r0, [r4, #0x8]
	mov	r0, #0x1
	str	r0, [r4, #0xc]
	str	r2, [r4, #0x10]
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	str	r3, [r4, #0x14]
	mov	r0, #0x7
	bl	FieldEffectStart
	pop	{r4}
	pop	{r0}
	bx	r0
.L212:
	.align	2, 0
.L211:
	.word	gFieldEffectArguments
.Lfe40:
	.size	 StartAshFieldEffect,.Lfe40-StartAshFieldEffect
	.align	2, 0
	.globl	FldEff_Ash
	.type	 FldEff_Ash,function
	.thumb_func
FldEff_Ash:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L215
	ldrh	r1, [r5]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r5, #0x4]
	mov	r4, sp
	add	r4, r4, #0x2
	strh	r0, [r4]
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L215+0x4
	ldr	r0, [r0, #0x18]
	mov	r1, sp
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r5, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L214	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L215+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r5, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r5]
	strh	r0, [r2, #0x30]
	ldr	r0, [r5, #0x4]
	strh	r0, [r2, #0x32]
	ldr	r0, [r5, #0x10]
	strh	r0, [r2, #0x34]
	ldr	r0, [r5, #0x14]
	strh	r0, [r2, #0x36]
.L214:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L216:
	.align	2, 0
.L215:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe41:
	.size	 FldEff_Ash,.Lfe41-FldEff_Ash
	.globl	gAshFieldEffectFuncs
	.section .rodata
	.align	2, 0
	.type	 gAshFieldEffectFuncs,object
gAshFieldEffectFuncs:
	.word	UpdateAshFieldEffect_Step0
	.word	UpdateAshFieldEffect_Step1
	.word	UpdateAshFieldEffect_Step2
	.size	 gAshFieldEffectFuncs,12
.text
	.align	2, 0
	.globl	UpdateAshFieldEffect
	.type	 UpdateAshFieldEffect,function
	.thumb_func
UpdateAshFieldEffect:
	push	{lr}
	ldr	r2, .L218
	mov	r3, #0x2e
	ldrsh	r1, [r0, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L219:
	.align	2, 0
.L218:
	.word	gAshFieldEffectFuncs
.Lfe42:
	.size	 UpdateAshFieldEffect,.Lfe42-UpdateAshFieldEffect
	.align	2, 0
	.type	 UpdateAshFieldEffect_Step0,function
	.thumb_func
UpdateAshFieldEffect_Step0:
	push	{lr}
	add	r3, r0, #0
	add	r2, r3, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	sub	r2, r2, #0x12
	ldrb	r0, [r2]
	mov	r1, #0x40
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r3, #0x36]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x36]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L221	@cond_branch
	mov	r0, #0x1
	strh	r0, [r3, #0x2e]
.L221:
	pop	{r0}
	bx	r0
.Lfe43:
	.size	 UpdateAshFieldEffect_Step0,.Lfe43-UpdateAshFieldEffect_Step0
	.align	2, 0
	.type	 UpdateAshFieldEffect_Step1,function
	.thumb_func
UpdateAshFieldEffect_Step1:
	push	{r4, lr}
	add	r4, r0, #0
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	sub	r2, r2, #0x12
	ldrb	r1, [r2]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	mov	r2, #0x32
	ldrsh	r1, [r4, r2]
	ldrh	r2, [r4, #0x34]
	bl	MapGridSetMetatileIdAt
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	mov	r2, #0x32
	ldrsh	r1, [r4, r2]
	bl	CurrentMapDrawMetatileAt
	ldr	r2, .L223
	ldr	r0, .L223+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r0, #0x2
	strh	r0, [r4, #0x2e]
	pop	{r4}
	pop	{r0}
	bx	r0
.L224:
	.align	2, 0
.L223:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe44:
	.size	 UpdateAshFieldEffect_Step1,.Lfe44-UpdateAshFieldEffect_Step1
	.align	2, 0
	.type	 UpdateAshFieldEffect_Step2,function
	.thumb_func
UpdateAshFieldEffect_Step2:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteInvisibility
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L226	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x7
	bl	FieldEffectStop
.L226:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 UpdateAshFieldEffect_Step2,.Lfe45-UpdateAshFieldEffect_Step2
	.align	2, 0
	.globl	FldEff_SurfBlob
	.type	 FldEff_SurfBlob,function
	.thumb_func
FldEff_SurfBlob:
	push	{r4, r5, lr}
	ldr	r4, .L229
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L229+0x4
	ldr	r0, [r0, #0x1c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x96
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	cmp	r0, #0x40
	beq	.L228	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L229+0x8
	add	r1, r1, r0
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r3]
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	ldr	r0, [r4, #0x8]
	mov	r2, #0x0
	strh	r0, [r1, #0x32]
	strh	r2, [r1, #0x34]
	ldr	r0, .L229+0xc
	strh	r0, [r1, #0x3a]
	mov	r0, #0x1
	neg	r0, r0
	strh	r0, [r1, #0x3c]
.L228:
	mov	r0, #0x8
	bl	FieldEffectActiveListRemove
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L230:
	.align	2, 0
.L229:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
	.word	0xffff
.Lfe46:
	.size	 FldEff_SurfBlob,.Lfe46-FldEff_SurfBlob
	.align	2, 0
	.globl	SetSurfBlob_BobState
	.type	 SetSurfBlob_BobState,function
	.thumb_func
SetSurfBlob_BobState:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	ldr	r3, .L232
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	ldrh	r0, [r2, #0x2e]
	mov	r3, #0x10
	neg	r3, r3
	and	r3, r3, r0
	mov	r0, #0xf0
	lsl	r0, r0, #0x14
	and	r0, r0, r1
	lsr	r0, r0, #0x18
	orr	r0, r0, r3
	strh	r0, [r2, #0x2e]
	bx	lr
.L233:
	.align	2, 0
.L232:
	.word	gSprites
.Lfe47:
	.size	 SetSurfBlob_BobState,.Lfe47-SetSurfBlob_BobState
	.align	2, 0
	.globl	SetSurfBlob_DontSyncAnim
	.type	 SetSurfBlob_DontSyncAnim,function
	.thumb_func
SetSurfBlob_DontSyncAnim:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	ldr	r3, .L235
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	ldrh	r0, [r2, #0x2e]
	mov	r3, #0xf1
	neg	r3, r3
	and	r3, r3, r0
	mov	r0, #0xf0
	lsl	r0, r0, #0x14
	and	r0, r0, r1
	lsr	r0, r0, #0x14
	orr	r3, r3, r0
	strh	r3, [r2, #0x2e]
	bx	lr
.L236:
	.align	2, 0
.L235:
	.word	gSprites
.Lfe48:
	.size	 SetSurfBlob_DontSyncAnim,.Lfe48-SetSurfBlob_DontSyncAnim
	.align	2, 0
	.globl	SetSurfBlob_PlayerOffset
	.type	 SetSurfBlob_PlayerOffset,function
	.thumb_func
SetSurfBlob_PlayerOffset:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	ldr	r4, .L238
	lsl	r3, r0, #0x4
	add	r3, r3, r0
	lsl	r3, r3, #0x2
	add	r3, r3, r4
	ldrh	r0, [r3, #0x2e]
	ldr	r4, .L238+0x4
	and	r4, r4, r0
	mov	r0, #0xf0
	lsl	r0, r0, #0x14
	and	r0, r0, r1
	lsr	r0, r0, #0x10
	orr	r4, r4, r0
	strh	r4, [r3, #0x2e]
	strh	r2, [r3, #0x30]
	pop	{r4}
	pop	{r0}
	bx	r0
.L239:
	.align	2, 0
.L238:
	.word	gSprites
	.word	-0xf01
.Lfe49:
	.size	 SetSurfBlob_PlayerOffset,.Lfe49-SetSurfBlob_PlayerOffset
	.align	2, 0
	.type	 GetSurfBlob_BobState,function
	.thumb_func
GetSurfBlob_BobState:
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf
	and	r0, r0, r1
	bx	lr
.Lfe50:
	.size	 GetSurfBlob_BobState,.Lfe50-GetSurfBlob_BobState
	.align	2, 0
	.type	 GetSurfBlob_DontSyncAnim,function
	.thumb_func
GetSurfBlob_DontSyncAnim:
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	lsr	r0, r0, #0x4
	bx	lr
.Lfe51:
	.size	 GetSurfBlob_DontSyncAnim,.Lfe51-GetSurfBlob_DontSyncAnim
	.align	2, 0
	.type	 GetSurfBlob_HasPlayerOffset,function
	.thumb_func
GetSurfBlob_HasPlayerOffset:
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf0
	lsl	r0, r0, #0x4
	and	r0, r0, r1
	lsr	r0, r0, #0x8
	bx	lr
.Lfe52:
	.size	 GetSurfBlob_HasPlayerOffset,.Lfe52-GetSurfBlob_HasPlayerOffset
	.align	2, 0
	.globl	UpdateSurfBlobFieldEffect
	.type	 UpdateSurfBlobFieldEffect,function
	.thumb_func
UpdateSurfBlobFieldEffect:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r1, #0x32
	ldrsh	r0, [r6, r1]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L244
	add	r4, r4, r0
	ldrb	r0, [r4, #0x4]
	lsl	r5, r0, #0x4
	add	r5, r5, r0
	lsl	r5, r5, #0x2
	ldr	r0, .L244+0x4
	add	r5, r5, r0
	add	r0, r4, #0
	add	r1, r6, #0
	bl	SynchroniseSurfAnim
	add	r0, r4, #0
	add	r1, r6, #0
	bl	SynchroniseSurfPosition
	add	r0, r4, #0
	add	r1, r5, #0
	add	r2, r6, #0
	bl	CreateBobbingEffect
	ldrb	r0, [r5, #0x5]
	mov	r1, #0xc
	and	r1, r1, r0
	ldrb	r2, [r6, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r6, #0x5]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L245:
	.align	2, 0
.L244:
	.word	gObjectEvents
	.word	gSprites
.Lfe53:
	.size	 UpdateSurfBlobFieldEffect,.Lfe53-UpdateSurfBlobFieldEffect
	.section .rodata
.LC213:
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
.text
	.align	2, 0
	.type	 SynchroniseSurfAnim,function
	.thumb_func
SynchroniseSurfAnim:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	add	r4, r1, #0
	ldr	r1, .L248
	mov	r0, sp
	mov	r2, #0x5
	bl	memcpy
	add	r0, r4, #0
	bl	GetSurfBlob_DontSyncAnim
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L247	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r0, r0, #0x4
	add	r0, r0, sp
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	StartSpriteAnimIfDifferent
.L247:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L249:
	.align	2, 0
.L248:
	.word	.LC213
.Lfe54:
	.size	 SynchroniseSurfAnim,.Lfe54-SynchroniseSurfAnim
	.align	2, 0
	.type	 SynchroniseSurfPosition,function
	.thumb_func
SynchroniseSurfPosition:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r4, r1, #0
	ldrh	r2, [r0, #0x10]
	mov	r1, sp
	strh	r2, [r1]
	ldrh	r1, [r0, #0x12]
	mov	r0, sp
	add	r0, r0, #0x2
	strh	r1, [r0]
	mov	r2, #0x26
	ldrsh	r3, [r4, r2]
	mov	r8, r0
	cmp	r3, #0
	bne	.L251	@cond_branch
	mov	r0, sp
	mov	r5, #0x0
	ldrsh	r2, [r0, r5]
	mov	r5, #0x3a
	ldrsh	r0, [r4, r5]
	cmp	r2, r0
	bne	.L252	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	mov	r5, #0x3c
	ldrsh	r1, [r4, r5]
	cmp	r0, r1
	beq	.L251	@cond_branch
.L252:
	strh	r3, [r4, #0x38]
	strh	r2, [r4, #0x3a]
	mov	r1, r8
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	strh	r0, [r4, #0x3c]
	mov	r5, #0x1
	mov	r7, r8
	mov	r6, sp
.L256:
	add	r0, r5, #0
	mov	r1, sp
	add	r2, r7, #0
	bl	MoveCoords
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	MapGridGetElevationAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L255	@cond_branch
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x38]
	b	.L251
.L255:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldrh	r0, [r4, #0x3a]
	strh	r0, [r6]
	ldrh	r0, [r4, #0x3c]
	mov	r1, r8
	strh	r0, [r1]
	cmp	r5, #0x4
	bls	.L256	@cond_branch
.L251:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe55:
	.size	 SynchroniseSurfPosition,.Lfe55-SynchroniseSurfPosition
	.section .rodata
	.align	1, 0
.LC215:
	.short	0x7
	.short	0xf
.text
	.align	2, 0
	.type	 CreateBobbingEffect,function
	.thumb_func
CreateBobbingEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r5, r1, #0
	add	r4, r2, #0
	ldr	r1, .L268
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	add	r0, r4, #0
	bl	GetSurfBlob_BobState
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L260	@cond_branch
	ldrh	r1, [r4, #0x36]
	add	r1, r1, #0x1
	strh	r1, [r4, #0x36]
	mov	r3, #0x38
	ldrsh	r0, [r4, r3]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L261	@cond_branch
	ldrh	r0, [r4, #0x34]
	ldrh	r1, [r4, #0x26]
	add	r0, r0, r1
	strh	r0, [r4, #0x26]
.L261:
	ldrh	r1, [r4, #0x36]
	mov	r0, #0x1f
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L262	@cond_branch
	ldrh	r0, [r4, #0x34]
	neg	r0, r0
	strh	r0, [r4, #0x34]
.L262:
	cmp	r2, #0x2
	beq	.L260	@cond_branch
	add	r0, r4, #0
	bl	GetSurfBlob_HasPlayerOffset
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L264	@cond_branch
	ldrh	r0, [r4, #0x26]
	b	.L267
.L269:
	.align	2, 0
.L268:
	.word	.LC215
.L264:
	ldrh	r0, [r4, #0x26]
	ldrh	r3, [r4, #0x30]
	add	r0, r0, r3
.L267:
	strh	r0, [r5, #0x26]
	add	r0, r4, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L266	@cond_branch
	ldrh	r0, [r5, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x26]
.L266:
	ldrh	r0, [r5, #0x20]
	strh	r0, [r4, #0x20]
	ldrh	r0, [r5, #0x22]
	add	r0, r0, #0x8
	strh	r0, [r4, #0x22]
.L260:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 CreateBobbingEffect,.Lfe56-CreateBobbingEffect
	.align	2, 0
	.globl	StartUnderwaterSurfBlobBobbing
	.type	 StartUnderwaterSurfBlobBobbing,function
	.thumb_func
StartUnderwaterSurfBlobBobbing:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L271
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0xff
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r1, .L271+0x4
	add	r2, r2, r1
	ldr	r1, .L271+0x8
	str	r1, [r2, #0x1c]
	mov	r1, #0x3e
	add	r1, r1, r2
	mov	ip, r1
	ldrb	r1, [r1]
	mov	r3, #0x4
	orr	r1, r1, r3
	mov	r3, ip
	strb	r1, [r3]
	strh	r4, [r2, #0x2e]
	mov	r1, #0x1
	strh	r1, [r2, #0x30]
	pop	{r4}
	pop	{r1}
	bx	r1
.L272:
	.align	2, 0
.L271:
	.word	gDummySpriteTemplate
	.word	gSprites
	.word	SpriteCB_UnderwaterSurfBlob
.Lfe57:
	.size	 StartUnderwaterSurfBlobBobbing,.Lfe57-StartUnderwaterSurfBlobBobbing
	.align	2, 0
	.type	 SpriteCB_UnderwaterSurfBlob,function
	.thumb_func
SpriteCB_UnderwaterSurfBlob:
	push	{lr}
	add	r2, r0, #0
	mov	r0, #0x2e
	ldrsh	r1, [r2, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L276
	add	r3, r0, r1
	ldrh	r1, [r2, #0x32]
	add	r0, r1, #0x1
	strh	r0, [r2, #0x32]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L274	@cond_branch
	ldrh	r0, [r2, #0x30]
	ldrh	r1, [r3, #0x26]
	add	r0, r0, r1
	strh	r0, [r3, #0x26]
.L274:
	ldrh	r1, [r2, #0x32]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L275	@cond_branch
	ldrh	r0, [r2, #0x30]
	neg	r0, r0
	strh	r0, [r2, #0x30]
.L275:
	pop	{r0}
	bx	r0
.L277:
	.align	2, 0
.L276:
	.word	gSprites
.Lfe58:
	.size	 SpriteCB_UnderwaterSurfBlob,.Lfe58-SpriteCB_UnderwaterSurfBlob
	.align	2, 0
	.globl	FldEff_Dust
	.type	 FldEff_Dust,function
	.thumb_func
FldEff_Dust:
	push	{r4, lr}
	ldr	r4, .L280
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0xc
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L280+0x4
	ldr	r0, [r0, #0x24]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L279	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L280+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0xa
	strh	r0, [r2, #0x30]
.L279:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L281:
	.align	2, 0
.L280:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe59:
	.size	 FldEff_Dust,.Lfe59-FldEff_Dust
	.align	2, 0
	.globl	FldEff_SandPile
	.type	 FldEff_SandPile,function
	.thumb_func
FldEff_SandPile:
	push	{r4, r5, r6, r7, lr}
	ldr	r7, .L284
	ldrb	r0, [r7]
	ldrb	r1, [r7, #0x4]
	ldrb	r2, [r7, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L284+0x4
	add	r6, r1, r0
	ldr	r0, .L284+0x8
	ldr	r0, [r0, #0x74]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x40
	beq	.L283	@cond_branch
	ldrb	r0, [r6, #0x5]
	bl	GetObjectEventGraphicsInfo
	add	r5, r0, #0
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r4, .L284+0xc
	add	r0, r0, r4
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	ldrb	r2, [r6, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r1, [r1, #0x5]
	mov	r2, #0xc
	and	r2, r2, r1
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	ldr	r1, [r7]
	strh	r1, [r0, #0x2e]
	ldr	r1, [r7, #0x4]
	strh	r1, [r0, #0x30]
	ldr	r1, [r7, #0x8]
	strh	r1, [r0, #0x32]
	ldrb	r2, [r6, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrh	r1, [r1, #0x20]
	strh	r1, [r0, #0x34]
	ldrb	r2, [r6, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrh	r1, [r1, #0x22]
	strh	r1, [r0, #0x36]
	ldrh	r1, [r5, #0xa]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x11
	sub	r1, r1, #0x2
	strh	r1, [r0, #0x26]
	mov	r1, #0x2
	bl	SeekSpriteAnim
.L283:
	mov	r0, #0x0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L285:
	.align	2, 0
.L284:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe60:
	.size	 FldEff_SandPile,.Lfe60-FldEff_SandPile
	.align	2, 0
	.globl	UpdateSandPileFieldEffect
	.type	 UpdateSandPileFieldEffect,function
	.thumb_func
UpdateSandPileFieldEffect:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L288	@cond_branch
	ldr	r2, .L293
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	ldrb	r0, [r1, #0x2]
	lsl	r0, r0, #0x1b
	cmp	r0, #0
	blt	.L287	@cond_branch
.L288:
	add	r0, r4, #0
	mov	r1, #0x27
	bl	FieldEffectStop
	b	.L289
.L294:
	.align	2, 0
.L293:
	.word	gObjectEvents
.L287:
	ldr	r2, .L295
	ldrb	r1, [r1, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r5, [r0, #0x22]
	ldrh	r6, [r0, #0x20]
	mov	r2, #0x20
	ldrsh	r1, [r0, r2]
	mov	r2, #0x34
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	bne	.L291	@cond_branch
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x36
	ldrsh	r1, [r4, r2]
	cmp	r0, r1
	beq	.L290	@cond_branch
.L291:
	strh	r6, [r4, #0x34]
	strh	r5, [r4, #0x36]
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L290	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
.L290:
	strh	r6, [r4, #0x20]
	strh	r5, [r4, #0x22]
	ldr	r3, .L295
	ldr	r2, .L295+0x4
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	add	r1, r4, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteInvisibility
.L289:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L296:
	.align	2, 0
.L295:
	.word	gSprites
	.word	gObjectEvents
.Lfe61:
	.size	 UpdateSandPileFieldEffect,.Lfe61-UpdateSandPileFieldEffect
	.align	2, 0
	.globl	FldEff_Bubbles
	.type	 FldEff_Bubbles,function
	.thumb_func
FldEff_Bubbles:
	push	{r4, lr}
	ldr	r4, .L299
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x0
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L299+0x4
	add	r0, r0, #0x88
	ldr	r0, [r0]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x52
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L298	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L299+0x8
	add	r1, r1, r0
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r3]
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
.L298:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L300:
	.align	2, 0
.L299:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe62:
	.size	 FldEff_Bubbles,.Lfe62-FldEff_Bubbles
	.align	2, 0
	.globl	UpdateBubblesFieldEffect
	.type	 UpdateBubblesFieldEffect,function
	.thumb_func
UpdateBubblesFieldEffect:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x80
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	and	r0, r0, r1
	strh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x18
	ldrh	r1, [r4, #0x22]
	sub	r1, r1, r0
	strh	r1, [r4, #0x22]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteInvisibility
	ldrh	r1, [r4, #0x3e]
	ldr	r0, .L303
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L302	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x35
	bl	FieldEffectStop
.L302:
	pop	{r4}
	pop	{r0}
	bx	r0
.L304:
	.align	2, 0
.L303:
	.word	0x1004
.Lfe63:
	.size	 UpdateBubblesFieldEffect,.Lfe63-UpdateBubblesFieldEffect
	.align	2, 0
	.globl	FldEff_BerryTreeGrowthSparkle
	.type	 FldEff_BerryTreeGrowthSparkle,function
	.thumb_func
FldEff_BerryTreeGrowthSparkle:
	mov	r0, #0x0
	bx	lr
.Lfe64:
	.size	 FldEff_BerryTreeGrowthSparkle,.Lfe64-FldEff_BerryTreeGrowthSparkle
	.align	2, 0
	.globl	ShowTreeDisguiseFieldEffect
	.type	 ShowTreeDisguiseFieldEffect,function
	.thumb_func
ShowTreeDisguiseFieldEffect:
	push	{lr}
	mov	r0, #0x1c
	mov	r1, #0x18
	mov	r2, #0x4
	bl	ShowDisguiseFieldEffect
	pop	{r1}
	bx	r1
.Lfe65:
	.size	 ShowTreeDisguiseFieldEffect,.Lfe65-ShowTreeDisguiseFieldEffect
	.align	2, 0
	.globl	ShowMountainDisguiseFieldEffect
	.type	 ShowMountainDisguiseFieldEffect,function
	.thumb_func
ShowMountainDisguiseFieldEffect:
	push	{lr}
	mov	r0, #0x1d
	mov	r1, #0x19
	mov	r2, #0x3
	bl	ShowDisguiseFieldEffect
	pop	{r1}
	bx	r1
.Lfe66:
	.size	 ShowMountainDisguiseFieldEffect,.Lfe66-ShowMountainDisguiseFieldEffect
	.align	2, 0
	.globl	ShowSandDisguiseFieldEffect
	.type	 ShowSandDisguiseFieldEffect,function
	.thumb_func
ShowSandDisguiseFieldEffect:
	push	{lr}
	mov	r0, #0x24
	mov	r1, #0x1c
	mov	r2, #0x2
	bl	ShowDisguiseFieldEffect
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 ShowSandDisguiseFieldEffect,.Lfe67-ShowSandDisguiseFieldEffect
	.align	2, 0
	.type	 ShowDisguiseFieldEffect,function
	.thumb_func
ShowDisguiseFieldEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r8, r4
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	ldr	r5, .L313
	ldrb	r0, [r5]
	ldrb	r1, [r5, #0x4]
	ldrb	r2, [r5, #0x8]
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L310	@cond_branch
	add	r0, r4, #0
	bl	FieldEffectActiveListRemove
	mov	r0, #0x40
	b	.L312
.L314:
	.align	2, 0
.L313:
	.word	gFieldEffectArguments
.L310:
	ldr	r1, .L315
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	mov	r1, sp
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L311	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L315+0x4
	add	r2, r2, r0
	mov	r0, #0x3e
	add	r0, r0, r2
	mov	ip, r0
	ldrb	r3, [r0]
	lsl	r1, r3, #0x1e
	lsr	r1, r1, #0x1f
	add	r1, r1, #0x1
	mov	r0, #0x1
	and	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	mov	r1, ip
	strb	r0, [r1]
	lsl	r3, r7, #0x4
	ldrb	r1, [r2, #0x5]
	mov	r0, #0xf
	and	r0, r0, r1
	orr	r0, r0, r3
	strb	r0, [r2, #0x5]
	mov	r0, r8
	strh	r0, [r2, #0x30]
	ldr	r0, [r5]
	strh	r0, [r2, #0x32]
	ldr	r0, [r5, #0x4]
	strh	r0, [r2, #0x34]
	ldr	r0, [r5, #0x8]
	strh	r0, [r2, #0x36]
.L311:
	mov	r0, sp
	ldrb	r0, [r0]
.L312:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L316:
	.align	2, 0
.L315:
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe68:
	.size	 ShowDisguiseFieldEffect,.Lfe68-ShowDisguiseFieldEffect
	.align	2, 0
	.globl	UpdateDisguiseFieldEffect
	.type	 UpdateDisguiseFieldEffect,function
	.thumb_func
UpdateDisguiseFieldEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r0, [r5, #0x32]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x34]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r5, #0x36]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L318	@cond_branch
	ldrh	r1, [r5, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	FieldEffectStop
.L318:
	ldr	r4, .L322
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0, #0x5]
	bl	GetObjectEventGraphicsInfo
	mov	r1, sp
	ldrb	r2, [r1]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r1, [r1, #0x4]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	ldr	r1, .L322+0x4
	add	r2, r2, r1
	add	r1, r2, #0
	add	r1, r1, #0x3e
	ldrb	r1, [r1]
	mov	r3, #0x3e
	add	r3, r3, r5
	mov	ip, r3
	mov	r3, #0x4
	and	r3, r3, r1
	mov	r1, ip
	ldrb	r4, [r1]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r4
	orr	r1, r1, r3
	mov	r3, ip
	strb	r1, [r3]
	ldrh	r1, [r2, #0x20]
	strh	r1, [r5, #0x20]
	ldrh	r0, [r0, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x11
	ldrh	r1, [r2, #0x22]
	add	r0, r0, r1
	sub	r0, r0, #0x10
	strh	r0, [r5, #0x22]
	add	r2, r2, #0x43
	ldrb	r0, [r2]
	sub	r0, r0, #0x1
	add	r1, r5, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	ldrh	r1, [r5, #0x2e]
	mov	r2, #0x2e
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x1
	bne	.L319	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r5, #0x2e]
	add	r0, r5, #0
	mov	r1, #0x1
	bl	StartSpriteAnim
.L319:
	mov	r3, #0x2e
	ldrsh	r0, [r5, r3]
	ldrh	r2, [r5, #0x2e]
	cmp	r0, #0x2
	bne	.L320	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L320	@cond_branch
	mov	r0, #0x1
	strh	r0, [r5, #0x3c]
.L320:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L321	@cond_branch
	ldrh	r1, [r5, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	FieldEffectStop
.L321:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L323:
	.align	2, 0
.L322:
	.word	gObjectEvents
	.word	gSprites
.Lfe69:
	.size	 UpdateDisguiseFieldEffect,.Lfe69-UpdateDisguiseFieldEffect
	.align	2, 0
	.globl	StartRevealDisguise
	.type	 StartRevealDisguise,function
	.thumb_func
StartRevealDisguise:
	push	{lr}
	add	r1, r0, #0
	add	r0, r0, #0x21
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L325	@cond_branch
	ldr	r2, .L326
	ldrb	r1, [r1, #0x1a]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r1, [r0, #0x2e]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x2e]
.L325:
	pop	{r0}
	bx	r0
.L327:
	.align	2, 0
.L326:
	.word	gSprites
.Lfe70:
	.size	 StartRevealDisguise,.Lfe70-StartRevealDisguise
	.align	2, 0
	.globl	UpdateRevealDisguise
	.type	 UpdateRevealDisguise,function
	.thumb_func
UpdateRevealDisguise:
	push	{lr}
	add	r2, r0, #0
	add	r2, r2, #0x21
	ldrb	r1, [r2]
	cmp	r1, #0x2
	beq	.L333	@cond_branch
	cmp	r1, #0
	beq	.L333	@cond_branch
	ldrb	r1, [r0, #0x1a]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L334
	add	r1, r0, r1
	mov	r3, #0x3c
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	bne	.L331	@cond_branch
	mov	r0, #0x0
	b	.L332
.L335:
	.align	2, 0
.L334:
	.word	gSprites
.L331:
	mov	r0, #0x2
	strb	r0, [r2]
	ldrh	r0, [r1, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x2e]
.L333:
	mov	r0, #0x1
.L332:
	pop	{r1}
	bx	r1
.Lfe71:
	.size	 UpdateRevealDisguise,.Lfe71-UpdateRevealDisguise
	.align	2, 0
	.globl	FldEff_Sparkle
	.type	 FldEff_Sparkle,function
	.thumb_func
FldEff_Sparkle:
	push	{r4, lr}
	ldr	r4, .L338
	ldr	r0, [r4]
	add	r0, r0, #0x7
	str	r0, [r4]
	ldr	r0, [r4, #0x4]
	add	r0, r0, #0x7
	str	r0, [r4, #0x4]
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L338+0x4
	add	r0, r0, #0x8c
	ldr	r0, [r0]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x52
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x40
	beq	.L337	@cond_branch
	ldr	r0, .L338+0x8
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r0, #0x3
	ldrb	r2, [r4, #0x8]
	and	r2, r2, r0
	lsl	r2, r2, #0x2
	ldrb	r3, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r1]
.L337:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L339:
	.align	2, 0
.L338:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe72:
	.size	 FldEff_Sparkle,.Lfe72-FldEff_Sparkle
	.align	2, 0
	.globl	UpdateSparkleFieldEffect
	.type	 UpdateSparkleFieldEffect,function
	.thumb_func
UpdateSparkleFieldEffect:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bne	.L341	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L342	@cond_branch
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
.L342:
	mov	r1, #0x2e
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	beq	.L340	@cond_branch
.L341:
	ldrh	r0, [r2, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x22
	ble	.L340	@cond_branch
	add	r0, r2, #0
	mov	r1, #0x36
	bl	FieldEffectStop
.L340:
	pop	{r0}
	bx	r0
.Lfe73:
	.size	 UpdateSparkleFieldEffect,.Lfe73-UpdateSparkleFieldEffect
	.align	2, 0
	.globl	UpdateJumpImpactEffect
	.type	 UpdateJumpImpactEffect,function
	.thumb_func
UpdateJumpImpactEffect:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L346	@cond_branch
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldEffectStop
	b	.L347
.L346:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteInvisibility
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	mov	r2, #0x0
	bl	SetObjectSubpriorityByElevation
.L347:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe74:
	.size	 UpdateJumpImpactEffect,.Lfe74-UpdateJumpImpactEffect
	.align	2, 0
	.globl	WaitFieldEffectSpriteAnim
	.type	 WaitFieldEffectSpriteAnim,function
	.thumb_func
WaitFieldEffectSpriteAnim:
	push	{lr}
	add	r2, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L349	@cond_branch
	ldrh	r1, [r2, #0x2e]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r2, #0
	bl	FieldEffectStop
	b	.L350
.L349:
	add	r0, r2, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteInvisibility
.L350:
	pop	{r0}
	bx	r0
.Lfe75:
	.size	 WaitFieldEffectSpriteAnim,.Lfe75-WaitFieldEffectSpriteAnim
	.align	2, 0
	.type	 UpdateGrassFieldEffectSubpriority,function
	.thumb_func
UpdateGrassFieldEffectSubpriority:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	add	r0, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r1, r6, #0
	bl	SetObjectSubpriorityByElevation
	mov	r7, #0x0
.L355:
	lsl	r0, r7, #0x3
	add	r0, r0, r7
	lsl	r0, r0, #0x2
	ldr	r1, .L361
	add	r4, r0, r1
	ldrb	r0, [r4]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L354	@cond_branch
	ldrb	r0, [r4, #0x5]
	bl	GetObjectEventGraphicsInfo
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L361+0x4
	add	r5, r0, r1
	add	r0, r6, #0
	add	r0, r0, #0x28
	mov	r2, #0x0
	ldrsb	r2, [r0, r2]
	ldrh	r0, [r6, #0x20]
	add	r1, r0, r2
	sub	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r0, #0x20
	ldrsh	r2, [r5, r0]
	cmp	r1, r2
	bge	.L354	@cond_branch
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r2
	ble	.L354	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x29
	mov	r3, #0x0
	ldrsb	r3, [r0, r3]
	ldrh	r2, [r5, #0x22]
	add	r2, r2, r3
	ldrh	r4, [r5, #0x22]
	add	r0, r6, #0
	add	r0, r0, #0x29
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	ldrh	r0, [r6, #0x22]
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	add	r3, r0, r3
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	cmp	r2, r3
	blt	.L359	@cond_branch
	cmp	r2, r0
	bge	.L354	@cond_branch
.L359:
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r3
	ble	.L354	@cond_branch
	add	r2, r6, #0
	add	r2, r2, #0x43
	add	r0, r5, #0
	add	r0, r0, #0x43
	ldrb	r1, [r0]
	ldrb	r0, [r2]
	cmp	r0, r1
	bhi	.L354	@cond_branch
	add	r0, r1, #0x2
	strb	r0, [r2]
	b	.L353
.L362:
	.align	2, 0
.L361:
	.word	gObjectEvents
	.word	gSprites
.L354:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0xf
	bls	.L355	@cond_branch
.L353:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 UpdateGrassFieldEffectSubpriority,.Lfe76-UpdateGrassFieldEffectSubpriority
.text
	.align	2, 0 @ Don't pad with nop

