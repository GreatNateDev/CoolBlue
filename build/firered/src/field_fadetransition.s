@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	palette_bg_faded_fill_white
	.type	 palette_bg_faded_fill_white,function
	.thumb_func
palette_bg_faded_fill_white:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r0, .L5
	str	r0, [sp]
	ldr	r1, .L5+0x4
	ldr	r2, .L5+0x8
	mov	r0, sp
	bl	CpuFastSet
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L6:
	.align	2, 0
.L5:
	.word	0x7fff7fff
	.word	gPlttBufferFaded
	.word	0x1000100
.Lfe1:
	.size	 palette_bg_faded_fill_white,.Lfe1-palette_bg_faded_fill_white
	.align	2, 0
	.globl	palette_bg_faded_fill_black
	.type	 palette_bg_faded_fill_black,function
	.thumb_func
palette_bg_faded_fill_black:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r1, .L8
	ldr	r2, .L8+0x4
	mov	r0, sp
	bl	CpuFastSet
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L9:
	.align	2, 0
.L8:
	.word	gPlttBufferFaded
	.word	0x1000100
.Lfe2:
	.size	 palette_bg_faded_fill_black,.Lfe2-palette_bg_faded_fill_black
	.align	2, 0
	.globl	WarpFadeInScreen
	.type	 WarpFadeInScreen,function
	.thumb_func
WarpFadeInScreen:
	push	{r4, lr}
	bl	GetLastUsedWarpMapType
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetCurrentMapType
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	MapTransitionIsExit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L12	@cond_branch
	cmp	r0, #0x1
	beq	.L13	@cond_branch
	b	.L11
.L12:
	bl	palette_bg_faded_fill_black
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FadeScreen
	bl	palette_bg_faded_fill_black
	b	.L11
.L13:
	bl	palette_bg_faded_fill_white
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FadeScreen
	bl	palette_bg_faded_fill_white
.L11:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 WarpFadeInScreen,.Lfe3-WarpFadeInScreen
	.align	2, 0
	.type	 WarpFadeInScreenWithDelay,function
	.thumb_func
WarpFadeInScreenWithDelay:
	push	{r4, lr}
	bl	GetLastUsedWarpMapType
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetCurrentMapType
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	MapTransitionIsExit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L18	@cond_branch
	cmp	r0, #0x1
	beq	.L19	@cond_branch
	b	.L17
.L18:
	bl	palette_bg_faded_fill_black
	mov	r0, #0x0
	mov	r1, #0x3
	bl	FadeScreen
	bl	palette_bg_faded_fill_black
	b	.L17
.L19:
	bl	palette_bg_faded_fill_white
	mov	r0, #0x2
	mov	r1, #0x3
	bl	FadeScreen
	bl	palette_bg_faded_fill_white
.L17:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 WarpFadeInScreenWithDelay,.Lfe4-WarpFadeInScreenWithDelay
	.align	2, 0
	.globl	FadeInFromBlack
	.type	 FadeInFromBlack,function
	.thumb_func
FadeInFromBlack:
	push	{lr}
	bl	palette_bg_faded_fill_black
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FadeScreen
	bl	palette_bg_faded_fill_black
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 FadeInFromBlack,.Lfe5-FadeInFromBlack
	.align	2, 0
	.globl	WarpFadeOutScreen
	.type	 WarpFadeOutScreen,function
	.thumb_func
WarpFadeOutScreen:
	push	{r4, lr}
	bl	GetDestinationWarpMapHeader
	add	r4, r0, #0
	ldr	r1, .L31
	ldrb	r0, [r4, #0x14]
	ldrb	r1, [r1, #0x14]
	cmp	r0, r1
	beq	.L24	@cond_branch
	mov	r1, #0x0
	bl	MapHasPreviewScreen
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L27	@cond_branch
.L24:
	bl	GetCurrentMapType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r4, #0x17]
	bl	MapTransitionIsEnter
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L27	@cond_branch
	cmp	r0, #0x1
	beq	.L28	@cond_branch
	b	.L25
.L32:
	.align	2, 0
.L31:
	.word	gMapHeader
.L27:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	b	.L25
.L28:
	mov	r0, #0x3
	mov	r1, #0x0
	bl	FadeScreen
.L25:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 WarpFadeOutScreen,.Lfe6-WarpFadeOutScreen
	.align	2, 0
	.type	 WarpFadeOutScreenWithDelay,function
	.thumb_func
WarpFadeOutScreenWithDelay:
	push	{r4, lr}
	bl	GetCurrentMapType
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetDestinationWarpMapHeader
	ldrb	r1, [r0, #0x17]
	add	r0, r4, #0
	bl	MapTransitionIsEnter
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L35	@cond_branch
	cmp	r0, #0x1
	beq	.L36	@cond_branch
	b	.L34
.L35:
	mov	r0, #0x1
	mov	r1, #0x3
	bl	FadeScreen
	b	.L34
.L36:
	mov	r0, #0x3
	mov	r1, #0x3
	bl	FadeScreen
.L34:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 WarpFadeOutScreenWithDelay,.Lfe7-WarpFadeOutScreenWithDelay
	.align	2, 0
	.type	 SetPlayerVisibility,function
	.thumb_func
SetPlayerVisibility:
	push	{lr}
	lsl	r0, r0, #0x18
	mov	r1, #0x0
	cmp	r0, #0
	bne	.L40	@cond_branch
	mov	r1, #0x1
.L40:
	add	r0, r1, #0
	bl	SetPlayerInvisibility
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 SetPlayerVisibility,.Lfe8-SetPlayerVisibility
	.align	2, 0
	.type	 Task_ContinueScriptUnionRoom,function
	.thumb_func
Task_ContinueScriptUnionRoom:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L42	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
.L42:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 Task_ContinueScriptUnionRoom,.Lfe9-Task_ContinueScriptUnionRoom
	.align	2, 0
	.globl	FieldCB_ContinueScriptUnionRoom
	.type	 FieldCB_ContinueScriptUnionRoom,function
	.thumb_func
FieldCB_ContinueScriptUnionRoom:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	Overworld_PlaySpecialMapMusic
	bl	FadeInFromBlack
	ldr	r0, .L44
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L45:
	.align	2, 0
.L44:
	.word	Task_ContinueScriptUnionRoom
.Lfe10:
	.size	 FieldCB_ContinueScriptUnionRoom,.Lfe10-FieldCB_ContinueScriptUnionRoom
	.align	2, 0
	.type	 Task_ContinueScript,function
	.thumb_func
Task_ContinueScript:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L47	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	bl	ScriptContext_Enable
.L47:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe11:
	.size	 Task_ContinueScript,.Lfe11-Task_ContinueScript
	.align	2, 0
	.globl	FieldCB_ContinueScriptHandleMusic
	.type	 FieldCB_ContinueScriptHandleMusic,function
	.thumb_func
FieldCB_ContinueScriptHandleMusic:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	Overworld_PlaySpecialMapMusic
	bl	FadeInFromBlack
	ldr	r0, .L49
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L50:
	.align	2, 0
.L49:
	.word	Task_ContinueScript
.Lfe12:
	.size	 FieldCB_ContinueScriptHandleMusic,.Lfe12-FieldCB_ContinueScriptHandleMusic
	.align	2, 0
	.globl	FieldCB_ContinueScript
	.type	 FieldCB_ContinueScript,function
	.thumb_func
FieldCB_ContinueScript:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	FadeInFromBlack
	ldr	r0, .L52
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L53:
	.align	2, 0
.L52:
	.word	Task_ContinueScript
.Lfe13:
	.size	 FieldCB_ContinueScript,.Lfe13-FieldCB_ContinueScript
	.align	2, 0
	.type	 Task_ReturnToFieldCableLink,function
	.thumb_func
Task_ReturnToFieldCableLink:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r2, .L65
	add	r4, r0, r2
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L57	@cond_branch
	cmp	r0, #0x1
	bgt	.L63	@cond_branch
	cmp	r0, #0
	beq	.L56	@cond_branch
	b	.L55
.L66:
	.align	2, 0
.L65:
	.word	gTasks
.L63:
	cmp	r0, #0x2
	beq	.L59	@cond_branch
	b	.L55
.L56:
	bl	CreateTask_ReestablishCableClubLink
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0xa]
	b	.L64
.L57:
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x1
	beq	.L55	@cond_branch
	bl	WarpFadeInScreen
.L64:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L55
.L59:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L55	@cond_branch
	bl	UnlockPlayerFieldControls
	add	r0, r5, #0
	bl	DestroyTask
.L55:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 Task_ReturnToFieldCableLink,.Lfe14-Task_ReturnToFieldCableLink
	.align	2, 0
	.globl	FieldCB_ReturnToFieldCableLink
	.type	 FieldCB_ReturnToFieldCableLink,function
	.thumb_func
FieldCB_ReturnToFieldCableLink:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	Overworld_PlaySpecialMapMusic
	bl	palette_bg_faded_fill_black
	ldr	r0, .L68
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L69:
	.align	2, 0
.L68:
	.word	Task_ReturnToFieldCableLink
.Lfe15:
	.size	 FieldCB_ReturnToFieldCableLink,.Lfe15-FieldCB_ReturnToFieldCableLink
	.align	2, 0
	.type	 Task_ReturnToFieldRecordMixing,function
	.thumb_func
Task_ReturnToFieldRecordMixing:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L81
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L73	@cond_branch
	cmp	r0, #0x1
	bgt	.L79	@cond_branch
	cmp	r0, #0
	beq	.L72	@cond_branch
	b	.L71
.L82:
	.align	2, 0
.L81:
	.word	gTasks
.L79:
	cmp	r0, #0x2
	beq	.L75	@cond_branch
	b	.L71
.L72:
	bl	SetLinkStandbyCallback
	b	.L80
.L73:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L71	@cond_branch
	bl	WarpFadeInScreen
.L80:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L71
.L75:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L71	@cond_branch
	bl	StartSendingKeysToLink
	bl	UnlockPlayerFieldControls
	add	r0, r5, #0
	bl	DestroyTask
.L71:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 Task_ReturnToFieldRecordMixing,.Lfe16-Task_ReturnToFieldRecordMixing
	.align	2, 0
	.globl	FieldCB_ReturnToFieldWirelessLink
	.type	 FieldCB_ReturnToFieldWirelessLink,function
	.thumb_func
FieldCB_ReturnToFieldWirelessLink:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	Overworld_PlaySpecialMapMusic
	bl	palette_bg_faded_fill_black
	ldr	r0, .L84
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L85:
	.align	2, 0
.L84:
	.word	Task_ReturnToFieldRecordMixing
.Lfe17:
	.size	 FieldCB_ReturnToFieldWirelessLink,.Lfe17-FieldCB_ReturnToFieldWirelessLink
	.align	2, 0
	.type	 SetUpWarpExitTask,function
	.thumb_func
SetUpWarpExitTask:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	MetatileBehavior_IsWarpDoor_2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L87	@cond_branch
	ldr	r5, .L99
	bl	GetLastUsedWarpMapType
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetCurrentMapType
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	MapTransitionIsExit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L89	@cond_branch
	cmp	r0, #0x1
	beq	.L90	@cond_branch
	b	.L93
.L100:
	.align	2, 0
.L99:
	.word	Task_ExitDoor
.L89:
	bl	palette_bg_faded_fill_black
	b	.L93
.L90:
	bl	palette_bg_faded_fill_white
	b	.L93
.L87:
	add	r0, r5, #0
	bl	ExitWarpFadeInScreen
	add	r0, r4, #0
	bl	MetatileBehavior_IsNonAnimDoor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L94	@cond_branch
	ldr	r5, .L101
	b	.L93
.L102:
	.align	2, 0
.L101:
	.word	Task_ExitNonAnimDoor
.L94:
	add	r0, r4, #0
	bl	MetatileBehavior_IsDirectionalStairWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L96	@cond_branch
	ldr	r0, .L103
	ldrb	r0, [r0]
	ldr	r5, .L103+0x4
	cmp	r0, #0
	bne	.L93	@cond_branch
	ldr	r5, .L103+0x8
	b	.L93
.L104:
	.align	2, 0
.L103:
	.word	gExitStairsMovementDisabled
	.word	Task_ExitNonDoor
	.word	Task_ExitStairs
.L96:
	ldr	r5, .L105
.L93:
	ldr	r1, .L105+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	add	r0, r5, #0
	mov	r1, #0xa
	bl	CreateTask
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L106:
	.align	2, 0
.L105:
	.word	Task_ExitNonDoor
	.word	gExitStairsMovementDisabled
.Lfe18:
	.size	 SetUpWarpExitTask,.Lfe18-SetUpWarpExitTask
	.align	2, 0
	.type	 ExitWarpFadeInScreen,function
	.thumb_func
ExitWarpFadeInScreen:
	push	{lr}
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L108	@cond_branch
	bl	WarpFadeInScreen
	b	.L109
.L108:
	bl	FadeInFromBlack
.L109:
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 ExitWarpFadeInScreen,.Lfe19-ExitWarpFadeInScreen
	.align	2, 0
	.globl	FieldCB_DefaultWarpExit
	.type	 FieldCB_DefaultWarpExit,function
	.thumb_func
FieldCB_DefaultWarpExit:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	QuestLog_DrawPreviouslyOnQuestHeaderIfInPlaybackMode
	mov	r0, #0x0
	bl	SetUpWarpExitTask
	bl	LockPlayerFieldControls
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 FieldCB_DefaultWarpExit,.Lfe20-FieldCB_DefaultWarpExit
	.align	2, 0
	.globl	FieldCB_WarpExitFadeFromBlack
	.type	 FieldCB_WarpExitFadeFromBlack,function
	.thumb_func
FieldCB_WarpExitFadeFromBlack:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	QuestLog_DrawPreviouslyOnQuestHeaderIfInPlaybackMode
	mov	r0, #0x1
	bl	SetUpWarpExitTask
	bl	LockPlayerFieldControls
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 FieldCB_WarpExitFadeFromBlack,.Lfe21-FieldCB_WarpExitFadeFromBlack
	.align	2, 0
	.type	 FieldCB_TeleportWarpIn,function
	.thumb_func
FieldCB_TeleportWarpIn:
	push	{lr}
	bl	Overworld_PlaySpecialMapMusic
	bl	WarpFadeInScreen
	bl	QuestLog_DrawPreviouslyOnQuestHeaderIfInPlaybackMode
	mov	r0, #0x28
	bl	PlaySE
	ldr	r0, .L113
	mov	r1, #0xa
	bl	CreateTask
	bl	LockPlayerFieldControls
	pop	{r0}
	bx	r0
.L114:
	.align	2, 0
.L113:
	.word	Task_TeleportWarpIn
.Lfe22:
	.size	 FieldCB_TeleportWarpIn,.Lfe22-FieldCB_TeleportWarpIn
	.align	2, 0
	.type	 Task_ExitDoor,function
	.thumb_func
Task_ExitDoor:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L138
	add	r4, r0, r1
	add	r6, r4, #0
	add	r6, r6, #0xc
	add	r7, r4, #0
	add	r7, r7, #0xe
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	add	r2, r1, #0
	cmp	r0, #0
	bne	.L116	@cond_branch
	mov	r0, #0x5
	strh	r0, [r4, #0x8]
.L116:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x9
	bls	.LCB844
	b	.L117	@long jump
.LCB844:
	lsl	r0, r0, #0x2
	ldr	r1, .L138+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L139:
	.align	2, 0
.L138:
	.word	gTasks
	.word	.L136
	.align	2, 0
	.align	2, 0
.L136:
	.word	.L118
	.word	.L128
	.word	.L130
	.word	.L132
	.word	.L135
	.word	.L119
	.word	.L120
	.word	.L122
	.word	.L124
	.word	.L126
.L118:
	mov	r0, #0x0
	bl	SetPlayerVisibility
	bl	FreezeObjectEvents
	add	r0, r6, #0
	add	r1, r7, #0
	bl	PlayerGetDestCoords
	mov	r2, #0x0
	ldrsh	r0, [r6, r2]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	FieldSetDoorOpened
	mov	r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L117
.L119:
	mov	r0, #0x0
	bl	SetPlayerVisibility
	bl	FreezeObjectEvents
	bl	DoOutwardBarnDoorWipe
	bl	WarpFadeInScreenWithDelay
	mov	r0, #0x6
	strh	r0, [r4, #0x8]
	b	.L117
.L120:
	ldrh	r0, [r4, #0x26]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x26]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x19
	beq	.LCB897
	b	.L117	@long jump
.LCB897:
	add	r0, r6, #0
	add	r1, r7, #0
	bl	PlayerGetDestCoords
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	GetDoorSoundEffect
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	PlaySE
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	FieldAnimateDoorOpen
	mov	r0, #0x7
	strh	r0, [r4, #0x8]
	b	.L117
.L122:
	bl	FieldIsDoorAnimationRunning
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB927
	b	.L117	@long jump
.LCB927:
	add	r0, r4, #0
	add	r0, r0, #0x20
	add	r1, r4, #0
	add	r1, r1, #0x22
	bl	PlayerGetDestCoords
	mov	r0, #0x1
	bl	SetPlayerVisibility
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L140
	add	r0, r0, r1
	mov	r1, #0x10
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x8
	strh	r0, [r4, #0x8]
	b	.L117
.L141:
	.align	2, 0
.L140:
	.word	gObjectEvents
.L124:
	ldrh	r0, [r4, #0x24]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x24]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xe
	beq	.LCB971
	b	.L117	@long jump
.LCB971:
	mov	r1, #0x20
	ldrsh	r0, [r4, r1]
	mov	r2, #0x22
	ldrsh	r1, [r4, r2]
	bl	FieldAnimateDoorClose
	mov	r0, #0x9
	strh	r0, [r4, #0x8]
	b	.L117
.L126:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0
	beq	.L117	@cond_branch
	bl	walkrun_is_standing_still
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L117	@cond_branch
	bl	FieldIsDoorAnimationRunning
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L117	@cond_branch
	ldr	r0, .L142
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L117	@cond_branch
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L142+0x4
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfFinished
	b	.L134
.L143:
	.align	2, 0
.L142:
	.word	Task_BarnDoorWipe
	.word	gObjectEvents
.L128:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0
	beq	.L117	@cond_branch
	mov	r0, #0x1
	bl	SetPlayerVisibility
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L144
	add	r0, r0, r1
	mov	r1, #0x10
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x2
	strh	r0, [r4, #0x8]
	b	.L117
.L145:
	.align	2, 0
.L144:
	.word	gObjectEvents
.L130:
	bl	walkrun_is_standing_still
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L117	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	FieldAnimateDoorClose
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	strh	r0, [r4, #0xa]
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L146
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfFinished
	mov	r0, #0x3
	strh	r0, [r4, #0x8]
	b	.L117
.L147:
	.align	2, 0
.L146:
	.word	gObjectEvents
.L132:
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	blt	.L134	@cond_branch
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x1
	beq	.L117	@cond_branch
.L134:
	mov	r0, #0x4
	strh	r0, [r4, #0x8]
	b	.L117
.L135:
	bl	UnfreezeObjectEvents
	bl	UnlockPlayerFieldControls
	add	r0, r5, #0
	bl	DestroyTask
.L117:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 Task_ExitDoor,.Lfe23-Task_ExitDoor
	.align	2, 0
	.type	 Task_ExitNonAnimDoor,function
	.thumb_func
Task_ExitNonAnimDoor:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L159
	add	r5, r0, r1
	add	r6, r5, #0
	add	r6, r6, #0xc
	add	r7, r5, #0
	add	r7, r7, #0xe
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L151	@cond_branch
	cmp	r0, #0x1
	bgt	.L158	@cond_branch
	cmp	r0, #0
	beq	.L150	@cond_branch
	b	.L149
.L160:
	.align	2, 0
.L159:
	.word	gTasks
.L158:
	cmp	r0, #0x2
	beq	.L153	@cond_branch
	cmp	r0, #0x3
	beq	.L155	@cond_branch
	b	.L149
.L150:
	mov	r0, #0x0
	bl	SetPlayerVisibility
	bl	FreezeObjectEvents
	add	r0, r6, #0
	add	r1, r7, #0
	bl	PlayerGetDestCoords
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L149
.L151:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0
	beq	.L149	@cond_branch
	mov	r0, #0x1
	bl	SetPlayerVisibility
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L161
	add	r4, r4, r0
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkNormalMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	b	.L149
.L162:
	.align	2, 0
.L161:
	.word	gObjectEvents
.L153:
	bl	walkrun_is_standing_still
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L149	@cond_branch
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	b	.L149
.L155:
	bl	UnfreezeObjectEvents
	bl	UnlockPlayerFieldControls
	add	r0, r4, #0
	bl	DestroyTask
.L149:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 Task_ExitNonAnimDoor,.Lfe24-Task_ExitNonAnimDoor
	.align	2, 0
	.type	 Task_ExitNonDoor,function
	.thumb_func
Task_ExitNonDoor:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L170
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L165	@cond_branch
	cmp	r0, #0x1
	beq	.L166	@cond_branch
	b	.L164
.L171:
	.align	2, 0
.L170:
	.word	gTasks
.L165:
	bl	FreezeObjectEvents
	bl	LockPlayerFieldControls
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L164
.L166:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0
	beq	.L164	@cond_branch
	bl	UnfreezeObjectEvents
	bl	UnlockPlayerFieldControls
	add	r0, r5, #0
	bl	DestroyTask
.L164:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 Task_ExitNonDoor,.Lfe25-Task_ExitNonDoor
	.align	2, 0
	.type	 Task_TeleportWarpIn,function
	.thumb_func
Task_TeleportWarpIn:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L179
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L174	@cond_branch
	cmp	r0, #0x1
	beq	.L175	@cond_branch
	b	.L173
.L180:
	.align	2, 0
.L179:
	.word	gTasks
.L174:
	bl	FreezeObjectEvents
	bl	LockPlayerFieldControls
	bl	StartTeleportInPlayerAnim
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L173
.L175:
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0
	beq	.L173	@cond_branch
	bl	WaitTeleportInPlayerAnim
	cmp	r0, #0x1
	beq	.L173	@cond_branch
	bl	UnfreezeObjectEvents
	bl	UnlockPlayerFieldControls
	add	r0, r5, #0
	bl	DestroyTask
.L173:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 Task_TeleportWarpIn,.Lfe26-Task_TeleportWarpIn
	.align	2, 0
	.type	 Task_WaitFadeAndCreateStartMenuTask,function
	.thumb_func
Task_WaitFadeAndCreateStartMenuTask:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L182	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L183
	mov	r1, #0x50
	bl	CreateTask
.L182:
	pop	{r4}
	pop	{r0}
	bx	r0
.L184:
	.align	2, 0
.L183:
	.word	Task_StartMenuHandleInput
.Lfe27:
	.size	 Task_WaitFadeAndCreateStartMenuTask,.Lfe27-Task_WaitFadeAndCreateStartMenuTask
	.align	2, 0
	.globl	FadeTransition_FadeInOnReturnToStartMenu
	.type	 FadeTransition_FadeInOnReturnToStartMenu,function
	.thumb_func
FadeTransition_FadeInOnReturnToStartMenu:
	push	{lr}
	bl	FadeInFromBlack
	ldr	r0, .L186
	mov	r1, #0x50
	bl	CreateTask
	bl	LockPlayerFieldControls
	pop	{r0}
	bx	r0
.L187:
	.align	2, 0
.L186:
	.word	Task_WaitFadeAndCreateStartMenuTask
.Lfe28:
	.size	 FadeTransition_FadeInOnReturnToStartMenu,.Lfe28-FadeTransition_FadeInOnReturnToStartMenu
	.align	2, 0
	.globl	FieldCB_ReturnToFieldOpenStartMenu
	.type	 FieldCB_ReturnToFieldOpenStartMenu,function
	.thumb_func
FieldCB_ReturnToFieldOpenStartMenu:
	push	{lr}
	bl	SetUpReturnToStartMenu
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.Lfe29:
	.size	 FieldCB_ReturnToFieldOpenStartMenu,.Lfe29-FieldCB_ReturnToFieldOpenStartMenu
	.align	2, 0
	.type	 Task_SafariZoneRanOutOfBalls,function
	.thumb_func
Task_SafariZoneRanOutOfBalls:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L190	@cond_branch
	bl	UnlockPlayerFieldControls
	add	r0, r4, #0
	bl	DestroyTask
	bl	ClearPlayerHeldMovementAndUnfreezeObjectEvents
.L190:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe30:
	.size	 Task_SafariZoneRanOutOfBalls,.Lfe30-Task_SafariZoneRanOutOfBalls
	.align	2, 0
	.globl	FieldCB_SafariZoneRanOutOfBalls
	.type	 FieldCB_SafariZoneRanOutOfBalls,function
	.thumb_func
FieldCB_SafariZoneRanOutOfBalls:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	Overworld_PlaySpecialMapMusic
	bl	FadeInFromBlack
	ldr	r0, .L192
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L193:
	.align	2, 0
.L192:
	.word	Task_SafariZoneRanOutOfBalls
.Lfe31:
	.size	 FieldCB_SafariZoneRanOutOfBalls,.Lfe31-FieldCB_SafariZoneRanOutOfBalls
	.align	2, 0
	.type	 WaitWarpFadeOutScreen,function
	.thumb_func
WaitWarpFadeOutScreen:
	ldr	r0, .L195
	ldrb	r0, [r0, #0x7]
	lsr	r0, r0, #0x7
	bx	lr
.L196:
	.align	2, 0
.L195:
	.word	gPaletteFade
.Lfe32:
	.size	 WaitWarpFadeOutScreen,.Lfe32-WaitWarpFadeOutScreen
	.align	2, 0
	.globl	FieldFadeTransitionBackgroundEffectIsFinished
	.type	 FieldFadeTransitionBackgroundEffectIsFinished,function
	.thumb_func
FieldFadeTransitionBackgroundEffectIsFinished:
	push	{lr}
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L198	@cond_branch
	bl	ForestMapPreviewScreenIsRunning
	cmp	r0, #0
	beq	.L198	@cond_branch
	mov	r0, #0x1
	b	.L200
.L198:
	mov	r0, #0x0
.L200:
	pop	{r1}
	bx	r1
.Lfe33:
	.size	 FieldFadeTransitionBackgroundEffectIsFinished,.Lfe33-FieldFadeTransitionBackgroundEffectIsFinished
	.align	2, 0
	.globl	DoWarp
	.type	 DoWarp,function
	.thumb_func
DoWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	bl	PlayRainStoppingSoundEffect
	mov	r0, #0x9
	bl	PlaySE
	ldr	r0, .L202
	ldr	r1, .L202+0x4
	str	r1, [r0]
	ldr	r0, .L202+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L203:
	.align	2, 0
.L202:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	Task_Teleport2Warp
.Lfe34:
	.size	 DoWarp,.Lfe34-DoWarp
	.align	2, 0
	.globl	DoDiveWarp
	.type	 DoDiveWarp,function
	.thumb_func
DoDiveWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	bl	PlayRainStoppingSoundEffect
	ldr	r0, .L205
	ldr	r1, .L205+0x4
	str	r1, [r0]
	ldr	r0, .L205+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L206:
	.align	2, 0
.L205:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	Task_Teleport2Warp
.Lfe35:
	.size	 DoDiveWarp,.Lfe35-DoDiveWarp
	.align	2, 0
	.globl	DoStairWarp
	.type	 DoStairWarp,function
	.thumb_func
DoStairWarp:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r6, .L208
	add	r0, r6, #0
	mov	r1, #0xa
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L208+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	strh	r4, [r1, #0xa]
	strh	r5, [r1, #0x26]
	bl	_call_via_r6
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L209:
	.align	2, 0
.L208:
	.word	Task_StairWarp
	.word	gTasks
.Lfe36:
	.size	 DoStairWarp,.Lfe36-DoStairWarp
	.align	2, 0
	.globl	DoDoorWarp
	.type	 DoDoorWarp,function
	.thumb_func
DoDoorWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	ldr	r0, .L211
	ldr	r1, .L211+0x4
	str	r1, [r0]
	ldr	r0, .L211+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L212:
	.align	2, 0
.L211:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	Task_DoorWarp
.Lfe37:
	.size	 DoDoorWarp,.Lfe37-DoDoorWarp
	.align	2, 0
	.globl	DoTeleport2Warp
	.type	 DoTeleport2Warp,function
	.thumb_func
DoTeleport2Warp:
	push	{lr}
	bl	LockPlayerFieldControls
	ldr	r0, .L214
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, .L214+0x4
	ldr	r0, .L214+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L215:
	.align	2, 0
.L214:
	.word	Task_Teleport2Warp
	.word	gFieldCallback
	.word	FieldCB_TeleportWarpIn
.Lfe38:
	.size	 DoTeleport2Warp,.Lfe38-DoTeleport2Warp
	.align	2, 0
	.globl	DoUnionRoomWarp
	.type	 DoUnionRoomWarp,function
	.thumb_func
DoUnionRoomWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	ldr	r0, .L217
	ldr	r1, .L217+0x4
	str	r1, [r0]
	ldr	r0, .L217+0x8
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L218:
	.align	2, 0
.L217:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	Task_TeleportWarp
.Lfe39:
	.size	 DoUnionRoomWarp,.Lfe39-DoUnionRoomWarp
	.align	2, 0
	.globl	DoFallWarp
	.type	 DoFallWarp,function
	.thumb_func
DoFallWarp:
	push	{lr}
	bl	DoDiveWarp
	ldr	r1, .L220
	ldr	r0, .L220+0x4
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L221:
	.align	2, 0
.L220:
	.word	gFieldCallback
	.word	FieldCB_FallWarpExit
.Lfe40:
	.size	 DoFallWarp,.Lfe40-DoFallWarp
	.align	2, 0
	.globl	DoEscalatorWarp
	.type	 DoEscalatorWarp,function
	.thumb_func
DoEscalatorWarp:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	LockPlayerFieldControls
	add	r0, r4, #0
	mov	r1, #0xa
	bl	StartEscalatorWarp
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 DoEscalatorWarp,.Lfe41-DoEscalatorWarp
	.align	2, 0
	.globl	DoLavaridgeGymB1FWarp
	.type	 DoLavaridgeGymB1FWarp,function
	.thumb_func
DoLavaridgeGymB1FWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	mov	r0, #0xa
	bl	StartLavaridgeGymB1FWarp
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 DoLavaridgeGymB1FWarp,.Lfe42-DoLavaridgeGymB1FWarp
	.align	2, 0
	.globl	DoLavaridgeGym1FWarp
	.type	 DoLavaridgeGym1FWarp,function
	.thumb_func
DoLavaridgeGym1FWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	mov	r0, #0xa
	bl	StartLavaridgeGym1FWarp
	pop	{r0}
	bx	r0
.Lfe43:
	.size	 DoLavaridgeGym1FWarp,.Lfe43-DoLavaridgeGym1FWarp
	.align	2, 0
	.globl	DoTeleportWarp
	.type	 DoTeleportWarp,function
	.thumb_func
DoTeleportWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	TryFadeOutOldMapMusic
	ldr	r0, .L226
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, .L226+0x4
	ldr	r0, .L226+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L227:
	.align	2, 0
.L226:
	.word	Task_TeleportWarp
	.word	gFieldCallback
	.word	FieldCB_TeleportWarpIn
.Lfe44:
	.size	 DoTeleportWarp,.Lfe44-DoTeleportWarp
	.align	2, 0
	.type	 DoPortholeWarp,function
	.thumb_func
DoPortholeWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	WarpFadeOutScreen
	ldr	r0, .L229
	mov	r1, #0xa
	bl	CreateTask
	ldr	r1, .L229+0x4
	ldr	r0, .L229+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L230:
	.align	2, 0
.L229:
	.word	Task_Teleport2Warp
	.word	gFieldCallback
	.word	FieldCB_ShowPortholeView
.Lfe45:
	.size	 DoPortholeWarp,.Lfe45-DoPortholeWarp
	.align	2, 0
	.type	 Task_CableClubWarp,function
	.thumb_func
Task_CableClubWarp:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L241
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L234	@cond_branch
	cmp	r0, #0x1
	bgt	.L239	@cond_branch
	cmp	r0, #0
	beq	.L233	@cond_branch
	b	.L232
.L242:
	.align	2, 0
.L241:
	.word	gTasks
.L239:
	cmp	r0, #0x2
	beq	.L236	@cond_branch
	b	.L232
.L233:
	bl	LockPlayerFieldControls
	b	.L240
.L234:
	bl	WaitWarpFadeOutScreen
	cmp	r0, #0
	bne	.L232	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L232	@cond_branch
.L240:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L232
.L236:
	bl	WarpIntoMap
	ldr	r0, .L243
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L232:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L244:
	.align	2, 0
.L243:
	.word	CB2_ReturnToFieldCableClub
.Lfe46:
	.size	 Task_CableClubWarp,.Lfe46-Task_CableClubWarp
	.align	2, 0
	.globl	DoCableClubWarp
	.type	 DoCableClubWarp,function
	.thumb_func
DoCableClubWarp:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	mov	r0, #0x9
	bl	PlaySE
	ldr	r0, .L246
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L247:
	.align	2, 0
.L246:
	.word	Task_CableClubWarp
.Lfe47:
	.size	 DoCableClubWarp,.Lfe47-DoCableClubWarp
	.align	2, 0
	.type	 Task_ReturnFromLinkRoomWarp,function
	.thumb_func
Task_ReturnFromLinkRoomWarp:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L259
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L251	@cond_branch
	cmp	r0, #0x1
	bgt	.L257	@cond_branch
	cmp	r0, #0
	beq	.L250	@cond_branch
	b	.L249
.L260:
	.align	2, 0
.L259:
	.word	gTasks+0x8
.L257:
	cmp	r0, #0x2
	beq	.L253	@cond_branch
	b	.L249
.L250:
	bl	ClearLinkCallback_2
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	bl	TryFadeOutOldMapMusic
	mov	r0, #0x9
	bl	PlaySE
	b	.L258
.L251:
	bl	WaitWarpFadeOutScreen
	cmp	r0, #0
	bne	.L249	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L249	@cond_branch
	bl	SetCloseLinkCallback
.L258:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L249
.L253:
	ldr	r0, .L261
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L249	@cond_branch
	bl	WarpIntoMap
	ldr	r0, .L261+0x4
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L249:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L262:
	.align	2, 0
.L261:
	.word	gReceivedRemoteLinkPlayers
	.word	CB2_LoadMap
.Lfe48:
	.size	 Task_ReturnFromLinkRoomWarp,.Lfe48-Task_ReturnFromLinkRoomWarp
	.align	2, 0
	.globl	ReturnFromLinkRoom
	.type	 ReturnFromLinkRoom,function
	.thumb_func
ReturnFromLinkRoom:
	push	{lr}
	ldr	r0, .L264
	mov	r1, #0xa
	bl	CreateTask
	pop	{r0}
	bx	r0
.L265:
	.align	2, 0
.L264:
	.word	Task_ReturnFromLinkRoomWarp
.Lfe49:
	.size	 ReturnFromLinkRoom,.Lfe49-ReturnFromLinkRoom
	.align	2, 0
	.type	 Task_Teleport2Warp,function
	.thumb_func
Task_Teleport2Warp:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L276
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L269	@cond_branch
	cmp	r0, #0x1
	bgt	.L274	@cond_branch
	cmp	r0, #0
	beq	.L268	@cond_branch
	b	.L267
.L277:
	.align	2, 0
.L276:
	.word	gTasks
.L274:
	cmp	r0, #0x2
	beq	.L271	@cond_branch
	b	.L267
.L268:
	bl	FreezeObjectEvents
	bl	LockPlayerFieldControls
	b	.L275
.L269:
	bl	WaitWarpFadeOutScreen
	cmp	r0, #0
	bne	.L267	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L267	@cond_branch
.L275:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L267
.L271:
	bl	WarpIntoMap
	ldr	r0, .L278
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L267:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L279:
	.align	2, 0
.L278:
	.word	CB2_LoadMap
.Lfe50:
	.size	 Task_Teleport2Warp,.Lfe50-Task_Teleport2Warp
	.align	2, 0
	.type	 Task_TeleportWarp,function
	.thumb_func
Task_TeleportWarp:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L292
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L283	@cond_branch
	cmp	r0, #0x1
	bgt	.L290	@cond_branch
	cmp	r0, #0
	beq	.L282	@cond_branch
	b	.L281
.L293:
	.align	2, 0
.L292:
	.word	gTasks
.L290:
	cmp	r0, #0x2
	beq	.L285	@cond_branch
	cmp	r0, #0x3
	beq	.L287	@cond_branch
	b	.L281
.L282:
	bl	FreezeObjectEvents
	bl	LockPlayerFieldControls
	mov	r0, #0x27
	bl	PlaySE
	bl	StartTeleportWarpOutPlayerAnim
	b	.L291
.L283:
	bl	WaitTeleportWarpOutPlayerAnim
	cmp	r0, #0
	bne	.L281	@cond_branch
	bl	WarpFadeOutScreen
	b	.L291
.L285:
	bl	WaitWarpFadeOutScreen
	cmp	r0, #0
	bne	.L281	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L281	@cond_branch
.L291:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L281
.L287:
	bl	WarpIntoMap
	ldr	r0, .L294
	bl	SetMainCallback2
	add	r0, r5, #0
	bl	DestroyTask
.L281:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L295:
	.align	2, 0
.L294:
	.word	CB2_LoadMap
.Lfe51:
	.size	 Task_TeleportWarp,.Lfe51-Task_TeleportWarp
	.align	2, 0
	.type	 Task_DoorWarp,function
	.thumb_func
Task_DoorWarp:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L312
	add	r5, r1, r0
	add	r4, r5, #0
	add	r4, r4, #0xc
	add	r6, r5, #0
	add	r6, r6, #0xe
	mov	r2, #0x8
	ldrsh	r1, [r5, r2]
	add	r2, r0, #0
	cmp	r1, #0x5
	bls	.LCB2216
	b	.L297	@long jump
.LCB2216:
	lsl	r0, r1, #0x2
	ldr	r1, .L312+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L313:
	.align	2, 0
.L312:
	.word	gTasks
	.word	.L309
	.align	2, 0
	.align	2, 0
.L309:
	.word	.L298
	.word	.L299
	.word	.L302
	.word	.L304
	.word	.L307
	.word	.L308
.L298:
	bl	FreezeObjectEvents
	add	r0, r4, #0
	add	r1, r6, #0
	bl	PlayerGetDestCoords
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r2, #0x0
	ldrsh	r1, [r6, r2]
	sub	r1, r1, #0x1
	bl	GetDoorSoundEffect
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	PlaySE
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r2, #0x0
	ldrsh	r1, [r6, r2]
	sub	r1, r1, #0x1
	bl	FieldAnimateDoorOpen
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	strh	r0, [r5, #0xa]
	mov	r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L297
.L299:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	blt	.L301	@cond_branch
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x1
	beq	.L297	@cond_branch
.L301:
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L314
	add	r0, r0, r4
	bl	ObjectEventClearHeldMovementIfActive
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0x11
	bl	ObjectEventSetHeldMovement
	mov	r0, #0x2
	strh	r0, [r5, #0x8]
	b	.L297
.L315:
	.align	2, 0
.L314:
	.word	gObjectEvents
.L302:
	bl	walkrun_is_standing_still
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L297	@cond_branch
	mov	r2, #0x0
	ldrsh	r0, [r4, r2]
	mov	r2, #0x0
	ldrsh	r1, [r6, r2]
	sub	r1, r1, #0x1
	bl	FieldAnimateDoorClose
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	strh	r0, [r5, #0xa]
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetObjectEventIdByLocalIdAndMap
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L316
	add	r0, r0, r1
	bl	ObjectEventClearHeldMovementIfFinished
	mov	r0, #0x0
	bl	SetPlayerVisibility
	mov	r0, #0x3
	strh	r0, [r5, #0x8]
	b	.L297
.L317:
	.align	2, 0
.L316:
	.word	gObjectEvents
.L304:
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	blt	.L306	@cond_branch
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0x1
	beq	.L297	@cond_branch
.L306:
	mov	r0, #0x4
	strh	r0, [r5, #0x8]
	b	.L297
.L307:
	bl	TryFadeOutOldMapMusic
	bl	WarpFadeOutScreen
	b	.L311
.L308:
	bl	TryFadeOutOldMapMusic
.L311:
	bl	PlayRainStoppingSoundEffect
	mov	r0, #0x0
	strh	r0, [r5, #0x8]
	ldr	r0, .L318
	str	r0, [r5]
.L297:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L319:
	.align	2, 0
.L318:
	.word	Task_Teleport2Warp
.Lfe52:
	.size	 Task_DoorWarp,.Lfe52-Task_DoorWarp
	.align	2, 0
	.type	 Task_StairWarp,function
	.thumb_func
Task_StairWarp:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L336
	add	r5, r0, r1
	ldr	r2, .L336+0x4
	ldrb	r1, [r2, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L336+0x8
	add	r6, r0, r1
	ldrb	r1, [r2, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L336+0xc
	add	r7, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L323	@cond_branch
	cmp	r0, #0x1
	bgt	.L334	@cond_branch
	cmp	r0, #0
	beq	.L322	@cond_branch
	b	.L332
.L337:
	.align	2, 0
.L336:
	.word	gTasks+0x8
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.L334:
	cmp	r0, #0x2
	beq	.L328	@cond_branch
	cmp	r0, #0x3
	beq	.L330	@cond_branch
	b	.L332
.L322:
	bl	LockPlayerFieldControls
	bl	FreezeObjectEvents
	bl	CameraObjectReset2
	b	.L335
.L323:
	add	r0, r6, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L325	@cond_branch
	add	r0, r6, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L321	@cond_branch
.L325:
	ldrh	r1, [r5, #0x1e]
	mov	r2, #0x1e
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	beq	.L326	@cond_branch
	sub	r0, r1, #0x1
	strh	r0, [r5, #0x1e]
	b	.L321
.L326:
	bl	TryFadeOutOldMapMusic
	bl	PlayRainStoppingSoundEffect
	ldrb	r1, [r7, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r7, #0x5]
	ldrh	r0, [r5, #0x2]
	add	r1, r5, #0x4
	add	r2, r5, #0x6
	bl	ForceStairsMovement
	mov	r0, #0x9
	bl	PlaySE
	b	.L335
.L328:
	mov	r1, #0x4
	ldrsh	r0, [r5, r1]
	mov	r2, #0x6
	ldrsh	r1, [r5, r2]
	add	r2, r5, #0
	add	r2, r2, #0x8
	add	r3, r5, #0
	add	r3, r3, #0xa
	add	r4, r5, #0
	add	r4, r4, #0xc
	str	r4, [sp]
	bl	UpdateStairsMovement
	ldrh	r0, [r5, #0x1e]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x1e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xb
	ble	.L321	@cond_branch
	bl	WarpFadeOutScreen
	b	.L335
.L330:
	mov	r1, #0x4
	ldrsh	r0, [r5, r1]
	mov	r2, #0x6
	ldrsh	r1, [r5, r2]
	add	r2, r5, #0
	add	r2, r2, #0x8
	add	r3, r5, #0
	add	r3, r3, #0xa
	add	r4, r5, #0
	add	r4, r4, #0xc
	str	r4, [sp]
	bl	UpdateStairsMovement
	bl	WaitWarpFadeOutScreen
	cmp	r0, #0
	bne	.L321	@cond_branch
	bl	BGMusicStopped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L321	@cond_branch
.L335:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L321
.L332:
	ldr	r0, .L338
	ldr	r1, .L338+0x4
	str	r1, [r0]
	bl	WarpIntoMap
	ldr	r0, .L338+0x8
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L321:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L339:
	.align	2, 0
.L338:
	.word	gFieldCallback
	.word	FieldCB_DefaultWarpExit
	.word	CB2_LoadMap
.Lfe53:
	.size	 Task_StairWarp,.Lfe53-Task_StairWarp
	.align	2, 0
	.type	 UpdateStairsMovement,function
	.thumb_func
UpdateStairsMovement:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r4, r2, #0
	add	r5, r3, #0
	ldr	r6, [sp, #0x18]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	ip, r0
	ldr	r3, .L344
	ldrb	r2, [r3, #0x4]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L344+0x4
	add	r7, r0, r2
	ldrb	r2, [r3, #0x5]
	lsl	r0, r2, #0x3
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r2, .L344+0x8
	add	r0, r0, r2
	mov	r8, r0
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0
	bgt	.L342	@cond_branch
	mov	r2, #0x0
	ldrsh	r0, [r6, r2]
	cmp	r0, #0x6
	ble	.L341	@cond_branch
.L342:
	ldrh	r0, [r5]
	add	r0, r1, r0
	strh	r0, [r5]
.L341:
	mov	r1, ip
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	ldrh	r2, [r4]
	add	r0, r0, r2
	strh	r0, [r4]
	ldrh	r0, [r6]
	add	r0, r0, #0x1
	strh	r0, [r6]
	ldrh	r0, [r4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x15
	strh	r0, [r7, #0x24]
	ldrh	r0, [r5]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x15
	strh	r0, [r7, #0x26]
	mov	r1, r8
	ldrb	r0, [r1]
	lsr	r0, r0, #0x7
	cmp	r0, #0
	beq	.L343	@cond_branch
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkInPlaceNormalMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, r8
	bl	ObjectEventForceSetHeldMovement
.L343:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L345:
	.align	2, 0
.L344:
	.word	gPlayerAvatar
	.word	gSprites
	.word	gObjectEvents
.Lfe54:
	.size	 UpdateStairsMovement,.Lfe54-UpdateStairsMovement
	.align	2, 0
	.type	 ForceStairsMovement,function
	.thumb_func
ForceStairsMovement:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r8, r2
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L347
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L347+0x4
	add	r4, r4, r0
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetWalkInPlaceNormalMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventForceSetHeldMovement
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	add	r0, r5, #0
	add	r1, r6, #0
	mov	r2, r8
	bl	GetStairsMovementDirection
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L348:
	.align	2, 0
.L347:
	.word	gPlayerAvatar
	.word	gObjectEvents
.Lfe55:
	.size	 ForceStairsMovement,.Lfe55-ForceStairsMovement
	.align	2, 0
	.type	 GetStairsMovementDirection,function
	.thumb_func
GetStairsMovementDirection:
	push	{r4, r5, r6, r7, lr}
	add	r5, r1, #0
	add	r6, r2, #0
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r7, r4, #0
	add	r0, r4, #0
	bl	MetatileBehavior_IsDirectionalUpRightStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L350	@cond_branch
	mov	r0, #0x10
	strh	r0, [r5]
	mov	r1, #0xa
	neg	r1, r1
	add	r0, r1, #0
	b	.L358
.L350:
	add	r0, r4, #0
	bl	MetatileBehavior_IsDirectionalUpLeftStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L352	@cond_branch
	mov	r1, #0x11
	neg	r1, r1
	add	r0, r1, #0
	strh	r0, [r5]
	add	r1, r1, #0x7
	add	r0, r1, #0
	b	.L358
.L352:
	add	r0, r4, #0
	bl	MetatileBehavior_IsDirectionalDownRightStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L354	@cond_branch
	mov	r0, #0x11
	strh	r0, [r5]
	mov	r0, #0x3
	b	.L358
.L354:
	add	r0, r7, #0
	bl	MetatileBehavior_IsDirectionalDownLeftStairWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L356	@cond_branch
	mov	r1, #0x11
	neg	r1, r1
	add	r0, r1, #0
	strh	r0, [r5]
	mov	r0, #0x3
	b	.L358
.L356:
	strh	r0, [r5]
.L358:
	strh	r0, [r6]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 GetStairsMovementDirection,.Lfe56-GetStairsMovementDirection
	.align	2, 0
	.type	 Task_ExitStairs,function
	.thumb_func
Task_ExitStairs:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L368
	add	r5, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L363	@cond_branch
	cmp	r0, #0x1
	beq	.L364	@cond_branch
	bl	FieldFadeTransitionBackgroundEffectIsFinished
	cmp	r0, #0x1
	bne	.L360	@cond_branch
	bl	CameraObjectReset1
	bl	UnlockPlayerFieldControls
	add	r0, r4, #0
	bl	DestroyTask
	b	.L360
.L369:
	.align	2, 0
.L368:
	.word	gTasks+0x8
.L363:
	bl	Overworld_PlaySpecialMapMusic
	bl	WarpFadeInScreen
	bl	LockPlayerFieldControls
	add	r0, r5, #0x2
	add	r1, r5, #0x4
	add	r2, r5, #0x6
	add	r3, r5, #0
	add	r3, r3, #0x8
	add	r4, r5, #0
	add	r4, r4, #0xa
	str	r4, [sp]
	bl	ExitStairsMovement
	b	.L367
.L364:
	add	r0, r5, #0x2
	add	r1, r5, #0x4
	add	r2, r5, #0x6
	add	r3, r5, #0
	add	r3, r3, #0x8
	add	r4, r5, #0
	add	r4, r4, #0xa
	str	r4, [sp]
	bl	WaitStairExitMovementFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L360	@cond_branch
.L367:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
.L360:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe57:
	.size	 Task_ExitStairs,.Lfe57-Task_ExitStairs
	.align	2, 0
	.type	 ExitStairsMovement,function
	.thumb_func
ExitStairsMovement:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	add	r7, r0, #0
	add	r5, r1, #0
	mov	r9, r2
	mov	sl, r3
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	add	r0, r6, #0
	bl	MetatileBehavior_IsDirectionalDownRightStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L372	@cond_branch
	add	r0, r6, #0
	bl	MetatileBehavior_IsDirectionalUpRightStairWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L371	@cond_branch
.L372:
	mov	r1, #0x3
	b	.L373
.L371:
	mov	r1, #0x4
.L373:
	ldr	r0, .L374
	mov	r8, r0
	ldrb	r0, [r0, #0x5]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L374+0x4
	add	r4, r4, r0
	add	r0, r1, #0
	bl	GetWalkInPlaceFastMovementAction
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ObjectEventForceSetHeldMovement
	add	r0, r6, #0
	add	r1, r7, #0
	add	r2, r5, #0
	bl	GetStairsMovementDirection
	mov	r1, #0x0
	ldrsh	r0, [r7, r1]
	lsl	r0, r0, #0x4
	mov	r2, r9
	strh	r0, [r2]
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	lsl	r0, r0, #0x4
	mov	r2, sl
	strh	r0, [r2]
	mov	r1, #0x10
	ldr	r0, [sp, #0x24]
	strh	r1, [r0]
	mov	r1, r8
	ldrb	r0, [r1, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L374+0x8
	add	r1, r1, r0
	mov	r2, r9
	ldrh	r0, [r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x15
	strh	r0, [r1, #0x24]
	mov	r2, sl
	ldrh	r0, [r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x15
	strh	r0, [r1, #0x26]
	mov	r1, #0x0
	ldrsh	r0, [r7, r1]
	neg	r0, r0
	strh	r0, [r7]
	mov	r2, #0x0
	ldrsh	r0, [r5, r2]
	neg	r0, r0
	strh	r0, [r5]
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L375:
	.align	2, 0
.L374:
	.word	gPlayerAvatar
	.word	gObjectEvents
	.word	gSprites
.Lfe58:
	.size	 ExitStairsMovement,.Lfe58-ExitStairsMovement
	.align	2, 0
	.type	 WaitStairExitMovementFinished,function
	.thumb_func
WaitStairExitMovementFinished:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	ldr	r4, [sp, #0x14]
	ldr	r0, .L380
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L380+0x4
	add	r1, r0, r1
	mov	r7, #0x0
	ldrsh	r0, [r4, r7]
	cmp	r0, #0
	bne	.L377	@cond_branch
	strh	r0, [r1, #0x24]
	strh	r0, [r1, #0x26]
	mov	r0, #0x0
	b	.L379
.L381:
	.align	2, 0
.L380:
	.word	gPlayerAvatar
	.word	gSprites
.L377:
	ldrh	r0, [r5]
	ldrh	r5, [r2]
	add	r0, r0, r5
	strh	r0, [r2]
	ldrh	r0, [r6]
	ldrh	r7, [r3]
	add	r0, r0, r7
	strh	r0, [r3]
	ldrh	r0, [r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x15
	strh	r0, [r1, #0x24]
	ldrh	r0, [r3]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x15
	strh	r0, [r1, #0x26]
	ldrh	r0, [r4]
	sub	r0, r0, #0x1
	strh	r0, [r4]
	mov	r0, #0x1
.L379:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe59:
	.size	 WaitStairExitMovementFinished,.Lfe59-WaitStairExitMovementFinished
.text
	.align	2, 0 @ Don't pad with nop

