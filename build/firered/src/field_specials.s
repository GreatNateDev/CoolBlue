@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 sElevatorCurrentFloorWindowId,object
	.size	 sElevatorCurrentFloorWindowId,1
sElevatorCurrentFloorWindowId:
	.byte	0x0
	.align	1, 0
	.type	 sElevatorScroll,object
	.size	 sElevatorScroll,2
sElevatorScroll:
	.short	0x0
	.align	1, 0
	.type	 sElevatorCursorPos,object
	.size	 sElevatorCursorPos,2
sElevatorCursorPos:
	.short	0x0
	.align	2, 0
	.type	 sListMenuItems,object
	.size	 sListMenuItems,4
sListMenuItems:
	.word	0x0
	.align	1, 0
	.type	 sListMenuLastScrollPosition,object
	.size	 sListMenuLastScrollPosition,2
sListMenuLastScrollPosition:
	.short	0x0
	.type	 sPCBoxToSendMon,object
	.size	 sPCBoxToSendMon,1
sPCBoxToSendMon:
	.byte	0x0
	.type	 sBrailleTextCursorSpriteID,object
	.size	 sBrailleTextCursorSpriteID,1
sBrailleTextCursorSpriteID:
	.byte	0x0
	.section .rodata
	.align	2, 0
	.type	 sStringVarPtrs,object
sStringVarPtrs:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.size	 sStringVarPtrs,12
.text
	.align	2, 0
	.globl	ShowDiploma
	.type	 ShowDiploma,function
	.thumb_func
ShowDiploma:
	push	{lr}
	bl	QuestLog_CutRecording
	ldr	r0, .L5
	bl	SetMainCallback2
	bl	LockPlayerFieldControls
	pop	{r0}
	bx	r0
.L6:
	.align	2, 0
.L5:
	.word	CB2_ShowDiploma
.Lfe1:
	.size	 ShowDiploma,.Lfe1-ShowDiploma
	.align	2, 0
	.globl	ForcePlayerOntoBike
	.type	 ForcePlayerOntoBike,function
	.thumb_func
ForcePlayerOntoBike:
	push	{r4, lr}
	ldr	r0, .L9
	ldrb	r1, [r0]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L8	@cond_branch
	mov	r0, #0x2
	bl	SetPlayerAvatarTransitionFlags
.L8:
	mov	r4, #0x8d
	lsl	r4, r4, #0x1
	add	r0, r4, #0
	bl	Overworld_SetSavedMusic
	add	r0, r4, #0
	bl	Overworld_ChangeMusicTo
	pop	{r4}
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	gPlayerAvatar
.Lfe2:
	.size	 ForcePlayerOntoBike,.Lfe2-ForcePlayerOntoBike
	.align	2, 0
	.globl	ResetCyclingRoadChallengeData
	.type	 ResetCyclingRoadChallengeData,function
	.thumb_func
ResetCyclingRoadChallengeData:
	bx	lr
.Lfe3:
	.size	 ResetCyclingRoadChallengeData,.Lfe3-ResetCyclingRoadChallengeData
	.align	2, 0
	.globl	GetPlayerAvatarBike
	.type	 GetPlayerAvatarBike,function
	.thumb_func
GetPlayerAvatarBike:
	push	{lr}
	mov	r0, #0x4
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L13	@cond_branch
	mov	r0, #0x1
	b	.L17
.L13:
	mov	r0, #0x2
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L15	@cond_branch
	mov	r0, #0x0
	b	.L17
.L15:
	mov	r0, #0x2
.L17:
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 GetPlayerAvatarBike,.Lfe4-GetPlayerAvatarBike
	.align	2, 0
	.globl	ShowFieldMessageStringVar4
	.type	 ShowFieldMessageStringVar4,function
	.thumb_func
ShowFieldMessageStringVar4:
	push	{lr}
	ldr	r0, .L19
	bl	ShowFieldMessage
	pop	{r0}
	bx	r0
.L20:
	.align	2, 0
.L19:
	.word	gStringVar4
.Lfe5:
	.size	 ShowFieldMessageStringVar4,.Lfe5-ShowFieldMessageStringVar4
	.align	2, 0
	.globl	GetPlayerXY
	.type	 GetPlayerXY,function
	.thumb_func
GetPlayerXY:
	ldr	r1, .L22
	ldr	r0, .L22+0x4
	ldr	r2, [r0]
	ldrh	r0, [r2]
	strh	r0, [r1]
	ldr	r1, .L22+0x8
	ldrh	r0, [r2, #0x2]
	strh	r0, [r1]
	bx	lr
.L23:
	.align	2, 0
.L22:
	.word	gSpecialVar_0x8004
	.word	gSaveBlock1Ptr
	.word	gSpecialVar_0x8005
.Lfe6:
	.size	 GetPlayerXY,.Lfe6-GetPlayerXY
	.align	2, 0
	.globl	GetPlayerTrainerIdOnesDigit
	.type	 GetPlayerTrainerIdOnesDigit,function
	.thumb_func
GetPlayerTrainerIdOnesDigit:
	push	{lr}
	ldr	r0, .L25
	ldr	r0, [r0]
	ldrb	r1, [r0, #0xb]
	lsl	r1, r1, #0x8
	ldrb	r0, [r0, #0xa]
	orr	r0, r0, r1
	mov	r1, #0xa
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L26:
	.align	2, 0
.L25:
	.word	gSaveBlock2Ptr
.Lfe7:
	.size	 GetPlayerTrainerIdOnesDigit,.Lfe7-GetPlayerTrainerIdOnesDigit
	.align	2, 0
	.globl	BufferBigGuyOrBigGirlString
	.type	 BufferBigGuyOrBigGirlString,function
	.thumb_func
BufferBigGuyOrBigGirlString:
	push	{lr}
	ldr	r0, .L30
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L28	@cond_branch
	ldr	r0, .L30+0x4
	ldr	r1, .L30+0x8
	bl	StringCopy
	b	.L29
.L31:
	.align	2, 0
.L30:
	.word	gSaveBlock2Ptr
	.word	gStringVar1
	.word	gText_BigGuy
.L28:
	ldr	r0, .L32
	ldr	r1, .L32+0x4
	bl	StringCopy
.L29:
	pop	{r0}
	bx	r0
.L33:
	.align	2, 0
.L32:
	.word	gStringVar1
	.word	gText_BigGirl
.Lfe8:
	.size	 BufferBigGuyOrBigGirlString,.Lfe8-BufferBigGuyOrBigGirlString
	.align	2, 0
	.globl	BufferSonOrDaughterString
	.type	 BufferSonOrDaughterString,function
	.thumb_func
BufferSonOrDaughterString:
	push	{lr}
	ldr	r0, .L37
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L35	@cond_branch
	ldr	r0, .L37+0x4
	ldr	r1, .L37+0x8
	bl	StringCopy
	b	.L36
.L38:
	.align	2, 0
.L37:
	.word	gSaveBlock2Ptr
	.word	gStringVar1
	.word	gText_Daughter
.L35:
	ldr	r0, .L39
	ldr	r1, .L39+0x4
	bl	StringCopy
.L36:
	pop	{r0}
	bx	r0
.L40:
	.align	2, 0
.L39:
	.word	gStringVar1
	.word	gText_Son
.Lfe9:
	.size	 BufferSonOrDaughterString,.Lfe9-BufferSonOrDaughterString
	.align	2, 0
	.globl	GetBattleOutcome
	.type	 GetBattleOutcome,function
	.thumb_func
GetBattleOutcome:
	ldr	r0, .L42
	ldrb	r0, [r0]
	bx	lr
.L43:
	.align	2, 0
.L42:
	.word	gBattleOutcome
.Lfe10:
	.size	 GetBattleOutcome,.Lfe10-GetBattleOutcome
	.align	2, 0
	.globl	SetHiddenItemFlag
	.type	 SetHiddenItemFlag,function
	.thumb_func
SetHiddenItemFlag:
	push	{lr}
	ldr	r0, .L45
	ldrh	r0, [r0]
	bl	FlagSet
	pop	{r0}
	bx	r0
.L46:
	.align	2, 0
.L45:
	.word	gSpecialVar_0x8004
.Lfe11:
	.size	 SetHiddenItemFlag,.Lfe11-SetHiddenItemFlag
	.align	2, 0
	.globl	GetLeadMonFriendship
	.type	 GetLeadMonFriendship,function
	.thumb_func
GetLeadMonFriendship:
	push	{r4, lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r1, r1, r0
	ldr	r0, .L61
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	cmp	r0, #0xff
	bne	.L48	@cond_branch
	mov	r0, #0x6
	b	.L60
.L62:
	.align	2, 0
.L61:
	.word	gPlayerParty
.L48:
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	cmp	r0, #0xc7
	bls	.L50	@cond_branch
	mov	r0, #0x5
	b	.L60
.L50:
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	cmp	r0, #0x95
	bls	.L52	@cond_branch
	mov	r0, #0x4
	b	.L60
.L52:
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	cmp	r0, #0x63
	bls	.L54	@cond_branch
	mov	r0, #0x3
	b	.L60
.L54:
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	cmp	r0, #0x31
	bls	.L56	@cond_branch
	mov	r0, #0x2
	b	.L60
.L56:
	add	r0, r4, #0
	mov	r1, #0x20
	bl	GetMonData
	cmp	r0, #0
	bne	.L58	@cond_branch
	mov	r0, #0x0
	b	.L60
.L58:
	mov	r0, #0x1
.L60:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 GetLeadMonFriendship,.Lfe12-GetLeadMonFriendship
	.align	2, 0
	.globl	ShowTownMap
	.type	 ShowTownMap,function
	.thumb_func
ShowTownMap:
	push	{lr}
	bl	QuestLog_CutRecording
	ldr	r1, .L64
	mov	r0, #0x1
	bl	InitRegionMapWithExitCB
	pop	{r0}
	bx	r0
.L65:
	.align	2, 0
.L64:
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe13:
	.size	 ShowTownMap,.Lfe13-ShowTownMap
	.align	2, 0
	.globl	PlayerHasGrassPokemonInParty
	.type	 PlayerHasGrassPokemonInParty,function
	.thumb_func
PlayerHasGrassPokemonInParty:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r6, .L76
.L70:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L76+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x5
	bl	GetMonData
	cmp	r0, #0
	beq	.L69	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L69	@cond_branch
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r0, [r1, #0x6]
	cmp	r0, #0xc
	beq	.L73	@cond_branch
	ldrb	r0, [r1, #0x7]
	cmp	r0, #0xc
	bne	.L69	@cond_branch
.L73:
	mov	r0, #0x1
	b	.L75
.L77:
	.align	2, 0
.L76:
	.word	gSpeciesInfo
	.word	gPlayerParty
.L69:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L70	@cond_branch
	mov	r0, #0x0
.L75:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 PlayerHasGrassPokemonInParty,.Lfe14-PlayerHasGrassPokemonInParty
	.align	2, 0
	.globl	AnimatePcTurnOn
	.type	 AnimatePcTurnOn,function
	.thumb_func
AnimatePcTurnOn:
	push	{r4, lr}
	ldr	r4, .L80
	add	r0, r4, #0
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L79	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L80+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1, #0x8]
	strh	r0, [r1, #0xa]
.L79:
	pop	{r4}
	pop	{r0}
	bx	r0
.L81:
	.align	2, 0
.L80:
	.word	Task_AnimatePcTurnOn
	.word	gTasks
.Lfe15:
	.size	 AnimatePcTurnOn,.Lfe15-AnimatePcTurnOn
	.align	2, 0
	.type	 Task_AnimatePcTurnOn,function
	.thumb_func
Task_AnimatePcTurnOn:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L85
	add	r4, r0, r1
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x6
	bne	.L83	@cond_branch
	ldrh	r1, [r4]
	mov	r0, #0x1
	and	r0, r0, r1
	bl	PcTurnOnUpdateMetatileId
	bl	DrawWholeMapView
	mov	r0, #0x0
	strh	r0, [r4, #0x2]
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x5
	bne	.L83	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
.L83:
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L86:
	.align	2, 0
.L85:
	.word	gTasks+0x8
.Lfe16:
	.size	 Task_AnimatePcTurnOn,.Lfe16-Task_AnimatePcTurnOn
	.align	2, 0
	.type	 PcTurnOnUpdateMetatileId,function
	.thumb_func
PcTurnOnUpdateMetatileId:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	mov	r4, #0x0
	mov	r7, #0x0
	mov	r5, #0x0
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0x3
	beq	.L90	@cond_branch
	cmp	r0, #0x3
	bgt	.L94	@cond_branch
	cmp	r0, #0x2
	beq	.L89	@cond_branch
	b	.L88
.L94:
	cmp	r1, #0x4
	beq	.L91	@cond_branch
	b	.L88
.L89:
	mov	r7, #0x0
	b	.L107
.L90:
	mov	r7, #0xff
	b	.L107
.L91:
	mov	r7, #0x1
.L107:
	mov	r5, #0xff
.L88:
	cmp	r6, #0
	beq	.L95	@cond_branch
	ldr	r0, .L110
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L96	@cond_branch
	mov	r4, #0x62
	b	.L101
.L111:
	.align	2, 0
.L110:
	.word	gSpecialVar_0x8004
.L96:
	cmp	r0, #0x1
	beq	.L108	@cond_branch
	cmp	r0, #0x2
	bne	.L101	@cond_branch
.L108:
	ldr	r4, .L112
	b	.L101
.L113:
	.align	2, 0
.L112:
	.word	0x28f
.L95:
	ldr	r0, .L114
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L102	@cond_branch
	mov	r4, #0x63
	b	.L101
.L115:
	.align	2, 0
.L114:
	.word	gSpecialVar_0x8004
.L102:
	cmp	r0, #0x1
	beq	.L109	@cond_branch
	cmp	r0, #0x2
	bne	.L101	@cond_branch
.L109:
	ldr	r4, .L116
.L101:
	ldr	r0, .L116+0x4
	ldr	r2, [r0]
	mov	r1, #0x0
	ldrsh	r0, [r2, r1]
	lsl	r1, r7, #0x18
	asr	r1, r1, #0x18
	add	r0, r0, r1
	add	r0, r0, #0x7
	mov	r3, #0x2
	ldrsh	r1, [r2, r3]
	lsl	r2, r5, #0x18
	asr	r2, r2, #0x18
	add	r1, r1, r2
	add	r1, r1, #0x7
	mov	r3, #0xc0
	lsl	r3, r3, #0x4
	add	r2, r3, #0
	orr	r4, r4, r2
	add	r2, r4, #0
	bl	MapGridSetMetatileIdAt
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L117:
	.align	2, 0
.L116:
	.word	0x28a
	.word	gSaveBlock1Ptr
.Lfe17:
	.size	 PcTurnOnUpdateMetatileId,.Lfe17-PcTurnOnUpdateMetatileId
	.align	2, 0
	.globl	AnimatePcTurnOff
	.type	 AnimatePcTurnOff,function
	.thumb_func
AnimatePcTurnOff:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
	mov	r6, #0x0
	mov	r5, #0x0
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0x3
	beq	.L121	@cond_branch
	cmp	r0, #0x3
	bgt	.L125	@cond_branch
	cmp	r0, #0x2
	beq	.L120	@cond_branch
	b	.L119
.L125:
	cmp	r1, #0x4
	beq	.L122	@cond_branch
	b	.L119
.L120:
	mov	r6, #0x0
	b	.L131
.L121:
	mov	r6, #0xff
	b	.L131
.L122:
	mov	r6, #0x1
.L131:
	mov	r5, #0xff
.L119:
	ldr	r0, .L133
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L126	@cond_branch
	mov	r4, #0x62
	b	.L127
.L134:
	.align	2, 0
.L133:
	.word	gSpecialVar_0x8004
.L126:
	cmp	r0, #0x1
	beq	.L132	@cond_branch
	cmp	r0, #0x2
	bne	.L127	@cond_branch
.L132:
	ldr	r4, .L135
.L127:
	ldr	r0, .L135+0x4
	ldr	r2, [r0]
	mov	r1, #0x0
	ldrsh	r0, [r2, r1]
	lsl	r1, r6, #0x18
	asr	r1, r1, #0x18
	add	r0, r0, r1
	add	r0, r0, #0x7
	mov	r3, #0x2
	ldrsh	r1, [r2, r3]
	lsl	r2, r5, #0x18
	asr	r2, r2, #0x18
	add	r1, r1, r2
	add	r1, r1, #0x7
	mov	r3, #0xc0
	lsl	r3, r3, #0x4
	add	r2, r3, #0
	orr	r4, r4, r2
	add	r2, r4, #0
	bl	MapGridSetMetatileIdAt
	bl	DrawWholeMapView
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L136:
	.align	2, 0
.L135:
	.word	0x28f
	.word	gSaveBlock1Ptr
.Lfe18:
	.size	 AnimatePcTurnOff,.Lfe18-AnimatePcTurnOff
	.align	2, 0
	.globl	SpawnCameraObject
	.type	 SpawnCameraObject,function
	.thumb_func
SpawnCameraObject:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r0, .L138
	ldr	r0, [r0]
	ldrh	r3, [r0]
	add	r3, r3, #0x7
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	ldrh	r0, [r0, #0x2]
	add	r0, r0, #0x7
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	str	r0, [sp]
	mov	r0, #0x3
	str	r0, [sp, #0x4]
	mov	r0, #0x12
	mov	r1, #0x8
	mov	r2, #0x7f
	bl	SpawnSpecialObjectEventParameterized
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L138+0x4
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0x1]
	mov	r2, #0x20
	orr	r0, r0, r2
	strb	r0, [r1, #0x1]
	ldrb	r0, [r1, #0x4]
	bl	CameraObjectSetFollowedObjectId
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L139:
	.align	2, 0
.L138:
	.word	gSaveBlock1Ptr
	.word	gObjectEvents
.Lfe19:
	.size	 SpawnCameraObject,.Lfe19-SpawnCameraObject
	.align	2, 0
	.globl	RemoveCameraObject
	.type	 RemoveCameraObject,function
	.thumb_func
RemoveCameraObject:
	push	{lr}
	bl	GetPlayerAvatarObjectId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	CameraObjectSetFollowedObjectId
	ldr	r0, .L141
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x5]
	ldrb	r2, [r0, #0x4]
	mov	r0, #0x7f
	bl	RemoveObjectEventByLocalIdAndMap
	pop	{r0}
	bx	r0
.L142:
	.align	2, 0
.L141:
	.word	gSaveBlock1Ptr
.Lfe20:
	.size	 RemoveCameraObject,.Lfe20-RemoveCameraObject
	.align	2, 0
	.globl	BufferEReaderTrainerName
	.type	 BufferEReaderTrainerName,function
	.thumb_func
BufferEReaderTrainerName:
	push	{lr}
	ldr	r0, .L144
	bl	CopyEReaderTrainerName5
	pop	{r0}
	bx	r0
.L145:
	.align	2, 0
.L144:
	.word	gStringVar1
.Lfe21:
	.size	 BufferEReaderTrainerName,.Lfe21-BufferEReaderTrainerName
	.section .rodata
	.type	 sSlotMachineRandomSeeds,object
sSlotMachineRandomSeeds:
	.byte	0xd
	.byte	0xe
	.byte	0xf
	.byte	0x10
	.byte	0x11
	.byte	0x12
	.byte	0x13
	.byte	0x14
	.byte	0x15
	.byte	0x16
	.byte	0xc
	.byte	0x2
	.byte	0x4
	.byte	0x5
	.byte	0x1
	.byte	0x8
	.byte	0x7
	.byte	0xb
	.byte	0x3
	.byte	0xa
	.byte	0x9
	.byte	0x6
	.size	 sSlotMachineRandomSeeds,22
	.type	 sSlotMachineIndices,object
sSlotMachineIndices:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x4
	.byte	0x4
	.byte	0x5
	.size	 sSlotMachineIndices,22
.text
	.align	2, 0
	.globl	GetRandomSlotMachineId
	.type	 GetRandomSlotMachineId,function
	.thumb_func
GetRandomSlotMachineId:
	push	{lr}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x16
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L147
	add	r0, r0, r1
	ldrb	r0, [r0]
	pop	{r1}
	bx	r1
.L148:
	.align	2, 0
.L147:
	.word	sSlotMachineIndices
.Lfe22:
	.size	 GetRandomSlotMachineId,.Lfe22-GetRandomSlotMachineId
	.align	2, 0
	.globl	LeadMonHasEffortRibbon
	.type	 LeadMonHasEffortRibbon,function
	.thumb_func
LeadMonHasEffortRibbon:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L150
	add	r0, r0, r1
	mov	r1, #0x47
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L151:
	.align	2, 0
.L150:
	.word	gPlayerParty
.Lfe23:
	.size	 LeadMonHasEffortRibbon,.Lfe23-LeadMonHasEffortRibbon
	.align	2, 0
	.globl	GiveLeadMonEffortRibbon
	.type	 GiveLeadMonEffortRibbon,function
	.thumb_func
GiveLeadMonEffortRibbon:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0x2a
	bl	IncrementGameStat
	ldr	r0, .L153
	bl	FlagSet
	mov	r1, #0x1
	mov	r0, sp
	strb	r1, [r0]
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L153+0x4
	add	r0, r0, r1
	mov	r1, #0x47
	mov	r2, sp
	bl	SetMonData
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L154:
	.align	2, 0
.L153:
	.word	0x83e
	.word	gPlayerParty
.Lfe24:
	.size	 GiveLeadMonEffortRibbon,.Lfe24-GiveLeadMonEffortRibbon
	.align	2, 0
	.globl	AreLeadMonEVsMaxedOut
	.type	 AreLeadMonEVsMaxedOut,function
	.thumb_func
AreLeadMonEVsMaxedOut:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	ldr	r1, .L159
	add	r0, r0, r1
	bl	GetMonEVCount
	lsl	r0, r0, #0x10
	ldr	r1, .L159+0x4
	cmp	r0, r1
	bhi	.L156	@cond_branch
	mov	r0, #0x0
	b	.L158
.L160:
	.align	2, 0
.L159:
	.word	gPlayerParty
	.word	0x1fd0000
.L156:
	mov	r0, #0x1
.L158:
	pop	{r1}
	bx	r1
.Lfe25:
	.size	 AreLeadMonEVsMaxedOut,.Lfe25-AreLeadMonEVsMaxedOut
	.align	2, 0
	.globl	IsStarterFirstStageInParty
	.type	 IsStarterFirstStageInParty,function
	.thumb_func
IsStarterFirstStageInParty:
	push	{r4, r5, r6, lr}
	ldr	r0, .L169
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	GetStarterSpeciesById
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	cmp	r4, r5
	bcs	.L163	@cond_branch
.L165:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L169+0x4
	add	r0, r0, r1
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, r6
	bne	.L164	@cond_branch
	mov	r0, #0x1
	b	.L168
.L170:
	.align	2, 0
.L169:
	.word	0x4031
	.word	gPlayerParty
.L164:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r5
	bcc	.L165	@cond_branch
.L163:
	mov	r0, #0x0
.L168:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe26:
	.size	 IsStarterFirstStageInParty,.Lfe26-IsStarterFirstStageInParty
	.align	2, 0
	.globl	IsThereRoomInAnyBoxForMorePokemon
	.type	 IsThereRoomInAnyBoxForMorePokemon,function
	.thumb_func
IsThereRoomInAnyBoxForMorePokemon:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
.L175:
	mov	r4, #0x0
	lsl	r5, r6, #0x18
.L179:
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	lsr	r0, r5, #0x18
	mov	r2, #0xb
	bl	GetBoxMonDataAt
	cmp	r0, #0
	bne	.L178	@cond_branch
	mov	r0, #0x1
	b	.L183
.L178:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x1d
	bls	.L179	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	cmp	r6, #0xd
	bls	.L175	@cond_branch
	mov	r0, #0x0
.L183:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 IsThereRoomInAnyBoxForMorePokemon,.Lfe27-IsThereRoomInAnyBoxForMorePokemon
	.align	2, 0
	.globl	IsPokerusInParty
	.type	 IsPokerusInParty,function
	.thumb_func
IsPokerusInParty:
	push	{lr}
	ldr	r0, .L188
	mov	r1, #0x3f
	bl	CheckPartyPokerus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L185	@cond_branch
	mov	r0, #0x1
	b	.L187
.L189:
	.align	2, 0
.L188:
	.word	gPlayerParty
.L185:
	mov	r0, #0x0
.L187:
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 IsPokerusInParty,.Lfe28-IsPokerusInParty
	.align	2, 0
	.globl	ShakeScreen
	.type	 ShakeScreen,function
	.thumb_func
ShakeScreen:
	push	{lr}
	ldr	r0, .L191
	mov	r1, #0x9
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L191+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldr	r0, .L191+0x8
	ldrh	r0, [r0]
	mov	r2, #0x0
	strh	r0, [r1, #0x8]
	strh	r2, [r1, #0xa]
	ldr	r0, .L191+0xc
	ldrh	r0, [r0]
	strh	r0, [r1, #0xc]
	ldr	r0, .L191+0x10
	ldrh	r0, [r0]
	strh	r0, [r1, #0xe]
	ldr	r0, .L191+0x14
	ldrh	r0, [r0]
	strh	r0, [r1, #0x10]
	mov	r0, #0x0
	bl	SetCameraPanningCallback
	mov	r0, #0xcf
	bl	PlaySE
	pop	{r0}
	bx	r0
.L192:
	.align	2, 0
.L191:
	.word	Task_ShakeScreen
	.word	gTasks
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_0x8006
	.word	gSpecialVar_0x8007
	.word	gSpecialVar_0x8004
.Lfe29:
	.size	 ShakeScreen,.Lfe29-ShakeScreen
	.align	2, 0
	.type	 Task_ShakeScreen,function
	.thumb_func
Task_ShakeScreen:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L196
	add	r4, r0, r1
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	bl	__modsi3
	cmp	r0, #0
	bne	.L194	@cond_branch
	strh	r0, [r4, #0x2]
	ldrh	r0, [r4, #0x4]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x4]
	ldrh	r0, [r4]
	neg	r0, r0
	strh	r0, [r4]
	ldrh	r0, [r4, #0x8]
	neg	r0, r0
	strh	r0, [r4, #0x8]
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	mov	r2, #0x8
	ldrsh	r1, [r4, r2]
	bl	SetCameraPanning
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L194	@cond_branch
	add	r0, r5, #0
	bl	Task_EndScreenShake
	bl	InstallCameraPanAheadCallback
.L194:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L197:
	.align	2, 0
.L196:
	.word	gTasks+0x8
.Lfe30:
	.size	 Task_ShakeScreen,.Lfe30-Task_ShakeScreen
	.align	2, 0
	.type	 Task_EndScreenShake,function
	.thumb_func
Task_EndScreenShake:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	bl	ScriptContext_Enable
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 Task_EndScreenShake,.Lfe31-Task_EndScreenShake
	.align	2, 0
	.globl	GetLeadMonIndex
	.type	 GetLeadMonIndex,function
	.thumb_func
GetLeadMonIndex:
	push	{r4, r5, r6, lr}
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r5, #0x0
	cmp	r5, r6
	bcs	.L201	@cond_branch
.L203:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L207
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	ldr	r1, .L207+0x4
	cmp	r0, r1
	beq	.L202	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, #0
	beq	.L202	@cond_branch
	add	r0, r5, #0
	b	.L206
.L208:
	.align	2, 0
.L207:
	.word	gPlayerParty
	.word	0x19d
.L202:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, r6
	bcc	.L203	@cond_branch
.L201:
	mov	r0, #0x0
.L206:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 GetLeadMonIndex,.Lfe32-GetLeadMonIndex
	.align	2, 0
	.globl	GetPartyMonSpecies
	.type	 GetPartyMonSpecies,function
	.thumb_func
GetPartyMonSpecies:
	push	{lr}
	ldr	r0, .L210
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L210+0x4
	add	r0, r0, r1
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L211:
	.align	2, 0
.L210:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
.Lfe33:
	.size	 GetPartyMonSpecies,.Lfe33-GetPartyMonSpecies
	.align	2, 0
	.globl	IsMonOTNameNotPlayers
	.type	 IsMonOTNameNotPlayers,function
	.thumb_func
IsMonOTNameNotPlayers:
	push	{r4, lr}
	ldr	r0, .L216
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L216+0x4
	add	r0, r0, r1
	ldr	r4, .L216+0x8
	mov	r1, #0x7
	add	r2, r4, #0
	bl	GetMonData
	ldr	r0, .L216+0xc
	ldr	r0, [r0]
	add	r1, r4, #0
	bl	StringCompare
	cmp	r0, #0
	beq	.L213	@cond_branch
	mov	r0, #0x1
	b	.L215
.L217:
	.align	2, 0
.L216:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar1
	.word	gSaveBlock2Ptr
.L213:
	mov	r0, #0x0
.L215:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe34:
	.size	 IsMonOTNameNotPlayers,.Lfe34-IsMonOTNameNotPlayers
	.align	2, 0
	.globl	NullFieldSpecial
	.type	 NullFieldSpecial,function
	.thumb_func
NullFieldSpecial:
	bx	lr
.Lfe35:
	.size	 NullFieldSpecial,.Lfe35-NullFieldSpecial
	.align	2, 0
	.globl	DoPicboxCancel
	.type	 DoPicboxCancel,function
	.thumb_func
DoPicboxCancel:
	push	{lr}
	add	sp, sp, #-0x10
	mov	r1, #0xff
	add	r0, sp, #0xc
	strb	r1, [r0]
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r1, #0x2
	add	r2, sp, #0xc
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	bl	PicboxCancel
	add	sp, sp, #0x10
	pop	{r0}
	bx	r0
.Lfe36:
	.size	 DoPicboxCancel,.Lfe36-DoPicboxCancel
	.align	2, 0
	.globl	SetVermilionTrashCans
	.type	 SetVermilionTrashCans,function
	.thumb_func
SetVermilionTrashCans:
	push	{r4, r5, lr}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xf
	bl	__umodsi3
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r1, .L276
	strh	r2, [r1]
	ldr	r0, .L276+0x4
	strh	r2, [r0]
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
	cmp	r0, #0xe
	bls	.LCB1556
	b	.L221	@long jump
.LCB1556:
	lsl	r0, r0, #0x2
	ldr	r1, .L276+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L277:
	.align	2, 0
.L276:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
	.word	.L267
	.align	2, 0
	.align	2, 0
.L267:
	.word	.L222
	.word	.L227
	.word	.L227
	.word	.L227
	.word	.L232
	.word	.L235
	.word	.L242
	.word	.L242
	.word	.L242
	.word	.L249
	.word	.L254
	.word	.L259
	.word	.L259
	.word	.L259
	.word	.L264
.L222:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L223	@cond_branch
	ldr	r1, .L278
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	b	.L274
.L279:
	.align	2, 0
.L278:
	.word	gSpecialVar_0x8005
.L223:
	ldr	r1, .L280
	ldrh	r0, [r1]
	add	r0, r0, #0x5
	b	.L274
.L281:
	.align	2, 0
.L280:
	.word	gSpecialVar_0x8005
.L227:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0
	bne	.L228	@cond_branch
	ldr	r1, .L282
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	b	.L274
.L283:
	.align	2, 0
.L282:
	.word	gSpecialVar_0x8005
.L228:
	cmp	r2, #0x1
	beq	.LCB1636
	b	.L265	@long jump
.LCB1636:
	ldr	r1, .L284
	ldrh	r0, [r1]
	add	r0, r0, #0x5
	b	.L274
.L285:
	.align	2, 0
.L284:
	.word	gSpecialVar_0x8005
.L232:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB1658
	b	.L265	@long jump
.LCB1658:
	ldr	r1, .L286
	ldrh	r0, [r1]
	add	r0, r0, #0x5
	b	.L274
.L287:
	.align	2, 0
.L286:
	.word	gSpecialVar_0x8005
.L235:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0
	bne	.L236	@cond_branch
	ldr	r1, .L288
	ldrh	r0, [r1]
	sub	r0, r0, #0x5
	b	.L274
.L289:
	.align	2, 0
.L288:
	.word	gSpecialVar_0x8005
.L236:
	cmp	r2, #0x1
	bne	.L238	@cond_branch
	ldr	r1, .L290
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	b	.L274
.L291:
	.align	2, 0
.L290:
	.word	gSpecialVar_0x8005
.L238:
	ldr	r1, .L292
	ldrh	r0, [r1]
	add	r0, r0, #0x5
	b	.L274
.L293:
	.align	2, 0
.L292:
	.word	gSpecialVar_0x8005
.L242:
	bl	Random
	lsl	r0, r0, #0x10
	mov	r1, #0xc0
	lsl	r1, r1, #0xa
	and	r1, r1, r0
	lsr	r2, r1, #0x10
	cmp	r2, #0
	bne	.L243	@cond_branch
	ldr	r1, .L294
	ldrh	r0, [r1]
	sub	r0, r0, #0x5
	b	.L274
.L295:
	.align	2, 0
.L294:
	.word	gSpecialVar_0x8005
.L243:
	cmp	r2, #0x1
	bne	.L245	@cond_branch
	ldr	r1, .L296
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	b	.L274
.L297:
	.align	2, 0
.L296:
	.word	gSpecialVar_0x8005
.L245:
	cmp	r2, #0x2
	bne	.L265	@cond_branch
	ldr	r1, .L298
	ldrh	r0, [r1]
	add	r0, r0, #0x5
	b	.L274
.L299:
	.align	2, 0
.L298:
	.word	gSpecialVar_0x8005
.L249:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0
	bne	.L250	@cond_branch
	ldr	r1, .L300
	ldrh	r0, [r1]
	sub	r0, r0, #0x5
	b	.L274
.L301:
	.align	2, 0
.L300:
	.word	gSpecialVar_0x8005
.L250:
	cmp	r2, #0x1
	bne	.L265	@cond_branch
	ldr	r1, .L302
	ldrh	r0, [r1]
	add	r0, r0, #0x5
	b	.L274
.L303:
	.align	2, 0
.L302:
	.word	gSpecialVar_0x8005
.L254:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L255	@cond_branch
	ldr	r1, .L304
	ldrh	r0, [r1]
	sub	r0, r0, #0x5
	b	.L274
.L305:
	.align	2, 0
.L304:
	.word	gSpecialVar_0x8005
.L255:
	ldr	r1, .L306
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	b	.L274
.L307:
	.align	2, 0
.L306:
	.word	gSpecialVar_0x8005
.L259:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x3
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0
	bne	.L260	@cond_branch
	ldr	r1, .L308
	ldrh	r0, [r1]
	sub	r0, r0, #0x5
	b	.L274
.L309:
	.align	2, 0
.L308:
	.word	gSpecialVar_0x8005
.L260:
	cmp	r2, #0x1
	bne	.L265	@cond_branch
	ldr	r1, .L310
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	b	.L274
.L311:
	.align	2, 0
.L310:
	.word	gSpecialVar_0x8005
.L264:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L265	@cond_branch
	ldr	r1, .L312
	ldrh	r0, [r1]
	sub	r0, r0, #0x5
	b	.L274
.L313:
	.align	2, 0
.L312:
	.word	gSpecialVar_0x8005
.L265:
	ldr	r1, .L314
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
.L274:
	strh	r0, [r1]
.L221:
	ldr	r5, .L314
	ldrh	r0, [r5]
	cmp	r0, #0xf
	bls	.L269	@cond_branch
	ldr	r0, .L314+0x4
	ldrh	r4, [r0]
	add	r0, r4, #0
	mov	r1, #0x5
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L272	@cond_branch
	cmp	r0, #0
	bne	.L272	@cond_branch
	sub	r0, r4, #0x1
	b	.L275
.L315:
	.align	2, 0
.L314:
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_0x8004
.L272:
	add	r0, r4, #0x1
.L275:
	strh	r0, [r5]
.L269:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe37:
	.size	 SetVermilionTrashCans,.Lfe37-SetVermilionTrashCans
	.section .rodata
	.align	1, 0
	.type	 sResortGorgeousDeluxeRewards,object
sResortGorgeousDeluxeRewards:
	.short	0x6b
	.short	0x6a
	.short	0x6c
	.short	0x6d
	.short	0x6e
	.short	0x44
	.size	 sResortGorgeousDeluxeRewards,12
.text
	.align	2, 0
	.globl	IncrementResortGorgeousStepCounter
	.type	 IncrementResortGorgeousStepCounter,function
	.thumb_func
IncrementResortGorgeousStepCounter:
	push	{r4, r5, r6, lr}
	ldr	r5, .L320
	add	r0, r5, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r6, .L320+0x4
	add	r0, r6, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L317	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0xf9
	bls	.L318	@cond_branch
	ldr	r1, .L320+0x8
	add	r0, r6, #0
	bl	VarSet
	add	r0, r5, #0
	mov	r1, #0x0
	bl	VarSet
	b	.L317
.L321:
	.align	2, 0
.L320:
	.word	0x4035
	.word	0x4036
	.word	0xffff
.L318:
	add	r0, r5, #0
	add	r1, r4, #0
	bl	VarSet
.L317:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe38:
	.size	 IncrementResortGorgeousStepCounter,.Lfe38-IncrementResortGorgeousStepCounter
	.align	2, 0
	.globl	SampleResortGorgeousMonAndReward
	.type	 SampleResortGorgeousMonAndReward,function
	.thumb_func
SampleResortGorgeousMonAndReward:
	push	{r4, lr}
	ldr	r4, .L325
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L324	@cond_branch
	ldr	r0, .L325+0x4
	cmp	r1, r0
	bne	.L323	@cond_branch
.L324:
	bl	SampleResortGorgeousMon
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	ldr	r4, .L325+0x8
	bl	SampleResortGorgeousReward
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	ldr	r0, .L325+0xc
	mov	r1, #0x0
	bl	VarSet
.L323:
	ldr	r4, .L325+0x10
	ldr	r0, .L325
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xb
	mul	r1, r1, r0
	ldr	r0, .L325+0x14
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	pop	{r4}
	pop	{r0}
	bx	r0
.L326:
	.align	2, 0
.L325:
	.word	0x4036
	.word	0xffff
	.word	0x403b
	.word	0x4035
	.word	gStringVar1
	.word	gSpeciesNames
.Lfe39:
	.size	 SampleResortGorgeousMonAndReward,.Lfe39-SampleResortGorgeousMonAndReward
	.align	2, 0
	.type	 SampleResortGorgeousMon,function
	.thumb_func
SampleResortGorgeousMon:
	push	{r4, r5, lr}
	mov	r5, #0x0
.L331:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xce
	lsl	r1, r1, #0x1
	bl	__umodsi3
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	bl	GetSetPokedexFlag
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L341	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, #0x63
	bls	.L331	@cond_branch
	b	.L334
.L336:
	cmp	r4, #0x1
	bne	.L337	@cond_branch
	mov	r4, #0xce
	lsl	r4, r4, #0x1
	b	.L334
.L337:
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L334:
	add	r0, r4, #0
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	bl	GetSetPokedexFlag
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L336	@cond_branch
.L341:
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe40:
	.size	 SampleResortGorgeousMon,.Lfe40-SampleResortGorgeousMon
	.align	2, 0
	.type	 SampleResortGorgeousReward,function
	.thumb_func
SampleResortGorgeousReward:
	push	{r4, lr}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x64
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1d
	bhi	.L343	@cond_branch
	ldr	r4, .L346
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x6
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0xf
	add	r0, r0, r4
	ldrh	r0, [r0]
	b	.L345
.L347:
	.align	2, 0
.L346:
	.word	sResortGorgeousDeluxeRewards
.L343:
	mov	r0, #0xb
.L345:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe41:
	.size	 SampleResortGorgeousReward,.Lfe41-SampleResortGorgeousReward
	.align	2, 0
	.globl	CheckAddCoins
	.type	 CheckAddCoins,function
	.thumb_func
CheckAddCoins:
	push	{lr}
	ldr	r0, .L352
	ldrh	r1, [r0]
	ldr	r0, .L352+0x4
	ldrh	r0, [r0]
	add	r1, r1, r0
	ldr	r0, .L352+0x8
	cmp	r1, r0
	bgt	.L349	@cond_branch
	mov	r0, #0x1
	b	.L351
.L353:
	.align	2, 0
.L352:
	.word	gSpecialVar_Result
	.word	gSpecialVar_0x8006
	.word	0x270f
.L349:
	mov	r0, #0x0
.L351:
	pop	{r1}
	bx	r1
.Lfe42:
	.size	 CheckAddCoins,.Lfe42-CheckAddCoins
	.section .rodata
	.align	2, 0
	.type	 sElevatorCurrentFloorWindowTemplate,object
	.size	 sElevatorCurrentFloorWindowTemplate,8
sElevatorCurrentFloorWindowTemplate:
	.byte	0x0
	.byte	0x16
	.byte	0x1
	.byte	0x7
	.byte	0x4
	.byte	0xf
	.short	0x8
	.align	2, 0
	.type	 sFloorNamePointers,object
sFloorNamePointers:
	.word	gText_B4F
	.word	gText_B3F
	.word	gText_B2F
	.word	gText_B1F
	.word	gText_1F
	.word	gText_2F
	.word	gText_3F
	.word	gText_4F
	.word	gText_5F
	.word	gText_6F
	.word	gText_7F
	.word	gText_8F
	.word	gText_9F
	.word	gText_10F
	.word	gText_11F
	.word	gText_Rooftop
	.size	 sFloorNamePointers,64
	.type	 sFloorNameWidthPadding,object
sFloorNameWidthPadding:
	.byte	0x1a
	.byte	0x1a
	.byte	0x1a
	.byte	0x1a
	.byte	0x1e
	.byte	0x1e
	.byte	0x1e
	.byte	0x1e
	.byte	0x1e
	.byte	0x1e
	.byte	0x1e
	.byte	0x1e
	.byte	0x1e
	.byte	0x1a
	.byte	0x1a
	.byte	0x12
	.size	 sFloorNameWidthPadding,16
	.align	1, 0
	.type	 sElevatorWindowMetatilesGoingUp,object
sElevatorWindowMetatilesGoingUp:
	.short	0x2e8
	.short	0x2e9
	.short	0x2ea
	.short	0x2f0
	.short	0x2f1
	.short	0x2f2
	.short	0x2f8
	.short	0x2f9
	.short	0x2fa
	.size	 sElevatorWindowMetatilesGoingUp,18
	.align	1, 0
	.type	 sElevatorWindowMetatilesGoingDown,object
sElevatorWindowMetatilesGoingDown:
	.short	0x2e8
	.short	0x2ea
	.short	0x2e9
	.short	0x2f0
	.short	0x2f2
	.short	0x2f1
	.short	0x2f8
	.short	0x2fa
	.short	0x2f9
	.size	 sElevatorWindowMetatilesGoingDown,18
	.type	 sElevatorAnimationDuration,object
sElevatorAnimationDuration:
	.byte	0x8
	.byte	0x10
	.byte	0x18
	.byte	0x20
	.byte	0x26
	.byte	0x2e
	.byte	0x35
	.byte	0x38
	.byte	0x39
	.size	 sElevatorAnimationDuration,9
	.type	 sElevatorWindowAnimDuration,object
sElevatorWindowAnimDuration:
	.byte	0x3
	.byte	0x6
	.byte	0x9
	.byte	0xc
	.byte	0xf
	.byte	0x12
	.byte	0x15
	.byte	0x18
	.byte	0x1b
	.size	 sElevatorWindowAnimDuration,9
.text
	.align	2, 0
	.globl	GetElevatorFloor
	.type	 GetElevatorFloor,function
	.thumb_func
GetElevatorFloor:
	push	{r4, lr}
	mov	r3, #0x4
	ldr	r0, .L396
	ldr	r2, [r0]
	mov	r1, #0x14
	ldrsb	r1, [r2, r1]
	add	r4, r0, #0
	cmp	r1, #0x1
	bne	.L355	@cond_branch
	ldrb	r0, [r2, #0x15]
	sub	r0, r0, #0x2a
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0xf
	bhi	.L355	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L396+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L397:
	.align	2, 0
.L396:
	.word	gSaveBlock1Ptr
	.word	.L371
	.align	2, 0
	.align	2, 0
.L371:
	.word	.L368
	.word	.L369
	.word	.L355
	.word	.L370
	.word	.L355
	.word	.L357
	.word	.L358
	.word	.L359
	.word	.L360
	.word	.L361
	.word	.L362
	.word	.L363
	.word	.L364
	.word	.L365
	.word	.L366
	.word	.L367
.L357:
	mov	r3, #0x4
	b	.L355
.L358:
	mov	r3, #0x5
	b	.L355
.L359:
	mov	r3, #0x6
	b	.L355
.L360:
	mov	r3, #0x7
	b	.L355
.L361:
	mov	r3, #0x8
	b	.L355
.L362:
	mov	r3, #0x9
	b	.L355
.L363:
	mov	r3, #0xa
	b	.L355
.L364:
	mov	r3, #0xb
	b	.L355
.L365:
	mov	r3, #0xc
	b	.L355
.L366:
	mov	r3, #0xd
	b	.L355
.L367:
	mov	r3, #0xe
	b	.L355
.L368:
	mov	r3, #0x3
	b	.L355
.L369:
	mov	r3, #0x2
	b	.L355
.L370:
	mov	r3, #0x0
.L355:
	ldr	r1, [r4]
	mov	r0, #0x14
	ldrsb	r0, [r1, r0]
	cmp	r0, #0xa
	bne	.L373	@cond_branch
	mov	r0, #0x15
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x4
	bhi	.L373	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L398
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L399:
	.align	2, 0
.L398:
	.word	.L380
	.align	2, 0
	.align	2, 0
.L380:
	.word	.L375
	.word	.L376
	.word	.L377
	.word	.L378
	.word	.L379
.L375:
	mov	r3, #0x4
	b	.L373
.L376:
	mov	r3, #0x5
	b	.L373
.L377:
	mov	r3, #0x6
	b	.L373
.L378:
	mov	r3, #0x7
	b	.L373
.L379:
	mov	r3, #0x8
.L373:
	ldr	r1, [r4]
	mov	r0, #0x14
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x2
	bne	.L382	@cond_branch
	mov	r0, #0x15
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x1
	blt	.L382	@cond_branch
	cmp	r0, #0x9
	ble	.L392	@cond_branch
	cmp	r0, #0xa
	beq	.L393	@cond_branch
	b	.L382
.L392:
	mov	r3, #0xf
	b	.L382
.L393:
	mov	r3, #0x3
.L382:
	ldr	r0, .L400
	add	r1, r3, #0
	bl	VarSet
	pop	{r4}
	pop	{r0}
	bx	r0
.L401:
	.align	2, 0
.L400:
	.word	0x403a
.Lfe43:
	.size	 GetElevatorFloor,.Lfe43-GetElevatorFloor
	.align	2, 0
	.globl	InitElevatorFloorSelectMenuPos
	.type	 InitElevatorFloorSelectMenuPos,function
	.thumb_func
InitElevatorFloorSelectMenuPos:
	push	{r4, r5, r6, lr}
	ldr	r3, .L447
	mov	r0, #0x0
	strh	r0, [r3]
	ldr	r1, .L447+0x4
	strh	r0, [r1]
	ldr	r0, .L447+0x8
	ldr	r5, [r0]
	mov	r2, #0x14
	ldrsb	r2, [r5, r2]
	add	r4, r3, #0
	add	r3, r1, #0
	add	r6, r0, #0
	cmp	r2, #0x1
	bne	.L403	@cond_branch
	ldrb	r0, [r5, #0x15]
	sub	r0, r0, #0x2a
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0xf
	bhi	.L403	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L447+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L448:
	.align	2, 0
.L447:
	.word	sElevatorScroll
	.word	sElevatorCursorPos
	.word	gSaveBlock1Ptr
	.word	.L419
	.align	2, 0
	.align	2, 0
.L419:
	.word	.L416
	.word	.L417
	.word	.L403
	.word	.L418
	.word	.L403
	.word	.L415
	.word	.L414
	.word	.L413
	.word	.L412
	.word	.L411
	.word	.L410
	.word	.L409
	.word	.L408
	.word	.L418
	.word	.L406
	.word	.L405
.L405:
	mov	r0, #0x0
	strh	r0, [r4]
	b	.L444
.L406:
	mov	r0, #0x0
	strh	r0, [r4]
	mov	r0, #0x1
	b	.L444
.L408:
	mov	r0, #0x0
	strh	r0, [r4]
	mov	r0, #0x3
	b	.L444
.L409:
	mov	r0, #0x0
	strh	r0, [r4]
	mov	r0, #0x4
	b	.L444
.L410:
	mov	r0, #0x1
	strh	r0, [r4]
	mov	r0, #0x4
	b	.L444
.L411:
	mov	r0, #0x2
	strh	r0, [r4]
	mov	r0, #0x4
	b	.L444
.L412:
	mov	r0, #0x3
	strh	r0, [r4]
	mov	r0, #0x4
	b	.L444
.L413:
	mov	r0, #0x4
	strh	r0, [r4]
	b	.L444
.L414:
	mov	r0, #0x5
	strh	r0, [r4]
	mov	r0, #0x4
	b	.L444
.L415:
	mov	r0, #0x5
	strh	r0, [r4]
	b	.L444
.L416:
	mov	r0, #0x0
	strh	r0, [r4]
	b	.L444
.L417:
	mov	r0, #0x0
	strh	r0, [r4]
	mov	r0, #0x1
	b	.L444
.L418:
	mov	r0, #0x0
	strh	r0, [r4]
	mov	r0, #0x2
.L444:
	strh	r0, [r3]
.L403:
	ldr	r1, [r6]
	mov	r0, #0x14
	ldrsb	r0, [r1, r0]
	cmp	r0, #0xa
	bne	.L421	@cond_branch
	mov	r0, #0x15
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x4
	bhi	.L421	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L449
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L450:
	.align	2, 0
.L449:
	.word	.L428
	.align	2, 0
	.align	2, 0
.L428:
	.word	.L427
	.word	.L426
	.word	.L425
	.word	.L424
	.word	.L423
.L423:
	mov	r0, #0x0
	strh	r0, [r4]
	b	.L445
.L424:
	mov	r0, #0x0
	strh	r0, [r4]
	mov	r0, #0x1
	b	.L445
.L425:
	mov	r0, #0x0
	strh	r0, [r4]
	mov	r0, #0x2
	b	.L445
.L426:
	mov	r0, #0x0
	strh	r0, [r4]
	mov	r0, #0x3
	b	.L445
.L427:
	mov	r0, #0x0
	strh	r0, [r4]
	mov	r0, #0x4
.L445:
	strh	r0, [r3]
.L421:
	ldr	r1, [r6]
	mov	r0, #0x14
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x2
	bne	.L430	@cond_branch
	mov	r0, #0x15
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x1
	blt	.L430	@cond_branch
	cmp	r0, #0x9
	ble	.L440	@cond_branch
	cmp	r0, #0xa
	beq	.L441	@cond_branch
	b	.L430
.L440:
	mov	r0, #0x0
	strh	r0, [r4]
	b	.L446
.L441:
	mov	r0, #0x0
	strh	r0, [r4]
	mov	r0, #0x1
.L446:
	strh	r0, [r3]
.L430:
	ldrh	r0, [r3]
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe44:
	.size	 InitElevatorFloorSelectMenuPos,.Lfe44-InitElevatorFloorSelectMenuPos
	.align	2, 0
	.globl	AnimateElevator
	.type	 AnimateElevator,function
	.thumb_func
AnimateElevator:
	push	{r4, r5, r6, lr}
	ldr	r0, .L455
	mov	r1, #0x9
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L455+0x4
	add	r4, r1, r0
	mov	r3, #0x0
	strh	r3, [r4, #0x2]
	strh	r3, [r4, #0x4]
	mov	r6, #0x1
	strh	r6, [r4, #0x8]
	ldr	r0, .L455+0x8
	ldr	r1, .L455+0xc
	ldrh	r2, [r0]
	ldrh	r0, [r1]
	cmp	r2, r0
	bls	.L452	@cond_branch
	sub	r0, r2, r0
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	strh	r6, [r4, #0xc]
	b	.L453
.L456:
	.align	2, 0
.L455:
	.word	Task_ElevatorShake
	.word	gTasks+0x8
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_0x8006
.L452:
	sub	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	strh	r3, [r4, #0xc]
.L453:
	cmp	r5, #0x8
	bls	.L454	@cond_branch
	mov	r5, #0x8
.L454:
	ldr	r0, .L457
	add	r0, r5, r0
	ldrb	r0, [r0]
	strh	r0, [r4, #0xa]
	mov	r0, #0x0
	bl	SetCameraPanningCallback
	ldrb	r1, [r4, #0xc]
	add	r0, r5, #0
	bl	AnimateElevatorWindowView
	mov	r0, #0x52
	bl	PlaySE
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L458:
	.align	2, 0
.L457:
	.word	sElevatorAnimationDuration
.Lfe45:
	.size	 AnimateElevator,.Lfe45-AnimateElevator
	.align	2, 0
	.type	 Task_ElevatorShake,function
	.thumb_func
Task_ElevatorShake:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L462
	add	r4, r0, r1
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	mov	r1, #0x3
	bl	__modsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0
	bne	.L460	@cond_branch
	strh	r0, [r4, #0x2]
	ldrh	r0, [r4, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x4]
	ldrh	r0, [r4, #0x8]
	neg	r0, r0
	strh	r0, [r4, #0x8]
	mov	r2, #0x8
	ldrsh	r1, [r4, r2]
	mov	r0, #0x0
	bl	SetCameraPanning
	mov	r0, #0x4
	ldrsh	r1, [r4, r0]
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	bne	.L460	@cond_branch
	mov	r0, #0x42
	bl	PlaySE
	add	r0, r5, #0
	bl	DestroyTask
	bl	ScriptContext_Enable
	bl	InstallCameraPanAheadCallback
.L460:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L463:
	.align	2, 0
.L462:
	.word	gTasks+0x8
.Lfe46:
	.size	 Task_ElevatorShake,.Lfe46-Task_ElevatorShake
	.align	2, 0
	.globl	DrawElevatorCurrentFloorWindow
	.type	 DrawElevatorCurrentFloorWindow,function
	.thumb_func
DrawElevatorCurrentFloorWindow:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0xc
	ldr	r0, .L466
	bl	QL_AvoidDisplay
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L464	@cond_branch
	ldr	r4, .L466+0x4
	ldr	r0, .L466+0x8
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	ldr	r5, .L466+0xc
	add	r1, r5, #0
	mov	r2, #0xd0
	bl	LoadStdWindowGfx
	ldrb	r0, [r4]
	mov	r1, #0x0
	add	r2, r5, #0
	mov	r3, #0xd
	bl	DrawStdFrameWithCustomTileAndPalette
	ldrb	r0, [r4]
	ldr	r2, .L466+0x10
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0xff
	mov	r8, r1
	str	r1, [sp, #0x4]
	mov	r6, #0x0
	str	r6, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldr	r1, .L466+0x14
	ldr	r0, .L466+0x18
	ldrh	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r5, [r0]
	mov	r0, #0x2
	add	r1, r5, #0
	mov	r2, #0x0
	bl	GetStringWidth
	ldrb	r1, [r4]
	mov	r3, #0x38
	sub	r3, r3, r0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, #0x10
	str	r0, [sp]
	mov	r0, r8
	str	r0, [sp, #0x4]
	str	r6, [sp, #0x8]
	add	r0, r1, #0
	mov	r1, #0x2
	add	r2, r5, #0
	bl	AddTextPrinterParameterized
	ldrb	r0, [r4]
	bl	PutWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x3
	bl	CopyWindowToVram
.L464:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L467:
	.align	2, 0
.L466:
	.word	QL_DestroyAbortedDisplay
	.word	sElevatorCurrentFloorWindowId
	.word	sElevatorCurrentFloorWindowTemplate
	.word	0x21d
	.word	gText_NowOn
	.word	sFloorNamePointers
	.word	gSpecialVar_0x8005
.Lfe47:
	.size	 DrawElevatorCurrentFloorWindow,.Lfe47-DrawElevatorCurrentFloorWindow
	.align	2, 0
	.globl	CloseElevatorCurrentFloorWindow
	.type	 CloseElevatorCurrentFloorWindow,function
	.thumb_func
CloseElevatorCurrentFloorWindow:
	push	{r4, lr}
	ldr	r4, .L469
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.L470:
	.align	2, 0
.L469:
	.word	sElevatorCurrentFloorWindowId
.Lfe48:
	.size	 CloseElevatorCurrentFloorWindow,.Lfe48-CloseElevatorCurrentFloorWindow
	.align	2, 0
	.type	 AnimateElevatorWindowView,function
	.thumb_func
AnimateElevatorWindowView:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r4, .L473
	add	r0, r4, #0
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L472	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L473+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1, #0x8]
	strh	r0, [r1, #0xa]
	strh	r5, [r1, #0xc]
	ldr	r0, .L473+0x8
	add	r0, r6, r0
	ldrb	r0, [r0]
	strh	r0, [r1, #0xe]
.L472:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L474:
	.align	2, 0
.L473:
	.word	Task_AnimateElevatorWindowView
	.word	gTasks
	.word	sElevatorWindowAnimDuration
.Lfe49:
	.size	 AnimateElevatorWindowView,.Lfe49-AnimateElevatorWindowView
	.align	2, 0
	.type	 Task_AnimateElevatorWindowView,function
	.thumb_func
Task_AnimateElevatorWindowView:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp]
	lsl	r0, r0, #0x2
	ldr	r1, [sp]
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L500
	add	r6, r0, r1
	mov	r2, #0x2
	ldrsh	r0, [r6, r2]
	cmp	r0, #0x6
	bne	.L476	@cond_branch
	ldrh	r0, [r6]
	add	r0, r0, #0x1
	strh	r0, [r6]
	mov	r1, #0x4
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	bne	.L477	@cond_branch
	mov	r1, #0x0
	ldr	r2, .L500+0x4
	mov	sl, r2
.L481:
	mov	r5, #0x0
	add	r7, r1, #0x7
	lsl	r0, r1, #0x1
	add	r2, r1, #0x1
	mov	r8, r2
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r9, r0
.L485:
	add	r4, r5, #0
	add	r4, r4, #0x8
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r1, #0x3
	bl	__modsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0xf
	add	r0, r0, r9
	add	r0, r0, sl
	ldrh	r0, [r0]
	mov	r1, #0xc0
	lsl	r1, r1, #0x4
	add	r2, r1, #0
	orr	r2, r2, r0
	add	r0, r4, #0
	add	r1, r7, #0
	bl	MapGridSetMetatileIdAt
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L485	@cond_branch
	mov	r2, r8
	lsl	r0, r2, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x2
	bls	.L481	@cond_branch
	b	.L488
.L501:
	.align	2, 0
.L500:
	.word	gTasks+0x8
	.word	sElevatorWindowMetatilesGoingUp
.L477:
	mov	r1, #0x0
	ldr	r0, .L502
	mov	sl, r0
.L492:
	mov	r5, #0x0
	add	r7, r1, #0x7
	lsl	r0, r1, #0x1
	add	r2, r1, #0x1
	mov	r8, r2
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	mov	r9, r0
.L496:
	add	r4, r5, #0
	add	r4, r4, #0x8
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r1, #0x3
	bl	__modsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0xf
	add	r0, r0, r9
	add	r0, r0, sl
	ldrh	r0, [r0]
	mov	r1, #0xc0
	lsl	r1, r1, #0x4
	add	r2, r1, #0
	orr	r2, r2, r0
	add	r0, r4, #0
	add	r1, r7, #0
	bl	MapGridSetMetatileIdAt
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bls	.L496	@cond_branch
	mov	r2, r8
	lsl	r0, r2, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x2
	bls	.L492	@cond_branch
.L488:
	bl	DrawWholeMapView
	mov	r0, #0x0
	strh	r0, [r6, #0x2]
	mov	r0, #0x0
	ldrsh	r1, [r6, r0]
	mov	r2, #0x6
	ldrsh	r0, [r6, r2]
	cmp	r1, r0
	bne	.L476	@cond_branch
	ldr	r0, [sp]
	bl	DestroyTask
.L476:
	ldrh	r0, [r6, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x2]
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L503:
	.align	2, 0
.L502:
	.word	sElevatorWindowMetatilesGoingDown
.Lfe50:
	.size	 Task_AnimateElevatorWindowView,.Lfe50-Task_AnimateElevatorWindowView
	.align	2, 0
	.globl	ListMenu
	.type	 ListMenu,function
	.thumb_func
ListMenu:
	push	{r4, r5, lr}
	ldr	r0, .L519
	bl	QL_AvoidDisplay
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB3226
	b	.L504	@long jump
.LCB3226:
	ldr	r0, .L519+0x4
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L519+0x8
	add	r3, r0, r1
	ldr	r0, .L519+0xc
	ldrh	r4, [r0]
	cmp	r4, #0x3
	beq	.L510	@cond_branch
	cmp	r4, #0x3
	bgt	.L517	@cond_branch
	cmp	r4, #0x1
	beq	.L508	@cond_branch
	cmp	r4, #0x1
	bgt	.L509	@cond_branch
	cmp	r4, #0
	beq	.L507	@cond_branch
	b	.L515
.L520:
	.align	2, 0
.L519:
	.word	QL_DestroyAbortedDisplay
	.word	Task_CreateScriptListMenu
	.word	gTasks
	.word	gSpecialVar_0x8004
.L517:
	cmp	r4, #0x5
	beq	.L512	@cond_branch
	cmp	r4, #0x5
	blt	.L511	@cond_branch
	cmp	r4, #0x6
	beq	.L513	@cond_branch
	cmp	r4, #0x63
	beq	.L504	@cond_branch
	b	.L515
.L507:
	mov	r0, #0x4
	strh	r0, [r3, #0x8]
	mov	r0, #0x9
	strh	r0, [r3, #0xa]
	mov	r1, #0x1
	strh	r1, [r3, #0xc]
	strh	r1, [r3, #0xe]
	mov	r0, #0xc
	strh	r0, [r3, #0x10]
	mov	r0, #0x7
	strh	r0, [r3, #0x12]
	b	.L518
.L508:
	mov	r2, #0x0
	mov	r0, #0x7
	strh	r0, [r3, #0x8]
	mov	r1, #0xc
	strh	r1, [r3, #0xa]
	strh	r4, [r3, #0xc]
	strh	r4, [r3, #0xe]
	mov	r0, #0x8
	strh	r0, [r3, #0x10]
	strh	r1, [r3, #0x12]
	strh	r2, [r3, #0x14]
	strh	r5, [r3, #0x26]
	ldr	r0, .L521
	ldrh	r0, [r0]
	strh	r0, [r3, #0x16]
	ldr	r0, .L521+0x4
	ldrh	r0, [r0]
	strh	r0, [r3, #0x18]
	b	.L504
.L522:
	.align	2, 0
.L521:
	.word	sElevatorScroll
	.word	sElevatorCursorPos
.L509:
	mov	r1, #0x0
	mov	r0, #0x4
	strh	r0, [r3, #0x8]
	strh	r0, [r3, #0xa]
	mov	r0, #0x1
	strh	r0, [r3, #0xc]
	strh	r0, [r3, #0xe]
	mov	r0, #0x8
	strh	r0, [r3, #0x10]
	strh	r0, [r3, #0x12]
	b	.L518
.L510:
	mov	r1, #0x0
	mov	r0, #0x4
	strh	r0, [r3, #0x8]
	mov	r0, #0x6
	strh	r0, [r3, #0xa]
	mov	r0, #0x1
	strh	r0, [r3, #0xc]
	strh	r0, [r3, #0xe]
	mov	r0, #0x8
	strh	r0, [r3, #0x10]
	strh	r0, [r3, #0x12]
	b	.L518
.L511:
	mov	r0, #0x4
	strh	r0, [r3, #0x8]
	strh	r0, [r3, #0xa]
	mov	r1, #0x1
	strh	r1, [r3, #0xc]
	strh	r1, [r3, #0xe]
	mov	r0, #0x11
	strh	r0, [r3, #0x10]
	mov	r0, #0x8
	strh	r0, [r3, #0x12]
	b	.L518
.L512:
	mov	r2, #0x0
	mov	r0, #0x7
	strh	r0, [r3, #0x8]
	mov	r1, #0xc
	strh	r1, [r3, #0xa]
	mov	r0, #0x10
	strh	r0, [r3, #0xc]
	mov	r0, #0x1
	strh	r0, [r3, #0xe]
	mov	r0, #0x11
	strh	r0, [r3, #0x10]
	strh	r1, [r3, #0x12]
	strh	r2, [r3, #0x14]
	strh	r5, [r3, #0x26]
	b	.L504
.L513:
	mov	r1, #0x0
	mov	r0, #0x3
	strh	r0, [r3, #0x8]
	strh	r0, [r3, #0xa]
	mov	r0, #0x1
	strh	r0, [r3, #0xc]
	strh	r0, [r3, #0xe]
	mov	r0, #0x8
	strh	r0, [r3, #0x10]
	strh	r4, [r3, #0x12]
.L518:
	strh	r1, [r3, #0x14]
	strh	r5, [r3, #0x26]
	b	.L504
.L515:
	ldr	r1, .L523
	mov	r0, #0x7f
	strh	r0, [r1]
	add	r0, r5, #0
	bl	DestroyTask
.L504:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L524:
	.align	2, 0
.L523:
	.word	gSpecialVar_Result
.Lfe51:
	.size	 ListMenu,.Lfe51-ListMenu
	.section .rodata
	.align	2, 0
	.type	 sListMenuLabels,object
sListMenuLabels:
	.word	gText_BoulderBadge
	.word	gText_CascadeBadge
	.word	gText_ThunderBadge
	.word	gText_RainbowBadge
	.word	gText_SoulBadge
	.word	gText_MarshBadge
	.word	gText_VolcanoBadge
	.word	gText_EarthBadge
	.word	gOtherText_Exit
	.space	12
	.word	gText_11F
	.word	gText_10F
	.word	gText_9F
	.word	gText_8F
	.word	gText_7F
	.word	gText_6F
	.word	gText_5F
	.word	gText_4F
	.word	gText_3F
	.word	gText_2F
	.word	gText_1F
	.word	gOtherText_Exit
	.word	gText_B1F
	.word	gText_B2F
	.word	gText_B4F
	.word	gOtherText_Exit
	.space	32
	.word	gText_5F
	.word	gText_4F
	.word	gText_3F
	.word	gText_2F
	.word	gText_1F
	.word	gOtherText_Exit
	.space	24
	.word	gText_LinkedGamePlay
	.word	gText_DirectCorner
	.word	gText_UnionRoom
	.word	gOtherText_Quit
	.space	32
	.word	gText_Energypowder_50
	.word	gText_EnergyRoot_80
	.word	gText_HealPowder_50
	.word	gText_RevivalHerb_300
	.word	gText_Protein_1000
	.word	gText_Iron_1000
	.word	gText_Carbos_1000
	.word	gText_Calcium_1000
	.word	gText_Zinc_1000
	.word	gText_HpUp_1000
	.word	gText_PpUp_3000
	.word	gOtherText_Exit
	.word	gText_Rooftop
	.word	gText_B1F
	.word	gOtherText_Exit
	.space	36
	.size	 sListMenuLabels,336
.text
	.align	2, 0
	.type	 Task_CreateScriptListMenu,function
	.thumb_func
Task_CreateScriptListMenu:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r0, r0, #0x3
	ldr	r1, .L536
	add	r5, r0, r1
	bl	LockPlayerFieldControls
	ldr	r0, .L536+0x4
	ldrh	r0, [r0]
	cmp	r0, #0x1
	bne	.L526	@cond_branch
	ldr	r0, .L536+0x8
	ldr	r1, .L536+0xc
	ldrh	r1, [r1]
	strh	r1, [r0]
	b	.L527
.L537:
	.align	2, 0
.L536:
	.word	gTasks
	.word	gSpecialVar_0x8004
	.word	sListMenuLastScrollPosition
	.word	sElevatorScroll
.L526:
	ldr	r1, .L538
	mov	r0, #0x0
	strh	r0, [r1]
.L527:
	ldr	r4, .L538+0x4
	mov	r1, #0xa
	ldrsh	r0, [r5, r1]
	lsl	r0, r0, #0x3
	bl	AllocZeroed
	str	r0, [r4]
	bl	CreateScriptListMenu
	mov	r6, #0x0
	mov	r4, #0x0
	mov	r2, #0xa
	ldrsh	r0, [r5, r2]
	lsl	r3, r7, #0x2
	mov	sl, r3
	add	r1, sp, #0x18
	mov	r9, r1
	cmp	r6, r0
	bge	.L529	@cond_branch
	ldr	r2, .L538+0x8
	mov	r8, r2
.L531:
	ldr	r0, .L538+0x4
	ldr	r0, [r0]
	lsl	r3, r4, #0x3
	add	r3, r3, r0
	lsl	r2, r4, #0x2
	ldr	r0, .L538+0xc
	ldrh	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x4
	add	r2, r2, r0
	add	r2, r2, r8
	ldr	r1, [r2]
	str	r1, [r3]
	str	r4, [r3, #0x4]
	mov	r0, #0x2
	mov	r2, #0x0
	bl	GetStringWidth
	cmp	r0, r6
	ble	.L530	@cond_branch
	add	r6, r0, #0
.L530:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r3, #0xa
	ldrsh	r0, [r5, r3]
	cmp	r4, r0
	blt	.L531	@cond_branch
.L529:
	add	r0, r6, #0
	add	r0, r0, #0x9
	cmp	r0, #0
	bge	.L534	@cond_branch
	add	r0, r0, #0x7
.L534:
	asr	r0, r0, #0x3
	add	r2, r0, #0x1
	strh	r2, [r5, #0x10]
	mov	r1, #0xc
	ldrsh	r0, [r5, r1]
	mov	r3, #0x10
	ldrsh	r1, [r5, r3]
	add	r0, r0, r1
	cmp	r0, #0x1d
	ble	.L535	@cond_branch
	mov	r0, #0x1d
	sub	r0, r0, r2
	strh	r0, [r5, #0xc]
.L535:
	ldrb	r2, [r5, #0xc]
	ldrb	r3, [r5, #0xe]
	ldrb	r0, [r5, #0x10]
	str	r0, [sp]
	ldrb	r0, [r5, #0x12]
	str	r0, [sp, #0x4]
	mov	r0, #0xf
	str	r0, [sp, #0x8]
	mov	r0, #0x38
	str	r0, [sp, #0xc]
	add	r0, sp, #0x10
	mov	r1, #0x0
	bl	SetWindowTemplateFields
	ldr	r0, [sp, #0x10]		@ created by thumb_load_double_from_address
	ldr	r1, [sp, #0x14]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x18]
	str	r1, [sp, #0x1c]
	mov	r0, r9
	bl	AddWindow
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x22]
	mov	r1, #0x0
	bl	SetStdWindowBorderStyle
	ldr	r4, .L538+0x10
	ldrh	r0, [r5, #0xa]
	strh	r0, [r4, #0xc]
	ldrh	r0, [r5, #0x8]
	strh	r0, [r4, #0xe]
	ldrh	r0, [r5, #0x22]
	strb	r0, [r4, #0x10]
	add	r0, r7, #0
	bl	Task_CreateMenuRemoveScrollIndicatorArrowPair
	ldrh	r1, [r5, #0x16]
	ldrh	r2, [r5, #0x18]
	add	r0, r4, #0
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r5, #0x24]
	ldrh	r0, [r5, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	PutWindowTilemap
	ldrh	r0, [r5, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r1, .L538+0x14
	mov	r2, sl
	add	r0, r2, r7
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L538+0x18
	str	r1, [r0]
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L539:
	.align	2, 0
.L538:
	.word	sListMenuLastScrollPosition
	.word	sListMenuItems
	.word	sListMenuLabels
	.word	gSpecialVar_0x8004
	.word	sFieldSpecialsListMenuTemplate
	.word	gTasks
	.word	Task_ListMenuHandleInput
.Lfe52:
	.size	 Task_CreateScriptListMenu,.Lfe52-Task_CreateScriptListMenu
	.align	2, 0
	.type	 CreateScriptListMenu,function
	.thumb_func
CreateScriptListMenu:
	ldr	r2, .L541
	ldr	r0, .L541+0x4
	ldr	r0, [r0]
	str	r0, [r2]
	ldr	r0, .L541+0x8
	str	r0, [r2, #0x4]
	mov	r0, #0x0
	str	r0, [r2, #0x8]
	mov	r1, #0x0
	mov	r0, #0x1
	strh	r0, [r2, #0xc]
	strh	r0, [r2, #0xe]
	strb	r1, [r2, #0x10]
	strb	r1, [r2, #0x11]
	mov	r0, #0x8
	strb	r0, [r2, #0x12]
	strb	r1, [r2, #0x13]
	mov	r0, #0x20
	strb	r0, [r2, #0x14]
	mov	r3, #0x1
	mov	r0, #0x31
	strb	r0, [r2, #0x15]
	ldrb	r1, [r2, #0x16]
	sub	r0, r0, #0x39
	and	r0, r0, r1
	orr	r0, r0, r3
	mov	r1, #0x39
	neg	r1, r1
	and	r0, r0, r1
	mov	r3, #0x3f
	and	r0, r0, r3
	strb	r0, [r2, #0x16]
	ldrb	r1, [r2, #0x17]
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x2
	orr	r0, r0, r1
	and	r0, r0, r3
	strb	r0, [r2, #0x17]
	bx	lr
.L542:
	.align	2, 0
.L541:
	.word	sFieldSpecialsListMenuTemplate
	.word	sListMenuItems
	.word	ScriptListMenuMoveCursorFunction
.Lfe53:
	.size	 CreateScriptListMenu,.Lfe53-CreateScriptListMenu
	.align	2, 0
	.type	 ScriptListMenuMoveCursorFunction,function
	.thumb_func
ScriptListMenuMoveCursorFunction:
	push	{r4, lr}
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L545
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xff
	beq	.L544	@cond_branch
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L545+0x4
	add	r0, r0, r1
	ldrh	r0, [r0, #0x24]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r4, .L545+0x8
	add	r1, r4, #0
	mov	r2, #0x0
	bl	ListMenuGetScrollAndRow
	ldr	r1, .L545+0xc
	ldrh	r0, [r4]
	strh	r0, [r1]
.L544:
	pop	{r4}
	pop	{r0}
	bx	r0
.L546:
	.align	2, 0
.L545:
	.word	Task_ListMenuHandleInput
	.word	gTasks
	.word	sFieldSpecialsListMenuScrollBuffer
	.word	sListMenuLastScrollPosition
.Lfe54:
	.size	 ScriptListMenuMoveCursorFunction,.Lfe54-ScriptListMenuMoveCursorFunction
	.align	2, 0
	.type	 Task_ListMenuHandleInput,function
	.thumb_func
Task_ListMenuHandleInput:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L556
	add	r6, r0, r1
	ldrh	r0, [r6, #0x24]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ListMenu_ProcessInput
	add	r4, r0, #0
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L550	@cond_branch
	add	r0, r0, #0x1
	cmp	r4, r0
	bne	.L551	@cond_branch
	b	.L548
.L557:
	.align	2, 0
.L556:
	.word	gTasks
.L550:
	ldr	r1, .L558
	mov	r0, #0x7f
	strh	r0, [r1]
	mov	r0, #0x5
	bl	PlaySE
	b	.L553
.L559:
	.align	2, 0
.L558:
	.word	gSpecialVar_Result
.L551:
	ldr	r0, .L560
	strh	r4, [r0]
	mov	r0, #0x5
	bl	PlaySE
	mov	r1, #0x14
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	beq	.L553	@cond_branch
	mov	r1, #0xa
	ldrsh	r0, [r6, r1]
	sub	r0, r0, #0x1
	cmp	r4, r0
	bne	.L552	@cond_branch
.L553:
	add	r0, r5, #0
	bl	Task_DestroyListMenu
	b	.L548
.L561:
	.align	2, 0
.L560:
	.word	gSpecialVar_Result
.L552:
	add	r0, r5, #0
	bl	Task_ListMenuRemoveScrollIndicatorArrowPair
	ldr	r0, .L562
	str	r0, [r6]
	bl	ScriptContext_Enable
.L548:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L563:
	.align	2, 0
.L562:
	.word	Task_SuspendListMenu
.Lfe55:
	.size	 Task_ListMenuHandleInput,.Lfe55-Task_ListMenuHandleInput
	.align	2, 0
	.type	 Task_DestroyListMenu,function
	.thumb_func
Task_DestroyListMenu:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r5, #0x2
	add	r4, r4, r5
	lsl	r4, r4, #0x3
	ldr	r0, .L565
	add	r4, r4, r0
	add	r0, r5, #0
	bl	Task_ListMenuRemoveScrollIndicatorArrowPair
	ldrh	r0, [r4, #0x24]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldr	r0, .L565+0x4
	ldr	r0, [r0]
	bl	Free
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	ClearStdWindowAndFrameToTransparent
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ClearWindowTilemap
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrh	r0, [r4, #0x22]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	RemoveWindow
	add	r0, r5, #0
	bl	DestroyTask
	bl	ScriptContext_Enable
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L566:
	.align	2, 0
.L565:
	.word	gTasks
	.word	sListMenuItems
.Lfe56:
	.size	 Task_DestroyListMenu,.Lfe56-Task_DestroyListMenu
	.align	2, 0
	.type	 Task_SuspendListMenu,function
	.thumb_func
Task_SuspendListMenu:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L573
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r2, #0x14
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x1
	beq	.L568	@cond_branch
	cmp	r0, #0x2
	bne	.L568	@cond_branch
	mov	r0, #0x1
	strh	r0, [r1, #0x14]
	ldr	r0, .L573+0x4
	str	r0, [r1]
.L568:
	pop	{r0}
	bx	r0
.L574:
	.align	2, 0
.L573:
	.word	gTasks
	.word	Task_RedrawScrollArrowsAndWaitInput
.Lfe57:
	.size	 Task_SuspendListMenu,.Lfe57-Task_SuspendListMenu
	.align	2, 0
	.globl	ReturnToListMenu
	.type	 ReturnToListMenu,function
	.thumb_func
ReturnToListMenu:
	push	{lr}
	ldr	r0, .L578
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xff
	bne	.L576	@cond_branch
	bl	ScriptContext_Enable
	b	.L577
.L579:
	.align	2, 0
.L578:
	.word	Task_SuspendListMenu
.L576:
	ldr	r0, .L580
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldrh	r0, [r1, #0x14]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x14]
.L577:
	pop	{r0}
	bx	r0
.L581:
	.align	2, 0
.L580:
	.word	gTasks
.Lfe58:
	.size	 ReturnToListMenu,.Lfe58-ReturnToListMenu
	.align	2, 0
	.type	 Task_RedrawScrollArrowsAndWaitInput,function
	.thumb_func
Task_RedrawScrollArrowsAndWaitInput:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	LockPlayerFieldControls
	add	r0, r4, #0
	bl	Task_CreateMenuRemoveScrollIndicatorArrowPair
	ldr	r1, .L583
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L583+0x4
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L584:
	.align	2, 0
.L583:
	.word	gTasks
	.word	Task_ListMenuHandleInput
.Lfe59:
	.size	 Task_RedrawScrollArrowsAndWaitInput,.Lfe59-Task_RedrawScrollArrowsAndWaitInput
	.section .rodata
	.align	2, 0
.LC136:
	.byte	0x2
	.space	2
	.byte	0x3
	.space	6
	.short	0x7d0
	.short	0x64
	.space	2
.text
	.align	2, 0
	.type	 Task_CreateMenuRemoveScrollIndicatorArrowPair,function
	.thumb_func
Task_CreateMenuRemoveScrollIndicatorArrowPair:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L587
	add	r4, r1, r0
	mov	r1, sp
	ldr	r0, .L587+0x4
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldr	r0, [r0]
	str	r0, [r1]
	mov	r0, #0x8
	ldrsh	r1, [r4, r0]
	mov	r2, #0xa
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	beq	.L586	@cond_branch
	mov	r2, sp
	mov	r3, #0x10
	ldrsh	r1, [r4, r3]
	lsl	r1, r1, #0x2
	mov	r5, #0xc
	ldrsh	r0, [r4, r5]
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	mov	r3, #0x0
	strb	r1, [r2, #0x1]
	mov	r1, sp
	mov	r0, #0x8
	strb	r0, [r1, #0x2]
	mov	r0, #0x10
	ldrsh	r1, [r4, r0]
	lsl	r1, r1, #0x2
	mov	r5, #0xc
	ldrsh	r0, [r4, r5]
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	strb	r1, [r2, #0x4]
	mov	r1, sp
	mov	r2, #0x12
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x3
	add	r0, r0, #0xa
	strb	r0, [r1, #0x5]
	mov	r0, sp
	strh	r3, [r0, #0x6]
	mov	r2, sp
	ldrh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0x8]
	sub	r0, r0, r1
	strh	r0, [r2, #0x8]
	ldr	r1, .L587+0x8
	mov	r0, sp
	bl	AddScrollIndicatorArrowPair
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0x20]
.L586:
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L588:
	.align	2, 0
.L587:
	.word	gTasks
	.word	.LC136
	.word	sListMenuLastScrollPosition
.Lfe60:
	.size	 Task_CreateMenuRemoveScrollIndicatorArrowPair,.Lfe60-Task_CreateMenuRemoveScrollIndicatorArrowPair
	.align	2, 0
	.type	 Task_ListMenuRemoveScrollIndicatorArrowPair,function
	.thumb_func
Task_ListMenuRemoveScrollIndicatorArrowPair:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L591
	add	r2, r1, r0
	mov	r0, #0x8
	ldrsh	r1, [r2, r0]
	mov	r3, #0xa
	ldrsh	r0, [r2, r3]
	cmp	r1, r0
	beq	.L590	@cond_branch
	ldrh	r0, [r2, #0x20]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	RemoveScrollIndicatorArrowPair
.L590:
	pop	{r0}
	bx	r0
.L592:
	.align	2, 0
.L591:
	.word	gTasks
.Lfe61:
	.size	 Task_ListMenuRemoveScrollIndicatorArrowPair,.Lfe61-Task_ListMenuRemoveScrollIndicatorArrowPair
	.align	2, 0
	.globl	ForcePlayerToStartSurfing
	.type	 ForcePlayerToStartSurfing,function
	.thumb_func
ForcePlayerToStartSurfing:
	push	{lr}
	mov	r0, #0x16
	bl	SetHelpContext
	mov	r0, #0x8
	bl	SetPlayerAvatarTransitionFlags
	pop	{r0}
	bx	r0
.Lfe62:
	.size	 ForcePlayerToStartSurfing,.Lfe62-ForcePlayerToStartSurfing
	.section .rodata
	.align	1, 0
	.type	 sStarterSpecies,object
sStarterSpecies:
	.short	0x1
	.short	0x7
	.short	0x4
	.size	 sStarterSpecies,6
.text
	.align	2, 0
	.type	 GetStarterSpeciesById,function
	.thumb_func
GetStarterSpeciesById:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0x2
	bls	.L595	@cond_branch
	mov	r1, #0x0
.L595:
	ldr	r0, .L596
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	ldrh	r0, [r1]
	pop	{r1}
	bx	r1
.L597:
	.align	2, 0
.L596:
	.word	sStarterSpecies
.Lfe63:
	.size	 GetStarterSpeciesById,.Lfe63-GetStarterSpeciesById
	.align	2, 0
	.globl	GetStarterSpecies
	.type	 GetStarterSpecies,function
	.thumb_func
GetStarterSpecies:
	push	{lr}
	ldr	r0, .L599
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	GetStarterSpeciesById
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L600:
	.align	2, 0
.L599:
	.word	0x4031
.Lfe64:
	.size	 GetStarterSpecies,.Lfe64-GetStarterSpecies
	.align	2, 0
	.globl	SetSeenMon
	.type	 SetSeenMon,function
	.thumb_func
SetSeenMon:
	push	{lr}
	ldr	r0, .L602
	ldrh	r0, [r0]
	bl	SpeciesToNationalPokedexNum
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x2
	bl	GetSetPokedexFlag
	pop	{r0}
	bx	r0
.L603:
	.align	2, 0
.L602:
	.word	gSpecialVar_0x8004
.Lfe65:
	.size	 SetSeenMon,.Lfe65-SetSeenMon
	.align	2, 0
	.globl	ResetContextNpcTextColor
	.type	 ResetContextNpcTextColor,function
	.thumb_func
ResetContextNpcTextColor:
	ldr	r1, .L605
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, .L605+0x4
	mov	r0, #0xff
	strh	r0, [r1]
	bx	lr
.L606:
	.align	2, 0
.L605:
	.word	gSelectedObjectEvent
	.word	gSpecialVar_TextColor
.Lfe66:
	.size	 ResetContextNpcTextColor,.Lfe66-ResetContextNpcTextColor
	.align	2, 0
	.globl	ContextNpcGetTextColor
	.type	 ContextNpcGetTextColor,function
	.thumb_func
ContextNpcGetTextColor:
	push	{lr}
	ldr	r0, .L616
	ldrh	r0, [r0]
	cmp	r0, #0xff
	bne	.L615	@cond_branch
	ldr	r1, .L616+0x4
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L610	@cond_branch
	mov	r0, #0x3
	b	.L613
.L617:
	.align	2, 0
.L616:
	.word	gSpecialVar_TextColor
	.word	gSelectedObjectEvent
.L610:
	ldr	r2, .L618
	ldrb	r1, [r1]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x5]
	cmp	r0, #0xef
	bls	.L612	@cond_branch
	add	r0, r0, #0x10
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	VarGetObjectEventGraphicsId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L612:
	bl	GetColorFromTextColorTable
.L615:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L613:
	pop	{r1}
	bx	r1
.L619:
	.align	2, 0
.L618:
	.word	gObjectEvents
.Lfe67:
	.size	 ContextNpcGetTextColor,.Lfe67-ContextNpcGetTextColor
	.align	2, 0
	.type	 HasMonBeenRenamed,function
	.thumb_func
HasMonBeenRenamed:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r1, r1, r0
	ldr	r0, .L626
	add	r5, r1, r0
	ldr	r6, .L626+0x4
	add	r0, r5, #0
	mov	r1, #0x2
	add	r2, r6, #0
	bl	GetMonData
	mov	r4, sp
	add	r0, r5, #0
	mov	r1, #0x3
	mov	r2, sp
	bl	GetMonData
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L623	@cond_branch
	add	r0, r5, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	mov	r1, #0xb
	mul	r0, r0, r1
	ldr	r1, .L626+0x8
	add	r0, r0, r1
	add	r1, r6, #0
	bl	StringCompare
	cmp	r0, #0
	bne	.L623	@cond_branch
	mov	r0, #0x0
	b	.L625
.L627:
	.align	2, 0
.L626:
	.word	gPlayerParty
	.word	gStringVar1
	.word	gSpeciesNames
.L623:
	mov	r0, #0x1
.L625:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe68:
	.size	 HasMonBeenRenamed,.Lfe68-HasMonBeenRenamed
	.align	2, 0
	.globl	HasLeadMonBeenRenamed
	.type	 HasLeadMonBeenRenamed,function
	.thumb_func
HasLeadMonBeenRenamed:
	push	{lr}
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	HasMonBeenRenamed
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 HasLeadMonBeenRenamed,.Lfe69-HasLeadMonBeenRenamed
	.align	2, 0
	.globl	TV_PrintIntToStringVar
	.type	 TV_PrintIntToStringVar,function
	.thumb_func
TV_PrintIntToStringVar:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r5, #0
	bl	CountDigits
	add	r3, r0, #0
	ldr	r0, .L630
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r0, [r4]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r1, r5, #0
	mov	r2, #0x0
	bl	ConvertIntToDecimalStringN
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L631:
	.align	2, 0
.L630:
	.word	sStringVarPtrs
.Lfe70:
	.size	 TV_PrintIntToStringVar,.Lfe70-TV_PrintIntToStringVar
	.align	2, 0
	.globl	CountDigits
	.type	 CountDigits,function
	.thumb_func
CountDigits:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0xa
	bl	__divsi3
	cmp	r0, #0
	beq	.L650	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x64
	bl	__divsi3
	cmp	r0, #0
	bne	.L635	@cond_branch
	mov	r0, #0x2
	b	.L649
.L635:
	mov	r1, #0xfa
	lsl	r1, r1, #0x2
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L637	@cond_branch
	mov	r0, #0x3
	b	.L649
.L637:
	ldr	r1, .L651
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L639	@cond_branch
	mov	r0, #0x4
	b	.L649
.L652:
	.align	2, 0
.L651:
	.word	0x2710
.L639:
	ldr	r1, .L653
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L641	@cond_branch
	mov	r0, #0x5
	b	.L649
.L654:
	.align	2, 0
.L653:
	.word	0x186a0
.L641:
	ldr	r1, .L655
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L643	@cond_branch
	mov	r0, #0x6
	b	.L649
.L656:
	.align	2, 0
.L655:
	.word	0xf4240
.L643:
	ldr	r1, .L657
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	bne	.L645	@cond_branch
	mov	r0, #0x7
	b	.L649
.L658:
	.align	2, 0
.L657:
	.word	0x989680
.L645:
	ldr	r1, .L659
	add	r0, r4, #0
	bl	__divsi3
	cmp	r0, #0
	beq	.L647	@cond_branch
.L650:
	mov	r0, #0x1
	b	.L649
.L660:
	.align	2, 0
.L659:
	.word	0x5f5e100
.L647:
	mov	r0, #0x8
.L649:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe71:
	.size	 CountDigits,.Lfe71-CountDigits
	.align	2, 0
	.globl	NameRaterWasNicknameChanged
	.type	 NameRaterWasNicknameChanged,function
	.thumb_func
NameRaterWasNicknameChanged:
	push	{r4, lr}
	ldr	r0, .L665
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L665+0x4
	add	r0, r0, r1
	ldr	r4, .L665+0x8
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	ldr	r0, .L665+0xc
	add	r1, r4, #0
	bl	StringCompare
	cmp	r0, #0
	beq	.L662	@cond_branch
	mov	r0, #0x1
	b	.L664
.L666:
	.align	2, 0
.L665:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar1
	.word	gStringVar3
.L662:
	mov	r0, #0x0
.L664:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 NameRaterWasNicknameChanged,.Lfe72-NameRaterWasNicknameChanged
	.align	2, 0
	.globl	ChangeBoxPokemonNickname
	.type	 ChangeBoxPokemonNickname,function
	.thumb_func
ChangeBoxPokemonNickname:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x8
	ldr	r0, .L668
	ldrb	r0, [r0]
	ldr	r1, .L668+0x4
	ldrb	r1, [r1]
	bl	GetBoxedMonPtr
	add	r6, r0, #0
	ldr	r2, .L668+0x8
	mov	r1, #0x2
	bl	GetBoxMonData
	ldr	r0, .L668+0xc
	mov	r8, r0
	add	r0, r6, #0
	mov	r1, #0x2
	mov	r2, r8
	bl	GetBoxMonData
	add	r0, r6, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetBoxMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r6, #0
	bl	GetBoxMonGender
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r6, #0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetBoxMonData
	str	r0, [sp]
	ldr	r0, .L668+0x10
	str	r0, [sp, #0x4]
	mov	r0, #0x3
	mov	r1, r8
	add	r2, r5, #0
	add	r3, r4, #0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L669:
	.align	2, 0
.L668:
	.word	gSpecialVar_MonBoxId
	.word	gSpecialVar_MonBoxPos
	.word	gStringVar3
	.word	gStringVar2
	.word	ChangeBoxPokemonNickname_CB
.Lfe73:
	.size	 ChangeBoxPokemonNickname,.Lfe73-ChangeBoxPokemonNickname
	.align	2, 0
	.type	 ChangeBoxPokemonNickname_CB,function
	.thumb_func
ChangeBoxPokemonNickname_CB:
	push	{lr}
	ldr	r0, .L671
	ldrb	r0, [r0]
	ldr	r1, .L671+0x4
	ldrb	r1, [r1]
	ldr	r2, .L671+0x8
	bl	SetBoxMonNickAt
	bl	CB2_ReturnToFieldContinueScriptPlayMapMusic
	pop	{r0}
	bx	r0
.L672:
	.align	2, 0
.L671:
	.word	gSpecialVar_MonBoxId
	.word	gSpecialVar_MonBoxPos
	.word	gStringVar2
.Lfe74:
	.size	 ChangeBoxPokemonNickname_CB,.Lfe74-ChangeBoxPokemonNickname_CB
	.align	2, 0
	.globl	ChangePokemonNickname
	.type	 ChangePokemonNickname,function
	.thumb_func
ChangePokemonNickname:
	push	{r4, r5, r6, lr}
	mov	r6, sl
	mov	r5, r9
	mov	r4, r8
	push	{r4, r5, r6}
	add	sp, sp, #-0x8
	ldr	r0, .L674
	mov	r9, r0
	ldrh	r0, [r0]
	mov	r1, #0x64
	mov	r8, r1
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r6, .L674+0x4
	add	r0, r0, r6
	ldr	r2, .L674+0x8
	mov	r1, #0x2
	bl	GetMonData
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	ldr	r1, .L674+0xc
	mov	sl, r1
	mov	r1, #0x2
	mov	r2, sl
	bl	GetMonData
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	bl	GetMonGender
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r6
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetMonData
	str	r0, [sp]
	ldr	r0, .L674+0x10
	str	r0, [sp, #0x4]
	mov	r0, #0x3
	mov	r1, sl
	add	r2, r5, #0
	add	r3, r4, #0
	bl	DoNamingScreen
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L675:
	.align	2, 0
.L674:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar3
	.word	gStringVar2
	.word	ChangePokemonNickname_CB
.Lfe75:
	.size	 ChangePokemonNickname,.Lfe75-ChangePokemonNickname
	.align	2, 0
	.type	 ChangePokemonNickname_CB,function
	.thumb_func
ChangePokemonNickname_CB:
	push	{lr}
	ldr	r0, .L677
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L677+0x4
	add	r0, r0, r1
	ldr	r2, .L677+0x8
	mov	r1, #0x2
	bl	SetMonData
	bl	CB2_ReturnToFieldContinueScriptPlayMapMusic
	pop	{r0}
	bx	r0
.L678:
	.align	2, 0
.L677:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar2
.Lfe76:
	.size	 ChangePokemonNickname_CB,.Lfe76-ChangePokemonNickname_CB
	.align	2, 0
	.globl	BufferMonNickname
	.type	 BufferMonNickname,function
	.thumb_func
BufferMonNickname:
	push	{r4, lr}
	ldr	r0, .L680
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L680+0x4
	add	r0, r0, r1
	ldr	r4, .L680+0x8
	mov	r1, #0x2
	add	r2, r4, #0
	bl	GetMonData
	add	r0, r4, #0
	bl	StringGet_Nickname
	pop	{r4}
	pop	{r0}
	bx	r0
.L681:
	.align	2, 0
.L680:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gStringVar1
.Lfe77:
	.size	 BufferMonNickname,.Lfe77-BufferMonNickname
	.align	2, 0
	.globl	IsMonOTIDNotPlayers
	.type	 IsMonOTIDNotPlayers,function
	.thumb_func
IsMonOTIDNotPlayers:
	push	{r4, lr}
	bl	GetPlayerTrainerId
	add	r4, r0, #0
	ldr	r0, .L686
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L686+0x4
	add	r0, r0, r1
	mov	r1, #0x1
	mov	r2, #0x0
	bl	GetMonData
	cmp	r4, r0
	bne	.L683	@cond_branch
	ldr	r1, .L686+0x8
	mov	r0, #0x0
	b	.L685
.L687:
	.align	2, 0
.L686:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	gSpecialVar_Result
.L683:
	ldr	r1, .L688
	mov	r0, #0x1
.L685:
	strh	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L689:
	.align	2, 0
.L688:
	.word	gSpecialVar_Result
.Lfe78:
	.size	 IsMonOTIDNotPlayers,.Lfe78-IsMonOTIDNotPlayers
	.align	2, 0
	.globl	GetPlayerTrainerId
	.type	 GetPlayerTrainerId,function
	.thumb_func
GetPlayerTrainerId:
	ldr	r0, .L691
	ldr	r2, [r0]
	ldrb	r0, [r2, #0xd]
	lsl	r0, r0, #0x18
	ldrb	r1, [r2, #0xc]
	lsl	r1, r1, #0x10
	orr	r0, r0, r1
	ldrb	r1, [r2, #0xb]
	lsl	r1, r1, #0x8
	orr	r0, r0, r1
	ldrb	r1, [r2, #0xa]
	orr	r0, r0, r1
	bx	lr
.L692:
	.align	2, 0
.L691:
	.word	gSaveBlock2Ptr
.Lfe79:
	.size	 GetPlayerTrainerId,.Lfe79-GetPlayerTrainerId
	.align	2, 0
	.globl	GetUnlockedSeviiAreas
	.type	 GetUnlockedSeviiAreas,function
	.thumb_func
GetUnlockedSeviiAreas:
	push	{r4, lr}
	mov	r4, #0x0
	ldr	r0, .L701
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L694	@cond_branch
	mov	r4, #0x1
.L694:
	ldr	r0, .L701+0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L695	@cond_branch
	mov	r0, #0x2
	orr	r4, r4, r0
.L695:
	mov	r0, #0x8a
	lsl	r0, r0, #0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L696	@cond_branch
	mov	r0, #0x4
	orr	r4, r4, r0
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
.L696:
	ldr	r0, .L701+0x8
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L697	@cond_branch
	mov	r0, #0x8
	orr	r4, r4, r0
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
.L697:
	ldr	r0, .L701+0xc
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L698	@cond_branch
	mov	r0, #0x10
	orr	r4, r4, r0
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
.L698:
	ldr	r0, .L701+0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L699	@cond_branch
	mov	r0, #0x20
	orr	r4, r4, r0
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
.L699:
	ldr	r0, .L701+0x14
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L700	@cond_branch
	mov	r0, #0x40
	orr	r4, r4, r0
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
.L700:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L702:
	.align	2, 0
.L701:
	.word	0x89e
	.word	0x89f
	.word	0x8a1
	.word	0x8a2
	.word	0x8a4
	.word	0x8a3
.Lfe80:
	.size	 GetUnlockedSeviiAreas,.Lfe80-GetUnlockedSeviiAreas
	.align	2, 0
	.globl	UpdateTrainerCardPhotoIcons
	.type	 UpdateTrainerCardPhotoIcons,function
	.thumb_func
UpdateTrainerCardPhotoIcons:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x24
	mov	r5, #0x0
	add	r7, sp, #0xc
	mov	r1, #0x0
.L707:
	lsl	r0, r5, #0x1
	add	r0, r0, sp
	strh	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L707	@cond_branch
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r5, #0x0
	cmp	r5, r6
	bcs	.L710	@cond_branch
.L712:
	mov	r0, #0x64
	mov	r4, r5
	mul	r4, r4, r0
	ldr	r0, .L714
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	lsl	r1, r5, #0x1
	add	r1, r1, sp
	strh	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	GetMonData
	lsl	r1, r5, #0x2
	add	r1, r7, r1
	str	r0, [r1]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, r6
	bcc	.L712	@cond_branch
.L710:
	ldr	r4, .L714+0x4
	mov	r0, sp
	ldrh	r0, [r0]
	ldr	r1, [sp, #0xc]
	bl	SpeciesToMailSpecies
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	add	r4, r4, #0x1
	mov	r0, sp
	ldrh	r0, [r0, #0x2]
	ldr	r1, [r7, #0x4]
	bl	SpeciesToMailSpecies
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	add	r4, r4, #0x1
	mov	r0, sp
	ldrh	r0, [r0, #0x4]
	ldr	r1, [r7, #0x8]
	bl	SpeciesToMailSpecies
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	add	r4, r4, #0x1
	mov	r0, sp
	ldrh	r0, [r0, #0x6]
	ldr	r1, [r7, #0xc]
	bl	SpeciesToMailSpecies
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	add	r4, r4, #0x1
	mov	r0, sp
	ldrh	r0, [r0, #0x8]
	ldr	r1, [r7, #0x10]
	bl	SpeciesToMailSpecies
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	add	r4, r4, #0x1
	mov	r0, sp
	ldrh	r0, [r0, #0xa]
	ldr	r1, [r7, #0x14]
	bl	SpeciesToMailSpecies
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
	ldr	r0, .L714+0x8
	ldr	r1, .L714+0xc
	ldrh	r1, [r1]
	bl	VarSet
	add	sp, sp, #0x24
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L715:
	.align	2, 0
.L714:
	.word	gPlayerParty
	.word	0x4043
	.word	0x4042
	.word	gSpecialVar_0x8004
.Lfe81:
	.size	 UpdateTrainerCardPhotoIcons,.Lfe81-UpdateTrainerCardPhotoIcons
	.align	2, 0
	.globl	StickerManGetBragFlags
	.type	 StickerManGetBragFlags,function
	.thumb_func
StickerManGetBragFlags:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r4, .L723
	mov	r0, #0xa
	bl	GetGameStat
	strh	r0, [r4]
	mov	r0, #0xd
	bl	GetGameStat
	add	r6, r0, #0
	ldr	r4, .L723+0x4
	mov	r0, #0x17
	bl	GetGameStat
	strh	r0, [r4]
	ldr	r1, .L723+0x8
	cmp	r6, r1
	bls	.L717	@cond_branch
	ldr	r0, .L723+0xc
	strh	r1, [r0]
	b	.L722
.L724:
	.align	2, 0
.L723:
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8006
	.word	0xffff
	.word	gSpecialVar_0x8005
.L717:
	ldr	r0, .L725
	strh	r6, [r0]
.L722:
	add	r1, r0, #0
	ldr	r0, .L725+0x4
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L719	@cond_branch
	mov	r0, #0x1
	orr	r5, r5, r0
.L719:
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L720	@cond_branch
	mov	r0, #0x2
	orr	r5, r5, r0
	lsl	r0, r5, #0x10
	lsr	r5, r0, #0x10
.L720:
	ldr	r0, .L725+0x8
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L721	@cond_branch
	mov	r0, #0x4
	orr	r5, r5, r0
	lsl	r0, r5, #0x10
	lsr	r5, r0, #0x10
.L721:
	add	r0, r5, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L726:
	.align	2, 0
.L725:
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8006
.Lfe82:
	.size	 StickerManGetBragFlags,.Lfe82-StickerManGetBragFlags
	.align	2, 0
	.globl	GetHiddenItemAttr
	.type	 GetHiddenItemAttr,function
	.thumb_func
GetHiddenItemAttr:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r1, #0
	cmp	r1, #0
	bne	.L728	@cond_branch
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L737
.L728:
	cmp	r1, #0x1
	bne	.L730	@cond_branch
	lsr	r0, r0, #0x10
	mov	r1, #0xff
	and	r0, r0, r1
	mov	r1, #0xfa
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	b	.L737
.L730:
	cmp	r1, #0x2
	bne	.L732	@cond_branch
	lsr	r0, r0, #0x18
	mov	r1, #0x7f
	and	r0, r0, r1
	b	.L737
.L732:
	cmp	r2, #0x3
	beq	.L734	@cond_branch
	mov	r0, #0x1
	b	.L736
.L734:
	lsr	r0, r0, #0x1f
.L737:
.L736:
	pop	{r1}
	bx	r1
.Lfe83:
	.size	 GetHiddenItemAttr,.Lfe83-GetHiddenItemAttr
	.align	2, 0
	.globl	DoesPlayerPartyContainSpecies
	.type	 DoesPlayerPartyContainSpecies,function
	.thumb_func
DoesPlayerPartyContainSpecies:
	push	{r4, r5, lr}
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	cmp	r4, r5
	bcs	.L740	@cond_branch
.L742:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L746
	add	r0, r0, r1
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	ldr	r1, .L746+0x4
	ldrh	r1, [r1]
	cmp	r0, r1
	bne	.L741	@cond_branch
	mov	r0, #0x1
	b	.L745
.L747:
	.align	2, 0
.L746:
	.word	gPlayerParty
	.word	gSpecialVar_0x8004
.L741:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r5
	bcc	.L742	@cond_branch
.L740:
	mov	r0, #0x0
.L745:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe84:
	.size	 DoesPlayerPartyContainSpecies,.Lfe84-DoesPlayerPartyContainSpecies
	.section .rodata
	.type	 sMartMaps,object
sMartMaps:
	.byte	0x5
	.byte	0x3
	.byte	0x1
	.byte	0x6
	.byte	0x3
	.byte	0x3
	.byte	0x7
	.byte	0x7
	.byte	0x1
	.byte	0x8
	.byte	0x5
	.byte	0x1
	.byte	0x9
	.byte	0x5
	.byte	0x1
	.byte	0xb
	.byte	0x1
	.byte	0x1
	.byte	0xc
	.byte	0x7
	.byte	0x1
	.byte	0xe
	.byte	0x5
	.byte	0x1
	.byte	0x22
	.byte	0x3
	.byte	0x1
	.byte	0x23
	.byte	0x7
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x1
	.byte	0x25
	.byte	0x4
	.byte	0x1
	.size	 sMartMaps,36
.text
	.align	2, 0
	.globl	GetMartClerkObjectId
	.type	 GetMartClerkObjectId,function
	.thumb_func
GetMartClerkObjectId:
	push	{r4, r5, r6, r7, lr}
	mov	r3, #0x0
	ldr	r0, .L756
	ldr	r4, [r0]
	mov	r6, #0x4
	ldrsb	r6, [r4, r6]
	ldr	r5, .L756+0x4
	add	r0, r5, #0x2
	mov	ip, r0
	add	r7, r5, #0x1
.L752:
	lsl	r0, r3, #0x1
	add	r2, r0, r3
	add	r0, r2, r5
	ldrb	r0, [r0]
	cmp	r6, r0
	bne	.L751	@cond_branch
	mov	r1, #0x5
	ldrsb	r1, [r4, r1]
	add	r0, r2, r7
	ldrb	r0, [r0]
	cmp	r1, r0
	bne	.L751	@cond_branch
	mov	r1, ip
	add	r0, r2, r1
	ldrb	r0, [r0]
	b	.L755
.L757:
	.align	2, 0
.L756:
	.word	gSaveBlock1Ptr
	.word	sMartMaps
.L751:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0xb
	bls	.L752	@cond_branch
	mov	r0, #0x1
.L755:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe85:
	.size	 GetMartClerkObjectId,.Lfe85-GetMartClerkObjectId
	.align	2, 0
	.globl	SetUsedPkmnCenterQuestLogEvent
	.type	 SetUsedPkmnCenterQuestLogEvent,function
	.thumb_func
SetUsedPkmnCenterQuestLogEvent:
	push	{lr}
	mov	r0, #0xb
	mov	r1, #0x0
	bl	SetQuestLogEvent
	pop	{r0}
	bx	r0
.Lfe86:
	.size	 SetUsedPkmnCenterQuestLogEvent,.Lfe86-SetUsedPkmnCenterQuestLogEvent
	.section .rodata
	.align	2, 0
	.type	 sInsideOutsidePairs,object
sInsideOutsidePairs:
	.short	0x4
	.short	0x0
	.short	0x3
	.short	0x0
	.short	0x4
	.short	0x3
	.short	0x3
	.short	0x0
	.short	0x5
	.short	0x1
	.short	0x3
	.short	0x1
	.short	0x1c
	.short	0x0
	.short	0x3
	.short	0x29
	.short	0x1c
	.short	0x0
	.short	0x3
	.short	0x2a
	.short	0x1
	.short	0x0
	.short	0xf
	.short	0x0
	.short	0x1
	.short	0x0
	.short	0xf
	.short	0x3
	.short	0x6
	.short	0x0
	.short	0x3
	.short	0x2
	.short	0x6
	.short	0x2
	.short	0x3
	.short	0x2
	.short	0x1
	.short	0x1
	.short	0x3
	.short	0x16
	.short	0x1
	.short	0x2
	.short	0x3
	.short	0x16
	.short	0x7
	.short	0x5
	.short	0x3
	.short	0x3
	.short	0x7
	.short	0x6
	.short	0x3
	.short	0x3
	.short	0x1e
	.short	0x0
	.short	0x3
	.short	0x2c
	.short	0x11
	.short	0x0
	.short	0x3
	.short	0x17
	.short	0x1
	.short	0x1e
	.short	0x3
	.short	0x17
	.short	0x1
	.short	0x20
	.short	0x3
	.short	0x18
	.short	0x9
	.short	0x3
	.short	0x3
	.short	0x5
	.short	0x9
	.short	0x6
	.short	0x3
	.short	0x5
	.short	0x1
	.short	0x5
	.short	0x3
	.short	0x5
	.short	0x1
	.short	0x24
	.short	0x3
	.short	0x14
	.short	0x1
	.short	0x26
	.short	0x3
	.short	0x1d
	.short	0x1
	.short	0x51
	.short	0x3
	.short	0x1c
	.short	0x1
	.short	0x51
	.short	0x3
	.short	0x1c
	.short	0x1
	.short	0x5f
	.short	0x3
	.short	0x1c
	.short	0x1
	.short	0x58
	.short	0x3
	.short	0x4
	.short	0x8
	.short	0x2
	.short	0x3
	.short	0x4
	.short	0x8
	.short	0x4
	.short	0x3
	.short	0x4
	.short	0x1
	.short	0x23
	.short	0x3
	.short	0x1a
	.short	0x1
	.short	0x21
	.short	0x3
	.short	0x19
	.short	0xa
	.short	0x0
	.short	0x3
	.short	0x6
	.short	0xa
	.short	0x7
	.short	0x3
	.short	0x6
	.short	0xa
	.short	0xe
	.short	0x3
	.short	0x6
	.short	0xa
	.short	0x10
	.short	0x3
	.short	0x6
	.short	0xa
	.short	0x11
	.short	0x3
	.short	0x6
	.short	0x1
	.short	0x2a
	.short	0xa
	.short	0xe
	.short	0x1
	.short	0x3f
	.short	0xb
	.short	0x0
	.short	0xb
	.short	0x3
	.short	0x3
	.short	0x7
	.short	0xb
	.short	0x7
	.short	0x3
	.short	0x7
	.short	0xe
	.short	0x2
	.short	0x3
	.short	0xa
	.short	0xe
	.short	0x3
	.short	0x3
	.short	0xa
	.short	0x1
	.short	0x2f
	.short	0x3
	.short	0xa
	.short	0x1
	.short	0x53
	.short	0x3
	.short	0x26
	.short	0x1
	.short	0x53
	.short	0x3
	.short	0x26
	.short	0x1
	.short	0x3b
	.short	0x3
	.short	0x8
	.short	0xc
	.short	0x0
	.short	0x3
	.short	0x8
	.short	0xc
	.short	0x1
	.short	0x3
	.short	0x8
	.short	0x1
	.short	0x27
	.short	0x3
	.short	0x2a
	.short	0x1
	.short	0x28
	.short	0x3
	.short	0x2a
	.short	0xd
	.short	0x0
	.short	0x3
	.short	0x9
	.short	0x1
	.short	0x48
	.short	0x3
	.short	0x3
	.size	 sInsideOutsidePairs,408
.text
	.align	2, 0
	.globl	QuestLog_CheckDepartingIndoorsMap
	.type	 QuestLog_CheckDepartingIndoorsMap,function
	.thumb_func
QuestLog_CheckDepartingIndoorsMap:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
	ldr	r6, .L768
	ldr	r5, .L768+0x4
.L763:
	ldr	r3, [r6]
	mov	r1, #0x4
	ldrsb	r1, [r3, r1]
	lsl	r0, r4, #0x3
	add	r2, r0, r5
	ldrh	r0, [r2]
	cmp	r1, r0
	bne	.L762	@cond_branch
	mov	r0, #0x5
	ldrsb	r0, [r3, r0]
	ldrh	r2, [r2, #0x2]
	cmp	r0, r2
	bne	.L762	@cond_branch
	ldr	r5, .L768+0x8
	add	r0, r5, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x23
	bne	.L766	@cond_branch
	cmp	r4, #0x20
	beq	.L761	@cond_branch
.L766:
	add	r0, r5, #0
	add	r1, r4, #0
	bl	VarSet
	ldr	r0, .L768+0xc
	bl	FlagSet
	b	.L761
.L769:
	.align	2, 0
.L768:
	.word	gSaveBlock1Ptr
	.word	sInsideOutsidePairs
	.word	0x404d
	.word	0x80b
.L762:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x32
	bls	.L763	@cond_branch
.L761:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe87:
	.size	 QuestLog_CheckDepartingIndoorsMap,.Lfe87-QuestLog_CheckDepartingIndoorsMap
	.align	2, 0
	.globl	QuestLog_TryRecordDepartedLocation
	.type	 QuestLog_TryRecordDepartedLocation,function
	.thumb_func
QuestLog_TryRecordDepartedLocation:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L793
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r6, .L793+0x4
	ldr	r0, [sp, #0x4]
	and	r0, r0, r6
	ldr	r4, .L793+0x8
	and	r0, r0, r4
	str	r0, [sp, #0x4]
	ldr	r0, .L793+0xc
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB5634
	b	.L770	@long jump
.LCB5634:
	cmp	r5, #0x5
	bne	.L772	@cond_branch
	ldr	r0, .L793+0x10
	ldr	r2, [r0]
	mov	r1, #0x4
	ldrsb	r1, [r2, r1]
	add	r7, r0, #0
	cmp	r1, #0xf
	bne	.L777	@cond_branch
	mov	r0, #0x5
	ldrsb	r0, [r2, r0]
	cmp	r0, #0
	beq	.L774	@cond_branch
	cmp	r0, #0x3
	bne	.L777	@cond_branch
.L774:
	ldr	r1, [sp, #0x4]
	and	r1, r1, r6
	mov	r0, #0x66
	orr	r1, r1, r0
	str	r1, [sp, #0x4]
	mov	r0, #0x5
	ldrsb	r0, [r2, r0]
	cmp	r0, #0
	bne	.L775	@cond_branch
	lsl	r0, r5, #0x8
	b	.L791
.L794:
	.align	2, 0
.L793:
	.word	0x404d
	.word	-0x100
	.word	-0xff01
	.word	0x80b
	.word	gSaveBlock1Ptr
.L775:
	mov	r0, #0xc0
	lsl	r0, r0, #0x3
.L791:
	and	r1, r1, r4
	orr	r1, r1, r0
	str	r1, [sp, #0x4]
	add	r1, sp, #0x4
	mov	r0, #0x23
	b	.L792
.L772:
	ldr	r7, .L795
	cmp	r5, #0x3
	bne	.L777	@cond_branch
	ldr	r1, [r7]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	cmp	r0, #0x3
	bne	.L777	@cond_branch
	ldrb	r0, [r1, #0x5]
	sub	r0, r0, #0x29
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L777	@cond_branch
	ldr	r1, .L795+0x4
	ldrh	r0, [r1, #0x18]
	ldrh	r1, [r1, #0x1a]
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r0, [r0, #0x14]
	add	r1, sp, #0x4
	strb	r0, [r1]
	ldr	r0, [r7]
	ldrb	r0, [r0, #0x5]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r6, r1, #0
	cmp	r0, #0x29
	bne	.L780	@cond_branch
	strb	r5, [r6, #0x1]
	b	.L781
.L796:
	.align	2, 0
.L795:
	.word	gSaveBlock1Ptr
	.word	sInsideOutsidePairs
.L780:
	mov	r0, #0x4
	strb	r0, [r6, #0x1]
.L781:
	mov	r0, #0x23
	add	r1, r6, #0
.L792:
	bl	SetQuestLogEvent
	ldr	r0, .L797
	bl	FlagClear
	b	.L770
.L798:
	.align	2, 0
.L797:
	.word	0x80b
.L777:
	ldr	r3, [r7]
	mov	r2, #0x4
	ldrsb	r2, [r3, r2]
	ldr	r1, .L799
	lsl	r0, r5, #0x3
	add	r1, r0, r1
	ldrh	r0, [r1, #0x4]
	cmp	r2, r0
	bne	.L770	@cond_branch
	mov	r0, #0x5
	ldrsb	r0, [r3, r0]
	ldrh	r2, [r1, #0x6]
	cmp	r0, r2
	bne	.L770	@cond_branch
	ldrh	r0, [r1]
	ldrh	r1, [r1, #0x2]
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r1, [r0, #0x14]
	add	r0, sp, #0x4
	strb	r1, [r0]
	strb	r5, [r0, #0x1]
	add	r6, r0, #0
	cmp	r5, #0x16
	bne	.L783	@cond_branch
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0xf
	bne	.L789	@cond_branch
	mov	r2, #0x0
	ldrsh	r0, [r4, r2]
	cmp	r0, #0x1a
	beq	.L786	@cond_branch
	b	.L789
.L800:
	.align	2, 0
.L799:
	.word	sInsideOutsidePairs
.L783:
	cmp	r5, #0x2a
	bne	.L786	@cond_branch
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x43
	bne	.L789	@cond_branch
	mov	r2, #0x0
	ldrsh	r0, [r4, r2]
	cmp	r0, #0xf
	beq	.L786	@cond_branch
.L789:
	ldrb	r0, [r6, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r6, #0x1]
.L786:
	mov	r0, #0x23
	add	r1, r6, #0
	bl	SetQuestLogEvent
	ldr	r4, .L801
	add	r0, r4, #0
	bl	FlagClear
	cmp	r5, #0x23
	bne	.L770	@cond_branch
	ldr	r0, .L801+0x4
	mov	r1, #0x20
	bl	VarSet
	add	r0, r4, #0
	bl	FlagSet
.L770:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L802:
	.align	2, 0
.L801:
	.word	0x80b
	.word	0x404d
.Lfe88:
	.size	 QuestLog_TryRecordDepartedLocation,.Lfe88-QuestLog_TryRecordDepartedLocation
	.section .rodata
	.align	2, 0
.LC195:
	.ascii	"C:/WORK/POKeFRLG/src/pm_lgfr_ose/source/scr_tool.c\000"
	.align	2, 0
.LC197:
	.ascii	"0\000"
.text
	.align	2, 0
	.globl	GetMysteryGiftCardStat
	.type	 GetMysteryGiftCardStat,function
	.thumb_func
GetMysteryGiftCardStat:
	push	{lr}
	ldr	r0, .L814
	ldrh	r0, [r0]
	cmp	r0, #0x4
	bhi	.L810	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L814+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L815:
	.align	2, 0
.L814:
	.word	gSpecialVar_Result
	.word	.L811
	.align	2, 0
	.align	2, 0
.L811:
	.word	.L805
	.word	.L806
	.word	.L807
	.word	.L808
	.word	.L809
.L805:
	mov	r0, #0x3
	b	.L813
.L806:
	mov	r0, #0x4
	b	.L813
.L807:
	mov	r0, #0x0
	b	.L813
.L808:
	mov	r0, #0x1
	b	.L813
.L809:
	mov	r0, #0x2
.L813:
	bl	MysteryGift_GetCardStat
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L812
.L810:
	ldr	r0, .L816
	ldr	r1, .L816+0x4
	ldr	r2, .L816+0x8
	mov	r3, #0x1
	bl	AGBAssert
	mov	r0, #0x0
.L812:
	pop	{r1}
	bx	r1
.L817:
	.align	2, 0
.L816:
	.word	.LC195
	.word	0xf21
	.word	.LC197
.Lfe89:
	.size	 GetMysteryGiftCardStat,.Lfe89-GetMysteryGiftCardStat
	.align	2, 0
	.globl	SetPCBoxToSendMon
	.type	 SetPCBoxToSendMon,function
	.thumb_func
SetPCBoxToSendMon:
	ldr	r1, .L819
	strb	r0, [r1]
	bx	lr
.L820:
	.align	2, 0
.L819:
	.word	sPCBoxToSendMon
.Lfe90:
	.size	 SetPCBoxToSendMon,.Lfe90-SetPCBoxToSendMon
	.align	2, 0
	.globl	GetPCBoxToSendMon
	.type	 GetPCBoxToSendMon,function
	.thumb_func
GetPCBoxToSendMon:
	ldr	r0, .L822
	ldrb	r0, [r0]
	bx	lr
.L823:
	.align	2, 0
.L822:
	.word	sPCBoxToSendMon
.Lfe91:
	.size	 GetPCBoxToSendMon,.Lfe91-GetPCBoxToSendMon
	.align	2, 0
	.globl	ShouldShowBoxWasFullMessage
	.type	 ShouldShowBoxWasFullMessage,function
	.thumb_func
ShouldShowBoxWasFullMessage:
	push	{r4, r5, lr}
	ldr	r5, .L828
	add	r0, r5, #0
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L826	@cond_branch
	bl	StorageGetCurrentBox
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L828+0x4
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r4, r0
	beq	.L826	@cond_branch
	add	r0, r5, #0
	bl	FlagSet
	mov	r0, #0x1
	b	.L827
.L829:
	.align	2, 0
.L828:
	.word	0x846
	.word	0x4037
.L826:
	mov	r0, #0x0
.L827:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe92:
	.size	 ShouldShowBoxWasFullMessage,.Lfe92-ShouldShowBoxWasFullMessage
	.align	2, 0
	.globl	IsDestinationBoxFull
	.type	 IsDestinationBoxFull,function
	.thumb_func
IsDestinationBoxFull:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L845
	bl	VarGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	SetPCBoxToSendMon
	bl	StorageGetCurrentBox
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L831:
	mov	r5, #0x0
	lsl	r6, r4, #0x18
	lsl	r7, r4, #0x10
.L837:
	lsl	r1, r5, #0x18
	lsr	r1, r1, #0x18
	lsr	r0, r6, #0x18
	bl	GetBoxedMonPtr
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetBoxMonData
	cmp	r0, #0
	bne	.L836	@cond_branch
	bl	GetPCBoxToSendMon
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r4
	beq	.L839	@cond_branch
	ldr	r0, .L845+0x4
	bl	FlagClear
.L839:
	ldr	r0, .L845
	lsr	r1, r7, #0x10
	bl	VarSet
	bl	ShouldShowBoxWasFullMessage
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L844
.L846:
	.align	2, 0
.L845:
	.word	0x4037
	.word	0x846
.L836:
	add	r5, r5, #0x1
	cmp	r5, #0x1d
	ble	.L837	@cond_branch
	add	r4, r4, #0x1
	cmp	r4, #0xe
	bne	.L833	@cond_branch
	mov	r4, #0x0
.L833:
	bl	StorageGetCurrentBox
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	bne	.L831	@cond_branch
	mov	r0, #0x0
.L844:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe93:
	.size	 IsDestinationBoxFull,.Lfe93-IsDestinationBoxFull
	.globl	sPokeCenter1FMaps
	.section .rodata
	.align	1, 0
	.type	 sPokeCenter1FMaps,object
sPokeCenter1FMaps:
	.short	0x504
	.short	0x605
	.short	0x703
	.short	0x800
	.short	0x901
	.short	0xa0c
	.short	0xb05
	.short	0xc05
	.short	0xd00
	.short	0xe06
	.short	0x1000
	.short	0x1500
	.short	0x2000
	.short	0x2102
	.short	0x2201
	.short	0x2301
	.short	0x2400
	.short	0x1f03
	.short	0x2500
	.short	0x4
	.short	0xffff
	.size	 sPokeCenter1FMaps,42
.text
	.align	2, 0
	.globl	UsedPokemonCenterWarp
	.type	 UsedPokemonCenterWarp,function
	.thumb_func
UsedPokemonCenterWarp:
	push	{r4, lr}
	ldr	r0, .L855
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r1, r1, #0x8
	ldrb	r0, [r0, #0x1]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldr	r2, .L855+0x4
	ldrh	r0, [r2]
	ldr	r1, .L855+0x8
	cmp	r0, r1
	beq	.L849	@cond_branch
	add	r4, r1, #0
	add	r1, r2, #0
.L851:
	ldrh	r0, [r2]
	cmp	r0, r3
	bne	.L850	@cond_branch
	mov	r0, #0x1
	b	.L854
.L856:
	.align	2, 0
.L855:
	.word	gLastUsedWarp
	.word	sPokeCenter1FMaps
	.word	0xffff
.L850:
	add	r1, r1, #0x2
	add	r2, r2, #0x2
	ldrh	r0, [r1]
	cmp	r0, r4
	bne	.L851	@cond_branch
.L849:
	mov	r0, #0x0
.L854:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe94:
	.size	 UsedPokemonCenterWarp,.Lfe94-UsedPokemonCenterWarp
	.align	2, 0
	.globl	BufferTMHMMoveName
	.type	 BufferTMHMMoveName,function
	.thumb_func
BufferTMHMMoveName:
	push	{r4, lr}
	ldr	r1, .L861
	ldr	r2, .L861+0x4
	add	r0, r2, #0
	ldrh	r2, [r1]
	add	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x39
	bls	.L858	@cond_branch
	mov	r0, #0x0
	b	.L860
.L862:
	.align	2, 0
.L861:
	.word	gSpecialVar_0x8004
	.word	-0x121
.L858:
	ldr	r4, .L863
	ldrh	r0, [r1]
	bl	ItemIdToBattleMoveId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xd
	mul	r1, r1, r0
	ldr	r0, .L863+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	mov	r0, #0x1
.L860:
	pop	{r4}
	pop	{r1}
	bx	r1
.L864:
	.align	2, 0
.L863:
	.word	gStringVar1
	.word	gMoveNames
.Lfe95:
	.size	 BufferTMHMMoveName,.Lfe95-BufferTMHMMoveName
	.align	2, 0
	.globl	RunMassageCooldownStepCounter
	.type	 RunMassageCooldownStepCounter,function
	.thumb_func
RunMassageCooldownStepCounter:
	push	{r4, lr}
	ldr	r4, .L867
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, .L867+0x4
	cmp	r1, r0
	bhi	.L866	@cond_branch
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	VarSet
.L866:
	pop	{r4}
	pop	{r0}
	bx	r0
.L868:
	.align	2, 0
.L867:
	.word	0x4025
	.word	0x1f3
.Lfe96:
	.size	 RunMassageCooldownStepCounter,.Lfe96-RunMassageCooldownStepCounter
	.align	2, 0
	.globl	DaisyMassageServices
	.type	 DaisyMassageServices,function
	.thumb_func
DaisyMassageServices:
	push	{lr}
	ldr	r0, .L870
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L870+0x4
	add	r0, r0, r1
	mov	r1, #0x6
	bl	AdjustFriendship
	ldr	r0, .L870+0x8
	mov	r1, #0x0
	bl	VarSet
	pop	{r0}
	bx	r0
.L871:
	.align	2, 0
.L870:
	.word	gSpecialVar_0x8004
	.word	gPlayerParty
	.word	0x4025
.Lfe97:
	.size	 DaisyMassageServices,.Lfe97-DaisyMassageServices
	.section .rodata
	.align	1, 0
	.type	 sEliteFourLightingPalettes,object
sEliteFourLightingPalettes:
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x65c5
	.short	0x354a
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x65c5
	.short	0x7fb0
	.short	0x4ca0
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x354a
	.short	0x354a
	.short	0x65c5
	.short	0x7fb0
	.short	0x72aa
	.short	0x5d00
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x354a
	.short	0x65c5
	.short	0x7fb0
	.short	0x72aa
	.short	0x65c5
	.short	0x65c5
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x65c5
	.short	0x7fb0
	.short	0x72aa
	.short	0x65c5
	.short	0x5d00
	.short	0x72aa
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x7fb0
	.short	0x72aa
	.short	0x65c5
	.short	0x5d00
	.short	0x4ca0
	.short	0x7fb0
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x72aa
	.short	0x65c5
	.short	0x5d00
	.short	0x4ca0
	.short	0x354a
	.short	0x76cb
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x65c5
	.short	0x5d00
	.short	0x4ca0
	.short	0x354a
	.short	0x354a
	.short	0x65c5
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x5d00
	.short	0x4ca0
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x5d00
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x4ca0
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x4ca0
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x7fb0
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x32b5
	.short	0x2652
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.size	 sEliteFourLightingPalettes,384
	.align	1, 0
	.type	 sChampionRoomLightingPalettes,object
sChampionRoomLightingPalettes:
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x72aa
	.short	0x65c5
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x354a
	.short	0x354a
	.short	0x72aa
	.short	0x65c5
	.short	0x7fb0
	.short	0x72aa
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x72aa
	.short	0x65c5
	.short	0x7fb0
	.short	0x72aa
	.short	0x72aa
	.short	0x65c5
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x7fb0
	.short	0x72aa
	.short	0x72aa
	.short	0x65c5
	.short	0x65c5
	.short	0x5d00
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x72aa
	.short	0x65c5
	.short	0x65c5
	.short	0x5d00
	.short	0x5d00
	.short	0x354a
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x65c5
	.short	0x5d00
	.short	0x5d00
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x13f
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x5bff
	.short	0x3af7
	.short	0x5d00
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x0
	.short	0x354a
	.short	0x3def
	.short	0x7fb0
	.short	0x435f
	.short	0x329c
	.short	0x25d8
	.short	0x2154
	.short	0x32b5
	.short	0x2652
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.short	0x354a
	.size	 sChampionRoomLightingPalettes,288
	.type	 sEliteFourLightingTimers,object
sEliteFourLightingTimers:
	.byte	0x28
	.byte	0xc
	.byte	0xc
	.byte	0xc
	.byte	0xc
	.byte	0xc
	.byte	0xc
	.byte	0xc
	.byte	0xc
	.byte	0xc
	.byte	0xc
	.size	 sEliteFourLightingTimers,11
	.type	 sChampionRoomLightingTimers,object
sChampionRoomLightingTimers:
	.byte	0x14
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.size	 sChampionRoomLightingTimers,8
.text
	.align	2, 0
	.globl	DoPokemonLeagueLightingEffect
	.type	 DoPokemonLeagueLightingEffect,function
	.thumb_func
DoPokemonLeagueLightingEffect:
	push	{r4, r5, r6, lr}
	ldr	r0, .L877
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r5, r1, #0x3
	ldr	r6, .L877+0x4
	add	r4, r5, r6
	mov	r0, #0x3
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L873	@cond_branch
	add	r0, r6, #0
	sub	r0, r0, #0x8
	add	r0, r5, r0
	ldr	r1, .L877+0x8
	str	r1, [r0]
	b	.L874
.L878:
	.align	2, 0
.L877:
	.word	Task_RunPokemonLeagueLightingEffect
	.word	gTasks+0x8
	.word	Task_CancelPokemonLeagueLightingEffect
.L873:
	ldr	r0, .L879
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L879+0x4
	cmp	r1, r0
	bne	.L875	@cond_branch
	ldr	r0, .L879+0x8
	ldrb	r0, [r0]
	strh	r0, [r4]
	mov	r0, #0x8
	strh	r0, [r4, #0x4]
	ldr	r0, .L879+0xc
	mov	r1, #0x70
	mov	r2, #0x20
	bl	LoadPalette
	b	.L876
.L880:
	.align	2, 0
.L879:
	.word	gSaveBlock1Ptr
	.word	0x4f01
	.word	sChampionRoomLightingTimers
	.word	sChampionRoomLightingPalettes
.L875:
	ldr	r0, .L881
	ldrb	r0, [r0]
	strh	r0, [r4]
	mov	r0, #0xb
	strh	r0, [r4, #0x4]
	ldr	r0, .L881+0x4
	mov	r1, #0x70
	mov	r2, #0x20
	bl	LoadPalette
.L876:
	mov	r0, #0x0
	strh	r0, [r4, #0x2]
	mov	r0, #0x7
	mov	r1, #0x1
	bl	ApplyGlobalTintToPaletteSlot
.L874:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L882:
	.align	2, 0
.L881:
	.word	sEliteFourLightingTimers
	.word	sEliteFourLightingPalettes
.Lfe98:
	.size	 DoPokemonLeagueLightingEffect,.Lfe98-DoPokemonLeagueLightingEffect
	.align	2, 0
	.type	 Task_RunPokemonLeagueLightingEffect,function
	.thumb_func
Task_RunPokemonLeagueLightingEffect:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L888
	add	r4, r1, r0
	ldr	r0, .L888+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L884	@cond_branch
	mov	r0, #0x2
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L884	@cond_branch
	mov	r0, #0x5
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L884	@cond_branch
	ldr	r0, .L888+0x8
	ldrb	r0, [r0]
	cmp	r0, #0x3
	beq	.L884	@cond_branch
	ldrh	r0, [r4]
	sub	r0, r0, #0x1
	strh	r0, [r4]
	lsl	r0, r0, #0x10
	asr	r2, r0, #0x10
	cmp	r2, #0
	bne	.L884	@cond_branch
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r3, #0x4
	ldrsh	r1, [r4, r3]
	cmp	r0, r1
	bne	.L885	@cond_branch
	strh	r2, [r4, #0x2]
.L885:
	ldr	r0, .L888+0xc
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L888+0x10
	cmp	r1, r0
	bne	.L886	@cond_branch
	ldr	r1, .L888+0x14
	mov	r2, #0x2
	ldrsh	r0, [r4, r2]
	add	r0, r0, r1
	ldrb	r0, [r0]
	strh	r0, [r4]
	mov	r3, #0x2
	ldrsh	r0, [r4, r3]
	lsl	r0, r0, #0x5
	ldr	r1, .L888+0x18
	add	r0, r0, r1
	mov	r1, #0x70
	mov	r2, #0x20
	bl	LoadPalette
	b	.L887
.L889:
	.align	2, 0
.L888:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	gGlobalFieldTintMode
	.word	gSaveBlock1Ptr
	.word	0x4f01
	.word	sChampionRoomLightingTimers
	.word	sChampionRoomLightingPalettes
.L886:
	ldr	r1, .L890
	mov	r2, #0x2
	ldrsh	r0, [r4, r2]
	add	r0, r0, r1
	ldrb	r0, [r0]
	strh	r0, [r4]
	mov	r3, #0x2
	ldrsh	r0, [r4, r3]
	lsl	r0, r0, #0x5
	ldr	r1, .L890+0x4
	add	r0, r0, r1
	mov	r1, #0x70
	mov	r2, #0x20
	bl	LoadPalette
.L887:
	mov	r0, #0x7
	mov	r1, #0x1
	bl	ApplyGlobalTintToPaletteSlot
.L884:
	pop	{r4}
	pop	{r0}
	bx	r0
.L891:
	.align	2, 0
.L890:
	.word	sEliteFourLightingTimers
	.word	sEliteFourLightingPalettes
.Lfe99:
	.size	 Task_RunPokemonLeagueLightingEffect,.Lfe99-Task_RunPokemonLeagueLightingEffect
	.align	2, 0
	.type	 Task_CancelPokemonLeagueLightingEffect,function
	.thumb_func
Task_CancelPokemonLeagueLightingEffect:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L893	@cond_branch
	ldr	r0, .L897
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L897+0x4
	cmp	r1, r0
	bne	.L894	@cond_branch
	ldr	r0, .L897+0x8
	mov	r1, #0x70
	mov	r2, #0x20
	bl	LoadPalette
	b	.L895
.L898:
	.align	2, 0
.L897:
	.word	gSaveBlock1Ptr
	.word	0x4f01
	.word	sChampionRoomLightingPalettes+0x100
.L894:
	ldr	r0, .L899
	mov	r1, #0x70
	mov	r2, #0x20
	bl	LoadPalette
.L895:
	mov	r0, #0x7
	mov	r1, #0x1
	bl	ApplyGlobalTintToPaletteSlot
	ldr	r0, .L899+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L896	@cond_branch
	mov	r0, #0x80
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
.L896:
	add	r0, r4, #0
	bl	DestroyTask
.L893:
	pop	{r4}
	pop	{r0}
	bx	r0
.L900:
	.align	2, 0
.L899:
	.word	sEliteFourLightingPalettes+0x160
	.word	gPaletteFade
.Lfe100:
	.size	 Task_CancelPokemonLeagueLightingEffect,.Lfe100-Task_CancelPokemonLeagueLightingEffect
	.align	2, 0
	.globl	StopPokemonLeagueLightingEffectTask
	.type	 StopPokemonLeagueLightingEffectTask,function
	.thumb_func
StopPokemonLeagueLightingEffectTask:
	push	{r4, lr}
	ldr	r4, .L903
	add	r0, r4, #0
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L902	@cond_branch
	add	r0, r4, #0
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L902:
	pop	{r4}
	pop	{r0}
	bx	r0
.L904:
	.align	2, 0
.L903:
	.word	Task_RunPokemonLeagueLightingEffect
.Lfe101:
	.size	 StopPokemonLeagueLightingEffectTask,.Lfe101-StopPokemonLeagueLightingEffectTask
	.section .rodata
	.type	 sCapeBrinkCompatibleSpecies,object
sCapeBrinkCompatibleSpecies:
	.byte	0x3
	.byte	0x6
	.byte	0x9
	.size	 sCapeBrinkCompatibleSpecies,3
.text
	.align	2, 0
	.globl	CapeBrinkGetMoveToTeachLeadPokemon
	.type	 CapeBrinkGetMoveToTeachLeadPokemon,function
	.thumb_func
CapeBrinkGetMoveToTeachLeadPokemon:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r7, #0x0
	mov	r6, #0x0
	bl	GetLeadMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r0, .L928
	mov	r1, r8
	strh	r1, [r0]
	mov	r4, #0x0
	mov	r0, #0x64
	mov	r5, r8
	mul	r5, r5, r0
	ldr	r0, .L928+0x4
	mov	r9, r0
	b	.L906
.L929:
	.align	2, 0
.L928:
	.word	gSpecialVar_0x8007
	.word	gPlayerParty
.L908:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L906:
	cmp	r4, #0x2
	bhi	.L907	@cond_branch
	mov	r1, r9
	add	r0, r5, r1
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	ldr	r1, .L930
	add	r1, r4, r1
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L908	@cond_branch
	add	r7, r4, #0
.L907:
	cmp	r4, #0x3
	beq	.L926	@cond_branch
	mov	r0, #0x64
	mov	r1, r8
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r1, .L930+0x4
	add	r0, r0, r1
	mov	r1, #0x20
	bl	GetMonData
	cmp	r0, #0xff
	bne	.L926	@cond_branch
	cmp	r7, #0
	bne	.L914	@cond_branch
	ldr	r0, .L930+0x8
	ldr	r1, .L930+0xc
	bl	StringCopy
	ldr	r1, .L930+0x10
	mov	r0, #0xf
	strh	r0, [r1]
	ldr	r0, .L930+0x14
	b	.L927
.L931:
	.align	2, 0
.L930:
	.word	sCapeBrinkCompatibleSpecies
	.word	gPlayerParty
	.word	gStringVar2
	.word	gMoveNames+0x112a
	.word	gSpecialVar_0x8005
	.word	0x2de
.L914:
	cmp	r7, #0x1
	bne	.L917	@cond_branch
	ldr	r0, .L932
	ldr	r1, .L932+0x4
	bl	StringCopy
	ldr	r1, .L932+0x8
	mov	r0, #0x10
	strh	r0, [r1]
	ldr	r0, .L932+0xc
	b	.L927
.L933:
	.align	2, 0
.L932:
	.word	gStringVar2
	.word	gMoveNames+0xf97
	.word	gSpecialVar_0x8005
	.word	0x2df
.L917:
	ldr	r0, .L934
	ldr	r1, .L934+0x4
	bl	StringCopy
	ldr	r1, .L934+0x8
	mov	r0, #0x11
	strh	r0, [r1]
	mov	r0, #0xb8
	lsl	r0, r0, #0x2
.L927:
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L916	@cond_branch
.L926:
	mov	r0, #0x0
	b	.L925
.L935:
	.align	2, 0
.L934:
	.word	gStringVar2
	.word	gMoveNames+0xfa4
	.word	gSpecialVar_0x8005
.L916:
	mov	r0, #0x64
	mov	r1, r8
	mul	r1, r1, r0
	ldr	r0, .L936
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0xd
	bl	GetMonData
	cmp	r0, #0
	beq	.L921	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L921:
	add	r0, r4, #0
	mov	r1, #0xe
	bl	GetMonData
	cmp	r0, #0
	beq	.L922	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L922:
	add	r0, r4, #0
	mov	r1, #0xf
	bl	GetMonData
	cmp	r0, #0
	beq	.L923	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L923:
	add	r0, r4, #0
	mov	r1, #0x10
	bl	GetMonData
	cmp	r0, #0
	beq	.L924	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L924:
	ldr	r0, .L936+0x4
	strh	r6, [r0]
	mov	r0, #0x1
.L925:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L937:
	.align	2, 0
.L936:
	.word	gPlayerParty
	.word	gSpecialVar_0x8006
.Lfe102:
	.size	 CapeBrinkGetMoveToTeachLeadPokemon,.Lfe102-CapeBrinkGetMoveToTeachLeadPokemon
	.align	2, 0
	.globl	HasLearnedAllMovesFromCapeBrinkTutor
	.type	 HasLearnedAllMovesFromCapeBrinkTutor,function
	.thumb_func
HasLearnedAllMovesFromCapeBrinkTutor:
	push	{r4, lr}
	mov	r4, #0x0
	ldr	r0, .L949
	ldrh	r0, [r0]
	cmp	r0, #0xf
	bne	.L939	@cond_branch
	ldr	r0, .L949+0x4
	bl	FlagSet
	b	.L940
.L950:
	.align	2, 0
.L949:
	.word	gSpecialVar_0x8005
	.word	0x2de
.L939:
	cmp	r0, #0x10
	bne	.L941	@cond_branch
	ldr	r0, .L951
	bl	FlagSet
	b	.L940
.L952:
	.align	2, 0
.L951:
	.word	0x2df
.L941:
	mov	r0, #0xb8
	lsl	r0, r0, #0x2
	bl	FlagSet
.L940:
	ldr	r0, .L953
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L943	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L943:
	ldr	r0, .L953+0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L944	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L944:
	mov	r0, #0xb8
	lsl	r0, r0, #0x2
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L945	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L945:
	cmp	r4, #0x3
	beq	.L946	@cond_branch
	mov	r0, #0x0
	b	.L948
.L954:
	.align	2, 0
.L953:
	.word	0x2de
	.word	0x2df
.L946:
	mov	r0, #0x1
.L948:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe103:
	.size	 HasLearnedAllMovesFromCapeBrinkTutor,.Lfe103-HasLearnedAllMovesFromCapeBrinkTutor
	.align	2, 0
	.globl	CutMoveRuinValleyCheck
	.type	 CutMoveRuinValleyCheck,function
	.thumb_func
CutMoveRuinValleyCheck:
	push	{lr}
	ldr	r0, .L959
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L956	@cond_branch
	ldr	r0, .L959+0x4
	ldr	r2, [r0]
	ldrh	r1, [r2, #0x4]
	ldr	r0, .L959+0x8
	cmp	r1, r0
	bne	.L956	@cond_branch
	ldr	r1, [r2]
	ldr	r0, .L959+0xc
	cmp	r1, r0
	bne	.L956	@cond_branch
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L956	@cond_branch
	mov	r0, #0x1
	b	.L958
.L960:
	.align	2, 0
.L959:
	.word	0x2e3
	.word	gSaveBlock1Ptr
	.word	0x3d03
	.word	0x190018
.L956:
	mov	r0, #0x0
.L958:
	pop	{r1}
	bx	r1
.Lfe104:
	.size	 CutMoveRuinValleyCheck,.Lfe104-CutMoveRuinValleyCheck
	.align	2, 0
	.globl	CutMoveOpenDottedHoleDoor
	.type	 CutMoveOpenDottedHoleDoor,function
	.thumb_func
CutMoveOpenDottedHoleDoor:
	push	{lr}
	mov	r2, #0xd6
	lsl	r2, r2, #0x2
	mov	r0, #0x1f
	mov	r1, #0x1f
	bl	MapGridSetMetatileIdAt
	bl	DrawWholeMapView
	mov	r0, #0x14
	bl	PlaySE
	ldr	r0, .L962
	bl	FlagSet
	bl	UnlockPlayerFieldControls
	pop	{r0}
	bx	r0
.L963:
	.align	2, 0
.L962:
	.word	0x2e3
.Lfe105:
	.size	 CutMoveOpenDottedHoleDoor,.Lfe105-CutMoveOpenDottedHoleDoor
	.section .rodata
	.align	1, 0
	.type	 sDeoxysObjectPals,object
sDeoxysObjectPals:
	.short	0x626d
	.short	0x1084
	.short	0x294a
	.short	0x4631
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x626d
	.short	0x1085
	.short	0x294a
	.short	0x4631
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1086
	.short	0x294b
	.short	0x4652
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1088
	.short	0x294e
	.short	0x4653
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1089
	.short	0x294f
	.short	0x4674
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x108c
	.short	0x2951
	.short	0x4675
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x108c
	.short	0x2952
	.short	0x4696
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x108d
	.short	0x2953
	.short	0x4697
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x108f
	.short	0x2955
	.short	0x4ab8
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x1090
	.short	0x2956
	.short	0x4ab9
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x626d
	.short	0x1099
	.short	0x295f
	.short	0x4f3f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sDeoxysObjectPals,352
	.type	 sDeoxysCoords,object
sDeoxysCoords:
	.byte	0xf
	.byte	0xc
	.byte	0xb
	.byte	0xe
	.byte	0xf
	.byte	0x8
	.byte	0x13
	.byte	0xe
	.byte	0xc
	.byte	0xb
	.byte	0x12
	.byte	0xb
	.byte	0xf
	.byte	0xe
	.byte	0xb
	.byte	0xe
	.byte	0x13
	.byte	0xe
	.byte	0xf
	.byte	0xf
	.byte	0xf
	.byte	0xa
	.size	 sDeoxysCoords,22
	.type	 sDeoxysStepCaps,object
sDeoxysStepCaps:
	.byte	0x4
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x6
	.byte	0x3
	.byte	0x3
	.size	 sDeoxysStepCaps,10
.text
	.align	2, 0
	.globl	DoDeoxysTriangleInteraction
	.type	 DoDeoxysTriangleInteraction,function
	.thumb_func
DoDeoxysTriangleInteraction:
	push	{lr}
	ldr	r0, .L965
	mov	r1, #0x8
	bl	CreateTask
	pop	{r0}
	bx	r0
.L966:
	.align	2, 0
.L965:
	.word	Task_DoDeoxysTriangleInteraction
.Lfe106:
	.size	 DoDeoxysTriangleInteraction,.Lfe106-DoDeoxysTriangleInteraction
	.align	2, 0
	.type	 Task_DoDeoxysTriangleInteraction,function
	.thumb_func
Task_DoDeoxysTriangleInteraction:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L976
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L968	@cond_branch
	ldr	r1, .L976+0x4
	mov	r0, #0x3
	b	.L974
.L977:
	.align	2, 0
.L976:
	.word	0x84b
	.word	gSpecialVar_Result
.L968:
	ldr	r0, .L978
	mov	r8, r0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r4, .L978+0x4
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	bl	VarSet
	cmp	r5, #0
	beq	.L970	@cond_branch
	ldr	r0, .L978+0x8
	sub	r1, r5, #0x1
	add	r1, r1, r0
	ldrb	r0, [r1]
	cmp	r0, r6
	bcs	.L970	@cond_branch
	mov	r0, #0x0
	bl	MoveDeoxysObject
	mov	r0, r8
	mov	r1, #0x0
	bl	VarSet
	ldr	r1, .L978+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	b	.L975
.L979:
	.align	2, 0
.L978:
	.word	0x403e
	.word	0x4026
	.word	sDeoxysStepCaps
	.word	gSpecialVar_Result
.L970:
	cmp	r5, #0xa
	bne	.L972	@cond_branch
	ldr	r0, .L980
	bl	FlagSet
	ldr	r1, .L980+0x4
	mov	r0, #0x2
.L974:
	strh	r0, [r1]
	bl	ScriptContext_Enable
.L975:
	add	r0, r7, #0
	bl	DestroyTask
	b	.L969
.L981:
	.align	2, 0
.L980:
	.word	0x84b
	.word	gSpecialVar_Result
.L972:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	MoveDeoxysObject
	ldr	r0, .L982
	add	r1, r5, #0
	bl	VarSet
	ldr	r1, .L982+0x4
	mov	r0, #0x1
	strh	r0, [r1]
	add	r0, r7, #0
	bl	DestroyTask
.L969:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L983:
	.align	2, 0
.L982:
	.word	0x403e
	.word	gSpecialVar_Result
.Lfe107:
	.size	 Task_DoDeoxysTriangleInteraction,.Lfe107-Task_DoDeoxysTriangleInteraction
	.align	2, 0
	.type	 MoveDeoxysObject,function
	.thumb_func
MoveDeoxysObject:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x5
	ldr	r1, .L990
	add	r0, r0, r1
	mov	r1, #0xd0
	lsl	r1, r1, #0x1
	mov	r2, #0x8
	bl	LoadPalette
	mov	r0, #0xa
	bl	ApplyGlobalFieldPaletteTint
	ldr	r0, .L990+0x4
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x5]
	ldrb	r2, [r0, #0x4]
	mov	r0, #0x1
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	cmp	r4, #0
	bne	.L985	@cond_branch
	mov	r0, #0xbd
	bl	PlaySE
	b	.L986
.L991:
	.align	2, 0
.L990:
	.word	sDeoxysObjectPals
	.word	gSaveBlock1Ptr
.L985:
	mov	r0, #0xfd
	bl	PlaySE
.L986:
	ldr	r0, .L992
	mov	r1, #0x8
	bl	CreateTask
	ldr	r3, .L992+0x4
	mov	r0, #0x1
	str	r0, [r3]
	mov	r0, #0x38
	str	r0, [r3, #0x4]
	mov	r0, #0x2
	str	r0, [r3, #0x8]
	ldr	r0, .L992+0x8
	lsl	r2, r4, #0x1
	add	r1, r2, r0
	ldrb	r1, [r1]
	str	r1, [r3, #0xc]
	add	r0, r0, #0x1
	add	r0, r2, r0
	ldrb	r0, [r0]
	str	r0, [r3, #0x10]
	add	r5, r2, #0
	cmp	r4, #0
	bne	.L987	@cond_branch
	mov	r0, #0x3c
	b	.L989
.L993:
	.align	2, 0
.L992:
	.word	Task_WaitDeoxysFieldEffect
	.word	gFieldEffectArguments
	.word	sDeoxysCoords
.L987:
	mov	r0, #0x5
.L989:
	str	r0, [r3, #0x14]
	mov	r0, #0x43
	bl	FieldEffectStart
	ldr	r0, .L994
	add	r1, r5, r0
	ldrb	r1, [r1]
	add	r0, r0, #0x1
	add	r0, r5, r0
	ldrb	r2, [r0]
	mov	r0, #0x1
	bl	SetObjEventTemplateCoords
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L995:
	.align	2, 0
.L994:
	.word	sDeoxysCoords
.Lfe108:
	.size	 MoveDeoxysObject,.Lfe108-MoveDeoxysObject
	.align	2, 0
	.type	 Task_WaitDeoxysFieldEffect,function
	.thumb_func
Task_WaitDeoxysFieldEffect:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, #0x43
	bl	FieldEffectActiveListContains
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L997	@cond_branch
	bl	ScriptContext_Enable
	add	r0, r4, #0
	bl	DestroyTask
.L997:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe109:
	.size	 Task_WaitDeoxysFieldEffect,.Lfe109-Task_WaitDeoxysFieldEffect
	.align	2, 0
	.globl	IncrementBirthIslandRockStepCount
	.type	 IncrementBirthIslandRockStepCount,function
	.thumb_func
IncrementBirthIslandRockStepCount:
	push	{r4, lr}
	ldr	r4, .L1002
	add	r0, r4, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r0, .L1002+0x4
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L1002+0x8
	cmp	r1, r0
	bne	.L999	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x63
	bls	.L1000	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	VarSet
	b	.L999
.L1003:
	.align	2, 0
.L1002:
	.word	0x4026
	.word	gSaveBlock1Ptr
	.word	0x3802
.L1000:
	add	r0, r4, #0
	add	r1, r2, #0
	bl	VarSet
.L999:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe110:
	.size	 IncrementBirthIslandRockStepCount,.Lfe110-IncrementBirthIslandRockStepCount
	.align	2, 0
	.globl	SetDeoxysTrianglePalette
	.type	 SetDeoxysTrianglePalette,function
	.thumb_func
SetDeoxysTrianglePalette:
	push	{lr}
	ldr	r0, .L1005
	bl	VarGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x13
	ldr	r1, .L1005+0x4
	add	r0, r0, r1
	mov	r1, #0xd0
	lsl	r1, r1, #0x1
	mov	r2, #0x8
	bl	LoadPalette
	mov	r0, #0xa
	bl	ApplyGlobalFieldPaletteTint
	pop	{r0}
	bx	r0
.L1006:
	.align	2, 0
.L1005:
	.word	0x403e
	.word	sDeoxysObjectPals
.Lfe111:
	.size	 SetDeoxysTrianglePalette,.Lfe111-SetDeoxysTrianglePalette
	.align	2, 0
	.globl	IsBadEggInParty
	.type	 IsBadEggInParty,function
	.thumb_func
IsBadEggInParty:
	push	{r4, r5, lr}
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	cmp	r4, r5
	bcs	.L1009	@cond_branch
.L1011:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L1015
	add	r0, r0, r1
	mov	r1, #0x4
	bl	GetMonData
	cmp	r0, #0x1
	bne	.L1010	@cond_branch
	mov	r0, #0x1
	b	.L1014
.L1016:
	.align	2, 0
.L1015:
	.word	gPlayerParty
.L1010:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r5
	bcc	.L1011	@cond_branch
.L1009:
	mov	r0, #0x0
.L1014:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe112:
	.size	 IsBadEggInParty,.Lfe112-IsBadEggInParty
	.align	2, 0
	.globl	IsPlayerNotInTrainerTowerLobby
	.type	 IsPlayerNotInTrainerTowerLobby,function
	.thumb_func
IsPlayerNotInTrainerTowerLobby:
	push	{lr}
	ldr	r0, .L1021
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L1021+0x4
	cmp	r1, r0
	beq	.L1018	@cond_branch
	mov	r0, #0x1
	b	.L1020
.L1022:
	.align	2, 0
.L1021:
	.word	gSaveBlock1Ptr
	.word	0xa02
.L1018:
	mov	r0, #0x0
.L1020:
	pop	{r1}
	bx	r1
.Lfe113:
	.size	 IsPlayerNotInTrainerTowerLobby,.Lfe113-IsPlayerNotInTrainerTowerLobby
	.align	2, 0
	.globl	BrailleCursorToggle
	.type	 BrailleCursorToggle,function
	.thumb_func
BrailleCursorToggle:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r0, .L1027
	ldrb	r0, [r0]
	cmp	r0, #0x2
	beq	.L1024	@cond_branch
	ldr	r0, .L1027+0x4
	ldrh	r0, [r0]
	add	r0, r0, #0x1b
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, .L1027+0x8
	ldrh	r3, [r0]
	cmp	r3, #0
	bne	.L1025	@cond_branch
	ldr	r0, .L1027+0xc
	ldrh	r2, [r0]
	str	r3, [sp]
	mov	r0, #0x0
	mov	r3, #0x0
	bl	CreateTextCursorSprite
	ldr	r1, .L1027+0x10
	strb	r0, [r1]
	b	.L1024
.L1028:
	.align	2, 0
.L1027:
	.word	gQuestLogState
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8006
	.word	gSpecialVar_0x8005
	.word	sBrailleTextCursorSpriteID
.L1025:
	ldr	r0, .L1029
	ldrb	r0, [r0]
	bl	DestroyTextCursorSprite
.L1024:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L1030:
	.align	2, 0
.L1029:
	.word	sBrailleTextCursorSpriteID
.Lfe114:
	.size	 BrailleCursorToggle,.Lfe114-BrailleCursorToggle
	.align	2, 0
	.globl	PlayerPartyContainsSpeciesWithPlayerID
	.type	 PlayerPartyContainsSpeciesWithPlayerID,function
	.thumb_func
PlayerPartyContainsSpeciesWithPlayerID:
	push	{r4, r5, r6, r7, lr}
	bl	CalculatePlayerPartyCount
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r6, #0x0
	cmp	r6, r7
	bcs	.L1033	@cond_branch
.L1035:
	mov	r0, #0x64
	mov	r1, r6
	mul	r1, r1, r0
	ldr	r0, .L1039
	add	r5, r1, r0
	add	r0, r5, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	ldr	r1, .L1039+0x4
	ldrh	r1, [r1]
	cmp	r0, r1
	bne	.L1034	@cond_branch
	bl	GetPlayerTrainerId
	add	r4, r0, #0
	add	r0, r5, #0
	mov	r1, #0x1
	mov	r2, #0x0
	bl	GetMonData
	cmp	r4, r0
	bne	.L1034	@cond_branch
	mov	r0, #0x1
	b	.L1038
.L1040:
	.align	2, 0
.L1039:
	.word	gPlayerParty
	.word	gSpecialVar_0x8004
.L1034:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, r7
	bcc	.L1035	@cond_branch
.L1033:
	mov	r0, #0x0
.L1038:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe115:
	.size	 PlayerPartyContainsSpeciesWithPlayerID,.Lfe115-PlayerPartyContainsSpeciesWithPlayerID
	.align	2, 0
	.globl	UpdateLoreleiDollCollection
	.type	 UpdateLoreleiDollCollection,function
	.thumb_func
UpdateLoreleiDollCollection:
	push	{r4, lr}
	mov	r0, #0xa
	bl	GetGameStat
	add	r4, r0, #0
	cmp	r4, #0x18
	bls	.L1042	@cond_branch
	mov	r0, #0xa5
	bl	FlagClear
	cmp	r4, #0x31
	bls	.L1043	@cond_branch
	mov	r0, #0xa6
	bl	FlagClear
.L1043:
	cmp	r4, #0x4a
	bls	.L1044	@cond_branch
	mov	r0, #0xa7
	bl	FlagClear
.L1044:
	cmp	r4, #0x63
	bls	.L1045	@cond_branch
	mov	r0, #0xa8
	bl	FlagClear
.L1045:
	cmp	r4, #0x7c
	bls	.L1046	@cond_branch
	mov	r0, #0xa9
	bl	FlagClear
.L1046:
	cmp	r4, #0x95
	bls	.L1047	@cond_branch
	mov	r0, #0xaa
	bl	FlagClear
.L1047:
	cmp	r4, #0xae
	bls	.L1048	@cond_branch
	mov	r0, #0xab
	bl	FlagClear
.L1048:
	cmp	r4, #0xc7
	bls	.L1042	@cond_branch
	mov	r0, #0xac
	bl	FlagClear
.L1042:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe116:
	.size	 UpdateLoreleiDollCollection,.Lfe116-UpdateLoreleiDollCollection
	.align	2, 0
	.globl	LoopWingFlapSound
	.type	 LoopWingFlapSound,function
	.thumb_func
LoopWingFlapSound:
	push	{lr}
	ldr	r0, .L1051
	mov	r1, #0x8
	bl	CreateTask
	mov	r0, #0x96
	bl	PlaySE
	pop	{r0}
	bx	r0
.L1052:
	.align	2, 0
.L1051:
	.word	Task_WingFlapSound
.Lfe117:
	.size	 LoopWingFlapSound,.Lfe117-LoopWingFlapSound
	.align	2, 0
	.type	 Task_WingFlapSound,function
	.thumb_func
Task_WingFlapSound:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L1056
	add	r4, r0, r1
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	mov	r0, #0x2
	ldrsh	r1, [r4, r0]
	ldr	r0, .L1056+0x4
	ldrh	r0, [r0]
	cmp	r1, r0
	bne	.L1054	@cond_branch
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	mov	r0, #0x0
	strh	r0, [r4, #0x2]
	mov	r0, #0x96
	bl	PlaySE
.L1054:
	mov	r0, #0x0
	ldrsh	r1, [r4, r0]
	ldr	r0, .L1056+0x8
	ldrh	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r1, r0
	bne	.L1055	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
.L1055:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1057:
	.align	2, 0
.L1056:
	.word	gTasks+0x8
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_0x8004
.Lfe118:
	.size	 Task_WingFlapSound,.Lfe118-Task_WingFlapSound
	.comm	sFieldSpecialsListMenuTemplate, 24	@ 24
	.comm	sFieldSpecialsListMenuScrollBuffer, 4	@ 2
.text
	.align	2, 0 @ Don't pad with nop

