@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 sSpawnPoints,object
sSpawnPoints:
	.byte	0x3
	.byte	0x0
	.short	0x6
	.short	0x8
	.space	2
	.byte	0x3
	.byte	0x1
	.short	0x1a
	.short	0x1b
	.space	2
	.byte	0x3
	.byte	0x2
	.short	0x11
	.short	0x1a
	.space	2
	.byte	0x3
	.byte	0x3
	.short	0x16
	.short	0x14
	.space	2
	.byte	0x3
	.byte	0x4
	.short	0x6
	.short	0x6
	.space	2
	.byte	0x3
	.byte	0x5
	.short	0xf
	.short	0x7
	.space	2
	.byte	0x3
	.byte	0x6
	.short	0x30
	.short	0xc
	.space	2
	.byte	0x3
	.byte	0x7
	.short	0x19
	.short	0x20
	.space	2
	.byte	0x3
	.byte	0x8
	.short	0xe
	.short	0xc
	.space	2
	.byte	0x3
	.byte	0x9
	.short	0xb
	.short	0x7
	.space	2
	.byte	0x3
	.byte	0xa
	.short	0x18
	.short	0x27
	.space	2
	.byte	0x3
	.byte	0x16
	.short	0xc
	.short	0x6
	.space	2
	.byte	0x3
	.byte	0x1c
	.short	0xd
	.short	0x15
	.space	2
	.byte	0x3
	.byte	0xc
	.short	0xe
	.short	0x6
	.space	2
	.byte	0x3
	.byte	0xd
	.short	0x15
	.short	0x8
	.space	2
	.byte	0x3
	.byte	0xe
	.short	0xe
	.short	0x1c
	.space	2
	.byte	0x3
	.byte	0xf
	.short	0x12
	.short	0x15
	.space	2
	.byte	0x3
	.byte	0x10
	.short	0x12
	.short	0x7
	.space	2
	.byte	0x3
	.byte	0x11
	.short	0xc
	.short	0x4
	.space	2
	.byte	0x3
	.byte	0x12
	.short	0xb
	.short	0xc
	.space	2
	.size	 sSpawnPoints,160
	.align	1, 0
	.type	 sWhiteoutRespawnHealCenterMapIdxs,object
sWhiteoutRespawnHealCenterMapIdxs:
	.short	0x4
	.short	0x0
	.short	0x5
	.short	0x4
	.short	0x6
	.short	0x5
	.short	0x7
	.short	0x3
	.short	0x8
	.short	0x0
	.short	0x9
	.short	0x1
	.short	0xa
	.short	0xc
	.short	0xb
	.short	0x5
	.short	0xc
	.short	0x5
	.short	0xd
	.short	0x0
	.short	0xe
	.short	0x6
	.short	0x10
	.short	0x0
	.short	0x15
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x21
	.short	0x2
	.short	0x22
	.short	0x1
	.short	0x23
	.short	0x1
	.short	0x24
	.short	0x0
	.short	0x1f
	.short	0x3
	.short	0x25
	.short	0x0
	.size	 sWhiteoutRespawnHealCenterMapIdxs,80
	.type	 sWhiteoutRespawnHealerNpcIds,object
sWhiteoutRespawnHealerNpcIds:
	.byte	0x1
	.byte	0x1
	.byte	0x3
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.size	 sWhiteoutRespawnHealerNpcIds,20
.text
	.align	2, 0
	.type	 GetHealLocationIndexFromMapGroupAndNum,function
	.thumb_func
GetHealLocationIndexFromMapGroupAndNum:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r3, #0x0
	ldr	r2, .L10
.L6:
	mov	r0, #0x0
	ldrsb	r0, [r2, r0]
	cmp	r0, r4
	bne	.L5	@cond_branch
	mov	r0, #0x1
	ldrsb	r0, [r2, r0]
	cmp	r0, r1
	bne	.L5	@cond_branch
	add	r0, r3, #0x1
	b	.L9
.L11:
	.align	2, 0
.L10:
	.word	sSpawnPoints
.L5:
	add	r2, r2, #0x8
	add	r3, r3, #0x1
	cmp	r3, #0x13
	bls	.L6	@cond_branch
	mov	r0, #0x0
.L9:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 GetHealLocationIndexFromMapGroupAndNum,.Lfe1-GetHealLocationIndexFromMapGroupAndNum
	.align	2, 0
	.type	 GetHealLocationPointerFromMapGroupAndNum,function
	.thumb_func
GetHealLocationPointerFromMapGroupAndNum:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	GetHealLocationIndexFromMapGroupAndNum
	cmp	r0, #0
	beq	.L13	@cond_branch
	lsl	r0, r0, #0x3
	ldr	r1, .L15
	add	r0, r0, r1
	b	.L14
.L16:
	.align	2, 0
.L15:
	.word	sSpawnPoints+-0x8
.L13:
	mov	r0, #0x0
.L14:
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 GetHealLocationPointerFromMapGroupAndNum,.Lfe2-GetHealLocationPointerFromMapGroupAndNum
	.align	2, 0
	.globl	GetHealLocation
	.type	 GetHealLocation,function
	.thumb_func
GetHealLocation:
	push	{lr}
	cmp	r0, #0
	beq	.L19	@cond_branch
	cmp	r0, #0x14
	bhi	.L19	@cond_branch
	lsl	r0, r0, #0x3
	ldr	r1, .L21
	add	r0, r0, r1
	b	.L20
.L22:
	.align	2, 0
.L21:
	.word	sSpawnPoints+-0x8
.L19:
	mov	r0, #0x0
.L20:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 GetHealLocation,.Lfe3-GetHealLocation
	.align	2, 0
	.globl	SetWhiteoutRespawnWarpAndHealerNpc
	.type	 SetWhiteoutRespawnWarpAndHealerNpc,function
	.thumb_func
SetWhiteoutRespawnWarpAndHealerNpc:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	ldr	r6, .L37
	add	r0, r6, #0
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, #0x1
	bne	.L24	@cond_branch
	ldr	r0, .L37+0x4
	ldr	r1, [r0]
	ldr	r2, .L37+0x8
	add	r0, r1, r2
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L37+0xc
	add	r1, r1, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	blt	.L25	@cond_branch
	add	r0, r6, #0
	mov	r1, #0x0
	bl	VarSet
.L25:
	ldr	r0, .L37+0x10
	strh	r5, [r0]
	mov	r0, #0x4
	strh	r0, [r4, #0x4]
	mov	r0, #0xb
	strh	r0, [r4, #0x6]
	mov	r0, #0x2
	strb	r0, [r4]
	mov	r0, #0xa
	strb	r0, [r4, #0x1]
	mov	r0, #0xff
	strb	r0, [r4, #0x2]
	b	.L26
.L38:
	.align	2, 0
.L37:
	.word	0x4082
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d56
	.word	gSpecialVar_LastTalked
.L24:
	ldr	r0, .L39
	ldr	r1, [r0]
	mov	r0, #0x1c
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x1d]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	GetHealLocationIndexFromMapGroupAndNum
	add	r6, r0, #0
	ldr	r2, .L39+0x4
	sub	r0, r6, #0x1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	ldrh	r1, [r1]
	strb	r1, [r4]
	add	r2, r2, #0x2
	add	r0, r0, r2
	ldrh	r2, [r0]
	strb	r2, [r4, #0x1]
	mov	r0, #0xff
	strb	r0, [r4, #0x2]
	cmp	r1, #0x4
	bne	.L27	@cond_branch
	cmp	r2, #0
	bne	.L27	@cond_branch
	mov	r0, #0x8
	strh	r0, [r4, #0x4]
	mov	r0, #0x5
	b	.L35
.L40:
	.align	2, 0
.L39:
	.word	gSaveBlock1Ptr
	.word	sWhiteoutRespawnHealCenterMapIdxs
.L27:
	ldr	r0, .L41
	sub	r2, r6, #0x1
	lsl	r3, r2, #0x2
	add	r1, r3, r0
	ldrh	r1, [r1]
	add	r5, r0, #0
	cmp	r1, #0xd
	bne	.L29	@cond_branch
	add	r0, r5, #0x2
	add	r0, r3, r0
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L29	@cond_branch
	strh	r1, [r4, #0x4]
	mov	r0, #0xc
	b	.L35
.L42:
	.align	2, 0
.L41:
	.word	sWhiteoutRespawnHealCenterMapIdxs
.L29:
	lsl	r1, r2, #0x2
	add	r0, r1, r5
	ldrh	r0, [r0]
	cmp	r0, #0x20
	bne	.L31	@cond_branch
	add	r0, r5, #0x2
	add	r0, r1, r0
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L31	@cond_branch
	mov	r0, #0x5
	b	.L36
.L31:
	lsl	r2, r2, #0x2
	add	r0, r2, r5
	ldrh	r0, [r0]
	cmp	r0, #0x2
	bne	.L33	@cond_branch
	add	r0, r5, #0x2
	add	r0, r2, r0
	ldrh	r0, [r0]
	cmp	r0, #0xa
	bne	.L33	@cond_branch
	mov	r0, #0x4
	strh	r0, [r4, #0x4]
	mov	r0, #0xb
	strh	r0, [r4, #0x6]
	ldr	r0, .L43
	mov	r1, #0x0
	bl	VarSet
	b	.L28
.L44:
	.align	2, 0
.L43:
	.word	0x4082
.L33:
	mov	r0, #0x7
.L36:
	strh	r0, [r4, #0x4]
	mov	r0, #0x4
.L35:
	strh	r0, [r4, #0x6]
.L28:
	add	r0, r6, #0
	bl	SetWhiteoutRespawnHealerNpcAsLastTalked
.L26:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 SetWhiteoutRespawnWarpAndHealerNpc,.Lfe4-SetWhiteoutRespawnWarpAndHealerNpc
	.align	2, 0
	.type	 SetWhiteoutRespawnHealerNpcAsLastTalked,function
	.thumb_func
SetWhiteoutRespawnHealerNpcAsLastTalked:
	ldr	r2, .L46
	ldr	r1, .L46+0x4
	sub	r0, r0, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	strh	r0, [r2]
	bx	lr
.L47:
	.align	2, 0
.L46:
	.word	gSpecialVar_LastTalked
	.word	sWhiteoutRespawnHealerNpcIds
.Lfe5:
	.size	 SetWhiteoutRespawnHealerNpcAsLastTalked,.Lfe5-SetWhiteoutRespawnHealerNpcAsLastTalked
.text
	.align	2, 0 @ Don't pad with nop

