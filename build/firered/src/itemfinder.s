@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	1, 0
	.type	 sArrowAndStarSpriteTiles,object
sArrowAndStarSpriteTiles:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x9000
	.short	0x0
	.short	0x9990
	.short	0x9000
	.short	0x9999
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x990
	.short	0x0
	.short	0x999
	.short	0x0
	.short	0x999
	.short	0x0
	.short	0x999
	.short	0x0
	.short	0x9900
	.short	0x9999
	.short	0x9000
	.short	0x9999
	.short	0x0
	.short	0x9990
	.short	0x0
	.short	0x9000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x999
	.short	0x0
	.short	0x999
	.short	0x0
	.short	0x999
	.short	0x0
	.short	0x999
	.short	0x0
	.short	0x990
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xd000
	.short	0x0
	.short	0xddd0
	.short	0xd000
	.short	0xdddd
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xdd0
	.short	0x0
	.short	0xddd
	.short	0x0
	.short	0xddd
	.short	0x0
	.short	0xddd
	.short	0x0
	.short	0xdd00
	.short	0xdddd
	.short	0xd000
	.short	0xdddd
	.short	0x0
	.short	0xddd0
	.short	0x0
	.short	0xd000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xddd
	.short	0x0
	.short	0xddd
	.short	0x0
	.short	0xddd
	.short	0x0
	.short	0xddd
	.short	0x0
	.short	0xdd0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2000
	.short	0x0
	.short	0x2220
	.short	0x2000
	.short	0x2222
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x220
	.short	0x0
	.short	0x222
	.short	0x0
	.short	0x222
	.short	0x0
	.short	0x222
	.short	0x0
	.short	0x2200
	.short	0x2222
	.short	0x2000
	.short	0x2222
	.short	0x0
	.short	0x2220
	.short	0x0
	.short	0x2000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x222
	.short	0x0
	.short	0x222
	.short	0x0
	.short	0x222
	.short	0x0
	.short	0x222
	.short	0x0
	.short	0x220
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xb000
	.short	0x0
	.short	0xbbb0
	.short	0xb000
	.short	0xbbbb
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xbb0
	.short	0x0
	.short	0xbbb
	.short	0x0
	.short	0xbbb
	.short	0x0
	.short	0xbbb
	.short	0x0
	.short	0xbb00
	.short	0xbbbb
	.short	0xb000
	.short	0xbbbb
	.short	0x0
	.short	0xbbb0
	.short	0x0
	.short	0xb000
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xbbb
	.short	0x0
	.short	0xbbb
	.short	0x0
	.short	0xbbb
	.short	0x0
	.short	0xbbb
	.short	0x0
	.short	0xbb0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xe000
	.short	0x0
	.short	0xde00
	.short	0x0
	.short	0xde00
	.short	0x0
	.short	0xdde0
	.short	0xee00
	.short	0xddee
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0xe
	.short	0x0
	.short	0xe
	.short	0x0
	.short	0xed
	.short	0x0
	.short	0xeeed
	.short	0xe
	.short	0xde00
	.short	0xdddd
	.short	0xe000
	.short	0xdddd
	.short	0x0
	.short	0xddde
	.short	0x0
	.short	0xddde
	.short	0xe000
	.short	0xeedd
	.short	0xe000
	.short	0xed
	.short	0xe000
	.short	0xe
	.short	0x0
	.short	0x0
	.short	0xdddd
	.short	0xe
	.short	0xeddd
	.short	0x0
	.short	0xedd
	.short	0x0
	.short	0xedd
	.short	0x0
	.short	0xedde
	.short	0x0
	.short	0xede0
	.short	0x0
	.short	0xee00
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sArrowAndStarSpriteTiles,640
	.align	2, 0
	.type	 sArrowAnim0,object
sArrowAnim0:
	.short	0x0
	.byte	0xa
	.space	1
	.short	-0x1
	.space	2
	.size	 sArrowAnim0,8
	.align	2, 0
	.type	 sArrowAnim1,object
sArrowAnim1:
	.short	0x4
	.byte	0xa
	.space	1
	.short	-0x1
	.space	2
	.size	 sArrowAnim1,8
	.align	2, 0
	.type	 sArrowAnim2,object
sArrowAnim2:
	.short	0x8
	.byte	0xa
	.space	1
	.short	-0x1
	.space	2
	.size	 sArrowAnim2,8
	.align	2, 0
	.type	 sArrowAnim3,object
sArrowAnim3:
	.short	0xc
	.byte	0xa
	.space	1
	.short	-0x1
	.space	2
	.size	 sArrowAnim3,8
	.align	2, 0
	.type	 sStarAnim,object
sStarAnim:
	.short	0x10
	.byte	0xa
	.space	1
	.short	-0x1
	.space	2
	.size	 sStarAnim,8
	.align	2, 0
	.type	 sArrowAndStarSpriteAnimTable,object
sArrowAndStarSpriteAnimTable:
	.word	sArrowAnim0
	.word	sArrowAnim1
	.word	sArrowAnim2
	.word	sArrowAnim3
	.word	sStarAnim
	.size	 sArrowAndStarSpriteAnimTable,20
	.align	2, 0
	.type	 sArrowAndStarSpriteOamData,object
	.size	 sArrowAndStarSpriteOamData,8
sArrowAndStarSpriteOamData:
	.space	1
	.byte	0x1
	.space	1
	.byte	0x40
	.space	4
	.align	2, 0
	.type	 sAffineAnim_Left,object
sAffineAnim_Left:
	.short	0x0
	.short	0x0
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_Left,16
	.align	2, 0
	.type	 sAffineAnim_Down,object
sAffineAnim_Down:
	.short	0x0
	.short	0x0
	.byte	0x40
	.byte	0x1
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_Down,16
	.align	2, 0
	.type	 sAffineAnim_Right,object
sAffineAnim_Right:
	.short	0x0
	.short	0x0
	.byte	0x80
	.byte	0x1
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_Right,16
	.align	2, 0
	.type	 sAffineAnim_Up,object
sAffineAnim_Up:
	.short	0x0
	.short	0x0
	.byte	0xc0
	.byte	0x1
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnim_Up,16
	.align	2, 0
	.type	 sArrowAndStarSpriteAffineAnimTable,object
sArrowAndStarSpriteAffineAnimTable:
	.word	sAffineAnim_Left
	.word	sAffineAnim_Down
	.word	sAffineAnim_Right
	.word	sAffineAnim_Up
	.size	 sArrowAndStarSpriteAffineAnimTable,16
	.align	2, 0
	.type	 sSpriteTemplate_ArrowAndStar,object
	.size	 sSpriteTemplate_ArrowAndStar,24
sSpriteTemplate_ArrowAndStar:
	.short	0x7d0
	.short	0xffff
	.word	sArrowAndStarSpriteOamData
	.word	sArrowAndStarSpriteAnimTable
	.space	4
	.word	sArrowAndStarSpriteAffineAnimTable
	.word	SpriteCallback_Arrow
	.align	2, 0
	.type	 sArrowAndStarSpriteSheet,object
	.size	 sArrowAndStarSpriteSheet,8
sArrowAndStarSpriteSheet:
	.word	sArrowAndStarSpriteTiles
	.short	0x280
	.short	0x7d0
.text
	.align	2, 0
	.globl	ItemUseOnFieldCB_Itemfinder
	.type	 ItemUseOnFieldCB_Itemfinder,function
	.thumb_func
ItemUseOnFieldCB_Itemfinder:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r2, #0x0
	ldr	r7, .L14
	lsl	r1, r4, #0x2
	add	r0, r1, r4
	lsl	r3, r0, #0x3
	ldr	r5, .L14+0x4
	add	r6, r1, #0
	mov	r1, #0x0
.L8:
	lsl	r0, r2, #0x1
	add	r0, r0, r3
	add	r0, r0, r5
	strh	r1, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xf
	bls	.L8	@cond_branch
	ldr	r0, [r7, #0x4]
	add	r1, r4, #0
	bl	HiddenItemIsWithinRangeOfPlayer
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L10	@cond_branch
	bl	LoadArrowAndStarTiles
	ldr	r0, .L14+0x8
	add	r1, r6, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0x14
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x1
	bne	.L11	@cond_branch
	ldr	r0, .L14+0xc
	str	r0, [r1]
	b	.L13
.L15:
	.align	2, 0
.L14:
	.word	gMapHeader
	.word	gTasks+0x8
	.word	gTasks
	.word	Task_ItemfinderUnderfootSoundsAndAnims
.L11:
	ldr	r0, .L16
	str	r0, [r1]
	b	.L13
.L17:
	.align	2, 0
.L16:
	.word	Task_ItemfinderResponseSoundsAndAnims
.L10:
	ldr	r2, .L18
	ldr	r3, .L18+0x4
	add	r0, r4, #0
	mov	r1, #0x2
	bl	DisplayItemMessageOnField
.L13:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L19:
	.align	2, 0
.L18:
	.word	gText_NopeTheresNoResponse
	.word	Task_NoResponse_CleanUp
.Lfe1:
	.size	 ItemUseOnFieldCB_Itemfinder,.Lfe1-ItemUseOnFieldCB_Itemfinder
	.align	2, 0
	.type	 Task_NoResponse_CleanUp,function
	.thumb_func
Task_NoResponse_CleanUp:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrame
	bl	ClearPlayerHeldMovementAndUnfreezeObjectEvents
	bl	UnlockPlayerFieldControls
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 Task_NoResponse_CleanUp,.Lfe2-Task_NoResponse_CleanUp
	.align	2, 0
	.type	 Task_ItemfinderResponseSoundsAndAnims,function
	.thumb_func
Task_ItemfinderResponseSoundsAndAnims:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r6, r1, #0x3
	ldr	r7, .L25
	add	r4, r6, r7
	mov	r1, #0x6
	ldrsh	r0, [r4, r1]
	mov	r1, #0x19
	bl	__modsi3
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L22	@cond_branch
	mov	r2, #0x0
	ldrsh	r0, [r4, r2]
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	bl	GetPlayerDirectionTowardsHiddenItem
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L23	@cond_branch
	add	r0, r7, #0
	sub	r0, r0, #0x8
	add	r0, r6, r0
	ldr	r1, .L25+0x4
	str	r1, [r0]
	b	.L21
.L26:
	.align	2, 0
.L25:
	.word	gTasks+0x8
	.word	Task_ItemfinderResponsePrintMessage
.L23:
	mov	r0, #0x41
	bl	PlaySE
	ldrb	r0, [r4, #0xa]
	add	r1, r5, #0
	bl	CreateArrowSprite
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0x8]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L22:
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
.L21:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 Task_ItemfinderResponseSoundsAndAnims,.Lfe3-Task_ItemfinderResponseSoundsAndAnims
	.align	2, 0
	.type	 Task_ItemfinderUnderfootSoundsAndAnims,function
	.thumb_func
Task_ItemfinderUnderfootSoundsAndAnims:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r5, r1, #0x3
	ldr	r6, .L31
	add	r4, r5, r6
	mov	r1, #0x6
	ldrsh	r0, [r4, r1]
	mov	r1, #0x19
	bl	__modsi3
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L28	@cond_branch
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L29	@cond_branch
	add	r0, r6, #0
	sub	r0, r0, #0x8
	add	r0, r5, r0
	ldr	r1, .L31+0x4
	str	r1, [r0]
	b	.L27
.L32:
	.align	2, 0
.L31:
	.word	gTasks+0x8
	.word	Task_ItemfinderUnderfootPrintMessage
.L29:
	mov	r0, #0x41
	bl	PlaySE
	bl	CreateStarSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4, #0xe]
	ldrh	r0, [r4, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r4, #0xa]
	ldrh	r0, [r4, #0x8]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L28:
	ldrh	r0, [r4, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x6]
.L27:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe4:
	.size	 Task_ItemfinderUnderfootSoundsAndAnims,.Lfe4-Task_ItemfinderUnderfootSoundsAndAnims
	.align	2, 0
	.type	 HiddenItemIsWithinRangeOfPlayer,function
	.thumb_func
HiddenItemIsWithinRangeOfPlayer:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	r8, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	ldr	r1, .L47
	mov	r2, r9
	lsl	r0, r2, #0x2
	add	r0, r0, r9
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0xc]
	mov	r3, #0x0
	mov	r0, r8
	ldrb	r0, [r0, #0x3]
	cmp	r3, r0
	bge	.L35	@cond_branch
.L37:
	lsl	r3, r3, #0x10
	asr	r1, r3, #0x10
	mov	r0, r8
	ldr	r2, [r0, #0x10]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r7, r0, #0x2
	add	r1, r7, r2
	ldrb	r0, [r1, #0x5]
	mov	sl, r3
	cmp	r0, #0x7
	bne	.L36	@cond_branch
	ldr	r0, [r1, #0x8]
	mov	r1, #0x1
	bl	GetHiddenItemAttr
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L36	@cond_branch
	mov	r1, r8
	ldr	r2, [r1, #0x10]
	add	r2, r7, r2
	ldrh	r0, [r2]
	add	r0, r0, #0x7
	mov	r1, sp
	ldrh	r1, [r1]
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldrh	r0, [r2, #0x2]
	add	r0, r0, #0x7
	mov	r3, sp
	ldrh	r1, [r3, #0x2]
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r6, r4, #0
	ldr	r0, [r2, #0x8]
	mov	r1, #0x3
	bl	GetHiddenItemAttr
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bne	.L39	@cond_branch
	cmp	r5, #0
	bne	.L36	@cond_branch
	cmp	r4, #0
	bne	.L36	@cond_branch
	mov	r1, r8
	ldr	r0, [r1, #0x10]
	add	r0, r7, r0
	ldr	r1, [r0, #0x8]
	mov	r0, r9
	bl	SetUnderfootHiddenItem
	b	.L46
.L48:
	.align	2, 0
.L47:
	.word	gTasks
.L39:
	lsl	r0, r5, #0x10
	asr	r1, r0, #0x10
	mov	r2, #0xe0
	lsl	r2, r2, #0xb
	add	r0, r0, r2
	lsr	r0, r0, #0x10
	cmp	r0, #0xe
	bhi	.L36	@cond_branch
	lsl	r0, r6, #0x10
	asr	r2, r0, #0x10
	mov	r3, #0x5
	neg	r3, r3
	cmp	r2, r3
	blt	.L36	@cond_branch
	cmp	r2, #0x5
	bgt	.L36	@cond_branch
	mov	r0, r9
	bl	RegisterHiddenItemRelativeCoordsIfCloser
.L36:
	mov	r0, #0x80
	lsl	r0, r0, #0x9
	add	r0, r0, sl
	lsr	r3, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, r8
	ldrb	r1, [r1, #0x3]
	cmp	r0, r1
	blt	.L37	@cond_branch
.L35:
	mov	r0, r9
	bl	FindHiddenItemsInConnectedMaps
	ldr	r0, .L49
	mov	r2, r9
	lsl	r1, r2, #0x2
	add	r1, r1, r9
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r3, #0xc
	ldrsh	r0, [r1, r3]
	cmp	r0, #0x1
	beq	.L44	@cond_branch
	mov	r0, #0x0
	b	.L45
.L50:
	.align	2, 0
.L49:
	.word	gTasks
.L44:
	mov	r0, r9
	bl	SetNormalHiddenItem
.L46:
	mov	r0, #0x1
.L45:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 HiddenItemIsWithinRangeOfPlayer,.Lfe5-HiddenItemIsWithinRangeOfPlayer
	.align	2, 0
	.type	 SetUnderfootHiddenItem,function
	.thumb_func
SetUnderfootHiddenItem:
	push	{r4, r5, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L52
	add	r4, r4, r0
	add	r0, r5, #0
	mov	r1, #0x1
	bl	GetHiddenItemAttr
	ldr	r1, .L52+0x4
	strh	r0, [r1]
	add	r0, r5, #0
	mov	r1, #0x0
	bl	GetHiddenItemAttr
	ldr	r1, .L52+0x8
	strh	r0, [r1]
	ldr	r0, .L52+0xc
	mov	r5, #0x1
	strh	r5, [r0]
	ldrh	r1, [r1]
	mov	r0, #0x0
	bl	TV_PrintIntToStringVar
	strh	r5, [r4, #0x4]
	mov	r0, #0x0
	strh	r0, [r4]
	strh	r0, [r4, #0x2]
	mov	r0, #0x3
	strh	r0, [r4, #0x8]
	strh	r5, [r4, #0xc]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L53:
	.align	2, 0
.L52:
	.word	gTasks+0x8
	.word	gSpecialVar_0x8004
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_0x8006
.Lfe6:
	.size	 SetUnderfootHiddenItem,.Lfe6-SetUnderfootHiddenItem
	.align	2, 0
	.type	 SetNormalHiddenItem,function
	.thumb_func
SetNormalHiddenItem:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L66
	add	r1, r1, r0
	ldrh	r3, [r1, #0x2]
	ldrh	r2, [r1]
	mov	r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	bne	.L55	@cond_branch
	cmp	r3, #0
	beq	.L63	@cond_branch
.L55:
	mov	r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	bge	.L57	@cond_branch
	neg	r0, r0
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
.L57:
	mov	r4, #0x2
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	bge	.L58	@cond_branch
	neg	r0, r0
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
.L58:
	lsl	r0, r2, #0x10
	asr	r2, r0, #0x10
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	cmp	r2, r0
	ble	.L59	@cond_branch
	cmp	r2, #0x3
	ble	.L63	@cond_branch
	mov	r0, #0x2
	b	.L65
.L67:
	.align	2, 0
.L66:
	.word	gTasks+0x8
.L59:
	cmp	r0, #0x3
	ble	.L63	@cond_branch
	mov	r0, #0x2
	b	.L65
.L63:
	mov	r0, #0x4
.L65:
	strh	r0, [r1, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 SetNormalHiddenItem,.Lfe7-SetNormalHiddenItem
	.align	2, 0
	.type	 HiddenItemAtPos,function
	.thumb_func
HiddenItemAtPos:
	push	{r4, r5, lr}
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldrb	r5, [r0, #0x3]
	ldr	r4, [r0, #0x10]
	mov	r3, #0x0
	cmp	r3, r5
	bge	.L70	@cond_branch
	lsl	r0, r1, #0x10
	asr	r1, r0, #0x10
	lsl	r0, r2, #0x10
	asr	r2, r0, #0x10
.L72:
	ldrb	r0, [r4, #0x5]
	cmp	r0, #0x7
	bne	.L71	@cond_branch
	ldrh	r0, [r4]
	cmp	r1, r0
	bne	.L71	@cond_branch
	ldrh	r0, [r4, #0x2]
	cmp	r2, r0
	bne	.L71	@cond_branch
	ldr	r0, [r4, #0x8]
	mov	r1, #0x1
	bl	GetHiddenItemAttr
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r0, [r4, #0x8]
	mov	r1, #0x3
	bl	GetHiddenItemAttr
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	beq	.L70	@cond_branch
	add	r0, r5, #0
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L70	@cond_branch
	mov	r0, #0x1
	b	.L77
.L71:
	add	r4, r4, #0xc
	add	r3, r3, #0x1
	cmp	r3, r5
	blt	.L72	@cond_branch
.L70:
	mov	r0, #0x0
.L77:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 HiddenItemAtPos,.Lfe8-HiddenItemAtPos
	.align	2, 0
	.type	 HiddenItemInConnectedMapAtPos,function
	.thumb_func
HiddenItemInConnectedMapAtPos:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	bl	GetMapHeaderFromConnection
	add	r3, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0x2
	beq	.L80	@cond_branch
	cmp	r0, #0x2
	bgt	.L86	@cond_branch
	cmp	r0, #0x1
	beq	.L81	@cond_branch
	b	.L84
.L86:
	cmp	r0, #0x3
	beq	.L82	@cond_branch
	cmp	r0, #0x4
	beq	.L83	@cond_branch
	b	.L84
.L80:
	ldr	r0, [r4, #0x4]
	add	r0, r0, #0x7
	sub	r0, r5, r0
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r3]
	ldr	r0, [r0, #0x4]
	sub	r0, r0, #0x7
	add	r0, r0, r6
	b	.L88
.L81:
	ldr	r0, [r4, #0x4]
	add	r0, r0, #0x7
	sub	r0, r5, r0
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, .L91
	ldr	r0, [r0]
	ldr	r0, [r0, #0x4]
	b	.L89
.L92:
	.align	2, 0
.L91:
	.word	gMapHeader
.L82:
	ldr	r0, [r3]
	ldr	r0, [r0]
	sub	r0, r0, #0x7
	add	r0, r0, r5
	b	.L90
.L83:
	ldr	r0, .L93
	ldr	r0, [r0]
	ldr	r0, [r0]
	add	r0, r0, #0x7
	sub	r0, r5, r0
.L90:
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r4, #0x4]
.L89:
	add	r0, r0, #0x7
	sub	r0, r6, r0
.L88:
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	b	.L79
.L94:
	.align	2, 0
.L93:
	.word	gMapHeader
.L84:
	mov	r0, #0x0
	b	.L87
.L79:
	ldr	r0, [r3, #0x4]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	bl	HiddenItemAtPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L87:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 HiddenItemInConnectedMapAtPos,.Lfe9-HiddenItemInConnectedMapAtPos
	.align	2, 0
	.type	 FindHiddenItemsInConnectedMaps,function
	.thumb_func
FindHiddenItemsInConnectedMaps:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	ldr	r0, .L109
	ldr	r1, [r0]
	ldr	r0, [r1]
	add	r0, r0, #0x7
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x8]
	ldr	r0, [r1, #0x4]
	add	r0, r0, #0x7
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0xc]
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	ldrh	r0, [r0]
	sub	r0, r0, #0x7
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	asr	r0, r0, #0x10
	mov	r1, sp
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	add	r1, r1, #0x7
	cmp	r0, r1
	bgt	.L97	@cond_branch
.L99:
	mov	r5, sp
	ldrh	r0, [r5, #0x2]
	sub	r0, r0, #0x5
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r2, r4, #0x10
	asr	r1, r2, #0x10
	mov	r6, #0x2
	ldrsh	r0, [r5, r6]
	add	r0, r0, #0x5
	lsl	r3, r3, #0x10
	mov	r8, r3
	cmp	r1, r0
	bgt	.L98	@cond_branch
	mov	r0, #0x7
	str	r0, [sp, #0x10]
	mov	r1, r8
	asr	r1, r1, #0x10
	mov	r9, r1
	mov	sl, r0
.L103:
	ldr	r3, [sp, #0x10]
	cmp	r3, r9
	bgt	.L105	@cond_branch
	ldr	r5, [sp, #0x8]
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	cmp	r9, r0
	bge	.L105	@cond_branch
	asr	r1, r2, #0x10
	cmp	sl, r1
	bgt	.L105	@cond_branch
	ldr	r6, [sp, #0xc]
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	lsl	r7, r4, #0x10
	cmp	r1, r0
	blt	.L102	@cond_branch
.L105:
	mov	r0, r8
	asr	r5, r0, #0x10
	lsl	r4, r4, #0x10
	asr	r6, r4, #0x10
	add	r0, r5, #0
	add	r1, r6, #0
	bl	GetMapConnectionAtPos
	add	r7, r4, #0
	cmp	r0, #0
	beq	.L102	@cond_branch
	add	r1, r5, #0
	add	r2, r6, #0
	bl	HiddenItemInConnectedMapAtPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L102	@cond_branch
	mov	r0, sp
	ldrh	r1, [r0]
	sub	r1, r5, r1
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	ldrh	r2, [r0, #0x2]
	sub	r2, r6, r2
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	ldr	r0, [sp, #0x4]
	bl	RegisterHiddenItemRelativeCoordsIfCloser
.L102:
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r7, r1
	lsr	r4, r0, #0x10
	lsl	r2, r4, #0x10
	asr	r1, r2, #0x10
	mov	r3, sp
	mov	r5, #0x2
	ldrsh	r0, [r3, r5]
	add	r0, r0, #0x5
	cmp	r1, r0
	ble	.L103	@cond_branch
.L98:
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r1, r1, r8
	lsr	r3, r1, #0x10
	asr	r1, r1, #0x10
	mov	r0, sp
	mov	r6, #0x0
	ldrsh	r0, [r0, r6]
	add	r0, r0, #0x7
	cmp	r1, r0
	ble	.L99	@cond_branch
.L97:
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L110:
	.align	2, 0
.L109:
	.word	gMapHeader
.Lfe10:
	.size	 FindHiddenItemsInConnectedMaps,.Lfe10-FindHiddenItemsInConnectedMaps
	.align	2, 0
	.type	 RegisterHiddenItemRelativeCoordsIfCloser,function
	.thumb_func
RegisterHiddenItemRelativeCoordsIfCloser:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	ip, r2
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L127
	add	r3, r1, r0
	mov	r1, #0x4
	ldrsh	r0, [r3, r1]
	cmp	r0, #0
	bne	.L112	@cond_branch
	strh	r7, [r3]
	mov	r0, ip
	strh	r0, [r3, #0x2]
	mov	r0, #0x1
	strh	r0, [r3, #0x4]
	b	.L113
.L128:
	.align	2, 0
.L127:
	.word	gTasks+0x8
.L112:
	mov	r1, #0x0
	ldrsh	r0, [r3, r1]
	cmp	r0, #0
	bge	.L114	@cond_branch
	neg	r0, r0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	b	.L115
.L114:
	ldrh	r4, [r3]
.L115:
	mov	r1, #0x2
	ldrsh	r0, [r3, r1]
	ldrh	r1, [r3, #0x2]
	mov	r9, r1
	cmp	r0, #0
	bge	.L116	@cond_branch
	neg	r0, r0
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	b	.L117
.L116:
	ldrh	r2, [r3, #0x2]
.L117:
	lsl	r1, r7, #0x10
	asr	r0, r1, #0x10
	cmp	r0, #0
	bge	.L118	@cond_branch
	neg	r0, r0
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	b	.L119
.L118:
	lsr	r6, r1, #0x10
.L119:
	mov	r1, ip
	lsl	r0, r1, #0x10
	asr	r1, r0, #0x10
	mov	r8, r0
	cmp	r1, #0
	bge	.L120	@cond_branch
	neg	r0, r1
	lsl	r0, r0, #0x10
	b	.L126
.L120:
	mov	r0, r8
.L126:
	lsr	r5, r0, #0x10
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r2, #0x10
	asr	r2, r1, #0x10
	add	r4, r0, r2
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r5, #0x10
	asr	r1, r1, #0x10
	add	r0, r0, r1
	cmp	r4, r0
	ble	.L122	@cond_branch
	strh	r7, [r3]
	mov	r1, ip
	strh	r1, [r3, #0x2]
	b	.L113
.L122:
	cmp	r4, r0
	bne	.L113	@cond_branch
	cmp	r2, r1
	bgt	.L125	@cond_branch
	cmp	r2, r1
	bne	.L113	@cond_branch
	mov	r1, r9
	lsl	r0, r1, #0x10
	cmp	r0, r8
	bge	.L113	@cond_branch
.L125:
	strh	r7, [r3]
	mov	r0, ip
	strh	r0, [r3, #0x2]
.L113:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe11:
	.size	 RegisterHiddenItemRelativeCoordsIfCloser,.Lfe11-RegisterHiddenItemRelativeCoordsIfCloser
	.align	2, 0
	.type	 GetPlayerDirectionTowardsHiddenItem,function
	.thumb_func
GetPlayerDirectionTowardsHiddenItem:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	lsr	r2, r0, #0x10
	cmp	r0, #0
	bne	.L130	@cond_branch
	cmp	r1, #0
	beq	.L142	@cond_branch
.L130:
	lsl	r0, r2, #0x10
	asr	r2, r0, #0x10
	add	r5, r0, #0
	cmp	r2, #0
	bge	.L131	@cond_branch
	neg	r0, r2
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	b	.L132
.L131:
	lsr	r4, r5, #0x10
.L132:
	lsl	r0, r1, #0x10
	asr	r2, r0, #0x10
	add	r1, r0, #0
	cmp	r2, #0
	bge	.L133	@cond_branch
	neg	r0, r2
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	b	.L134
.L133:
	lsr	r3, r1, #0x10
.L134:
	lsl	r0, r4, #0x10
	asr	r2, r0, #0x10
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	cmp	r2, r0
	ble	.L135	@cond_branch
	cmp	r5, #0
	bge	.L136	@cond_branch
	mov	r0, #0x4
	b	.L145
.L136:
	mov	r0, #0x2
	b	.L145
.L135:
	cmp	r2, r0
	bge	.L139	@cond_branch
	cmp	r1, #0
	blt	.L146	@cond_branch
	b	.L143
.L139:
	cmp	r2, r0
	bne	.L142	@cond_branch
	cmp	r1, #0
	bge	.L143	@cond_branch
.L146:
	mov	r0, #0x1
	b	.L145
.L143:
	mov	r0, #0x3
	b	.L145
.L142:
	mov	r0, #0x0
.L145:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 GetPlayerDirectionTowardsHiddenItem,.Lfe12-GetPlayerDirectionTowardsHiddenItem
	.align	2, 0
	.type	 Task_ItemfinderResponsePrintMessage,function
	.thumb_func
Task_ItemfinderResponsePrintMessage:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L148
	ldr	r3, .L148+0x4
	mov	r1, #0x2
	bl	DisplayItemMessageOnField
	pop	{r0}
	bx	r0
.L149:
	.align	2, 0
.L148:
	.word	gText_ItemfinderResponding
	.word	Task_ItemfinderResponseCleanUp
.Lfe13:
	.size	 Task_ItemfinderResponsePrintMessage,.Lfe13-Task_ItemfinderResponsePrintMessage
	.align	2, 0
	.type	 Task_ItemfinderResponseCleanUp,function
	.thumb_func
Task_ItemfinderResponseCleanUp:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	DestroyArrowAndStarTiles
	mov	r0, #0x0
	mov	r1, #0x1
	bl	ClearDialogWindowAndFrame
	bl	ClearPlayerHeldMovementAndUnfreezeObjectEvents
	bl	UnlockPlayerFieldControls
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 Task_ItemfinderResponseCleanUp,.Lfe14-Task_ItemfinderResponseCleanUp
	.align	2, 0
	.type	 Task_ItemfinderUnderfootPrintMessage,function
	.thumb_func
Task_ItemfinderUnderfootPrintMessage:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L152
	ldr	r3, .L152+0x4
	mov	r1, #0x2
	bl	DisplayItemMessageOnField
	pop	{r0}
	bx	r0
.L153:
	.align	2, 0
.L152:
	.word	gText_ItemfinderShakingWildly
	.word	Task_ItemfinderUnderfootDigUpItem
.Lfe15:
	.size	 Task_ItemfinderUnderfootPrintMessage,.Lfe15-Task_ItemfinderUnderfootPrintMessage
	.align	2, 0
	.type	 Task_ItemfinderUnderfootDigUpItem,function
	.thumb_func
Task_ItemfinderUnderfootDigUpItem:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	DestroyArrowAndStarTiles
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L155
	bl	ScriptContext_SetupScript
	bl	LockPlayerFieldControls
	pop	{r4}
	pop	{r0}
	bx	r0
.L156:
	.align	2, 0
.L155:
	.word	EventScript_ItemfinderDigUpUnderfootItem
.Lfe16:
	.size	 Task_ItemfinderUnderfootDigUpItem,.Lfe16-Task_ItemfinderUnderfootDigUpItem
	.align	2, 0
	.type	 LoadArrowAndStarTiles,function
	.thumb_func
LoadArrowAndStarTiles:
	push	{lr}
	ldr	r0, .L158
	bl	LoadSpriteSheet
	pop	{r0}
	bx	r0
.L159:
	.align	2, 0
.L158:
	.word	sArrowAndStarSpriteSheet
.Lfe17:
	.size	 LoadArrowAndStarTiles,.Lfe17-LoadArrowAndStarTiles
	.align	2, 0
	.type	 DestroyArrowAndStarTiles,function
	.thumb_func
DestroyArrowAndStarTiles:
	push	{lr}
	mov	r0, #0xfa
	lsl	r0, r0, #0x3
	bl	FreeSpriteTilesByTag
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 DestroyArrowAndStarTiles,.Lfe18-DestroyArrowAndStarTiles
	.align	2, 0
	.type	 CreateArrowSprite,function
	.thumb_func
CreateArrowSprite:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	ldr	r0, .L178
	mov	r1, #0x78
	mov	r2, #0x4c
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L178+0x4
	lsl	r4, r6, #0x4
	add	r4, r4, r6
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldrb	r1, [r4, #0x5]
	mov	r0, #0xf
	and	r0, r0, r1
	strb	r0, [r4, #0x5]
	add	r0, r4, #0
	add	r1, r5, #0
	bl	StartSpriteAnim
	mov	r0, #0x0
	strh	r5, [r4, #0x3c]
	strh	r0, [r4, #0x2e]
	strh	r0, [r4, #0x34]
	strh	r0, [r4, #0x36]
	mov	r0, #0x78
	strh	r0, [r4, #0x38]
	mov	r0, #0x4c
	strh	r0, [r4, #0x3a]
	cmp	r7, #0x4
	bhi	.L162	@cond_branch
	lsl	r0, r7, #0x2
	ldr	r1, .L178+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L179:
	.align	2, 0
.L178:
	.word	sSpriteTemplate_ArrowAndStar
	.word	gSprites
	.word	.L176
	.align	2, 0
	.align	2, 0
.L176:
	.word	.L163
	.word	.L172
	.word	.L173
	.word	.L174
	.word	.L175
.L163:
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.L172	@cond_branch
	cmp	r0, #0x2
	bgt	.L171	@cond_branch
	cmp	r0, #0x1
	beq	.L174	@cond_branch
	b	.L162
.L171:
	cmp	r0, #0x3
	beq	.L165	@cond_branch
	cmp	r0, #0x4
	beq	.L173	@cond_branch
	b	.L162
.L165:
	ldr	r1, .L180
	lsl	r0, r6, #0x4
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	mov	r2, #0x0
	ldr	r1, .L180+0x4
	strh	r1, [r0, #0x30]
	strh	r2, [r0, #0x32]
	mov	r1, #0x0
	bl	StartSpriteAffineAnim
	b	.L162
.L181:
	.align	2, 0
.L180:
	.word	gSprites
	.word	0xff9c
.L172:
	ldr	r1, .L182
	lsl	r0, r6, #0x4
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x30]
	ldr	r1, .L182+0x4
	strh	r1, [r0, #0x32]
	mov	r1, #0x3
	bl	StartSpriteAffineAnim
	b	.L162
.L183:
	.align	2, 0
.L182:
	.word	gSprites
	.word	0xff9c
.L173:
	ldr	r1, .L184
	lsl	r0, r6, #0x4
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	mov	r2, #0x0
	mov	r1, #0x64
	strh	r1, [r0, #0x30]
	strh	r2, [r0, #0x32]
	mov	r1, #0x2
	bl	StartSpriteAffineAnim
	b	.L162
.L185:
	.align	2, 0
.L184:
	.word	gSprites
.L174:
	ldr	r1, .L186
	lsl	r0, r6, #0x4
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0, #0x30]
	mov	r1, #0x64
	strh	r1, [r0, #0x32]
	mov	r1, #0x1
	bl	StartSpriteAffineAnim
	b	.L162
.L187:
	.align	2, 0
.L186:
	.word	gSprites
.L175:
	ldr	r1, .L188
	lsl	r0, r6, #0x4
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	mov	r2, #0x0
	ldr	r1, .L188+0x4
	strh	r1, [r0, #0x30]
	strh	r2, [r0, #0x32]
.L162:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L189:
	.align	2, 0
.L188:
	.word	gSprites
	.word	0xff9c
.Lfe19:
	.size	 CreateArrowSprite,.Lfe19-CreateArrowSprite
	.align	2, 0
	.type	 SpriteCallback_Arrow,function
	.thumb_func
SpriteCallback_Arrow:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x30]
	ldrh	r1, [r2, #0x34]
	add	r0, r0, r1
	strh	r0, [r2, #0x34]
	ldrh	r1, [r2, #0x32]
	ldrh	r3, [r2, #0x36]
	add	r1, r1, r3
	strh	r1, [r2, #0x36]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x18
	ldrh	r3, [r2, #0x38]
	add	r0, r0, r3
	strh	r0, [r2, #0x20]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x18
	ldrh	r3, [r2, #0x3a]
	add	r1, r1, r3
	strh	r1, [r2, #0x22]
	sub	r0, r0, #0x69
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1b
	bhi	.L192	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3c
	ble	.L192	@cond_branch
	cmp	r0, #0x58
	ble	.L191	@cond_branch
.L192:
	ldr	r0, .L193
	str	r0, [r2, #0x1c]
.L191:
	pop	{r0}
	bx	r0
.L194:
	.align	2, 0
.L193:
	.word	SpriteCallback_DestroyArrow
.Lfe20:
	.size	 SpriteCallback_Arrow,.Lfe20-SpriteCallback_Arrow
	.align	2, 0
	.type	 SpriteCallback_DestroyArrow,function
	.thumb_func
SpriteCallback_DestroyArrow:
	push	{r4, lr}
	add	r4, r0, #0
	bl	FreeSpriteOamMatrix
	add	r0, r4, #0
	bl	DestroySprite
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 SpriteCallback_DestroyArrow,.Lfe21-SpriteCallback_DestroyArrow
	.align	2, 0
	.type	 CreateStarSprite,function
	.thumb_func
CreateStarSprite:
	push	{r4, r5, lr}
	ldr	r0, .L197
	mov	r1, #0x78
	mov	r2, #0x4c
	mov	r3, #0x0
	bl	CreateSprite
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r2, .L197+0x4
	lsl	r1, r5, #0x4
	add	r1, r1, r5
	lsl	r1, r1, #0x2
	add	r4, r1, r2
	ldrb	r3, [r4, #0x5]
	mov	r0, #0xf
	and	r0, r0, r3
	strb	r0, [r4, #0x5]
	add	r2, r2, #0x1c
	add	r1, r1, r2
	ldr	r0, .L197+0x8
	str	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x4
	bl	StartSpriteAnim
	mov	r1, #0x0
	strh	r1, [r4, #0x3c]
	strh	r1, [r4, #0x2e]
	strh	r1, [r4, #0x34]
	strh	r1, [r4, #0x36]
	mov	r0, #0x78
	strh	r0, [r4, #0x38]
	mov	r0, #0x4c
	strh	r0, [r4, #0x3a]
	strh	r1, [r4, #0x30]
	ldr	r0, .L197+0xc
	strh	r0, [r4, #0x32]
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L198:
	.align	2, 0
.L197:
	.word	sSpriteTemplate_ArrowAndStar
	.word	gSprites
	.word	SpriteCallback_Star
	.word	0xff9c
.Lfe22:
	.size	 CreateStarSprite,.Lfe22-CreateStarSprite
	.align	2, 0
	.type	 SpriteCallback_Star,function
	.thumb_func
SpriteCallback_Star:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x30]
	ldrh	r1, [r2, #0x34]
	add	r0, r0, r1
	strh	r0, [r2, #0x34]
	ldrh	r1, [r2, #0x32]
	ldrh	r3, [r2, #0x36]
	add	r1, r1, r3
	strh	r1, [r2, #0x36]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x18
	ldrh	r3, [r2, #0x38]
	add	r0, r0, r3
	strh	r0, [r2, #0x20]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x18
	ldrh	r3, [r2, #0x3a]
	add	r1, r1, r3
	strh	r1, [r2, #0x22]
	sub	r0, r0, #0x69
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1b
	bhi	.L201	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3c
	ble	.L201	@cond_branch
	cmp	r0, #0x58
	ble	.L200	@cond_branch
.L201:
	ldr	r0, .L202
	str	r0, [r2, #0x1c]
.L200:
	pop	{r0}
	bx	r0
.L203:
	.align	2, 0
.L202:
	.word	SpriteCallback_DestroyStar
.Lfe23:
	.size	 SpriteCallback_Star,.Lfe23-SpriteCallback_Star
	.align	2, 0
	.type	 SpriteCallback_DestroyStar,function
	.thumb_func
SpriteCallback_DestroyStar:
	push	{lr}
	bl	DestroySprite
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 SpriteCallback_DestroyStar,.Lfe24-SpriteCallback_DestroyStar
.text
	.align	2, 0 @ Don't pad with nop

