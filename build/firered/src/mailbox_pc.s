@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 sWindowIds,object
	.size	 sWindowIds,3
sWindowIds:
	.space	3
	.align	2, 0
	.type	 sListMenuItems,object
	.size	 sListMenuItems,4
sListMenuItems:
	.word	0x0
	.section .rodata
	.align	2, 0
	.type	 sWindowTemplates,object
sWindowTemplates:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xa
	.byte	0x2
	.byte	0xf
	.short	0x8
	.byte	0x0
	.byte	0x13
	.byte	0x1
	.byte	0xa
	.byte	0x12
	.byte	0xf
	.short	0x1c
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0xf
	.byte	0x8
	.byte	0xf
	.short	0x1c
	.size	 sWindowTemplates,24
	.type	 sTextColor,object
	.size	 sTextColor,3
sTextColor:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.type	 sString_Dummy,object
sString_Dummy:
	.byte	0xff
	.size	 sString_Dummy,1
.text
	.align	2, 0
	.globl	MailboxPC_InitBuffers
	.type	 MailboxPC_InitBuffers,function
	.thumb_func
MailboxPC_InitBuffers:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	ldr	r4, .L12
	lsr	r0, r0, #0x15
	add	r0, r0, #0x8
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	bne	.L5	@cond_branch
	mov	r0, #0x0
	b	.L11
.L13:
	.align	2, 0
.L12:
	.word	sListMenuItems
.L5:
	mov	r2, #0x0
	ldr	r4, .L14
	mov	r3, #0xff
.L9:
	add	r0, r2, r4
	ldrb	r1, [r0]
	orr	r1, r1, r3
	strb	r1, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x2
	bls	.L9	@cond_branch
	mov	r0, #0x1
.L11:
	pop	{r4}
	pop	{r1}
	bx	r1
.L15:
	.align	2, 0
.L14:
	.word	sWindowIds
.Lfe1:
	.size	 MailboxPC_InitBuffers,.Lfe1-MailboxPC_InitBuffers
	.align	2, 0
	.globl	MailboxPC_GetAddWindow
	.type	 MailboxPC_GetAddWindow,function
	.thumb_func
MailboxPC_GetAddWindow:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r0, .L18
	add	r4, r1, r0
	ldrb	r0, [r4]
	cmp	r0, #0xff
	bne	.L17	@cond_branch
	lsl	r0, r1, #0x3
	ldr	r1, .L18+0x4
	add	r0, r0, r1
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	SetStdWindowBorderStyle
.L17:
	ldrb	r0, [r4]
	pop	{r4}
	pop	{r1}
	bx	r1
.L19:
	.align	2, 0
.L18:
	.word	sWindowIds
	.word	sWindowTemplates
.Lfe2:
	.size	 MailboxPC_GetAddWindow,.Lfe2-MailboxPC_GetAddWindow
	.align	2, 0
	.globl	MailboxPC_RemoveWindow
	.type	 MailboxPC_RemoveWindow,function
	.thumb_func
MailboxPC_RemoveWindow:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L21
	add	r4, r4, r0
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	ClearWindowTilemap
	ldrb	r0, [r4]
	bl	RemoveWindow
	mov	r0, #0xff
	strb	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L22:
	.align	2, 0
.L21:
	.word	sWindowIds
.Lfe3:
	.size	 MailboxPC_RemoveWindow,.Lfe3-MailboxPC_RemoveWindow
	.align	2, 0
	.globl	MailboxPC_GetWindowId
	.type	 MailboxPC_GetWindowId,function
	.thumb_func
MailboxPC_GetWindowId:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L24
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L25:
	.align	2, 0
.L24:
	.word	sWindowIds
.Lfe4:
	.size	 MailboxPC_GetWindowId,.Lfe4-MailboxPC_GetWindowId
	.align	2, 0
	.type	 ItemPrintFunc,function
	.thumb_func
ItemPrintFunc:
	push	{r4, r5, lr}
	add	sp, sp, #-0x34
	add	r3, r1, #0
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r3, r0
	beq	.L27	@cond_branch
	ldr	r0, .L29
	lsl	r1, r3, #0x3
	add	r1, r1, r3
	lsl	r1, r1, #0x2
	ldr	r0, [r0]
	add	r1, r1, r0
	ldr	r0, .L29+0x4
	add	r1, r1, r0
	add	r0, sp, #0x14
	bl	StringCopy
	add	r0, sp, #0x14
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x5
	bhi	.L28	@cond_branch
	add	r0, sp, #0x14
	mov	r1, #0x1
	bl	ConvertInternationalString
.L28:
	mov	r0, #0x0
	str	r0, [sp]
	str	r0, [sp, #0x4]
	ldr	r0, .L29+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	neg	r0, r0
	str	r0, [sp, #0xc]
	add	r0, sp, #0x14
	str	r0, [sp, #0x10]
	add	r0, r4, #0
	mov	r1, #0x2
	mov	r2, #0x8
	add	r3, r5, #0
	bl	AddTextPrinterParameterized4
.L27:
	add	sp, sp, #0x34
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L30:
	.align	2, 0
.L29:
	.word	gSaveBlock1Ptr
	.word	0x2dce
	.word	sTextColor
.Lfe5:
	.size	 ItemPrintFunc,.Lfe5-ItemPrintFunc
	.align	2, 0
	.globl	MailboxPC_InitListMenu
	.type	 MailboxPC_InitListMenu,function
	.thumb_func
MailboxPC_InitListMenu:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	mov	r3, #0x0
	ldr	r7, .L37
	ldr	r0, .L37+0x4
	mov	ip, r0
	ldr	r5, .L37+0x8
	ldr	r1, .L37+0xc
	mov	r8, r1
	ldrb	r0, [r6, #0x5]
	cmp	r3, r0
	bcs	.L33	@cond_branch
	add	r2, r7, #0
	ldr	r4, .L37+0x10
.L35:
	ldr	r1, [r2]
	lsl	r0, r3, #0x3
	add	r0, r0, r1
	str	r4, [r0]
	str	r3, [r0, #0x4]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldrb	r1, [r6, #0x5]
	cmp	r3, r1
	bcc	.L35	@cond_branch
.L33:
	ldr	r2, [r7]
	lsl	r0, r3, #0x3
	add	r0, r0, r2
	mov	r1, ip
	str	r1, [r0]
	mov	r1, #0x2
	neg	r1, r1
	str	r1, [r0, #0x4]
	str	r2, [r5]
	ldrb	r0, [r6, #0x5]
	add	r0, r0, #0x1
	mov	r4, #0x0
	strh	r0, [r5, #0xc]
	mov	r1, r8
	ldrb	r0, [r1, #0x1]
	strb	r0, [r5, #0x10]
	strb	r4, [r5, #0x11]
	mov	r0, #0x2
	mov	r1, #0x0
	bl	GetMenuCursorDimensionByFont
	strb	r0, [r5, #0x12]
	strb	r4, [r5, #0x13]
	ldrb	r0, [r5, #0x16]
	mov	r2, #0x8
	neg	r2, r2
	and	r2, r2, r0
	mov	r0, #0x39
	neg	r0, r0
	and	r2, r2, r0
	mov	r0, #0x10
	orr	r2, r2, r0
	mov	r0, #0x8
	strh	r0, [r5, #0xe]
	ldrb	r0, [r5, #0x17]
	mov	r1, #0x40
	neg	r1, r1
	and	r1, r1, r0
	mov	r0, #0x2
	orr	r1, r1, r0
	mov	r0, #0x2a
	strb	r0, [r5, #0x14]
	mov	r0, #0x31
	strb	r0, [r5, #0x15]
	ldr	r0, .L37+0x14
	str	r0, [r5, #0x4]
	ldr	r0, .L37+0x18
	str	r0, [r5, #0x8]
	mov	r0, #0x3f
	and	r1, r1, r0
	strb	r1, [r5, #0x17]
	and	r2, r2, r0
	strb	r2, [r5, #0x16]
	ldrh	r1, [r6, #0x2]
	ldrh	r2, [r6]
	add	r0, r5, #0
	bl	ListMenuInit
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L38:
	.align	2, 0
.L37:
	.word	sListMenuItems
	.word	gFameCheckerText_Cancel
	.word	gMultiuseListMenuTemplate
	.word	sWindowIds
	.word	sString_Dummy
	.word	MoveCursorFunc
	.word	ItemPrintFunc
.Lfe6:
	.size	 MailboxPC_InitListMenu,.Lfe6-MailboxPC_InitListMenu
	.align	2, 0
	.type	 MoveCursorFunc,function
	.thumb_func
MoveCursorFunc:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0x1
	beq	.L40	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L40:
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 MoveCursorFunc,.Lfe7-MoveCursorFunc
	.align	2, 0
	.globl	MailboxPC_AddScrollIndicatorArrows
	.type	 MailboxPC_AddScrollIndicatorArrows,function
	.thumb_func
MailboxPC_AddScrollIndicatorArrows:
	push	{r4, lr}
	add	sp, sp, #-0x10
	add	r4, r0, #0
	ldrb	r0, [r4, #0x5]
	ldrb	r1, [r4, #0x4]
	sub	r0, r0, r1
	add	r0, r0, #0x1
	str	r0, [sp]
	mov	r0, #0x6e
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r0, r4, #0x2
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0xc2
	mov	r2, #0xc
	mov	r3, #0x94
	bl	AddScrollIndicatorArrowPairParameterized
	strb	r0, [r4, #0xa]
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 MailboxPC_AddScrollIndicatorArrows,.Lfe8-MailboxPC_AddScrollIndicatorArrows
	.align	2, 0
	.globl	MailboxPC_DestroyListMenuBuffer
	.type	 MailboxPC_DestroyListMenuBuffer,function
	.thumb_func
MailboxPC_DestroyListMenuBuffer:
	push	{lr}
	ldr	r0, .L43
	ldr	r0, [r0]
	bl	Free
	pop	{r0}
	bx	r0
.L44:
	.align	2, 0
.L43:
	.word	sListMenuItems
.Lfe9:
	.size	 MailboxPC_DestroyListMenuBuffer,.Lfe9-MailboxPC_DestroyListMenuBuffer
.text
	.align	2, 0 @ Don't pad with nop

