@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	sDownArrowCounterAndYCoordIdx
	.section ewram_data,"aw"
	.type	 sDownArrowCounterAndYCoordIdx,object
	.size	 sDownArrowCounterAndYCoordIdx,8
sDownArrowCounterAndYCoordIdx:
	.space	8
	.globl	gGiftIsFromEReader
	.type	 gGiftIsFromEReader,object
	.size	 gGiftIsFromEReader,1
gGiftIsFromEReader:
	.byte	0x0
	.section .rodata
	.align	1, 0
	.type	 sTextboxBorder_Pal,object
sTextboxBorder_Pal:
	.short	0x4a52
	.short	0x7ef2
	.short	0x7f93
	.short	0x7ff9
	.short	0x79ac
	.short	0x56d4
	.short	0x6338
	.short	0x6f9b
	.short	0x7fff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x318c
	.short	0x4a52
	.short	0x6318
	.short	0x0
	.size	 sTextboxBorder_Pal,32
	.align	2, 0
	.type	 sTextboxBorder_Gfx,object
sTextboxBorder_Gfx:
	.word	0x10010
	.word	-0xfffffcd
	.word	0x22019001
	.word	-0x6ffe0fde
	.word	0x11113301
	.word	0x19001f0
	.word	0x1f04444
	.word	-0xf01fe70
	.word	-0xffe0f8f
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1
	.size	 sTextboxBorder_Gfx,48
	.align	2, 0
	.type	 sBGTemplates,object
	.size	 sBGTemplates,16
sBGTemplates:
	.byte	0xf8
	.byte	0x0
	.byte	0x0
	.space	1
	.byte	0xe1
	.byte	0x10
	.byte	0x0
	.space	1
	.byte	0xd2
	.byte	0x20
	.byte	0x0
	.space	1
	.byte	0xc3
	.byte	0x30
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sMainWindows,object
sMainWindows:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1e
	.byte	0x2
	.byte	0xf
	.short	0x13
	.byte	0x0
	.byte	0x1
	.byte	0xf
	.byte	0x1c
	.byte	0x4
	.byte	0xf
	.short	0x4f
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x1e
	.byte	0x5
	.byte	0xd
	.short	0x4f
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sMainWindows,32
	.align	2, 0
	.type	 sWindowTemplate_YesNoMsg_Wide,object
	.size	 sWindowTemplate_YesNoMsg_Wide,8
sWindowTemplate_YesNoMsg_Wide:
	.byte	0x0
	.byte	0x1
	.byte	0xf
	.byte	0x1c
	.byte	0x4
	.byte	0xf
	.short	0xe5
	.align	2, 0
	.type	 sWindowTemplate_YesNoMsg,object
	.size	 sWindowTemplate_YesNoMsg,8
sWindowTemplate_YesNoMsg:
	.byte	0x0
	.byte	0x1
	.byte	0xf
	.byte	0x14
	.byte	0x4
	.byte	0xf
	.short	0xe5
	.align	2, 0
	.type	 sWindowTemplate_GiftSelect,object
	.size	 sWindowTemplate_GiftSelect,8
sWindowTemplate_GiftSelect:
	.byte	0x0
	.byte	0x1
	.byte	0xf
	.byte	0x13
	.byte	0x4
	.byte	0xf
	.short	0xe5
	.align	2, 0
	.type	 sWindowTemplate_ThreeOptions,object
	.size	 sWindowTemplate_ThreeOptions,8
sWindowTemplate_ThreeOptions:
	.byte	0x0
	.byte	0x8
	.byte	0x5
	.byte	0xe
	.byte	0x5
	.byte	0xe
	.short	0x155
	.align	2, 0
	.type	 sWindowTemplate_YesNoBox,object
	.size	 sWindowTemplate_YesNoBox,8
sWindowTemplate_YesNoBox:
	.byte	0x0
	.byte	0x17
	.byte	0xf
	.byte	0x6
	.byte	0x4
	.byte	0xe
	.short	0x155
	.align	2, 0
	.type	 sWindowTemplate_GiftSelect_3Options,object
	.size	 sWindowTemplate_GiftSelect_3Options,8
sWindowTemplate_GiftSelect_3Options:
	.byte	0x0
	.byte	0x16
	.byte	0xc
	.byte	0x7
	.byte	0x7
	.byte	0xe
	.short	0x155
	.align	2, 0
	.type	 sWindowTemplate_GiftSelect_2Options,object
	.size	 sWindowTemplate_GiftSelect_2Options,8
sWindowTemplate_GiftSelect_2Options:
	.byte	0x0
	.byte	0x16
	.byte	0xe
	.byte	0x7
	.byte	0x5
	.byte	0xe
	.short	0x155
	.align	2, 0
	.type	 sWindowTemplate_GiftSelect_1Option,object
	.size	 sWindowTemplate_GiftSelect_1Option,8
sWindowTemplate_GiftSelect_1Option:
	.byte	0x0
	.byte	0x16
	.byte	0xf
	.byte	0x7
	.byte	0x4
	.byte	0xe
	.short	0x155
	.align	2, 0
	.type	 sListMenuItems_CardsOrNews,object
sListMenuItems_CardsOrNews:
	.word	gText_WonderCards
	.word	0x0
	.word	gText_WonderNews
	.word	0x1
	.word	gText_Exit3
	.word	-0x2
	.size	 sListMenuItems_CardsOrNews,24
	.align	2, 0
	.type	 sListMenuItems_WirelessOrFriend,object
sListMenuItems_WirelessOrFriend:
	.word	gText_WirelessCommunication
	.word	0x0
	.word	gText_Friend2
	.word	0x1
	.word	gFameCheckerText_Cancel
	.word	-0x2
	.size	 sListMenuItems_WirelessOrFriend,24
	.align	2, 0
	.type	 sListMenuTemplate_ThreeOptions,object
	.size	 sListMenuTemplate_ThreeOptions,24
sListMenuTemplate_ThreeOptions:
	.word	0x0
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x3
	.short	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x20
	.byte	0x31
	.byte	0x0
	.byte	0x2
	.align	2, 0
	.type	 sListMenuItems_ReceiveSendToss,object
sListMenuItems_ReceiveSendToss:
	.word	gText_Receive
	.word	0x0
	.word	gText_Send
	.word	0x1
	.word	gText_Toss
	.word	0x2
	.word	gFameCheckerText_Cancel
	.word	-0x2
	.size	 sListMenuItems_ReceiveSendToss,32
	.align	2, 0
	.type	 sListMenuItems_ReceiveToss,object
sListMenuItems_ReceiveToss:
	.word	gText_Receive
	.word	0x0
	.word	gText_Toss
	.word	0x2
	.word	gFameCheckerText_Cancel
	.word	-0x2
	.size	 sListMenuItems_ReceiveToss,24
	.align	2, 0
	.type	 sListMenuItems_ReceiveSend,object
sListMenuItems_ReceiveSend:
	.word	gText_Receive
	.word	0x0
	.word	gText_Send
	.word	0x1
	.word	gFameCheckerText_Cancel
	.word	-0x2
	.size	 sListMenuItems_ReceiveSend,24
	.align	2, 0
	.type	 sListMenuItems_Receive,object
sListMenuItems_Receive:
	.word	gText_Receive
	.word	0x0
	.word	gFameCheckerText_Cancel
	.word	-0x2
	.size	 sListMenuItems_Receive,16
	.align	2, 0
	.type	 sListMenu_ReceiveSendToss,object
	.size	 sListMenu_ReceiveSendToss,24
sListMenu_ReceiveSendToss:
	.word	sListMenuItems_ReceiveSendToss
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x4
	.short	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x22
	.byte	0x31
	.byte	0x0
	.byte	0x2
	.align	2, 0
	.type	 sListMenu_ReceiveToss,object
	.size	 sListMenu_ReceiveToss,24
sListMenu_ReceiveToss:
	.word	sListMenuItems_ReceiveToss
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x3
	.short	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x20
	.byte	0x31
	.byte	0x0
	.byte	0x2
	.align	2, 0
	.type	 sListMenu_ReceiveSend,object
	.size	 sListMenu_ReceiveSend,24
sListMenu_ReceiveSend:
	.word	sListMenuItems_ReceiveSend
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x3
	.short	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x20
	.byte	0x31
	.byte	0x0
	.byte	0x2
	.align	2, 0
	.type	 sListMenu_Receive,object
	.size	 sListMenu_Receive,24
sListMenu_Receive:
	.word	sListMenuItems_Receive
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x2
	.short	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x20
	.byte	0x31
	.byte	0x10
	.byte	0x2
	.align	2, 0
	.type	 sUnusedMenuTexts,object
sUnusedMenuTexts:
	.word	gText_VarietyOfEventsImportedWireless
	.word	gText_WonderCardsInPossession
	.word	gText_ReadNewsThatArrived
	.word	gText_ReturnToTitle
	.size	 sUnusedMenuTexts,16
	.align	2, 0
	.type	 sTextColors_TopMenu,object
	.size	 sTextColors_TopMenu,3
sTextColors_TopMenu:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.align	2, 0
	.type	 sTextColors_TopMenu_Copy,object
	.size	 sTextColors_TopMenu_Copy,3
sTextColors_TopMenu_Copy:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.align	2, 0
	.type	 sMG_Ereader_TextColor_2,object
	.size	 sMG_Ereader_TextColor_2,3
sMG_Ereader_TextColor_2:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.type	 sText_Test,object
sText_Test:
	.byte	0x63
	.byte	0x5d
	.byte	0x64
	.byte	0xff
	.size	 sText_Test,4
	.type	 sText_EonTicket,object
sText_EonTicket:
	.byte	0x21
	.byte	0x3a
	.byte	0x2e
	.byte	0x19
	.byte	0x61
	.byte	0x59
	.byte	0xa0
	.byte	0x64
	.byte	0xff
	.size	 sText_EonTicket,9
.text
	.align	2, 0
	.type	 VBlankCB_MysteryGiftEReader,function
	.thumb_func
VBlankCB_MysteryGiftEReader:
	push	{lr}
	bl	ProcessSpriteCopyRequests
	bl	LoadOam
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 VBlankCB_MysteryGiftEReader,.Lfe1-VBlankCB_MysteryGiftEReader
	.align	2, 0
	.globl	CB2_MysteryGiftEReader
	.type	 CB2_MysteryGiftEReader,function
	.thumb_func
CB2_MysteryGiftEReader:
	push	{lr}
	bl	RunTasks
	bl	RunTextPrinters
	bl	AnimateSprites
	bl	BuildOamBuffer
	pop	{r0}
	bx	r0
.Lfe2:
	.size	 CB2_MysteryGiftEReader,.Lfe2-CB2_MysteryGiftEReader
	.align	2, 0
	.globl	HandleMysteryGiftOrEReaderSetup
	.type	 HandleMysteryGiftOrEReaderSetup,function
	.thumb_func
HandleMysteryGiftOrEReaderSetup:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	add	r7, r0, #0
	ldr	r0, .L17
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r6, r0, r1
	ldrb	r5, [r6]
	cmp	r5, #0x1
	bne	.LCB40
	b	.L9	@long jump
.LCB40:
	cmp	r5, #0x1
	bgt	.L14	@cond_branch
	cmp	r5, #0
	beq	.L8	@cond_branch
	b	.L7
.L18:
	.align	2, 0
.L17:
	.word	gMain
.L14:
	cmp	r5, #0x2
	bne	.LCB55
	b	.L10	@long jump
.LCB55:
	cmp	r5, #0x3
	bne	.LCB57
	b	.L11	@long jump
.LCB57:
	b	.L7
.L8:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	bl	ScanlineEffect_Stop
	mov	r0, #0x1
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L19
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r4, #0x80
	lsl	r4, r4, #0x4
	add	r0, r4, #0
	bl	Alloc
	add	r1, r0, #0
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	add	r0, r4, #0
	bl	Alloc
	add	r1, r0, #0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	add	r0, r4, #0
	bl	Alloc
	add	r1, r0, #0
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	add	r0, r4, #0
	bl	Alloc
	add	r1, r0, #0
	mov	r0, #0x0
	bl	SetBgTilemapBuffer
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0xe0
	bl	LoadUserWindowGfx2
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xf0
	bl	LoadStdWindowGfxOnBg
	ldr	r1, .L19+0x4
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	str	r5, [sp]
	mov	r0, #0x3
	mov	r3, #0x0
	bl	DecompressAndLoadBgGfxUsingHeap
	ldr	r0, .L19+0x8
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	mov	r1, #0xc0
	lsl	r1, r1, #0x7
	mov	r0, #0x0
	bl	ClearGpuRegBits
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	b	.L16
.L20:
	.align	2, 0
.L19:
	.word	sBGTemplates
	.word	sTextboxBorder_Gfx
	.word	sMainWindows
.L9:
	ldr	r0, .L21
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r0, #0x2
	bl	GetTextWindowPalette
	mov	r1, #0xd0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r4, #0x20
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r5, #0x11
	str	r5, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	bl	MG_DrawCheckerboardPattern
	lsl	r0, r7, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	PrintMysteryGiftOrEReaderTopMenu
	b	.L16
.L22:
	.align	2, 0
.L21:
	.word	sTextboxBorder_Pal
.L10:
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L16:
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	strb	r0, [r6]
	b	.L7
.L11:
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	ldr	r0, .L23
	bl	PlayBGM
	ldr	r0, .L23+0x4
	bl	SetVBlankCallback
	mov	r0, #0xc5
	bl	EnableInterrupts
	mov	r0, #0x1
	b	.L15
.L24:
	.align	2, 0
.L23:
	.word	0x149
	.word	VBlankCB_MysteryGiftEReader
.L7:
	mov	r0, #0x0
.L15:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 HandleMysteryGiftOrEReaderSetup,.Lfe3-HandleMysteryGiftOrEReaderSetup
	.align	2, 0
	.globl	CB2_InitMysteryGift
	.type	 CB2_InitMysteryGift,function
	.thumb_func
CB2_InitMysteryGift:
	push	{lr}
	mov	r0, #0x0
	bl	HandleMysteryGiftOrEReaderSetup
	cmp	r0, #0
	beq	.L26	@cond_branch
	ldr	r0, .L27
	bl	SetMainCallback2
	ldr	r1, .L27+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	bl	CreateMysteryGiftTask
.L26:
	pop	{r0}
	bx	r0
.L28:
	.align	2, 0
.L27:
	.word	CB2_MysteryGiftEReader
	.word	gGiftIsFromEReader
.Lfe4:
	.size	 CB2_InitMysteryGift,.Lfe4-CB2_InitMysteryGift
	.align	2, 0
	.globl	CB2_InitEReader
	.type	 CB2_InitEReader,function
	.thumb_func
CB2_InitEReader:
	push	{lr}
	mov	r0, #0x1
	bl	HandleMysteryGiftOrEReaderSetup
	cmp	r0, #0
	beq	.L30	@cond_branch
	ldr	r0, .L31
	bl	SetMainCallback2
	ldr	r1, .L31+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	bl	CreateEReaderTask
.L30:
	pop	{r0}
	bx	r0
.L32:
	.align	2, 0
.L31:
	.word	CB2_MysteryGiftEReader
	.word	gGiftIsFromEReader
.Lfe5:
	.size	 CB2_InitEReader,.Lfe5-CB2_InitEReader
	.align	2, 0
	.globl	MainCB_FreeAllBuffersAndReturnToInitTitleScreen
	.type	 MainCB_FreeAllBuffersAndReturnToInitTitleScreen,function
	.thumb_func
MainCB_FreeAllBuffersAndReturnToInitTitleScreen:
	push	{lr}
	ldr	r1, .L34
	mov	r0, #0x0
	strb	r0, [r1]
	bl	FreeAllWindowBuffers
	mov	r0, #0x0
	bl	GetBgTilemapBuffer
	bl	Free
	mov	r0, #0x1
	bl	GetBgTilemapBuffer
	bl	Free
	mov	r0, #0x2
	bl	GetBgTilemapBuffer
	bl	Free
	mov	r0, #0x3
	bl	GetBgTilemapBuffer
	bl	Free
	ldr	r0, .L34+0x4
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L35:
	.align	2, 0
.L34:
	.word	gGiftIsFromEReader
	.word	CB2_InitTitleScreen
.Lfe6:
	.size	 MainCB_FreeAllBuffersAndReturnToInitTitleScreen,.Lfe6-MainCB_FreeAllBuffersAndReturnToInitTitleScreen
	.align	2, 0
	.globl	PrintMysteryGiftOrEReaderTopMenu
	.type	 PrintMysteryGiftOrEReaderTopMenu,function
	.thumb_func
PrintMysteryGiftOrEReaderTopMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	cmp	r5, #0
	bne	.L37	@cond_branch
	ldr	r6, .L41
	cmp	r4, #0x1
	bne	.L38	@cond_branch
	ldr	r6, .L41+0x4
.L38:
	str	r5, [sp]
	str	r5, [sp, #0x4]
	ldr	r4, .L41+0x8
	str	r4, [sp, #0x8]
	str	r5, [sp, #0xc]
	ldr	r0, .L41+0xc
	str	r0, [sp, #0x10]
	mov	r0, #0x0
	mov	r1, #0x2
	mov	r2, #0x2
	mov	r3, #0x2
	bl	AddTextPrinterParameterized4
	mov	r0, #0x0
	add	r1, r6, #0
	mov	r2, #0x0
	bl	GetStringWidth
	mov	r2, #0xde
	sub	r2, r2, r0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r5, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	str	r5, [sp, #0xc]
	str	r6, [sp, #0x10]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r3, #0x2
	bl	AddTextPrinterParameterized4
	b	.L40
.L42:
	.align	2, 0
.L41:
	.word	gText_PickOKCancel
	.word	gText_PickOKExit
	.word	sTextColors_TopMenu
	.word	gText_MysteryGift2
.L37:
	mov	r4, #0x0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	ldr	r5, .L43
	str	r5, [sp, #0x8]
	str	r4, [sp, #0xc]
	ldr	r0, .L43+0x4
	str	r0, [sp, #0x10]
	mov	r0, #0x0
	mov	r1, #0x2
	mov	r2, #0x2
	mov	r3, #0x2
	bl	AddTextPrinterParameterized4
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	str	r4, [sp, #0xc]
	ldr	r0, .L43+0x8
	str	r0, [sp, #0x10]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x78
	mov	r3, #0x2
	bl	AddTextPrinterParameterized4
.L40:
	mov	r0, #0x0
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	PutWindowTilemap
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L44:
	.align	2, 0
.L43:
	.word	sTextColors_TopMenu
	.word	gJPText_MysteryGift
	.word	gJPText_DecideStop
.Lfe7:
	.size	 PrintMysteryGiftOrEReaderTopMenu,.Lfe7-PrintMysteryGiftOrEReaderTopMenu
	.align	2, 0
	.globl	MG_DrawTextBorder
	.type	 MG_DrawTextBorder,function
	.thumb_func
MG_DrawTextBorder:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	mov	r2, #0xf
	bl	DrawTextBorderOuter
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 MG_DrawTextBorder,.Lfe8-MG_DrawTextBorder
	.align	2, 0
	.globl	MG_DrawCheckerboardPattern
	.type	 MG_DrawCheckerboardPattern,function
	.thumb_func
MG_DrawCheckerboardPattern:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	mov	r0, #0x0
	mov	r8, r0
	mov	r0, #0x20
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r4, #0x1
	mov	r1, #0x11
	mov	sl, r1
.L50:
	mov	r7, #0x0
	mov	r0, r8
	add	r0, r0, #0x2
	mov	r1, #0x1
	add	r1, r1, r8
	mov	r9, r1
	lsl	r5, r0, #0x18
	mov	r6, #0x0
.L54:
	mov	r1, r8
	and	r1, r1, r4
	add	r0, r7, #0
	and	r0, r0, r4
	cmp	r1, r0
	beq	.L55	@cond_branch
	lsr	r2, r6, #0x18
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, sl
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x1
	lsr	r3, r5, #0x18
	bl	FillBgTilemapBufferRect
	b	.L53
.L55:
	lsr	r2, r6, #0x18
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r1, sl
	str	r1, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x2
	lsr	r3, r5, #0x18
	bl	FillBgTilemapBufferRect
.L53:
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	add	r6, r6, r0
	add	r7, r7, #0x1
	cmp	r7, #0x1f
	ble	.L54	@cond_branch
	mov	r8, r9
	mov	r1, r8
	cmp	r1, #0x11
	ble	.L50	@cond_branch
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 MG_DrawCheckerboardPattern,.Lfe9-MG_DrawCheckerboardPattern
	.align	2, 0
	.globl	ClearScreenInBg0
	.type	 ClearScreenInBg0,function
	.thumb_func
ClearScreenInBg0:
	push	{lr}
	add	sp, sp, #-0xc
	cmp	r0, #0
	beq	.L61	@cond_branch
	cmp	r0, #0x1
	beq	.L62	@cond_branch
	b	.L60
.L61:
	mov	r0, #0x20
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	b	.L60
.L62:
	mov	r0, #0x20
	str	r0, [sp]
	mov	r0, #0x1e
	str	r0, [sp, #0x4]
	mov	r0, #0x11
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	FillBgTilemapBufferRect
.L60:
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 ClearScreenInBg0,.Lfe10-ClearScreenInBg0
	.align	2, 0
	.globl	AddTextPrinterToWindow1
	.type	 AddTextPrinterToWindow1,function
	.thumb_func
AddTextPrinterToWindow1:
	push	{r4, lr}
	add	sp, sp, #-0x14
	add	r1, r0, #0
	ldr	r4, .L66
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	mov	r1, #0x0
	str	r1, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	ldr	r0, .L66+0x4
	str	r0, [sp, #0x8]
	str	r1, [sp, #0xc]
	str	r4, [sp, #0x10]
	mov	r0, #0x1
	mov	r1, #0x2
	mov	r2, #0x0
	mov	r3, #0x2
	bl	AddTextPrinterParameterized4
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0xf
	bl	DrawTextBorderOuter
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x1
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r0}
	bx	r0
.L67:
	.align	2, 0
.L66:
	.word	gStringVar4
	.word	sMG_Ereader_TextColor_2
.Lfe11:
	.size	 AddTextPrinterToWindow1,.Lfe11-AddTextPrinterToWindow1
	.align	2, 0
	.type	 ClearTextWindow,function
	.thumb_func
ClearTextWindow:
	push	{lr}
	mov	r0, #0x1
	bl	rbox_fill_rectangle
	mov	r0, #0x1
	bl	ClearWindowTilemap
	mov	r0, #0x1
	mov	r1, #0x1
	bl	CopyWindowToVram
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 ClearTextWindow,.Lfe12-ClearTextWindow
	.align	2, 0
	.globl	PrintMysteryGiftMenuMessage
	.type	 PrintMysteryGiftMenuMessage,function
	.thumb_func
PrintMysteryGiftMenuMessage:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	add	r0, r1, #0
	ldrb	r2, [r4]
	cmp	r2, #0x1
	beq	.L73	@cond_branch
	cmp	r2, #0x1
	bgt	.L79	@cond_branch
	cmp	r2, #0
	beq	.L71	@cond_branch
	b	.L70
.L79:
	cmp	r2, #0x2
	beq	.L75	@cond_branch
	cmp	r2, #0xff
	beq	.L76	@cond_branch
	b	.L70
.L71:
	bl	AddTextPrinterToWindow1
	b	.L72
.L73:
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L82
	str	r0, [sp, #0x4]
	add	r0, r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0xd0
	mov	r2, #0x14
	mov	r3, #0x1
	bl	DrawDownArrow
	ldr	r0, .L82+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L70	@cond_branch
.L72:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	b	.L81
.L83:
	.align	2, 0
.L82:
	.word	sDownArrowCounterAndYCoordIdx
	.word	gMain
.L75:
	mov	r0, #0x1
	str	r0, [sp]
	ldr	r0, .L84
	str	r0, [sp, #0x4]
	add	r0, r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0xd0
	mov	r2, #0x14
	mov	r3, #0x1
	bl	DrawDownArrow
	mov	r0, #0x0
	strb	r0, [r4]
	bl	ClearTextWindow
	mov	r0, #0x1
	b	.L80
.L85:
	.align	2, 0
.L84:
	.word	sDownArrowCounterAndYCoordIdx
.L76:
	mov	r0, #0x2
.L81:
	strb	r0, [r4]
.L70:
	mov	r0, #0x0
.L80:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 PrintMysteryGiftMenuMessage,.Lfe13-PrintMysteryGiftMenuMessage
	.align	2, 0
	.type	 HideDownArrow,function
	.thumb_func
HideDownArrow:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L87
	str	r0, [sp, #0x4]
	add	r0, r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0xd0
	mov	r2, #0x14
	mov	r3, #0x1
	bl	DrawDownArrow
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L88:
	.align	2, 0
.L87:
	.word	sDownArrowCounterAndYCoordIdx
.Lfe14:
	.size	 HideDownArrow,.Lfe14-HideDownArrow
	.align	2, 0
	.type	 ShowDownArrow,function
	.thumb_func
ShowDownArrow:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x1
	str	r0, [sp]
	ldr	r0, .L90
	str	r0, [sp, #0x4]
	add	r0, r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0xd0
	mov	r2, #0x14
	mov	r3, #0x1
	bl	DrawDownArrow
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.L91:
	.align	2, 0
.L90:
	.word	sDownArrowCounterAndYCoordIdx
.Lfe15:
	.size	 ShowDownArrow,.Lfe15-ShowDownArrow
	.align	2, 0
	.type	 HideDownArrowAndWaitButton,function
	.thumb_func
HideDownArrowAndWaitButton:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L94	@cond_branch
	cmp	r0, #0x1
	beq	.L96	@cond_branch
	b	.L93
.L94:
	bl	HideDownArrow
	ldr	r0, .L100
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L93	@cond_branch
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L93
.L101:
	.align	2, 0
.L100:
	.word	gMain
.L96:
	bl	ShowDownArrow
	mov	r0, #0x0
	strb	r0, [r4]
	mov	r0, #0x1
	b	.L99
.L93:
	mov	r0, #0x0
.L99:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 HideDownArrowAndWaitButton,.Lfe16-HideDownArrowAndWaitButton
	.align	2, 0
	.type	 PrintStringAndWait2Seconds,function
	.thumb_func
PrintStringAndWait2Seconds:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	bne	.L103	@cond_branch
	add	r0, r1, #0
	bl	AddTextPrinterToWindow1
.L103:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x78
	bhi	.L104	@cond_branch
	mov	r0, #0x0
	b	.L106
.L104:
	mov	r0, #0x0
	strb	r0, [r4]
	bl	ClearTextWindow
	mov	r0, #0x1
.L106:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 PrintStringAndWait2Seconds,.Lfe17-PrintStringAndWait2Seconds
	.align	2, 0
	.type	 MysteryGift_HandleThreeOptionMenu,function
	.thumb_func
MysteryGift_HandleThreeOptionMenu:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x24
	lsl	r2, r2, #0x18
	add	r1, sp, #0x4
	ldr	r0, .L118
	ldmia	r0!, {r3, r4, r5}
	stmia	r1!, {r3, r4, r5}
	ldmia	r0!, {r3, r4, r5}
	stmia	r1!, {r3, r4, r5}
	ldr	r0, .L118+0x4
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x1c]
	str	r1, [sp, #0x20]
	cmp	r2, #0
	bne	.L108	@cond_branch
	ldr	r0, .L118+0x8
	b	.L117
.L119:
	.align	2, 0
.L118:
	.word	sListMenuTemplate_ThreeOptions
	.word	sWindowTemplate_ThreeOptions
	.word	sListMenuItems_CardsOrNews
.L108:
	ldr	r0, .L120
.L117:
	str	r0, [sp, #0x4]
	mov	r6, #0x0
	mov	r4, #0x0
	add	r0, sp, #0x4
	add	r7, sp, #0x1c
	ldrh	r0, [r0, #0xc]
	cmp	r6, r0
	bcs	.L111	@cond_branch
	add	r5, sp, #0x4
.L113:
	ldr	r1, [sp, #0x4]
	lsl	r0, r4, #0x3
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrb	r2, [r5, #0x16]
	lsl	r2, r2, #0x1d
	lsr	r2, r2, #0x1d
	mov	r0, #0x2
	bl	GetStringWidth
	cmp	r0, r6
	bls	.L112	@cond_branch
	add	r6, r0, #0
.L112:
	add	r4, r4, #0x1
	ldrh	r0, [r5, #0xc]
	cmp	r4, r0
	bcc	.L113	@cond_branch
.L111:
	add	r2, r6, #0
	add	r2, r2, #0x9
	lsr	r2, r2, #0x3
	add	r2, r2, #0x2
	mov	r0, #0x2
	neg	r0, r0
	and	r2, r2, r0
	lsl	r3, r2, #0x18
	ldr	r0, .L120+0x4
	ldr	r1, [sp, #0x1c]
	and	r1, r1, r0
	orr	r1, r1, r3
	mov	r0, #0x1e
	sub	r0, r0, r2
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x10
	ldr	r2, .L120+0x8
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp, #0x1c]
	mov	r0, #0xe0
	str	r0, [sp]
	add	r0, r7, #0
	add	r1, sp, #0x4
	mov	r2, #0x1
	mov	r3, #0xa
	bl	DoMysteryGiftListMenu
	add	r4, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L116	@cond_branch
	mov	r0, #0x2
	bl	ClearWindowTilemap
	mov	r0, #0x2
	mov	r1, #0x1
	bl	CopyWindowToVram
.L116:
	add	r0, r4, #0
	add	sp, sp, #0x24
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L121:
	.align	2, 0
.L120:
	.word	sListMenuItems_WirelessOrFriend
	.word	0xffffff
	.word	-0xff01
.Lfe18:
	.size	 MysteryGift_HandleThreeOptionMenu,.Lfe18-MysteryGift_HandleThreeOptionMenu
	.align	2, 0
	.globl	DoMysteryGiftYesNo
	.type	 DoMysteryGiftYesNo,function
	.thumb_func
DoMysteryGiftYesNo:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x1c
	add	r5, r0, #0
	add	r4, r1, #0
	add	r1, r3, #0
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldrb	r0, [r5]
	cmp	r0, #0x1
	beq	.L127	@cond_branch
	cmp	r0, #0x1
	bgt	.L135	@cond_branch
	cmp	r0, #0
	beq	.L124	@cond_branch
	b	.L123
.L135:
	cmp	r0, #0x2
	beq	.L130	@cond_branch
	cmp	r0, #0xff
	bne	.LCB1160
	b	.L132	@long jump
.LCB1160:
	b	.L123
.L124:
	ldr	r0, .L140
	bl	StringExpandPlaceholders
	cmp	r6, #0
	bne	.L125	@cond_branch
	ldr	r0, .L140+0x4
	b	.L137
.L141:
	.align	2, 0
.L140:
	.word	gStringVar4
	.word	sWindowTemplate_YesNoMsg_Wide
.L125:
	ldr	r0, .L142
.L137:
	bl	AddWindow
	strh	r0, [r4]
	ldrb	r0, [r4]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldrb	r0, [r4]
	mov	r2, #0x0
	str	r2, [sp]
	mov	r1, #0x2
	str	r1, [sp, #0x4]
	ldr	r1, .L142+0x4
	str	r1, [sp, #0x8]
	str	r2, [sp, #0xc]
	ldr	r1, .L142+0x8
	str	r1, [sp, #0x10]
	mov	r1, #0x2
	mov	r3, #0x2
	bl	AddTextPrinterParameterized4
	ldrb	r0, [r4]
	mov	r1, #0x1
	mov	r2, #0xf
	bl	DrawTextBorderOuter
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrb	r0, [r4]
	bl	PutWindowTilemap
	b	.L138
.L143:
	.align	2, 0
.L142:
	.word	sWindowTemplate_YesNoMsg
	.word	sMG_Ereader_TextColor_2
	.word	gStringVar4
.L127:
	ldr	r0, .L144
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp, #0x14]
	str	r1, [sp, #0x18]
	cmp	r6, #0
	bne	.L128	@cond_branch
	ldr	r0, .L144+0x4
	ldr	r1, [sp, #0x14]
	and	r1, r1, r0
	mov	r0, #0x90
	lsl	r0, r0, #0xc
	b	.L139
.L145:
	.align	2, 0
.L144:
	.word	sWindowTemplate_YesNoBox
	.word	-0xff0001
.L128:
	ldr	r0, .L146
	ldr	r1, [sp, #0x14]
	and	r1, r1, r0
	mov	r0, #0xf0
	lsl	r0, r0, #0xc
.L139:
	orr	r1, r1, r0
	str	r1, [sp, #0x14]
	mov	r0, #0xa
	str	r0, [sp]
	mov	r0, #0xe
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	add	r0, sp, #0x14
	mov	r1, #0x2
	mov	r2, #0x0
	mov	r3, #0x2
	bl	CreateYesNoMenu
.L138:
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	b	.L123
.L147:
	.align	2, 0
.L146:
	.word	-0xff0001
.L130:
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r6, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bhi	.L123	@cond_branch
	mov	r0, #0x0
	strb	r0, [r5]
	ldrb	r0, [r4]
	bl	rbox_fill_rectangle
	ldrb	r0, [r4]
	bl	ClearWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldrb	r0, [r4]
	bl	RemoveWindow
	add	r0, r6, #0
	b	.L136
.L132:
	mov	r0, #0x0
	strb	r0, [r5]
	ldrb	r0, [r4]
	bl	rbox_fill_rectangle
	ldrb	r0, [r4]
	bl	ClearWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldrb	r0, [r4]
	bl	RemoveWindow
	mov	r0, #0x1
	neg	r0, r0
	b	.L136
.L123:
	mov	r0, #0x2
	neg	r0, r0
.L136:
	add	sp, sp, #0x1c
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 DoMysteryGiftYesNo,.Lfe19-DoMysteryGiftYesNo
	.align	2, 0
	.type	 HandleMysteryGiftListMenu,function
	.thumb_func
HandleMysteryGiftListMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	add	r6, r0, #0
	add	r5, r1, #0
	ldrb	r0, [r6]
	cmp	r0, #0x1
	beq	.L153	@cond_branch
	cmp	r0, #0x1
	bgt	.L164	@cond_branch
	cmp	r0, #0
	beq	.L150	@cond_branch
	b	.L149
.L164:
	cmp	r0, #0xff
	bne	.LCB1413
	b	.L161	@long jump
.LCB1413:
	b	.L149
.L150:
	cmp	r2, #0
	bne	.L151	@cond_branch
	ldr	r0, .L167
	ldr	r1, .L167+0x4
	bl	StringExpandPlaceholders
	b	.L152
.L168:
	.align	2, 0
.L167:
	.word	gStringVar4
	.word	gText_WhatToDoWithCards
.L151:
	ldr	r0, .L169
	ldr	r1, .L169+0x4
	bl	StringExpandPlaceholders
.L152:
	ldr	r0, .L169+0x8
	bl	AddWindow
	strh	r0, [r5]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldrb	r0, [r5]
	mov	r2, #0x0
	str	r2, [sp]
	mov	r1, #0x2
	str	r1, [sp, #0x4]
	ldr	r1, .L169+0xc
	str	r1, [sp, #0x8]
	str	r2, [sp, #0xc]
	ldr	r1, .L169
	str	r1, [sp, #0x10]
	mov	r1, #0x2
	mov	r3, #0x2
	bl	AddTextPrinterParameterized4
	ldrb	r0, [r5]
	mov	r1, #0x1
	mov	r2, #0xf
	bl	DrawTextBorderOuter
	ldrb	r0, [r5]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrb	r0, [r5]
	bl	PutWindowTilemap
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	strb	r0, [r6]
	b	.L149
.L170:
	.align	2, 0
.L169:
	.word	gStringVar4
	.word	gText_WhatToDoWithNews
	.word	sWindowTemplate_GiftSelect
	.word	sMG_Ereader_TextColor_2
.L153:
	cmp	r3, #0
	beq	.L154	@cond_branch
	cmp	r2, #0
	bne	.L155	@cond_branch
	ldr	r0, .L171
	ldr	r1, .L171+0x4
	b	.L166
.L172:
	.align	2, 0
.L171:
	.word	sWindowTemplate_GiftSelect_2Options
	.word	sListMenu_ReceiveToss
.L155:
	ldr	r0, .L173
	ldr	r1, .L173+0x4
	b	.L166
.L174:
	.align	2, 0
.L173:
	.word	sWindowTemplate_GiftSelect_1Option
	.word	sListMenu_Receive
.L154:
	cmp	r2, #0
	bne	.L158	@cond_branch
	ldr	r0, .L175
	ldr	r1, .L175+0x4
	b	.L166
.L176:
	.align	2, 0
.L175:
	.word	sWindowTemplate_GiftSelect_3Options
	.word	sListMenu_ReceiveSendToss
.L158:
	ldr	r0, .L177
	ldr	r1, .L177+0x4
.L166:
	mov	r2, #0xe0
	str	r2, [sp]
	mov	r2, #0x1
	mov	r3, #0xa
	bl	DoMysteryGiftListMenu
	add	r4, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L149	@cond_branch
	mov	r0, #0x0
	strb	r0, [r6]
	ldrb	r0, [r5]
	bl	rbox_fill_rectangle
	ldrb	r0, [r5]
	bl	ClearWindowTilemap
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldrb	r0, [r5]
	bl	RemoveWindow
	add	r0, r4, #0
	b	.L165
.L178:
	.align	2, 0
.L177:
	.word	sWindowTemplate_GiftSelect_2Options
	.word	sListMenu_ReceiveSend
.L161:
	mov	r0, #0x0
	strb	r0, [r6]
	ldrb	r0, [r5]
	bl	rbox_fill_rectangle
	ldrb	r0, [r5]
	bl	ClearWindowTilemap
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldrb	r0, [r5]
	bl	RemoveWindow
	mov	r0, #0x2
	neg	r0, r0
	b	.L165
.L149:
	mov	r0, #0x1
	neg	r0, r0
.L165:
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe20:
	.size	 HandleMysteryGiftListMenu,.Lfe20-HandleMysteryGiftListMenu
	.align	2, 0
	.type	 ValidateCardOrNews,function
	.thumb_func
ValidateCardOrNews:
	push	{lr}
	cmp	r0, #0
	beq	.L180	@cond_branch
	bl	ValidateSavedWonderNews
	b	.L183
.L180:
	bl	ValidateSavedWonderCard
.L183:
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 ValidateCardOrNews,.Lfe21-ValidateCardOrNews
	.align	2, 0
	.type	 HandleLoadWonderCardOrNews,function
	.thumb_func
HandleLoadWonderCardOrNews:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldrb	r0, [r5]
	cmp	r0, #0
	beq	.L186	@cond_branch
	cmp	r0, #0x1
	beq	.L189	@cond_branch
	b	.L185
.L186:
	cmp	r1, #0
	bne	.L187	@cond_branch
	bl	GetSavedWonderCard
	add	r4, r0, #0
	bl	GetSavedWonderCardMetadata
	add	r1, r0, #0
	add	r0, r4, #0
	bl	WonderCard_Init
	b	.L188
.L187:
	bl	GetSavedWonderNews
	bl	WonderNews_Init
.L188:
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	b	.L185
.L189:
	cmp	r1, #0
	bne	.L190	@cond_branch
	bl	WonderCard_Enter
.L197:
	cmp	r0, #0
	bne	.L192	@cond_branch
	b	.L185
.L190:
	bl	WonderNews_Enter
	b	.L197
.L192:
	mov	r0, #0x0
	strb	r0, [r5]
	mov	r0, #0x1
	b	.L196
.L185:
	mov	r0, #0x0
.L196:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 HandleLoadWonderCardOrNews,.Lfe22-HandleLoadWonderCardOrNews
	.align	2, 0
	.type	 ClearSavedNewsOrCard,function
	.thumb_func
ClearSavedNewsOrCard:
	push	{lr}
	cmp	r0, #0
	bne	.L199	@cond_branch
	bl	ClearSavedWonderCardAndRelated
	b	.L200
.L199:
	bl	ClearSavedWonderNewsAndRelated
.L200:
	mov	r0, #0x1
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 ClearSavedNewsOrCard,.Lfe23-ClearSavedNewsOrCard
	.align	2, 0
	.type	 ExitWonderCardOrNews,function
	.thumb_func
ExitWonderCardOrNews:
	push	{lr}
	cmp	r0, #0
	bne	.L202	@cond_branch
	add	r0, r1, #0
	bl	WonderCard_Exit
	cmp	r0, #0
	beq	.L210	@cond_branch
	bl	WonderCard_Destroy
	b	.L209
.L202:
	add	r0, r1, #0
	bl	WonderNews_Exit
	cmp	r0, #0
	bne	.L206	@cond_branch
.L210:
	mov	r0, #0x0
	b	.L208
.L206:
	bl	WonderNews_Destroy
.L209:
	mov	r0, #0x1
.L208:
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 ExitWonderCardOrNews,.Lfe24-ExitWonderCardOrNews
	.align	2, 0
	.type	 AskDiscardGift,function
	.thumb_func
AskDiscardGift:
	push	{lr}
	cmp	r2, #0
	beq	.L212	@cond_branch
	ldr	r3, .L217
	b	.L216
.L218:
	.align	2, 0
.L217:
	.word	gText_OkayToDiscardNews
.L212:
	ldr	r3, .L219
.L216:
	mov	r2, #0x1
	bl	DoMysteryGiftYesNo
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L220:
	.align	2, 0
.L219:
	.word	gText_IfThrowAwayCardEventWontHappen
.Lfe25:
	.size	 AskDiscardGift,.Lfe25-AskDiscardGift
	.align	2, 0
	.type	 PrintThrownAway,function
	.thumb_func
PrintThrownAway:
	push	{lr}
	cmp	r1, #0
	beq	.L222	@cond_branch
	ldr	r1, .L227
	b	.L226
.L228:
	.align	2, 0
.L227:
	.word	gText_WonderNewsThrownAway
.L222:
	ldr	r1, .L229
.L226:
	bl	PrintMysteryGiftMenuMessage
	pop	{r1}
	bx	r1
.L230:
	.align	2, 0
.L229:
	.word	gText_WonderCardThrownAway
.Lfe26:
	.size	 PrintThrownAway,.Lfe26-PrintThrownAway
	.align	2, 0
	.type	 SaveOnMysteryGiftMenu,function
	.thumb_func
SaveOnMysteryGiftMenu:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0x4
	bhi	.L232	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L243
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L244:
	.align	2, 0
.L243:
	.word	.L239
	.align	2, 0
	.align	2, 0
.L239:
	.word	.L233
	.word	.L234
	.word	.L235
	.word	.L236
	.word	.L238
.L233:
	ldr	r0, .L245
	bl	AddTextPrinterToWindow1
	b	.L242
.L246:
	.align	2, 0
.L245:
	.word	gText_DataWillBeSaved
.L234:
	mov	r0, #0x0
	bl	TrySavingData
	b	.L242
.L235:
	ldr	r0, .L247
	bl	AddTextPrinterToWindow1
	b	.L242
.L248:
	.align	2, 0
.L247:
	.word	gText_SaveCompletedPressA
.L236:
	ldr	r0, .L249
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L232	@cond_branch
.L242:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L232
.L250:
	.align	2, 0
.L249:
	.word	gMain
.L238:
	mov	r0, #0x0
	strb	r0, [r4]
	bl	ClearTextWindow
	mov	r0, #0x1
	b	.L241
.L232:
	mov	r0, #0x0
.L241:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 SaveOnMysteryGiftMenu,.Lfe27-SaveOnMysteryGiftMenu
	.align	2, 0
	.type	 GetClientResultMessage,function
	.thumb_func
GetClientResultMessage:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	mov	r2, #0x0
	str	r2, [r4]
	cmp	r3, #0xe
	bls	.LCB2018
	b	.L252	@long jump
.LCB2018:
	lsl	r0, r3, #0x2
	ldr	r1, .L277
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L278:
	.align	2, 0
.L277:
	.word	.L274
	.align	2, 0
	.align	2, 0
.L274:
	.word	.L253
	.word	.L254
	.word	.L255
	.word	.L258
	.word	.L261
	.word	.L262
	.word	.L263
	.word	.L264
	.word	.L265
	.word	.L266
	.word	.L267
	.word	.L270
	.word	.L271
	.word	.L272
	.word	.L273
.L253:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L279
	b	.L252
.L280:
	.align	2, 0
.L279:
	.word	gText_NothingSentOver
.L254:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L281
	b	.L252
.L282:
	.align	2, 0
.L281:
	.word	gText_RecordUploadedViaWireless
.L255:
	mov	r0, #0x1
	str	r0, [r4]
	ldr	r2, .L283
	cmp	r5, #0
	bne	.L252	@cond_branch
	ldr	r2, .L283+0x4
	b	.L252
.L284:
	.align	2, 0
.L283:
	.word	gText_WonderCardReceivedFrom
	.word	gText_WonderCardReceived
.L258:
	mov	r0, #0x1
	str	r0, [r4]
	ldr	r2, .L285
	cmp	r5, #0
	bne	.L252	@cond_branch
	ldr	r2, .L285+0x4
	b	.L252
.L286:
	.align	2, 0
.L285:
	.word	gText_WonderNewsReceivedFrom
	.word	gText_WonderNewsReceived
.L261:
	mov	r0, #0x1
	str	r0, [r4]
	ldr	r2, .L287
	b	.L252
.L288:
	.align	2, 0
.L287:
	.word	gText_NewStampReceived
.L262:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L289
	b	.L252
.L290:
	.align	2, 0
.L289:
	.word	gText_AlreadyHadCard
.L263:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L291
	b	.L252
.L292:
	.align	2, 0
.L291:
	.word	gText_AlreadyHadStamp
.L264:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L293
	b	.L252
.L294:
	.align	2, 0
.L293:
	.word	gText_AlreadyHadNews
.L265:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L295
	b	.L252
.L296:
	.align	2, 0
.L295:
	.word	gText_NoMoreRoomForStamps
.L266:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L297
	b	.L252
.L298:
	.align	2, 0
.L297:
	.word	gText_CommunicationCanceled
.L267:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L299
	cmp	r6, #0
	bne	.L252	@cond_branch
	ldr	r2, .L299+0x4
	b	.L252
.L300:
	.align	2, 0
.L299:
	.word	gText_CantAcceptNewsFromTrainer
	.word	gText_CantAcceptCardFromTrainer
.L270:
	mov	r0, #0x0
	str	r0, [r4]
	ldr	r2, .L301
	b	.L252
.L302:
	.align	2, 0
.L301:
	.word	gText_CommunicationError
.L271:
	mov	r0, #0x1
	str	r0, [r4]
	ldr	r2, .L303
	b	.L252
.L304:
	.align	2, 0
.L303:
	.word	gText_NewTrainerReceived
.L272:
	mov	r0, #0x1
	b	.L276
.L273:
	mov	r0, #0x0
.L276:
	str	r0, [r4]
.L252:
	add	r0, r2, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 GetClientResultMessage,.Lfe28-GetClientResultMessage
	.align	2, 0
	.type	 PrintSuccessMessage,function
	.thumb_func
PrintSuccessMessage:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r0, r1, #0
	add	r5, r2, #0
	ldrb	r4, [r6]
	cmp	r4, #0x1
	beq	.L309	@cond_branch
	cmp	r4, #0x1
	bgt	.L315	@cond_branch
	cmp	r4, #0
	beq	.L307	@cond_branch
	b	.L306
.L315:
	cmp	r4, #0x2
	beq	.L311	@cond_branch
	b	.L306
.L307:
	cmp	r0, #0
	beq	.L308	@cond_branch
	bl	AddTextPrinterToWindow1
.L308:
	mov	r0, #0x81
	lsl	r0, r0, #0x1
	bl	PlayFanfare
	strh	r4, [r5]
	b	.L317
.L309:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xf0
	bls	.L306	@cond_branch
.L317:
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	strb	r0, [r6]
	b	.L306
.L311:
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L306	@cond_branch
	mov	r0, #0x0
	strb	r0, [r6]
	bl	ClearTextWindow
	mov	r0, #0x1
	b	.L316
.L306:
	mov	r0, #0x0
.L316:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe29:
	.size	 PrintSuccessMessage,.Lfe29-PrintSuccessMessage
	.align	2, 0
	.type	 GetServerResultMessage,function
	.thumb_func
GetServerResultMessage:
	push	{r4, lr}
	add	r3, r0, #0
	ldr	r1, .L338
	mov	r0, #0x0
	str	r0, [r3]
	add	r4, r1, #0
	cmp	r2, #0xe
	bhi	.L319	@cond_branch
	lsl	r0, r2, #0x2
	ldr	r1, .L338+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L339:
	.align	2, 0
.L338:
	.word	gText_CommunicationError
	.word	.L335
	.align	2, 0
	.align	2, 0
.L335:
	.word	.L320
	.word	.L321
	.word	.L322
	.word	.L323
	.word	.L324
	.word	.L325
	.word	.L326
	.word	.L327
	.word	.L328
	.word	.L329
	.word	.L334
	.word	.L331
	.word	.L332
	.word	.L333
	.word	.L334
.L320:
	ldr	r1, .L340
	b	.L319
.L341:
	.align	2, 0
.L340:
	.word	gText_NothingSentOver
.L321:
	ldr	r1, .L342
	b	.L319
.L343:
	.align	2, 0
.L342:
	.word	gText_RecordUploadedViaWireless
.L322:
	ldr	r1, .L344
	b	.L337
.L345:
	.align	2, 0
.L344:
	.word	gText_WonderCardSentTo
.L323:
	ldr	r1, .L346
.L337:
	mov	r0, #0x1
	str	r0, [r3]
	b	.L319
.L347:
	.align	2, 0
.L346:
	.word	gText_WonderNewsSentTo
.L324:
	ldr	r1, .L348
	b	.L319
.L349:
	.align	2, 0
.L348:
	.word	gText_StampSentTo
.L325:
	ldr	r1, .L350
	b	.L319
.L351:
	.align	2, 0
.L350:
	.word	gText_OtherTrainerHasCard
.L326:
	ldr	r1, .L352
	b	.L319
.L353:
	.align	2, 0
.L352:
	.word	gText_OtherTrainerHasStamp
.L327:
	ldr	r1, .L354
	b	.L319
.L355:
	.align	2, 0
.L354:
	.word	gText_OtherTrainerHasNews
.L328:
	ldr	r1, .L356
	b	.L319
.L357:
	.align	2, 0
.L356:
	.word	gText_NoMoreRoomForStamps
.L329:
	ldr	r1, .L358
	b	.L319
.L359:
	.align	2, 0
.L358:
	.word	gText_OtherTrainerCanceled
.L331:
	add	r1, r4, #0
	b	.L319
.L332:
.L333:
	ldr	r1, .L360
	b	.L319
.L361:
	.align	2, 0
.L360:
	.word	gText_GiftSentTo
.L334:
	ldr	r1, .L362
.L319:
	add	r0, r1, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L363:
	.align	2, 0
.L362:
	.word	gText_CantSendGiftToTrainer
.Lfe30:
	.size	 GetServerResultMessage,.Lfe30-GetServerResultMessage
	.align	2, 0
	.type	 PrintServerResultMessage,function
	.thumb_func
PrintServerResultMessage:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r5, r1, #0
	add	r1, r2, #0
	add	r2, r3, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, sp
	bl	GetServerResultMessage
	add	r1, r0, #0
	ldr	r0, [sp]
	cmp	r0, #0
	bne	.L365	@cond_branch
	add	r0, r4, #0
	bl	PrintMysteryGiftMenuMessage
	b	.L368
.L365:
	add	r0, r4, #0
	add	r2, r5, #0
	bl	PrintSuccessMessage
.L368:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe31:
	.size	 PrintServerResultMessage,.Lfe31-PrintServerResultMessage
	.align	2, 0
	.type	 CreateMysteryGiftTask,function
	.thumb_func
CreateMysteryGiftTask:
	push	{r4, lr}
	ldr	r0, .L370
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L370+0x4
	add	r4, r4, r0
	mov	r0, #0x0
	strb	r0, [r4, #0x8]
	strb	r0, [r4, #0x9]
	strb	r0, [r4, #0xa]
	strb	r0, [r4, #0xb]
	strb	r0, [r4, #0xc]
	strb	r0, [r4, #0xd]
	mov	r1, #0x0
	strh	r0, [r4]
	strh	r0, [r4, #0x2]
	strh	r0, [r4, #0x4]
	strh	r0, [r4, #0x6]
	strb	r1, [r4, #0xe]
	mov	r0, #0x40
	bl	AllocZeroed
	str	r0, [r4, #0x10]
	pop	{r4}
	pop	{r0}
	bx	r0
.L371:
	.align	2, 0
.L370:
	.word	Task_MysteryGift
	.word	gTasks+0x8
.Lfe32:
	.size	 CreateMysteryGiftTask,.Lfe32-CreateMysteryGiftTask
	.align	2, 0
	.type	 Task_MysteryGift,function
	.thumb_func
Task_MysteryGift:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L568
	add	r5, r0, r1
	ldrb	r0, [r5, #0x8]
	cmp	r0, #0x25
	bls	.LCB2571
	b	.L373	@long jump
.LCB2571:
	lsl	r0, r0, #0x2
	ldr	r1, .L568+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L569:
	.align	2, 0
.L568:
	.word	gTasks+0x8
	.word	.L552
	.align	2, 0
	.align	2, 0
.L552:
	.word	.L374
	.word	.L375
	.word	.L386
	.word	.L391
	.word	.L394
	.word	.L403
	.word	.L415
	.word	.L419
	.word	.L420
	.word	.L429
	.word	.L436
	.word	.L438
	.word	.L447
	.word	.L454
	.word	.L456
	.word	.L459
	.word	.L549
	.word	.L469
	.word	.L471
	.word	.L373
	.word	.L473
	.word	.L483
	.word	.L498
	.word	.L508
	.word	.L515
	.word	.L517
	.word	.L519
	.word	.L521
	.word	.L523
	.word	.L525
	.word	.L532
	.word	.L536
	.word	.L539
	.word	.L541
	.word	.L542
	.word	.L544
	.word	.L549
	.word	.L551
.L374:
	mov	r0, #0x1
	strb	r0, [r5, #0x8]
	b	.L373
.L375:
	add	r0, r5, #0
	add	r0, r0, #0x9
	add	r1, r5, #0
	mov	r2, #0x0
	bl	MysteryGift_HandleThreeOptionMenu
	add	r1, r0, #0
	cmp	r1, #0x1
	beq	.L380	@cond_branch
	cmp	r1, #0x1
	bcc	.L377	@cond_branch
	mov	r0, #0x2
	neg	r0, r0
	cmp	r1, r0
	beq	.L383	@cond_branch
	b	.L373
.L377:
	mov	r0, #0x0
	strb	r0, [r5, #0xc]
	bl	ValidateSavedWonderCard
	b	.L567
.L380:
	strb	r1, [r5, #0xc]
	bl	ValidateSavedWonderNews
.L567:
	cmp	r0, #0x1
	bne	.LCB2629
	b	.L554	@long jump
.LCB2629:
	mov	r0, #0x2
	strb	r0, [r5, #0x8]
	b	.L373
.L383:
	mov	r0, #0x25
	strb	r0, [r5, #0x8]
	b	.L373
.L386:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	bne	.L387	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L570
	b	.L555
.L571:
	.align	2, 0
.L570:
	.word	gText_DontHaveCardNewOneInput
.L387:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L572
.L555:
	bl	PrintMysteryGiftMenuMessage
	cmp	r0, #0
	bne	.LCB2673
	b	.L373	@long jump
.LCB2673:
	mov	r0, #0x3
	strb	r0, [r5, #0x8]
	mov	r0, #0x0
	mov	r1, #0x1
	bl	PrintMysteryGiftOrEReaderTopMenu
	b	.L373
.L573:
	.align	2, 0
.L572:
	.word	gText_DontHaveNewsNewOneInput
.L391:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	bne	.L392	@cond_branch
	ldr	r0, .L574
	bl	AddTextPrinterToWindow1
	b	.L393
.L575:
	.align	2, 0
.L574:
	.word	gText_WhereShouldCardBeAccessed
.L392:
	ldr	r0, .L576
	bl	AddTextPrinterToWindow1
.L393:
	mov	r0, #0x4
	strb	r0, [r5, #0x8]
	b	.L373
.L577:
	.align	2, 0
.L576:
	.word	gText_WhereShouldNewsBeAccessed
.L394:
	add	r0, r5, #0
	add	r0, r0, #0x9
	add	r1, r5, #0
	mov	r2, #0x1
	bl	MysteryGift_HandleThreeOptionMenu
	add	r4, r0, #0
	cmp	r4, #0x1
	beq	.L397	@cond_branch
	cmp	r4, #0x1
	bcc	.L396	@cond_branch
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L398	@cond_branch
	b	.L373
.L396:
	bl	ClearTextWindow
	mov	r1, #0x0
	mov	r0, #0x5
	strb	r0, [r5, #0x8]
	strb	r1, [r5, #0xd]
	b	.L373
.L397:
	bl	ClearTextWindow
	mov	r0, #0x5
	strb	r0, [r5, #0x8]
	strb	r4, [r5, #0xd]
	b	.L373
.L398:
	bl	ClearTextWindow
	ldrb	r0, [r5, #0xc]
	bl	ValidateCardOrNews
	cmp	r0, #0
	beq	.LCB2764
	b	.L554	@long jump
.LCB2764:
	strb	r0, [r5, #0x8]
	mov	r0, #0x0
	b	.L556
.L403:
	ldr	r0, .L578
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r0, .L578+0x4
	strb	r1, [r0]
	ldr	r0, .L578+0x8
	strb	r1, [r0]
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	beq	.L405	@cond_branch
	cmp	r0, #0x1
	beq	.L409	@cond_branch
	b	.L404
.L579:
	.align	2, 0
.L578:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
.L405:
	ldrb	r0, [r5, #0xd]
	cmp	r0, #0x1
	bne	.L406	@cond_branch
	mov	r0, #0x15
	bl	CreateTask_LinkMysteryGiftWithFriend
	b	.L404
.L406:
	cmp	r0, #0
	bne	.L404	@cond_branch
	mov	r0, #0x15
	bl	CreateTask_LinkMysteryGiftOverWireless
	b	.L404
.L409:
	ldrb	r0, [r5, #0xd]
	cmp	r0, #0x1
	bne	.L410	@cond_branch
	mov	r0, #0x16
	bl	CreateTask_LinkMysteryGiftWithFriend
	b	.L404
.L410:
	cmp	r0, #0
	bne	.L404	@cond_branch
	mov	r0, #0x16
	bl	CreateTask_LinkMysteryGiftOverWireless
.L404:
	mov	r0, #0x6
	strb	r0, [r5, #0x8]
	b	.L373
.L415:
	ldr	r0, .L580
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L416	@cond_branch
	mov	r0, #0x1
	bl	ClearScreenInBg0
	mov	r0, #0x7
	strb	r0, [r5, #0x8]
	bl	MysteryGiftClient_Create
	b	.L373
.L581:
	.align	2, 0
.L580:
	.word	gReceivedRemoteLinkPlayers
.L416:
	ldr	r0, .L582
	ldrh	r0, [r0]
	cmp	r0, #0x5
	beq	.LCB2862
	b	.L373	@long jump
.LCB2862:
	mov	r0, #0x1
	bl	ClearScreenInBg0
	b	.L557
.L583:
	.align	2, 0
.L582:
	.word	gSpecialVar_Result
.L419:
	ldr	r0, .L584
	bl	AddTextPrinterToWindow1
	mov	r0, #0x8
	strb	r0, [r5, #0x8]
	b	.L373
.L585:
	.align	2, 0
.L584:
	.word	gText_Communicating
.L420:
	add	r0, r5, #0
	bl	MysteryGiftClient_Run
	sub	r0, r0, #0x2
	cmp	r0, #0x4
	bls	.LCB2895
	b	.L373	@long jump
.LCB2895:
	lsl	r0, r0, #0x2
	ldr	r1, .L586
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L587:
	.align	2, 0
.L586:
	.word	.L427
	.align	2, 0
	.align	2, 0
.L427:
	.word	.L425
	.word	.L424
	.word	.L426
	.word	.L423
	.word	.L422
.L422:
	bl	Rfu_SetCloseLinkCallback
	ldrh	r0, [r5]
	strb	r0, [r5, #0xe]
	mov	r0, #0xd
	strb	r0, [r5, #0x8]
	b	.L373
.L423:
	ldr	r4, [r5, #0x10]
	bl	MysteryGiftClient_GetMsg
	add	r1, r0, #0
	add	r0, r4, #0
	mov	r2, #0x40
	bl	memcpy
	bl	MysteryGiftClient_AdvanceState
	b	.L373
.L424:
	mov	r0, #0xa
	strb	r0, [r5, #0x8]
	b	.L373
.L425:
	mov	r0, #0x9
	strb	r0, [r5, #0x8]
	b	.L373
.L426:
	mov	r0, #0xb
	strb	r0, [r5, #0x8]
	ldr	r0, .L588
	ldr	r1, .L588+0x4
	bl	StringCopy
	b	.L373
.L589:
	.align	2, 0
.L588:
	.word	gStringVar1
	.word	gLinkPlayers+0x8
.L429:
	add	r4, r5, #0
	add	r4, r4, #0x9
	bl	MysteryGiftClient_GetMsg
	add	r3, r0, #0
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x0
	bl	DoMysteryGiftYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0x1
	beq	.L451	@cond_branch
	cmp	r1, #0x1
	bcs	.L565	@cond_branch
	mov	r0, #0x0
	b	.L558
.L436:
	add	r4, r5, #0
	add	r4, r4, #0x9
	bl	MysteryGiftClient_GetMsg
	add	r1, r0, #0
	add	r0, r4, #0
	bl	PrintMysteryGiftMenuMessage
	cmp	r0, #0
	bne	.LCB2992
	b	.L373	@long jump
.LCB2992:
	b	.L559
.L438:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r3, .L590
	add	r1, r5, #0
	mov	r2, #0x0
	bl	DoMysteryGiftYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0x1
	beq	.L451	@cond_branch
	cmp	r1, #0x1
	bcs	.L565	@cond_branch
	bl	IsSavedWonderCardGiftNotReceived
	cmp	r0, #0x1
	bne	.L441	@cond_branch
	mov	r0, #0xc
	strb	r0, [r5, #0x8]
	b	.L373
.L591:
	.align	2, 0
.L590:
	.word	gText_ThrowAwayWonderCard
.L441:
	mov	r0, #0x0
	b	.L558
.L447:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r3, .L592
	add	r1, r5, #0
	mov	r2, #0x0
	bl	DoMysteryGiftYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0x1
	beq	.L451	@cond_branch
	cmp	r1, #0x1
	bcc	.L449	@cond_branch
.L565:
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L451	@cond_branch
	b	.L373
.L593:
	.align	2, 0
.L592:
	.word	gText_HaventReceivedCardsGift
.L449:
	mov	r0, #0x0
	b	.L558
.L451:
	mov	r0, #0x1
.L558:
	bl	MysteryGiftClient_SetParam
.L559:
	bl	MysteryGiftClient_AdvanceState
	mov	r0, #0x7
	strb	r0, [r5, #0x8]
	b	.L373
.L454:
	bl	IsLinkRfuTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB3087
	b	.L373	@long jump
.LCB3087:
	bl	DestroyWirelessStatusIndicatorSprite
	mov	r0, #0xe
	strb	r0, [r5, #0x8]
	b	.L373
.L456:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L594
	bl	PrintStringAndWait2Seconds
	cmp	r0, #0
	bne	.LCB3103
	b	.L373	@long jump
.LCB3103:
	ldrb	r0, [r5, #0xd]
	cmp	r0, #0x1
	bne	.L458	@cond_branch
	ldr	r0, .L594+0x4
	ldr	r1, .L594+0x8
	bl	StringCopy
.L458:
	mov	r0, #0xf
	strb	r0, [r5, #0x8]
	b	.L373
.L595:
	.align	2, 0
.L594:
	.word	gText_CommunicationCompleted
	.word	gStringVar1
	.word	gLinkPlayers+0x8
.L459:
	ldrb	r1, [r5, #0xc]
	ldrb	r2, [r5, #0xd]
	ldrb	r3, [r5, #0xe]
	mov	r0, sp
	bl	GetClientResultMessage
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L460	@cond_branch
	ldr	r1, [r5, #0x10]
.L460:
	ldr	r0, [sp]
	cmp	r0, #0
	beq	.L461	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x9
	add	r2, r5, #0
	bl	PrintSuccessMessage
	b	.L560
.L461:
	add	r0, r5, #0
	add	r0, r0, #0x9
	bl	PrintMysteryGiftMenuMessage
.L560:
	add	r1, r0, #0
	cmp	r1, #0
	bne	.LCB3164
	b	.L373	@long jump
.LCB3164:
	ldrb	r0, [r5, #0xe]
	cmp	r0, #0x3
	bne	.L464	@cond_branch
	ldrb	r0, [r5, #0xd]
	cmp	r0, #0x1
	bne	.L465	@cond_branch
	mov	r0, #0x1
	bl	WonderNews_SetReward
	b	.L464
.L465:
	mov	r0, #0x2
	bl	WonderNews_SetReward
.L464:
	ldr	r0, [sp]
	cmp	r0, #0
	beq	.LCB3188
	b	.L561	@long jump
.LCB3188:
	strb	r0, [r5, #0x8]
	mov	r0, #0x0
	b	.L556
.L469:
	add	r0, r5, #0
	add	r0, r0, #0x9
	bl	SaveOnMysteryGiftMenu
	b	.L562
.L471:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r1, [r5, #0xc]
	bl	HandleLoadWonderCardOrNews
	cmp	r0, #0
	bne	.LCB3214
	b	.L373	@long jump
.LCB3214:
	b	.L495
.L473:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	bne	.L474	@cond_branch
	ldr	r2, .L596
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L475	@cond_branch
	mov	r0, #0x15
	strb	r0, [r5, #0x8]
.L475:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB3247
	b	.L373	@long jump
.LCB3247:
	b	.L480
.L597:
	.align	2, 0
.L596:
	.word	gMain
.L474:
	ldr	r0, .L598
	ldrh	r0, [r0, #0x2e]
	bl	WonderNews_GetInput
	cmp	r0, #0
	beq	.L479	@cond_branch
	cmp	r0, #0x1
	beq	.L480	@cond_branch
	b	.L373
.L599:
	.align	2, 0
.L598:
	.word	gMain
.L479:
	bl	WonderNews_RemoveScrollIndicatorArrowPair
	b	.L512
.L480:
	mov	r0, #0x1b
	strb	r0, [r5, #0x8]
	b	.L373
.L483:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	bne	.L484	@cond_branch
	bl	IsSendingSavedWonderCardAllowed
	cmp	r0, #0
	beq	.L488	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r2, [r5, #0xc]
	add	r1, r5, #0
	mov	r3, #0x0
	b	.L563
.L484:
	bl	IsSendingSavedWonderNewsAllowed
	cmp	r0, #0
	beq	.L488	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r2, [r5, #0xc]
	add	r1, r5, #0
	mov	r3, #0x0
	b	.L563
.L488:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r2, [r5, #0xc]
	add	r1, r5, #0
	mov	r3, #0x1
.L563:
	bl	HandleMysteryGiftListMenu
	add	r1, r0, #0
	cmp	r1, #0x1
	beq	.L492	@cond_branch
	cmp	r1, #0x1
	bcc	.L491	@cond_branch
	cmp	r1, #0x2
	beq	.L493	@cond_branch
	mov	r0, #0x2
	neg	r0, r0
	cmp	r1, r0
	beq	.L494	@cond_branch
	b	.L373
.L491:
	mov	r0, #0x1c
	strb	r0, [r5, #0x8]
	b	.L373
.L492:
	mov	r0, #0x1d
	strb	r0, [r5, #0x8]
	b	.L373
.L493:
	mov	r0, #0x16
	strb	r0, [r5, #0x8]
	b	.L373
.L494:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0x1
	bne	.L495	@cond_branch
	bl	WonderNews_AddScrollIndicatorArrowPair
.L495:
	mov	r0, #0x14
	strb	r0, [r5, #0x8]
	b	.L373
.L498:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r2, [r5, #0xc]
	add	r1, r5, #0
	bl	AskDiscardGift
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L500	@cond_branch
	cmp	r1, #0
	ble	.L566	@cond_branch
	cmp	r1, #0x1
	beq	.L512	@cond_branch
	b	.L373
.L500:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	bne	.L510	@cond_branch
	bl	IsSavedWonderCardGiftNotReceived
	cmp	r0, #0x1
	bne	.L510	@cond_branch
	mov	r0, #0x17
	strb	r0, [r5, #0x8]
	b	.L373
.L508:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r3, .L600
	add	r1, r5, #0
	mov	r2, #0x1
	bl	DoMysteryGiftYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0x1
	beq	.L512	@cond_branch
	cmp	r1, #0x1
	bcc	.L510	@cond_branch
.L566:
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L512	@cond_branch
	b	.L373
.L601:
	.align	2, 0
.L600:
	.word	gText_HaventReceivedGiftOkayToDiscard
.L510:
	mov	r0, #0x18
	strb	r0, [r5, #0x8]
	b	.L373
.L512:
	mov	r0, #0x15
	strb	r0, [r5, #0x8]
	b	.L373
.L515:
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x1
	bl	ExitWonderCardOrNews
	cmp	r0, #0
	bne	.LCB3462
	b	.L373	@long jump
.LCB3462:
	ldrb	r0, [r5, #0xc]
	bl	ClearSavedNewsOrCard
	mov	r0, #0x19
	strb	r0, [r5, #0x8]
	b	.L373
.L517:
	add	r0, r5, #0
	add	r0, r0, #0x9
	bl	SaveOnMysteryGiftMenu
	cmp	r0, #0
	bne	.LCB3478
	b	.L373	@long jump
.LCB3478:
	mov	r0, #0x1a
	strb	r0, [r5, #0x8]
	b	.L373
.L519:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r1, [r5, #0xc]
	bl	PrintThrownAway
	b	.L562
.L521:
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x0
	bl	ExitWonderCardOrNews
	cmp	r0, #0
	bne	.LCB3502
	b	.L373	@long jump
.LCB3502:
	mov	r0, #0x0
	strb	r0, [r5, #0x8]
	b	.L373
.L523:
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x1
	bl	ExitWonderCardOrNews
	cmp	r0, #0
	bne	.LCB3514
	b	.L373	@long jump
.LCB3514:
.L557:
	mov	r0, #0x3
	strb	r0, [r5, #0x8]
	b	.L373
.L525:
	ldrb	r0, [r5, #0xc]
	mov	r1, #0x1
	bl	ExitWonderCardOrNews
	cmp	r0, #0
	bne	.LCB3527
	b	.L373	@long jump
.LCB3527:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	beq	.L528	@cond_branch
	cmp	r0, #0x1
	beq	.L529	@cond_branch
	b	.L527
.L528:
	mov	r0, #0x15
	bl	CreateTask_SendMysteryGift
	b	.L527
.L529:
	mov	r0, #0x16
	bl	CreateTask_SendMysteryGift
.L527:
	mov	r0, #0x1
	strb	r0, [r5, #0xd]
	mov	r0, #0x1e
	strb	r0, [r5, #0x8]
	b	.L373
.L532:
	ldr	r0, .L602
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L533	@cond_branch
	mov	r0, #0x1
	bl	ClearScreenInBg0
	mov	r0, #0x1f
	strb	r0, [r5, #0x8]
	b	.L373
.L603:
	.align	2, 0
.L602:
	.word	gReceivedRemoteLinkPlayers
.L533:
	ldr	r0, .L604
	ldrh	r0, [r0]
	cmp	r0, #0x5
	beq	.LCB3580
	b	.L373	@long jump
.LCB3580:
	mov	r0, #0x1
	bl	ClearScreenInBg0
.L554:
	mov	r0, #0x12
	strb	r0, [r5, #0x8]
	b	.L373
.L605:
	.align	2, 0
.L604:
	.word	gSpecialVar_Result
.L536:
	ldr	r0, .L606
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r0, .L606+0x4
	strb	r1, [r0]
	ldr	r0, .L606+0x8
	strb	r1, [r0]
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0
	bne	.L537	@cond_branch
	ldr	r0, .L606+0xc
	bl	AddTextPrinterToWindow1
	bl	MysterGiftServer_CreateForCard
	b	.L538
.L607:
	.align	2, 0
.L606:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gText_SendingWonderCard
.L537:
	ldr	r0, .L608
	bl	AddTextPrinterToWindow1
	bl	MysterGiftServer_CreateForNews
.L538:
	mov	r0, #0x20
	strb	r0, [r5, #0x8]
	b	.L373
.L609:
	.align	2, 0
.L608:
	.word	gText_SendingWonderNews
.L539:
	add	r0, r5, #0
	bl	MysterGiftServer_Run
	cmp	r0, #0x3
	bne	.L373	@cond_branch
	ldrh	r0, [r5]
	strb	r0, [r5, #0xe]
	mov	r0, #0x21
	strb	r0, [r5, #0x8]
	b	.L373
.L541:
	bl	Rfu_SetCloseLinkCallback
	ldr	r0, .L610
	ldr	r1, .L610+0x4
	bl	StringCopy
	mov	r0, #0x22
	strb	r0, [r5, #0x8]
	b	.L373
.L611:
	.align	2, 0
.L610:
	.word	gStringVar1
	.word	gLinkPlayers+0x24
.L542:
	bl	IsLinkRfuTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L373	@cond_branch
	bl	DestroyWirelessStatusIndicatorSprite
	mov	r0, #0x23
	strb	r0, [r5, #0x8]
	b	.L373
.L544:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldrb	r2, [r5, #0xd]
	ldrb	r3, [r5, #0xe]
	add	r1, r5, #0
	bl	PrintServerResultMessage
	cmp	r0, #0
	beq	.L373	@cond_branch
	ldr	r0, [r5, #0xc]
	ldr	r1, .L612
	and	r0, r0, r1
	ldr	r1, .L612+0x4
	cmp	r0, r1
	bne	.L564	@cond_branch
	mov	r0, #0x3
	bl	WonderNews_SetReward
.L561:
	mov	r0, #0x11
	strb	r0, [r5, #0x8]
	b	.L373
.L613:
	.align	2, 0
.L612:
	.word	0xffff00
	.word	0x30100
.L549:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L614
	bl	PrintMysteryGiftMenuMessage
.L562:
	cmp	r0, #0
	beq	.L373	@cond_branch
.L564:
	mov	r0, #0x0
	strb	r0, [r5, #0x8]
.L556:
	mov	r1, #0x0
	bl	PrintMysteryGiftOrEReaderTopMenu
	b	.L373
.L615:
	.align	2, 0
.L614:
	.word	gText_CommunicationError
.L551:
	bl	CloseLink
	bl	HelpSystem_Enable
	ldr	r0, [r5, #0x10]
	bl	Free
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L616
	bl	SetMainCallback2
.L373:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L617:
	.align	2, 0
.L616:
	.word	MainCB_FreeAllBuffersAndReturnToInitTitleScreen
.Lfe33:
	.size	 Task_MysteryGift,.Lfe33-Task_MysteryGift
	.align	2, 0
	.globl	GetMysteryGiftBaseBlock
	.type	 GetMysteryGiftBaseBlock,function
	.thumb_func
GetMysteryGiftBaseBlock:
	ldr	r0, .L619
	bx	lr
.L620:
	.align	2, 0
.L619:
	.word	0x19b
.Lfe34:
	.size	 GetMysteryGiftBaseBlock,.Lfe34-GetMysteryGiftBaseBlock
.text
	.align	2, 0 @ Don't pad with nop

