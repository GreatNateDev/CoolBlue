@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gLastUsedWarp
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gLastUsedWarp,object
	.size	 gLastUsedWarp,8
gLastUsedWarp:
	.space	8
	.align	2, 0
	.type	 sWarpDestination,object
	.size	 sWarpDestination,8
sWarpDestination:
	.space	8
	.align	2, 0
	.type	 sFixedDiveWarp,object
	.size	 sFixedDiveWarp,8
sFixedDiveWarp:
	.space	8
	.align	2, 0
	.type	 sFixedHoleWarp,object
	.size	 sFixedHoleWarp,8
sFixedHoleWarp:
	.space	8
	.align	2, 0
	.type	 sInitialPlayerAvatarState,object
	.size	 sInitialPlayerAvatarState,4
sInitialPlayerAvatarState:
	.space	4
	.globl	gDisableMapMusicChangeOnMapLoad
	.type	 gDisableMapMusicChangeOnMapLoad,object
	.size	 gDisableMapMusicChangeOnMapLoad,1
gDisableMapMusicChangeOnMapLoad:
	.byte	0x0
	.align	1, 0
	.type	 sAmbientCrySpecies,object
	.size	 sAmbientCrySpecies,2
sAmbientCrySpecies:
	.short	0x0
	.type	 sIsAmbientCryWaterMon,object
	.size	 sIsAmbientCryWaterMon,1
sIsAmbientCryWaterMon:
	.byte	0x0
	.globl	gExitStairsMovementDisabled
	.align	2, 0
	.type	 gExitStairsMovementDisabled,object
	.size	 gExitStairsMovementDisabled,1
gExitStairsMovementDisabled:
	.byte	0x0
	.align	2, 0
	.type	 sCreditsOverworld_Script,object
	.size	 sCreditsOverworld_Script,4
sCreditsOverworld_Script:
	.word	0x0
	.align	1, 0
	.type	 sCreditsOverworld_CmdLength,object
	.size	 sCreditsOverworld_CmdLength,2
sCreditsOverworld_CmdLength:
	.short	0x0
	.align	1, 0
	.type	 sCreditsOverworld_CmdIndex,object
	.size	 sCreditsOverworld_CmdIndex,2
sCreditsOverworld_CmdIndex:
	.short	0x0
	.globl	gLinkPlayerObjectEvents
	.align	2, 0
	.type	 gLinkPlayerObjectEvents,object
	.size	 gLinkPlayerObjectEvents,16
gLinkPlayerObjectEvents:
	.space	16
	.section .rodata
	.type	 sWhiteOutMoneyLossMultipliers,object
sWhiteOutMoneyLossMultipliers:
	.byte	0x2
	.byte	0x4
	.byte	0x6
	.byte	0x9
	.byte	0xc
	.byte	0x10
	.byte	0x14
	.byte	0x19
	.byte	0x1e
	.size	 sWhiteOutMoneyLossMultipliers,9
	.align	1, 0
	.type	 sWhiteOutMoneyLossBadgeFlagIDs,object
sWhiteOutMoneyLossBadgeFlagIDs:
	.short	0x823
	.short	0x824
	.short	0x825
	.short	0x826
	.short	0x827
	.short	0x828
	.short	0x829
	.short	0x82a
	.size	 sWhiteOutMoneyLossBadgeFlagIDs,16
.text
	.align	2, 0
	.type	 DoWhiteOut,function
	.thumb_func
DoWhiteOut:
	push	{r4, lr}
	ldr	r0, .L5
	bl	RunScriptImmediately
	ldr	r0, .L5+0x4
	ldr	r4, [r0]
	mov	r0, #0xa4
	lsl	r0, r0, #0x2
	add	r4, r4, r0
	bl	ComputeWhiteOutMoneyLoss
	add	r1, r0, #0
	add	r0, r4, #0
	bl	RemoveMoney
	bl	HealPlayerParty
	bl	Overworld_ResetStateAfterWhitingOut
	bl	Overworld_SetWhiteoutRespawnPoint
	bl	WarpIntoMap
	pop	{r4}
	pop	{r0}
	bx	r0
.L6:
	.align	2, 0
.L5:
	.word	EventScript_ResetEliteFourEnd
	.word	gSaveBlock1Ptr
.Lfe1:
	.size	 DoWhiteOut,.Lfe1-DoWhiteOut
	.align	2, 0
	.globl	ComputeWhiteOutMoneyLoss
	.type	 ComputeWhiteOutMoneyLoss,function
	.thumb_func
ComputeWhiteOutMoneyLoss:
	push	{r4, lr}
	bl	CountBadgesForOverworldWhiteOutLossCalculation
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetPlayerPartyHighestLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L9
	add	r4, r4, r1
	ldrb	r1, [r4]
	lsl	r1, r1, #0x2
	mov	r4, r0
	mul	r4, r4, r1
	ldr	r0, .L9+0x4
	ldr	r0, [r0]
	mov	r1, #0xa4
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	bl	GetMoney
	cmp	r4, r0
	bls	.L8	@cond_branch
	add	r4, r0, #0
.L8:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L10:
	.align	2, 0
.L9:
	.word	sWhiteOutMoneyLossMultipliers
	.word	gSaveBlock1Ptr
.Lfe2:
	.size	 ComputeWhiteOutMoneyLoss,.Lfe2-ComputeWhiteOutMoneyLoss
	.align	2, 0
	.globl	OverworldWhiteOutGetMoneyLoss
	.type	 OverworldWhiteOutGetMoneyLoss,function
	.thumb_func
OverworldWhiteOutGetMoneyLoss:
	push	{r4, r5, lr}
	bl	ComputeWhiteOutMoneyLoss
	add	r4, r0, #0
	ldr	r5, .L12
	bl	CountDigits
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, #0x0
	bl	ConvertIntToDecimalStringN
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L13:
	.align	2, 0
.L12:
	.word	gStringVar1
.Lfe3:
	.size	 OverworldWhiteOutGetMoneyLoss,.Lfe3-OverworldWhiteOutGetMoneyLoss
	.align	2, 0
	.type	 CountBadgesForOverworldWhiteOutLossCalculation,function
	.thumb_func
CountBadgesForOverworldWhiteOutLossCalculation:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
	mov	r5, #0x0
	ldr	r4, .L21
.L18:
	ldrh	r0, [r4]
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L17	@cond_branch
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L17:
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x7
	bls	.L18	@cond_branch
	add	r0, r6, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L22:
	.align	2, 0
.L21:
	.word	sWhiteOutMoneyLossBadgeFlagIDs
.Lfe4:
	.size	 CountBadgesForOverworldWhiteOutLossCalculation,.Lfe4-CountBadgesForOverworldWhiteOutLossCalculation
	.align	2, 0
	.globl	Overworld_ResetStateAfterFly
	.type	 Overworld_ResetStateAfterFly,function
	.thumb_func
Overworld_ResetStateAfterFly:
	push	{lr}
	bl	ResetInitialPlayerAvatarState
	ldr	r0, .L24
	bl	FlagClear
	ldr	r0, .L24+0x4
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L24+0x8
	bl	FlagClear
	ldr	r0, .L24+0xc
	bl	FlagClear
	ldr	r0, .L24+0x10
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L24+0x14
	bl	FlagClear
	ldr	r0, .L24+0x18
	bl	FlagClear
	ldr	r0, .L24+0x1c
	bl	FlagClear
	ldr	r0, .L24+0x20
	mov	r1, #0x0
	bl	VarSet
	pop	{r0}
	bx	r0
.L25:
	.align	2, 0
.L24:
	.word	0x833
	.word	0x405e
	.word	0x805
	.word	0x803
	.word	0x406e
	.word	0x808
	.word	0x809
	.word	0x80b
	.word	0x404d
.Lfe5:
	.size	 Overworld_ResetStateAfterFly,.Lfe5-Overworld_ResetStateAfterFly
	.align	2, 0
	.globl	Overworld_ResetStateAfterTeleport
	.type	 Overworld_ResetStateAfterTeleport,function
	.thumb_func
Overworld_ResetStateAfterTeleport:
	push	{lr}
	bl	ResetInitialPlayerAvatarState
	ldr	r0, .L27
	bl	FlagClear
	ldr	r0, .L27+0x4
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L27+0x8
	bl	FlagClear
	ldr	r0, .L27+0xc
	bl	FlagClear
	ldr	r0, .L27+0x10
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L27+0x14
	bl	FlagClear
	ldr	r0, .L27+0x18
	bl	FlagClear
	ldr	r0, .L27+0x1c
	bl	FlagClear
	ldr	r0, .L27+0x20
	mov	r1, #0x0
	bl	VarSet
	pop	{r0}
	bx	r0
.L28:
	.align	2, 0
.L27:
	.word	0x833
	.word	0x405e
	.word	0x805
	.word	0x803
	.word	0x406e
	.word	0x808
	.word	0x809
	.word	0x80b
	.word	0x404d
.Lfe6:
	.size	 Overworld_ResetStateAfterTeleport,.Lfe6-Overworld_ResetStateAfterTeleport
	.align	2, 0
	.globl	Overworld_ResetStateAfterDigEscRope
	.type	 Overworld_ResetStateAfterDigEscRope,function
	.thumb_func
Overworld_ResetStateAfterDigEscRope:
	push	{lr}
	bl	ResetInitialPlayerAvatarState
	ldr	r0, .L30
	bl	FlagClear
	ldr	r0, .L30+0x4
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L30+0x8
	bl	FlagClear
	ldr	r0, .L30+0xc
	bl	FlagClear
	ldr	r0, .L30+0x10
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L30+0x14
	bl	FlagClear
	ldr	r0, .L30+0x18
	bl	FlagClear
	ldr	r0, .L30+0x1c
	bl	FlagClear
	ldr	r0, .L30+0x20
	mov	r1, #0x0
	bl	VarSet
	pop	{r0}
	bx	r0
.L31:
	.align	2, 0
.L30:
	.word	0x833
	.word	0x405e
	.word	0x805
	.word	0x803
	.word	0x406e
	.word	0x808
	.word	0x809
	.word	0x80b
	.word	0x404d
.Lfe7:
	.size	 Overworld_ResetStateAfterDigEscRope,.Lfe7-Overworld_ResetStateAfterDigEscRope
	.align	2, 0
	.type	 Overworld_ResetStateAfterWhitingOut,function
	.thumb_func
Overworld_ResetStateAfterWhitingOut:
	push	{lr}
	bl	ResetInitialPlayerAvatarState
	ldr	r0, .L33
	bl	FlagClear
	ldr	r0, .L33+0x4
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L33+0x8
	bl	FlagClear
	ldr	r0, .L33+0xc
	bl	FlagClear
	ldr	r0, .L33+0x10
	mov	r1, #0x0
	bl	VarSet
	ldr	r0, .L33+0x14
	bl	FlagClear
	ldr	r0, .L33+0x18
	bl	FlagClear
	ldr	r0, .L33+0x1c
	bl	FlagClear
	ldr	r0, .L33+0x20
	mov	r1, #0x0
	bl	VarSet
	pop	{r0}
	bx	r0
.L34:
	.align	2, 0
.L33:
	.word	0x833
	.word	0x405e
	.word	0x805
	.word	0x803
	.word	0x406e
	.word	0x808
	.word	0x809
	.word	0x80b
	.word	0x404d
.Lfe8:
	.size	 Overworld_ResetStateAfterWhitingOut,.Lfe8-Overworld_ResetStateAfterWhitingOut
	.align	2, 0
	.type	 Overworld_ResetStateOnContinue,function
	.thumb_func
Overworld_ResetStateOnContinue:
	push	{lr}
	ldr	r0, .L36
	bl	FlagClear
	ldr	r0, .L36+0x4
	mov	r1, #0x0
	bl	VarSet
	bl	ChooseAmbientCrySpecies
	bl	UpdateLocationHistoryForRoamer
	bl	RoamerMoveToOtherLocationSet
	pop	{r0}
	bx	r0
.L37:
	.align	2, 0
.L36:
	.word	0x803
	.word	0x406e
.Lfe9:
	.size	 Overworld_ResetStateOnContinue,.Lfe9-Overworld_ResetStateOnContinue
	.align	2, 0
	.globl	ResetGameStats
	.type	 ResetGameStats,function
	.thumb_func
ResetGameStats:
	push	{r4, r5, lr}
	mov	r2, #0x0
	ldr	r5, .L44
	ldr	r4, .L44+0x4
	mov	r3, #0x0
.L42:
	ldr	r0, [r5]
	lsl	r1, r2, #0x2
	add	r0, r0, r4
	add	r0, r0, r1
	str	r3, [r0]
	add	r2, r2, #0x1
	cmp	r2, #0x3f
	ble	.L42	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L45:
	.align	2, 0
.L44:
	.word	gSaveBlock1Ptr
	.word	0x1204
.Lfe10:
	.size	 ResetGameStats,.Lfe10-ResetGameStats
	.align	2, 0
	.globl	IncrementGameStat
	.type	 IncrementGameStat,function
	.thumb_func
IncrementGameStat:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x33
	bhi	.L46	@cond_branch
	add	r0, r4, #0
	bl	GetGameStat
	add	r1, r0, #0
	ldr	r0, .L50
	cmp	r1, r0
	bhi	.L48	@cond_branch
	add	r1, r1, #0x1
	b	.L49
.L51:
	.align	2, 0
.L50:
	.word	0xfffffe
.L48:
	ldr	r1, .L52
.L49:
	add	r0, r4, #0
	bl	SetGameStat
.L46:
	pop	{r4}
	pop	{r0}
	bx	r0
.L53:
	.align	2, 0
.L52:
	.word	0xffffff
.Lfe11:
	.size	 IncrementGameStat,.Lfe11-IncrementGameStat
	.align	2, 0
	.globl	GetGameStat
	.type	 GetGameStat,function
	.thumb_func
GetGameStat:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x33
	bhi	.L55	@cond_branch
	ldr	r0, .L58
	ldr	r2, [r0]
	lsl	r0, r1, #0x2
	ldr	r1, .L58+0x4
	add	r2, r2, r1
	add	r2, r2, r0
	ldr	r0, .L58+0x8
	ldr	r1, [r0]
	mov	r0, #0xf2
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	ldr	r0, [r2]
	ldr	r1, [r1]
	eor	r0, r0, r1
	b	.L57
.L59:
	.align	2, 0
.L58:
	.word	gSaveBlock1Ptr
	.word	0x1204
	.word	gSaveBlock2Ptr
.L55:
	mov	r0, #0x0
.L57:
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 GetGameStat,.Lfe12-GetGameStat
	.align	2, 0
	.globl	SetGameStat
	.type	 SetGameStat,function
	.thumb_func
SetGameStat:
	push	{lr}
	add	r3, r1, #0
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x33
	bhi	.L60	@cond_branch
	ldr	r0, .L62
	ldr	r1, [r0]
	lsl	r0, r2, #0x2
	ldr	r2, .L62+0x4
	add	r1, r1, r2
	add	r1, r1, r0
	ldr	r0, .L62+0x8
	ldr	r0, [r0]
	mov	r2, #0xf2
	lsl	r2, r2, #0x4
	add	r0, r0, r2
	ldr	r0, [r0]
	eor	r0, r0, r3
	str	r0, [r1]
.L60:
	pop	{r0}
	bx	r0
.L63:
	.align	2, 0
.L62:
	.word	gSaveBlock1Ptr
	.word	0x1204
	.word	gSaveBlock2Ptr
.Lfe13:
	.size	 SetGameStat,.Lfe13-SetGameStat
	.align	2, 0
	.globl	ApplyNewEncryptionKeyToGameStats
	.type	 ApplyNewEncryptionKeyToGameStats,function
	.thumb_func
ApplyNewEncryptionKeyToGameStats:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r4, #0x0
	ldr	r6, .L70
.L68:
	lsl	r1, r4, #0x2
	ldr	r0, .L70+0x4
	add	r1, r1, r0
	ldr	r0, [r6]
	add	r0, r0, r1
	add	r1, r5, #0
	bl	ApplyNewEncryptionKeyToWord
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3f
	bls	.L68	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L71:
	.align	2, 0
.L70:
	.word	gSaveBlock1Ptr
	.word	0x1204
.Lfe14:
	.size	 ApplyNewEncryptionKeyToGameStats,.Lfe14-ApplyNewEncryptionKeyToGameStats
	.align	2, 0
	.type	 LoadObjEventTemplatesFromHeader,function
	.thumb_func
LoadObjEventTemplatesFromHeader:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	mov	r0, #0x0
	mov	r9, r0
	mov	r8, r0
	ldr	r1, .L81
	ldr	r0, [r1, #0x4]
	ldrb	r0, [r0]
	cmp	r9, r0
	bcc	.LCB625
	b	.L74	@long jump
.LCB625:
	ldr	r2, .L81+0x4
	mov	sl, r2
.L76:
	ldr	r3, .L81
	ldr	r0, [r3, #0x4]
	ldr	r1, [r0, #0x4]
	mov	r4, r9
	lsl	r0, r4, #0x1
	add	r0, r0, r9
	lsl	r7, r0, #0x3
	add	r2, r7, r1
	ldrb	r0, [r2, #0x2]
	cmp	r0, #0xff
	bne	.L77	@cond_branch
	ldrb	r4, [r2, #0x8]
	ldrb	r5, [r2, #0xc]
	str	r5, [sp]
	ldrb	r2, [r2, #0xe]
	str	r2, [sp, #0x4]
	add	r0, r2, #0
	add	r1, r5, #0
	bl	Overworld_GetMapHeaderByGroupAndId
	mov	r6, sl
	ldr	r1, [r6]
	mov	r2, r8
	lsl	r3, r2, #0x1
	add	r3, r3, r8
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	ldr	r0, [r0, #0x4]
	ldr	r2, [r0, #0x4]
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	mov	r5, #0x8e
	lsl	r5, r5, #0x4
	add	r1, r1, r5
	sub	r0, r0, #0x18
	ldmia	r0!, {r2, r5, r6}
	stmia	r1!, {r2, r5, r6}
	ldmia	r0!, {r2, r5, r6}
	stmia	r1!, {r2, r5, r6}
	mov	r6, sl
	ldr	r1, [r6]
	add	r1, r1, r3
	ldr	r2, .L81
	ldr	r0, [r2, #0x4]
	ldr	r0, [r0, #0x4]
	add	r0, r7, r0
	ldrb	r0, [r0]
	mov	r5, #0x8e
	lsl	r5, r5, #0x4
	add	r1, r1, r5
	strb	r0, [r1]
	ldr	r1, [r6]
	add	r1, r1, r3
	ldr	r0, [r2, #0x4]
	ldr	r0, [r0, #0x4]
	add	r0, r7, r0
	ldrh	r2, [r0, #0x4]
	ldr	r6, .L81+0x8
	add	r0, r1, r6
	strh	r2, [r0]
	ldr	r2, .L81
	ldr	r0, [r2, #0x4]
	ldr	r0, [r0, #0x4]
	add	r0, r7, r0
	ldrh	r2, [r0, #0x6]
	add	r5, r5, #0x6
	add	r0, r1, r5
	strh	r2, [r0]
	add	r6, r6, #0x4
	add	r1, r1, r6
	strb	r4, [r1]
	mov	r1, sl
	ldr	r0, [r1]
	add	r0, r0, r3
	ldr	r2, .L81+0xc
	add	r1, r0, r2
	mov	r3, sp
	ldrh	r3, [r3]
	strh	r3, [r1]
	ldr	r4, .L81+0x10
	add	r1, r0, r4
	mov	r5, sp
	ldrh	r5, [r5, #0x4]
	strh	r5, [r1]
	sub	r6, r6, #0x6
	add	r0, r0, r6
	mov	r1, #0xff
	strb	r1, [r0]
	b	.L80
.L82:
	.align	2, 0
.L81:
	.word	gMapHeader
	.word	gSaveBlock1Ptr
	.word	0x8e4
	.word	0x8ec
	.word	0x8ee
.L77:
	mov	r0, sl
	ldr	r1, [r0]
	mov	r3, r8
	lsl	r0, r3, #0x1
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	mov	r4, #0x8e
	lsl	r4, r4, #0x4
	add	r1, r1, r4
	add	r0, r2, #0
	ldmia	r0!, {r2, r5, r6}
	stmia	r1!, {r2, r5, r6}
	ldmia	r0!, {r3, r4, r5}
	stmia	r1!, {r3, r4, r5}
.L80:
	mov	r0, r8
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	ldr	r6, .L83
	ldr	r0, [r6, #0x4]
	ldrb	r0, [r0]
	cmp	r9, r0
	bcs	.LCB795
	b	.L76	@long jump
.LCB795:
.L74:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L84:
	.align	2, 0
.L83:
	.word	gMapHeader
.Lfe15:
	.size	 LoadObjEventTemplatesFromHeader,.Lfe15-LoadObjEventTemplatesFromHeader
	.align	2, 0
	.type	 LoadSaveblockObjEventScripts,function
	.thumb_func
LoadSaveblockObjEventScripts:
	push	{lr}
	ldr	r0, .L91
	ldr	r1, [r0, #0x4]
	ldr	r0, .L91+0x4
	ldr	r0, [r0]
	ldr	r2, [r1, #0x4]
	mov	r3, #0x8e
	lsl	r3, r3, #0x4
	add	r1, r0, r3
	mov	r3, #0x3f
.L89:
	ldr	r0, [r2, #0x10]
	str	r0, [r1, #0x10]
	add	r2, r2, #0x18
	add	r1, r1, #0x18
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L89	@cond_branch
	pop	{r0}
	bx	r0
.L92:
	.align	2, 0
.L91:
	.word	gMapHeader
	.word	gSaveBlock1Ptr
.Lfe16:
	.size	 LoadSaveblockObjEventScripts,.Lfe16-LoadSaveblockObjEventScripts
	.align	2, 0
	.globl	SetObjEventTemplateCoords
	.type	 SetObjEventTemplateCoords,function
	.thumb_func
SetObjEventTemplateCoords:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r0, .L100
	ldr	r0, [r0]
	mov	r1, #0x0
	mov	r6, #0x8e
	lsl	r6, r6, #0x4
	add	r3, r0, r6
.L97:
	ldrb	r0, [r3]
	cmp	r0, r5
	bne	.L96	@cond_branch
	strh	r4, [r3, #0x4]
	strh	r2, [r3, #0x6]
	b	.L95
.L101:
	.align	2, 0
.L100:
	.word	gSaveBlock1Ptr
.L96:
	add	r3, r3, #0x18
	add	r1, r1, #0x1
	cmp	r1, #0x3f
	ble	.L97	@cond_branch
.L95:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 SetObjEventTemplateCoords,.Lfe17-SetObjEventTemplateCoords
	.align	2, 0
	.globl	SetObjEventTemplateMovementType
	.type	 SetObjEventTemplateMovementType,function
	.thumb_func
SetObjEventTemplateMovementType:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L109
	ldr	r0, [r0]
	mov	r3, #0x0
	mov	r5, #0x8e
	lsl	r5, r5, #0x4
	add	r2, r0, r5
.L106:
	ldrb	r0, [r2]
	cmp	r0, r4
	bne	.L105	@cond_branch
	strb	r1, [r2, #0x9]
	b	.L102
.L110:
	.align	2, 0
.L109:
	.word	gSaveBlock1Ptr
.L105:
	add	r2, r2, #0x18
	add	r3, r3, #0x1
	cmp	r3, #0x3f
	ble	.L106	@cond_branch
.L102:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 SetObjEventTemplateMovementType,.Lfe18-SetObjEventTemplateMovementType
	.align	2, 0
	.type	 InitMapView,function
	.thumb_func
InitMapView:
	push	{r4, lr}
	bl	move_tilemap_camera_to_upper_left_corner
	ldr	r4, .L112
	ldr	r0, [r4]
	bl	CopyMapTilesetsToVram
	ldr	r0, [r4]
	bl	LoadMapTilesetPalettes
	bl	DrawWholeMapView
	bl	InitTilesetAnimations
	pop	{r4}
	pop	{r0}
	bx	r0
.L113:
	.align	2, 0
.L112:
	.word	gMapHeader
.Lfe19:
	.size	 InitMapView,.Lfe19-InitMapView
	.align	2, 0
	.type	 GetMapLayout,function
	.thumb_func
GetMapLayout:
	push	{lr}
	ldr	r0, .L117
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x32]
	cmp	r1, #0
	bne	.L115	@cond_branch
	mov	r0, #0x0
	b	.L116
.L118:
	.align	2, 0
.L117:
	.word	gSaveBlock1Ptr
.L115:
	ldr	r0, .L119
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
.L116:
	pop	{r1}
	bx	r1
.L120:
	.align	2, 0
.L119:
	.word	gMapLayouts
.Lfe20:
	.size	 GetMapLayout,.Lfe20-GetMapLayout
	.section .rodata
	.align	2, 0
	.type	 sDummyWarpData,object
	.size	 sDummyWarpData,8
sDummyWarpData:
	.byte	-0x1
	.byte	-0x1
	.byte	-0x1
	.space	1
	.short	-0x1
	.short	-0x1
.text
	.align	2, 0
	.type	 ApplyCurrentWarp,function
	.thumb_func
ApplyCurrentWarp:
	ldr	r3, .L122
	ldr	r0, .L122+0x4
	ldr	r2, [r0]
	ldr	r0, [r2, #0x4]		@ created by thumb_load_double_from_address
	ldr	r1, [r2, #0x8]		@ created by thumb_load_double_from_address
	str	r0, [r3]
	str	r1, [r3, #0x4]
	ldr	r0, .L122+0x8
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [r2, #0x4]
	str	r1, [r2, #0x8]
	ldr	r2, .L122+0xc
	ldr	r0, .L122+0x10
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	ldr	r2, .L122+0x14
	str	r0, [r2]
	str	r1, [r2, #0x4]
	bx	lr
.L123:
	.align	2, 0
.L122:
	.word	gLastUsedWarp
	.word	gSaveBlock1Ptr
	.word	sWarpDestination
	.word	sFixedDiveWarp
	.word	sDummyWarpData
	.word	sFixedHoleWarp
.Lfe21:
	.size	 ApplyCurrentWarp,.Lfe21-ApplyCurrentWarp
	.align	2, 0
	.type	 SetWarpData,function
	.thumb_func
SetWarpData:
	push	{r4, r5, lr}
	ldr	r4, [sp, #0xc]
	ldr	r5, [sp, #0x10]
	strb	r1, [r0]
	strb	r2, [r0, #0x1]
	strb	r3, [r0, #0x2]
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	strh	r4, [r0, #0x4]
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	strh	r5, [r0, #0x6]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe22:
	.size	 SetWarpData,.Lfe22-SetWarpData
	.align	2, 0
	.type	 IsDummyWarp,function
	.thumb_func
IsDummyWarp:
	push	{lr}
	add	r1, r0, #0
	mov	r2, #0x0
	ldrsb	r2, [r1, r2]
	mov	r0, #0x1
	neg	r0, r0
	cmp	r2, r0
	bne	.L134	@cond_branch
	mov	r0, #0x1
	ldrsb	r0, [r1, r0]
	cmp	r0, r2
	bne	.L134	@cond_branch
	mov	r2, #0x2
	ldrsb	r2, [r1, r2]
	cmp	r2, r0
	bne	.L134	@cond_branch
	mov	r0, #0x4
	ldrsh	r3, [r1, r0]
	cmp	r3, r2
	bne	.L134	@cond_branch
	mov	r2, #0x6
	ldrsh	r0, [r1, r2]
	cmp	r0, r3
	bne	.L134	@cond_branch
	mov	r0, #0x1
	b	.L136
.L134:
	mov	r0, #0x0
.L136:
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 IsDummyWarp,.Lfe23-IsDummyWarp
	.align	2, 0
	.globl	Overworld_GetMapHeaderByGroupAndId
	.type	 Overworld_GetMapHeaderByGroupAndId,function
	.thumb_func
Overworld_GetMapHeaderByGroupAndId:
	lsl	r0, r0, #0x10
	lsl	r1, r1, #0x10
	ldr	r2, .L138
	lsr	r0, r0, #0xe
	add	r0, r0, r2
	ldr	r0, [r0]
	lsr	r1, r1, #0xe
	add	r1, r1, r0
	ldr	r0, [r1]
	bx	lr
.L139:
	.align	2, 0
.L138:
	.word	gMapGroups
.Lfe24:
	.size	 Overworld_GetMapHeaderByGroupAndId,.Lfe24-Overworld_GetMapHeaderByGroupAndId
	.align	2, 0
	.globl	GetDestinationWarpMapHeader
	.type	 GetDestinationWarpMapHeader,function
	.thumb_func
GetDestinationWarpMapHeader:
	push	{lr}
	ldr	r1, .L141
	mov	r0, #0x0
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x1]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	pop	{r1}
	bx	r1
.L142:
	.align	2, 0
.L141:
	.word	sWarpDestination
.Lfe25:
	.size	 GetDestinationWarpMapHeader,.Lfe25-GetDestinationWarpMapHeader
	.align	2, 0
	.type	 LoadCurrentMapData,function
	.thumb_func
LoadCurrentMapData:
	push	{r4, r5, r6, lr}
	ldr	r4, .L144
	ldr	r5, .L144+0x4
	ldr	r1, [r5]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	add	r1, r4, #0
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldr	r0, [r0]
	str	r0, [r1]
	ldr	r1, [r5]
	ldrh	r0, [r4, #0x12]
	strh	r0, [r1, #0x32]
	bl	GetMapLayout
	str	r0, [r4]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L145:
	.align	2, 0
.L144:
	.word	gMapHeader
	.word	gSaveBlock1Ptr
.Lfe26:
	.size	 LoadCurrentMapData,.Lfe26-LoadCurrentMapData
	.align	2, 0
	.type	 LoadSaveblockMapHeader,function
	.thumb_func
LoadSaveblockMapHeader:
	push	{r4, r5, lr}
	ldr	r4, .L147
	ldr	r0, .L147+0x4
	ldr	r1, [r0]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	add	r1, r4, #0
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldr	r0, [r0]
	str	r0, [r1]
	bl	GetMapLayout
	str	r0, [r4]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L148:
	.align	2, 0
.L147:
	.word	gMapHeader
	.word	gSaveBlock1Ptr
.Lfe27:
	.size	 LoadSaveblockMapHeader,.Lfe27-LoadSaveblockMapHeader
	.align	2, 0
	.type	 SetPlayerCoordsFromWarp,function
	.thumb_func
SetPlayerCoordsFromWarp:
	push	{r4, r5, lr}
	ldr	r0, .L154
	ldr	r2, [r0]
	mov	r1, #0x6
	ldrsb	r1, [r2, r1]
	add	r4, r0, #0
	cmp	r1, #0
	blt	.L150	@cond_branch
	ldr	r3, .L154+0x4
	ldr	r0, [r3, #0x4]
	ldrb	r5, [r0, #0x1]
	cmp	r1, r5
	bge	.L150	@cond_branch
	ldr	r0, [r0, #0x8]
	lsl	r1, r1, #0x3
	add	r0, r1, r0
	ldrh	r0, [r0]
	strh	r0, [r2]
	ldr	r0, [r3, #0x4]
	ldr	r0, [r0, #0x8]
	add	r1, r1, r0
	ldrh	r0, [r1, #0x2]
	strh	r0, [r2, #0x2]
	b	.L151
.L155:
	.align	2, 0
.L154:
	.word	gSaveBlock1Ptr
	.word	gMapHeader
.L150:
	ldr	r1, [r4]
	ldrh	r3, [r1, #0x8]
	mov	r2, #0x8
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	blt	.L152	@cond_branch
	ldrh	r2, [r1, #0xa]
	mov	r5, #0xa
	ldrsh	r0, [r1, r5]
	cmp	r0, #0
	blt	.L152	@cond_branch
	strh	r3, [r1]
	strh	r2, [r1, #0x2]
	b	.L151
.L152:
	ldr	r3, [r4]
	ldr	r2, .L156
	ldr	r0, [r2]
	ldr	r0, [r0]
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	strh	r0, [r3]
	ldr	r0, [r2]
	ldr	r0, [r0, #0x4]
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	strh	r0, [r3, #0x2]
.L151:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L157:
	.align	2, 0
.L156:
	.word	gMapHeader
.Lfe28:
	.size	 SetPlayerCoordsFromWarp,.Lfe28-SetPlayerCoordsFromWarp
	.align	2, 0
	.globl	WarpIntoMap
	.type	 WarpIntoMap,function
	.thumb_func
WarpIntoMap:
	push	{lr}
	bl	ApplyCurrentWarp
	bl	LoadCurrentMapData
	bl	SetPlayerCoordsFromWarp
	pop	{r0}
	bx	r0
.Lfe29:
	.size	 WarpIntoMap,.Lfe29-WarpIntoMap
	.align	2, 0
	.globl	SetWarpDestination
	.type	 SetWarpDestination,function
	.thumb_func
SetWarpDestination:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r1, [sp, #0x18]
	ldr	r0, .L160
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	str	r3, [sp]
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	str	r1, [sp, #0x4]
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r6, #0
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L161:
	.align	2, 0
.L160:
	.word	sWarpDestination
.Lfe30:
	.size	 SetWarpDestination,.Lfe30-SetWarpDestination
	.align	2, 0
	.globl	SetWarpDestinationToMapWarp
	.type	 SetWarpDestinationToMapWarp,function
	.thumb_func
SetWarpDestinationToMapWarp:
	push	{lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	asr	r2, r2, #0x18
	mov	r3, #0x1
	neg	r3, r3
	str	r3, [sp]
	bl	SetWarpDestination
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 SetWarpDestinationToMapWarp,.Lfe31-SetWarpDestinationToMapWarp
	.align	2, 0
	.globl	SetDynamicWarp
	.type	 SetDynamicWarp,function
	.thumb_func
SetDynamicWarp:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L164
	ldr	r5, [r0]
	add	r0, r5, #0
	add	r0, r0, #0x14
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	asr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	mov	r4, #0x0
	ldrsb	r4, [r5, r4]
	str	r4, [sp]
	mov	r4, #0x2
	ldrsb	r4, [r5, r4]
	str	r4, [sp, #0x4]
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L165:
	.align	2, 0
.L164:
	.word	gSaveBlock1Ptr
.Lfe32:
	.size	 SetDynamicWarp,.Lfe32-SetDynamicWarp
	.align	2, 0
	.globl	SetDynamicWarpWithCoords
	.type	 SetDynamicWarpWithCoords,function
	.thumb_func
SetDynamicWarpWithCoords:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	ldr	r4, [sp, #0x14]
	ldr	r5, [sp, #0x18]
	ldr	r0, .L167
	ldr	r0, [r0]
	add	r0, r0, #0x14
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	asr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	str	r4, [sp]
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	str	r5, [sp, #0x4]
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L168:
	.align	2, 0
.L167:
	.word	gSaveBlock1Ptr
.Lfe33:
	.size	 SetDynamicWarpWithCoords,.Lfe33-SetDynamicWarpWithCoords
	.align	2, 0
	.globl	SetWarpDestinationToDynamicWarp
	.type	 SetWarpDestinationToDynamicWarp,function
	.thumb_func
SetWarpDestinationToDynamicWarp:
	ldr	r2, .L170
	ldr	r0, .L170+0x4
	ldr	r0, [r0]
	ldr	r1, [r0, #0x18]		@ created by thumb_load_double_from_address
	ldr	r0, [r0, #0x14]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	bx	lr
.L171:
	.align	2, 0
.L170:
	.word	sWarpDestination
	.word	gSaveBlock1Ptr
.Lfe34:
	.size	 SetWarpDestinationToDynamicWarp,.Lfe34-SetWarpDestinationToDynamicWarp
	.align	2, 0
	.globl	SetWarpDestinationToHealLocation
	.type	 SetWarpDestinationToHealLocation,function
	.thumb_func
SetWarpDestinationToHealLocation:
	push	{r4, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetHealLocation
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L173	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	mov	r1, #0x1
	ldrsb	r1, [r4, r1]
	mov	r2, #0x1
	neg	r2, r2
	mov	r3, #0x2
	ldrsb	r3, [r4, r3]
	ldrb	r4, [r4, #0x4]
	lsl	r4, r4, #24
	asr	r4, r4, #24
	str	r4, [sp]
	bl	SetWarpDestination
.L173:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe35:
	.size	 SetWarpDestinationToHealLocation,.Lfe35-SetWarpDestinationToHealLocation
	.align	2, 0
	.globl	SetWarpDestinationToLastHealLocation
	.type	 SetWarpDestinationToLastHealLocation,function
	.thumb_func
SetWarpDestinationToLastHealLocation:
	ldr	r2, .L175
	ldr	r0, .L175+0x4
	ldr	r0, [r0]
	ldr	r1, [r0, #0x20]		@ created by thumb_load_double_from_address
	ldr	r0, [r0, #0x1c]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	bx	lr
.L176:
	.align	2, 0
.L175:
	.word	sWarpDestination
	.word	gSaveBlock1Ptr
.Lfe36:
	.size	 SetWarpDestinationToLastHealLocation,.Lfe36-SetWarpDestinationToLastHealLocation
	.align	2, 0
	.type	 Overworld_SetWhiteoutRespawnPoint,function
	.thumb_func
Overworld_SetWhiteoutRespawnPoint:
	push	{lr}
	ldr	r0, .L178
	bl	SetWhiteoutRespawnWarpAndHealerNpc
	pop	{r0}
	bx	r0
.L179:
	.align	2, 0
.L178:
	.word	sWarpDestination
.Lfe37:
	.size	 Overworld_SetWhiteoutRespawnPoint,.Lfe37-Overworld_SetWhiteoutRespawnPoint
	.align	2, 0
	.globl	SetLastHealLocationWarp
	.type	 SetLastHealLocationWarp,function
	.thumb_func
SetLastHealLocationWarp:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetHealLocation
	add	r5, r0, #0
	cmp	r5, #0
	beq	.L181	@cond_branch
	ldr	r0, .L182
	ldr	r0, [r0]
	add	r0, r0, #0x1c
	mov	r1, #0x0
	ldrsb	r1, [r5, r1]
	mov	r2, #0x1
	ldrsb	r2, [r5, r2]
	mov	r3, #0x1
	neg	r3, r3
	mov	r4, #0x2
	ldrsb	r4, [r5, r4]
	str	r4, [sp]
	mov	r4, #0x4
	ldrsb	r4, [r5, r4]
	str	r4, [sp, #0x4]
	bl	SetWarpData
.L181:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L183:
	.align	2, 0
.L182:
	.word	gSaveBlock1Ptr
.Lfe38:
	.size	 SetLastHealLocationWarp,.Lfe38-SetLastHealLocationWarp
	.align	2, 0
	.globl	UpdateEscapeWarp
	.type	 UpdateEscapeWarp,function
	.thumb_func
UpdateEscapeWarp:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	bl	GetCurrentMapType
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L187
	mov	r0, #0x0
	ldrsb	r0, [r1, r0]
	ldrb	r1, [r1, #0x1]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	bl	GetMapTypeByGroupAndId
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	bl	IsMapTypeOutdoors
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L185	@cond_branch
	add	r0, r5, #0
	bl	IsMapTypeOutdoors
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L185	@cond_branch
	ldr	r5, .L187+0x4
	ldr	r0, [r5]
	ldrh	r0, [r0, #0x4]
	cmp	r0, #0x1
	beq	.L185	@cond_branch
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	eor	r0, r0, r1
	neg	r4, r0
	orr	r4, r4, r0
	ldr	r1, [r5]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	mov	r2, #0x1
	neg	r2, r2
	sub	r3, r6, #0x7
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	lsr	r4, r4, #0x1f
	sub	r4, r4, #0x7
	add	r4, r7, r4
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	str	r4, [sp]
	bl	SetEscapeWarp
.L185:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L188:
	.align	2, 0
.L187:
	.word	sWarpDestination
	.word	gSaveBlock1Ptr
.Lfe39:
	.size	 UpdateEscapeWarp,.Lfe39-UpdateEscapeWarp
	.align	2, 0
	.globl	SetEscapeWarp
	.type	 SetEscapeWarp,function
	.thumb_func
SetEscapeWarp:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r1, [sp, #0x18]
	ldr	r0, .L190
	ldr	r0, [r0]
	add	r0, r0, #0x24
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	str	r3, [sp]
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	str	r1, [sp, #0x4]
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r6, #0
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L191:
	.align	2, 0
.L190:
	.word	gSaveBlock1Ptr
.Lfe40:
	.size	 SetEscapeWarp,.Lfe40-SetEscapeWarp
	.align	2, 0
	.globl	SetWarpDestinationToEscapeWarp
	.type	 SetWarpDestinationToEscapeWarp,function
	.thumb_func
SetWarpDestinationToEscapeWarp:
	ldr	r2, .L193
	ldr	r0, .L193+0x4
	ldr	r0, [r0]
	ldr	r1, [r0, #0x28]		@ created by thumb_load_double_from_address
	ldr	r0, [r0, #0x24]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	bx	lr
.L194:
	.align	2, 0
.L193:
	.word	sWarpDestination
	.word	gSaveBlock1Ptr
.Lfe41:
	.size	 SetWarpDestinationToEscapeWarp,.Lfe41-SetWarpDestinationToEscapeWarp
	.align	2, 0
	.globl	SetFixedDiveWarp
	.type	 SetFixedDiveWarp,function
	.thumb_func
SetFixedDiveWarp:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r1, [sp, #0x18]
	ldr	r0, .L196
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	str	r3, [sp]
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	str	r1, [sp, #0x4]
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r6, #0
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L197:
	.align	2, 0
.L196:
	.word	sFixedDiveWarp
.Lfe42:
	.size	 SetFixedDiveWarp,.Lfe42-SetFixedDiveWarp
	.align	2, 0
	.type	 SetWarpDestinationToDiveWarp,function
	.thumb_func
SetWarpDestinationToDiveWarp:
	ldr	r2, .L199
	ldr	r0, .L199+0x4
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	bx	lr
.L200:
	.align	2, 0
.L199:
	.word	sWarpDestination
	.word	sFixedDiveWarp
.Lfe43:
	.size	 SetWarpDestinationToDiveWarp,.Lfe43-SetWarpDestinationToDiveWarp
	.align	2, 0
	.globl	SetFixedHoleWarp
	.type	 SetFixedHoleWarp,function
	.thumb_func
SetFixedHoleWarp:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r1, [sp, #0x18]
	ldr	r0, .L202
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	str	r3, [sp]
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	str	r1, [sp, #0x4]
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r6, #0
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L203:
	.align	2, 0
.L202:
	.word	sFixedHoleWarp
.Lfe44:
	.size	 SetFixedHoleWarp,.Lfe44-SetFixedHoleWarp
	.align	2, 0
	.globl	SetWarpDestinationToFixedHoleWarp
	.type	 SetWarpDestinationToFixedHoleWarp,function
	.thumb_func
SetWarpDestinationToFixedHoleWarp:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	ldr	r4, .L207
	add	r0, r4, #0
	bl	IsDummyWarp
	cmp	r0, #0x1
	bne	.L205	@cond_branch
	ldr	r2, .L207+0x4
	ldr	r0, .L207+0x8
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	b	.L206
.L208:
	.align	2, 0
.L207:
	.word	sFixedHoleWarp
	.word	sWarpDestination
	.word	gLastUsedWarp
.L205:
	mov	r0, #0x0
	ldrsb	r0, [r4, r0]
	mov	r1, #0x1
	ldrsb	r1, [r4, r1]
	mov	r2, #0x1
	neg	r2, r2
	lsl	r3, r5, #0x18
	asr	r3, r3, #0x18
	lsl	r4, r6, #0x18
	asr	r4, r4, #0x18
	str	r4, [sp]
	bl	SetWarpDestination
.L206:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 SetWarpDestinationToFixedHoleWarp,.Lfe45-SetWarpDestinationToFixedHoleWarp
	.align	2, 0
	.type	 SetWarpDestinationToContinueGameWarp,function
	.thumb_func
SetWarpDestinationToContinueGameWarp:
	ldr	r2, .L210
	ldr	r0, .L210+0x4
	ldr	r0, [r0]
	ldr	r1, [r0, #0x10]		@ created by thumb_load_double_from_address
	ldr	r0, [r0, #0xc]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	bx	lr
.L211:
	.align	2, 0
.L210:
	.word	sWarpDestination
	.word	gSaveBlock1Ptr
.Lfe46:
	.size	 SetWarpDestinationToContinueGameWarp,.Lfe46-SetWarpDestinationToContinueGameWarp
	.align	2, 0
	.type	 SetContinueGameWarp,function
	.thumb_func
SetContinueGameWarp:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r1, [sp, #0x18]
	ldr	r0, .L213
	ldr	r0, [r0]
	add	r0, r0, #0xc
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	lsl	r3, r3, #0x18
	asr	r3, r3, #0x18
	str	r3, [sp]
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x18
	str	r1, [sp, #0x4]
	add	r1, r4, #0
	add	r2, r5, #0
	add	r3, r6, #0
	bl	SetWarpData
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L214:
	.align	2, 0
.L213:
	.word	gSaveBlock1Ptr
.Lfe47:
	.size	 SetContinueGameWarp,.Lfe47-SetContinueGameWarp
	.align	2, 0
	.globl	SetContinueGameWarpToHealLocation
	.type	 SetContinueGameWarpToHealLocation,function
	.thumb_func
SetContinueGameWarpToHealLocation:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetHealLocation
	add	r5, r0, #0
	cmp	r5, #0
	beq	.L216	@cond_branch
	ldr	r0, .L217
	ldr	r0, [r0]
	add	r0, r0, #0xc
	mov	r1, #0x0
	ldrsb	r1, [r5, r1]
	mov	r2, #0x1
	ldrsb	r2, [r5, r2]
	mov	r3, #0x1
	neg	r3, r3
	mov	r4, #0x2
	ldrsb	r4, [r5, r4]
	str	r4, [sp]
	mov	r4, #0x4
	ldrsb	r4, [r5, r4]
	str	r4, [sp, #0x4]
	bl	SetWarpData
.L216:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L218:
	.align	2, 0
.L217:
	.word	gSaveBlock1Ptr
.Lfe48:
	.size	 SetContinueGameWarpToHealLocation,.Lfe48-SetContinueGameWarpToHealLocation
	.align	2, 0
	.globl	SetContinueGameWarpToDynamicWarp
	.type	 SetContinueGameWarpToDynamicWarp,function
	.thumb_func
SetContinueGameWarpToDynamicWarp:
	ldr	r0, .L220
	ldr	r2, [r0]
	ldr	r0, [r2, #0x14]		@ created by thumb_load_double_from_address
	ldr	r1, [r2, #0x18]		@ created by thumb_load_double_from_address
	str	r0, [r2, #0xc]
	str	r1, [r2, #0x10]
	bx	lr
.L221:
	.align	2, 0
.L220:
	.word	gSaveBlock1Ptr
.Lfe49:
	.size	 SetContinueGameWarpToDynamicWarp,.Lfe49-SetContinueGameWarpToDynamicWarp
	.align	2, 0
	.type	 GetMapConnection,function
	.thumb_func
GetMapConnection:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L232
	ldr	r0, [r0, #0xc]
	ldr	r3, [r0]
	ldr	r1, [r0, #0x4]
	cmp	r1, #0
	bne	.L223	@cond_branch
	b	.L225
.L233:
	.align	2, 0
.L232:
	.word	gMapHeader
.L231:
	add	r0, r1, #0
	b	.L230
.L223:
	mov	r2, #0x0
	cmp	r2, r3
	bge	.L225	@cond_branch
.L227:
	ldrb	r0, [r1]
	cmp	r0, r4
	beq	.L231	@cond_branch
	add	r2, r2, #0x1
	add	r1, r1, #0xc
	cmp	r2, r3
	blt	.L227	@cond_branch
.L225:
	mov	r0, #0x0
.L230:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 GetMapConnection,.Lfe50-GetMapConnection
	.align	2, 0
	.type	 SetDiveWarp,function
	.thumb_func
SetDiveWarp:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r5, r2, #0x10
	bl	GetMapConnection
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L235	@cond_branch
	mov	r0, #0x8
	ldrsb	r0, [r1, r0]
	ldrb	r1, [r1, #0x9]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	mov	r2, #0x1
	neg	r2, r2
	lsl	r3, r4, #0x18
	asr	r3, r3, #0x18
	lsl	r4, r5, #0x18
	asr	r4, r4, #0x18
	str	r4, [sp]
	bl	SetWarpDestination
	b	.L236
.L235:
	bl	RunOnDiveWarpMapScript
	ldr	r0, .L239
	bl	IsDummyWarp
	cmp	r0, #0
	beq	.L237	@cond_branch
	mov	r0, #0x0
	b	.L238
.L240:
	.align	2, 0
.L239:
	.word	sFixedDiveWarp
.L237:
	bl	SetWarpDestinationToDiveWarp
.L236:
	mov	r0, #0x1
.L238:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 SetDiveWarp,.Lfe51-SetDiveWarp
	.align	2, 0
	.globl	SetDiveWarpEmerge
	.type	 SetDiveWarpEmerge,function
	.thumb_func
SetDiveWarpEmerge:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r0, #0x6
	add	r1, r3, #0
	bl	SetDiveWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe52:
	.size	 SetDiveWarpEmerge,.Lfe52-SetDiveWarpEmerge
	.align	2, 0
	.globl	SetDiveWarpDive
	.type	 SetDiveWarpDive,function
	.thumb_func
SetDiveWarpDive:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r0, #0x5
	add	r1, r3, #0
	bl	SetDiveWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe53:
	.size	 SetDiveWarpDive,.Lfe53-SetDiveWarpDive
	.align	2, 0
	.globl	LoadMapFromCameraTransition
	.type	 LoadMapFromCameraTransition,function
	.thumb_func
LoadMapFromCameraTransition:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r0, #0x18
	asr	r0, r0, #0x18
	lsr	r4, r1, #0x18
	asr	r1, r1, #0x18
	mov	r3, #0x1
	neg	r3, r3
	str	r3, [sp]
	add	r2, r3, #0
	bl	SetWarpDestination
	bl	Overworld_TryMapConnectionMusicTransition
	bl	ApplyCurrentWarp
	bl	LoadCurrentMapData
	bl	LoadObjEventTemplatesFromHeader
	bl	TrySetMapSaveWarpStatus
	bl	ClearTempFieldEventData
	bl	ResetCyclingRoadChallengeData
	bl	RestartWildEncounterImmunitySteps
	add	r0, r5, #0
	add	r1, r4, #0
	bl	MapResetTrainerRematches
	bl	SetSavedWeatherFromCurrMapHeader
	bl	ChooseAmbientCrySpecies
	bl	SetDefaultFlashLevel
	bl	Overworld_ClearSavedMusic
	bl	RunOnTransitionMapScript
	bl	TryRegenerateRenewableHiddenItems
	bl	InitMap
	ldr	r4, .L250
	ldr	r0, [r4]
	bl	CopySecondaryTilesetToVramUsingHeap
	ldr	r0, [r4]
	bl	LoadSecondaryTilesetPalette
	mov	r4, #0x7
.L247:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	ApplyWeatherGammaShiftToPal
	add	r4, r4, #0x1
	cmp	r4, #0xc
	ble	.L247	@cond_branch
	bl	InitSecondaryTilesetAnimation
	bl	UpdateLocationHistoryForRoamer
	bl	RoamerMove
	bl	QL_ResetDefeatedWildMonRecord
	bl	DoCurrentWeather
	bl	ResetFieldTasksArgs
	bl	RunOnResumeMapScript
	bl	GetLastUsedWarpMapSectionId
	ldr	r1, .L250
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r1, #0x14]
	cmp	r0, r1
	beq	.L249	@cond_branch
	mov	r0, #0x1
	bl	ShowMapNamePopup
.L249:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L251:
	.align	2, 0
.L250:
	.word	gMapHeader
.Lfe54:
	.size	 LoadMapFromCameraTransition,.Lfe54-LoadMapFromCameraTransition
	.align	2, 0
	.type	 LoadMapFromWarp,function
	.thumb_func
LoadMapFromWarp:
	push	{r4, lr}
	bl	LoadCurrentMapData
	bl	LoadObjEventTemplatesFromHeader
	ldr	r0, .L254
	ldrb	r0, [r0, #0x17]
	bl	IsMapTypeOutdoors
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	TrySetMapSaveWarpStatus
	bl	ClearTempFieldEventData
	bl	ResetCyclingRoadChallengeData
	bl	RestartWildEncounterImmunitySteps
	ldr	r0, .L254+0x4
	ldr	r1, [r0]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	MapResetTrainerRematches
	bl	SetSavedWeatherFromCurrMapHeader
	bl	ChooseAmbientCrySpecies
	cmp	r4, #0
	beq	.L253	@cond_branch
	ldr	r0, .L254+0x8
	bl	FlagClear
.L253:
	bl	SetDefaultFlashLevel
	bl	Overworld_ClearSavedMusic
	bl	RunOnTransitionMapScript
	bl	TryRegenerateRenewableHiddenItems
	bl	UpdateLocationHistoryForRoamer
	bl	RoamerMoveToOtherLocationSet
	bl	QL_ResetDefeatedWildMonRecord
	bl	InitMap
	pop	{r4}
	pop	{r0}
	bx	r0
.L255:
	.align	2, 0
.L254:
	.word	gMapHeader
	.word	gSaveBlock1Ptr
	.word	0x809
.Lfe55:
	.size	 LoadMapFromWarp,.Lfe55-LoadMapFromWarp
	.align	2, 0
	.type	 QL_LoadMapNormal,function
	.thumb_func
QL_LoadMapNormal:
	push	{lr}
	bl	LoadCurrentMapData
	bl	LoadObjEventTemplatesFromHeader
	ldr	r0, .L257
	ldrb	r0, [r0, #0x17]
	bl	IsMapTypeOutdoors
	bl	TrySetMapSaveWarpStatus
	bl	SetSavedWeatherFromCurrMapHeader
	bl	ChooseAmbientCrySpecies
	bl	SetDefaultFlashLevel
	bl	QL_ResetDefeatedWildMonRecord
	bl	QL_RestoreMapLayoutId
	bl	LoadSaveblockMapHeader
	bl	InitMap
	pop	{r0}
	bx	r0
.L258:
	.align	2, 0
.L257:
	.word	gMapHeader
.Lfe56:
	.size	 QL_LoadMapNormal,.Lfe56-QL_LoadMapNormal
	.align	2, 0
	.globl	ResetInitialPlayerAvatarState
	.type	 ResetInitialPlayerAvatarState,function
	.thumb_func
ResetInitialPlayerAvatarState:
	ldr	r0, .L260
	mov	r2, #0x0
	mov	r1, #0x1
	strb	r1, [r0, #0x1]
	strb	r1, [r0]
	strb	r2, [r0, #0x2]
	bx	lr
.L261:
	.align	2, 0
.L260:
	.word	sInitialPlayerAvatarState
.Lfe57:
	.size	 ResetInitialPlayerAvatarState,.Lfe57-ResetInitialPlayerAvatarState
	.align	2, 0
	.type	 SetInitialPlayerAvatarStateWithDirection,function
	.thumb_func
SetInitialPlayerAvatarStateWithDirection:
	ldr	r1, .L263
	strb	r0, [r1, #0x1]
	mov	r0, #0x1
	strb	r0, [r1]
	strb	r0, [r1, #0x2]
	bx	lr
.L264:
	.align	2, 0
.L263:
	.word	sInitialPlayerAvatarState
.Lfe58:
	.size	 SetInitialPlayerAvatarStateWithDirection,.Lfe58-SetInitialPlayerAvatarStateWithDirection
	.align	2, 0
	.globl	StoreInitialPlayerAvatarState
	.type	 StoreInitialPlayerAvatarState,function
	.thumb_func
StoreInitialPlayerAvatarState:
	push	{r4, lr}
	bl	GetPlayerFacingDirection
	ldr	r4, .L275
	strb	r0, [r4, #0x1]
	mov	r0, #0x2
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L266	@cond_branch
	mov	r0, #0x2
	b	.L274
.L276:
	.align	2, 0
.L275:
	.word	sInitialPlayerAvatarState
.L266:
	mov	r0, #0x4
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L268	@cond_branch
	mov	r0, #0x4
	b	.L274
.L268:
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L270	@cond_branch
	mov	r0, #0x8
	b	.L274
.L270:
	mov	r0, #0x10
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L272	@cond_branch
	mov	r0, #0x10
	b	.L274
.L272:
	mov	r0, #0x1
.L274:
	strb	r0, [r4]
	ldr	r1, .L277
	mov	r0, #0x0
	strb	r0, [r1, #0x2]
	pop	{r4}
	pop	{r0}
	bx	r0
.L278:
	.align	2, 0
.L277:
	.word	sInitialPlayerAvatarState
.Lfe59:
	.size	 StoreInitialPlayerAvatarState,.Lfe59-StoreInitialPlayerAvatarState
	.align	2, 0
	.globl	GetInitialPlayerAvatarState
	.type	 GetInitialPlayerAvatarState,function
	.thumb_func
GetInitialPlayerAvatarState:
	push	{r4, r5, r6, r7, lr}
	bl	GetCurrentMapType
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	bl	GetCenterScreenMetatileBehavior
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r6, .L280
	add	r0, r6, #0
	add	r1, r4, #0
	add	r2, r5, #0
	bl	GetAdjustedInitialTransitionFlags
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L280+0x4
	and	r7, r7, r0
	orr	r7, r7, r1
	add	r0, r6, #0
	add	r2, r4, #0
	add	r3, r5, #0
	bl	GetAdjustedInitialDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x10
	ldr	r1, .L280+0x8
	and	r7, r7, r1
	orr	r7, r7, r0
	ldr	r0, .L280+0xc
	and	r7, r7, r0
	str	r7, [r6]
	add	r0, r6, #0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L281:
	.align	2, 0
.L280:
	.word	sInitialPlayerAvatarState
	.word	-0x100
	.word	-0xff01
	.word	-0xff0001
.Lfe60:
	.size	 GetInitialPlayerAvatarState,.Lfe60-GetInitialPlayerAvatarState
	.align	2, 0
	.type	 GetAdjustedInitialTransitionFlags,function
	.thumb_func
GetAdjustedInitialTransitionFlags:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r4, r2, #0x18
	cmp	r4, #0x8
	beq	.L283	@cond_branch
	ldr	r0, .L298
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L295	@cond_branch
.L283:
	cmp	r4, #0x5
	bne	.L285	@cond_branch
	mov	r0, #0x10
	b	.L297
.L299:
	.align	2, 0
.L298:
	.word	0x805
.L285:
	add	r0, r5, #0
	bl	MetatileBehavior_IsSurfableInSeafoamIslands
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L295	@cond_branch
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSurfable
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L289	@cond_branch
	mov	r0, #0x8
	b	.L297
.L289:
	bl	Overworld_IsBikingAllowed
	cmp	r0, #0x1
	bne	.L295	@cond_branch
	ldrb	r0, [r6]
	cmp	r0, #0x2
	bne	.L293	@cond_branch
	mov	r0, #0x2
	b	.L297
.L293:
	cmp	r0, #0x4
	bne	.L295	@cond_branch
	mov	r0, #0x4
	b	.L297
.L295:
	mov	r0, #0x1
.L297:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe61:
	.size	 GetAdjustedInitialTransitionFlags,.Lfe61-GetAdjustedInitialTransitionFlags
	.align	2, 0
	.globl	MetatileBehavior_IsSurfableInSeafoamIslands
	.type	 MetatileBehavior_IsSurfableInSeafoamIslands,function
	.thumb_func
MetatileBehavior_IsSurfableInSeafoamIslands:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSurfable
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L302	@cond_branch
	ldr	r0, .L305
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L305+0x4
	cmp	r1, r0
	beq	.L303	@cond_branch
	ldr	r0, .L305+0x8
	cmp	r1, r0
	bne	.L302	@cond_branch
.L303:
	mov	r0, #0x1
	b	.L304
.L306:
	.align	2, 0
.L305:
	.word	gSaveBlock1Ptr
	.word	0x5601
	.word	0x5701
.L302:
	mov	r0, #0x0
.L304:
	pop	{r1}
	bx	r1
.Lfe62:
	.size	 MetatileBehavior_IsSurfableInSeafoamIslands,.Lfe62-MetatileBehavior_IsSurfableInSeafoamIslands
	.align	2, 0
	.type	 GetAdjustedInitialDirection,function
	.thumb_func
GetAdjustedInitialDirection:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r2, r2, #0x10
	lsr	r4, r2, #0x10
	lsl	r3, r3, #0x18
	lsr	r5, r3, #0x18
	ldr	r0, .L342
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L308	@cond_branch
	cmp	r5, #0x6
	beq	.L327	@cond_branch
.L308:
	lsl	r4, r4, #0x18
	lsr	r5, r4, #0x18
	add	r0, r5, #0
	bl	MetatileBehavior_IsDeepSouthWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L338	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsNonAnimDoor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L339	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsWarpDoor_2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L339	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsSouthArrowWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L315	@cond_branch
.L338:
	mov	r0, #0x2
	b	.L337
.L343:
	.align	2, 0
.L342:
	.word	0x805
.L315:
	add	r0, r5, #0
	bl	MetatileBehavior_IsNorthArrowWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L339	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsWestArrowWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L327	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsEastArrowWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L324	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsDirectionalUpRightStairWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L324	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsDirectionalDownRightStairWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L323	@cond_branch
.L324:
	mov	r0, #0x3
	b	.L337
.L323:
	add	r0, r5, #0
	bl	MetatileBehavior_IsDirectionalUpLeftStairWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L327	@cond_branch
	add	r0, r5, #0
	bl	MetatileBehavior_IsDirectionalDownLeftStairWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L326	@cond_branch
.L327:
	mov	r0, #0x4
	b	.L337
.L326:
	ldrb	r0, [r6]
	cmp	r0, #0x10
	bne	.L331	@cond_branch
	cmp	r7, #0x8
	beq	.L335	@cond_branch
.L331:
	cmp	r0, #0x8
	bne	.L329	@cond_branch
	cmp	r7, #0x10
	beq	.L335	@cond_branch
.L329:
	lsr	r0, r4, #0x18
	bl	MetatileBehavior_IsLadder
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L335	@cond_branch
	ldrb	r0, [r6, #0x2]
	cmp	r0, #0
	bne	.L335	@cond_branch
.L339:
	mov	r0, #0x1
	b	.L337
.L335:
	ldrb	r0, [r6, #0x1]
.L337:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe63:
	.size	 GetAdjustedInitialDirection,.Lfe63-GetAdjustedInitialDirection
	.align	2, 0
	.type	 GetCenterScreenMetatileBehavior,function
	.thumb_func
GetCenterScreenMetatileBehavior:
	push	{lr}
	ldr	r0, .L345
	ldr	r1, [r0]
	ldrh	r0, [r1]
	add	r0, r0, #0x7
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	ldrh	r1, [r1, #0x2]
	add	r1, r1, #0x7
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L346:
	.align	2, 0
.L345:
	.word	gSaveBlock1Ptr
.Lfe64:
	.size	 GetCenterScreenMetatileBehavior,.Lfe64-GetCenterScreenMetatileBehavior
	.align	2, 0
	.globl	Overworld_IsBikingAllowed
	.type	 Overworld_IsBikingAllowed,function
	.thumb_func
Overworld_IsBikingAllowed:
	push	{lr}
	ldr	r0, .L351
	ldrb	r0, [r0, #0x18]
	cmp	r0, #0
	beq	.L348	@cond_branch
	mov	r0, #0x1
	b	.L350
.L352:
	.align	2, 0
.L351:
	.word	gMapHeader
.L348:
	mov	r0, #0x0
.L350:
	pop	{r1}
	bx	r1
.Lfe65:
	.size	 Overworld_IsBikingAllowed,.Lfe65-Overworld_IsBikingAllowed
	.align	2, 0
	.type	 SetDefaultFlashLevel,function
	.thumb_func
SetDefaultFlashLevel:
	push	{lr}
	ldr	r0, .L360
	ldrb	r1, [r0, #0x15]
	cmp	r1, #0
	bne	.L354	@cond_branch
	ldr	r0, .L360+0x4
	ldr	r0, [r0]
	b	.L358
.L361:
	.align	2, 0
.L360:
	.word	gMapHeader
	.word	gSaveBlock1Ptr
.L354:
	ldr	r0, .L362
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L356	@cond_branch
	ldr	r0, .L362+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x30
	mov	r1, #0x0
	b	.L359
.L363:
	.align	2, 0
.L362:
	.word	0x809
	.word	gSaveBlock1Ptr
.L356:
	ldr	r0, .L364
	ldr	r0, [r0]
	ldr	r1, .L364+0x4
	ldr	r1, [r1]
.L358:
	add	r0, r0, #0x30
.L359:
	strb	r1, [r0]
	pop	{r0}
	bx	r0
.L365:
	.align	2, 0
.L364:
	.word	gSaveBlock1Ptr
	.word	gMaxFlashLevel
.Lfe66:
	.size	 SetDefaultFlashLevel,.Lfe66-SetDefaultFlashLevel
	.align	2, 0
	.globl	SetFlashLevel
	.type	 SetFlashLevel,function
	.thumb_func
SetFlashLevel:
	push	{lr}
	add	r1, r0, #0
	cmp	r1, #0
	blt	.L368	@cond_branch
	ldr	r0, .L369
	ldr	r0, [r0]
	cmp	r1, r0
	ble	.L367	@cond_branch
.L368:
	mov	r1, #0x0
.L367:
	ldr	r0, .L369+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x30
	strb	r1, [r0]
	pop	{r0}
	bx	r0
.L370:
	.align	2, 0
.L369:
	.word	gMaxFlashLevel
	.word	gSaveBlock1Ptr
.Lfe67:
	.size	 SetFlashLevel,.Lfe67-SetFlashLevel
	.align	2, 0
	.globl	Overworld_GetFlashLevel
	.type	 Overworld_GetFlashLevel,function
	.thumb_func
Overworld_GetFlashLevel:
	ldr	r0, .L372
	ldr	r0, [r0]
	add	r0, r0, #0x30
	ldrb	r0, [r0]
	bx	lr
.L373:
	.align	2, 0
.L372:
	.word	gSaveBlock1Ptr
.Lfe68:
	.size	 Overworld_GetFlashLevel,.Lfe68-Overworld_GetFlashLevel
	.align	2, 0
	.globl	SetCurrentMapLayout
	.type	 SetCurrentMapLayout,function
	.thumb_func
SetCurrentMapLayout:
	push	{lr}
	ldr	r1, .L375
	ldr	r1, [r1]
	strh	r0, [r1, #0x32]
	bl	GetMapLayout
	ldr	r1, .L375+0x4
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L376:
	.align	2, 0
.L375:
	.word	gSaveBlock1Ptr
	.word	gMapHeader
.Lfe69:
	.size	 SetCurrentMapLayout,.Lfe69-SetCurrentMapLayout
	.align	2, 0
	.globl	Overworld_SetWarpDestinationFromWarp
	.type	 Overworld_SetWarpDestinationFromWarp,function
	.thumb_func
Overworld_SetWarpDestinationFromWarp:
	ldr	r2, .L378
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [r2]
	str	r1, [r2, #0x4]
	bx	lr
.L379:
	.align	2, 0
.L378:
	.word	sWarpDestination
.Lfe70:
	.size	 Overworld_SetWarpDestinationFromWarp,.Lfe70-Overworld_SetWarpDestinationFromWarp
	.align	2, 0
	.type	 GetLocationMusic,function
	.thumb_func
GetLocationMusic:
	push	{lr}
	add	r1, r0, #0
	mov	r0, #0x0
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x1]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrh	r0, [r0, #0x10]
	pop	{r1}
	bx	r1
.Lfe71:
	.size	 GetLocationMusic,.Lfe71-GetLocationMusic
	.align	2, 0
	.type	 GetCurrLocationDefaultMusic,function
	.thumb_func
GetCurrLocationDefaultMusic:
	push	{lr}
	ldr	r0, .L382
	ldr	r0, [r0]
	add	r0, r0, #0x4
	bl	GetLocationMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L383:
	.align	2, 0
.L382:
	.word	gSaveBlock1Ptr
.Lfe72:
	.size	 GetCurrLocationDefaultMusic,.Lfe72-GetCurrLocationDefaultMusic
	.align	2, 0
	.type	 GetWarpDestinationMusic,function
	.thumb_func
GetWarpDestinationMusic:
	push	{lr}
	ldr	r0, .L385
	bl	GetLocationMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L386:
	.align	2, 0
.L385:
	.word	sWarpDestination
.Lfe73:
	.size	 GetWarpDestinationMusic,.Lfe73-GetWarpDestinationMusic
	.align	2, 0
	.globl	Overworld_ResetMapMusic
	.type	 Overworld_ResetMapMusic,function
	.thumb_func
Overworld_ResetMapMusic:
	push	{lr}
	bl	ResetMapMusic
	pop	{r0}
	bx	r0
.Lfe74:
	.size	 Overworld_ResetMapMusic,.Lfe74-Overworld_ResetMapMusic
	.align	2, 0
	.globl	Overworld_PlaySpecialMapMusic
	.type	 Overworld_PlaySpecialMapMusic,function
	.thumb_func
Overworld_PlaySpecialMapMusic:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L397
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L389	@cond_branch
	bl	StopMapMusic
	b	.L388
.L398:
	.align	2, 0
.L397:
	.word	gDisableMapMusicChangeOnMapLoad
.L389:
	cmp	r0, #0x2
	beq	.L388	@cond_branch
	ldr	r0, .L399
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L399+0x4
	cmp	r1, r0
	bne	.L391	@cond_branch
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	sub	r0, r0, #0x7
	cmp	r0, #0xa
	bgt	.L391	@cond_branch
	ldr	r0, .L399+0x8
	ldr	r1, [r0]
	ldr	r0, .L399+0xc
	cmp	r1, r0
	bne	.L391	@cond_branch
	mov	r0, #0x4
	bl	FadeInBGM
	b	.L388
.L400:
	.align	2, 0
.L399:
	.word	gSaveBlock1Ptr
	.word	0x4f01
	.word	gMPlayInfo_BGM
	.word	mus_victory_gym_leader
.L391:
	bl	GetCurrLocationDefaultMusic
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L401
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x2c]
	cmp	r0, #0
	beq	.L393	@cond_branch
	add	r4, r0, #0
	b	.L394
.L402:
	.align	2, 0
.L401:
	.word	gSaveBlock1Ptr
.L393:
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L394	@cond_branch
	ldr	r5, .L403
	add	r0, r5, #0
	bl	Overworld_MusicCanOverrideMapMusic
	cmp	r0, #0
	beq	.L394	@cond_branch
	add	r4, r5, #0
.L394:
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r4, r0
	beq	.L388	@cond_branch
	add	r0, r4, #0
	bl	PlayNewMapMusic
.L388:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L404:
	.align	2, 0
.L403:
	.word	0x131
.Lfe75:
	.size	 Overworld_PlaySpecialMapMusic,.Lfe75-Overworld_PlaySpecialMapMusic
	.align	2, 0
	.globl	Overworld_SetSavedMusic
	.type	 Overworld_SetSavedMusic,function
	.thumb_func
Overworld_SetSavedMusic:
	ldr	r1, .L406
	ldr	r1, [r1]
	strh	r0, [r1, #0x2c]
	bx	lr
.L407:
	.align	2, 0
.L406:
	.word	gSaveBlock1Ptr
.Lfe76:
	.size	 Overworld_SetSavedMusic,.Lfe76-Overworld_SetSavedMusic
	.align	2, 0
	.globl	Overworld_ClearSavedMusic
	.type	 Overworld_ClearSavedMusic,function
	.thumb_func
Overworld_ClearSavedMusic:
	ldr	r0, .L409
	ldr	r1, [r0]
	mov	r0, #0x0
	strh	r0, [r1, #0x2c]
	bx	lr
.L410:
	.align	2, 0
.L409:
	.word	gSaveBlock1Ptr
.Lfe77:
	.size	 Overworld_ClearSavedMusic,.Lfe77-Overworld_ClearSavedMusic
	.align	2, 0
	.type	 Overworld_TryMapConnectionMusicTransition,function
	.thumb_func
Overworld_TryMapConnectionMusicTransition:
	push	{r4, r5, r6, lr}
	ldr	r0, .L420
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L412	@cond_branch
	bl	StopMapMusic
	b	.L411
.L421:
	.align	2, 0
.L420:
	.word	gDisableMapMusicChangeOnMapLoad
.L412:
	cmp	r0, #0x2
	beq	.L411	@cond_branch
	ldr	r0, .L422
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L411	@cond_branch
	bl	GetWarpDestinationMusic
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r5, .L422+0x4
	cmp	r6, r5
	beq	.L411	@cond_branch
	mov	r0, #0x8
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L416	@cond_branch
	add	r0, r5, #0
	bl	Overworld_MusicCanOverrideMapMusic
	cmp	r0, #0
	beq	.L416	@cond_branch
	add	r4, r5, #0
.L416:
	cmp	r4, r6
	beq	.L411	@cond_branch
	mov	r0, #0x6
	bl	TestPlayerAvatarFlags
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L418	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x4
	mov	r2, #0x4
	bl	FadeOutAndFadeInNewMapMusic
	b	.L411
.L423:
	.align	2, 0
.L422:
	.word	0x4001
	.word	0x131
.L418:
	add	r0, r4, #0
	mov	r1, #0x8
	bl	FadeOutAndPlayNewMapMusic
.L411:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 Overworld_TryMapConnectionMusicTransition,.Lfe78-Overworld_TryMapConnectionMusicTransition
	.align	2, 0
	.globl	Overworld_ChangeMusicToDefault
	.type	 Overworld_ChangeMusicToDefault,function
	.thumb_func
Overworld_ChangeMusicToDefault:
	push	{r4, lr}
	bl	GetCurrentMapMusic
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	bl	GetCurrLocationDefaultMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r4, r0
	beq	.L425	@cond_branch
	bl	GetCurrLocationDefaultMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x8
	bl	FadeOutAndPlayNewMapMusic
.L425:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe79:
	.size	 Overworld_ChangeMusicToDefault,.Lfe79-Overworld_ChangeMusicToDefault
	.align	2, 0
	.globl	Overworld_ChangeMusicTo
	.type	 Overworld_ChangeMusicTo,function
	.thumb_func
Overworld_ChangeMusicTo:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r4
	beq	.L427	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x8
	bl	FadeOutAndPlayNewMapMusic
.L427:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe80:
	.size	 Overworld_ChangeMusicTo,.Lfe80-Overworld_ChangeMusicTo
	.align	2, 0
	.type	 GetMapMusicFadeoutSpeed,function
	.thumb_func
GetMapMusicFadeoutSpeed:
	push	{lr}
	bl	GetDestinationWarpMapHeader
	ldrb	r0, [r0, #0x17]
	bl	IsMapTypeIndoors
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L429	@cond_branch
	mov	r0, #0x4
	b	.L431
.L429:
	mov	r0, #0x2
.L431:
	pop	{r1}
	bx	r1
.Lfe81:
	.size	 GetMapMusicFadeoutSpeed,.Lfe81-GetMapMusicFadeoutSpeed
	.align	2, 0
	.globl	TryFadeOutOldMapMusic
	.type	 TryFadeOutOldMapMusic,function
	.thumb_func
TryFadeOutOldMapMusic:
	push	{r4, lr}
	bl	GetWarpDestinationMusic
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L434
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L433	@cond_branch
	bl	GetCurrentMapMusic
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r4, r0
	beq	.L433	@cond_branch
	bl	GetMapMusicFadeoutSpeed
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	FadeOutMapMusic
.L433:
	pop	{r4}
	pop	{r0}
	bx	r0
.L435:
	.align	2, 0
.L434:
	.word	0x4001
.Lfe82:
	.size	 TryFadeOutOldMapMusic,.Lfe82-TryFadeOutOldMapMusic
	.align	2, 0
	.globl	BGMusicStopped
	.type	 BGMusicStopped,function
	.thumb_func
BGMusicStopped:
	push	{lr}
	bl	IsNotWaitingForBGMStop
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe83:
	.size	 BGMusicStopped,.Lfe83-BGMusicStopped
	.align	2, 0
	.globl	Overworld_FadeOutMapMusic
	.type	 Overworld_FadeOutMapMusic,function
	.thumb_func
Overworld_FadeOutMapMusic:
	push	{lr}
	mov	r0, #0x4
	bl	FadeOutMapMusic
	pop	{r0}
	bx	r0
.Lfe84:
	.size	 Overworld_FadeOutMapMusic,.Lfe84-Overworld_FadeOutMapMusic
	.align	2, 0
	.type	 PlayAmbientCry,function
	.thumb_func
PlayAmbientCry:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	ldr	r0, .L442
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L439	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	MetatileBehavior_IsSurfable
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L438	@cond_branch
.L439:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x58
	bl	__umodsi3
	add	r0, r0, #0xd4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1e
	bl	__umodsi3
	add	r0, r0, #0x32
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L442+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L440	@cond_branch
	bl	StopMapMusic
	b	.L438
.L443:
	.align	2, 0
.L442:
	.word	sIsAmbientCryWaterMon
	.word	gDisableMapMusicChangeOnMapLoad
.L440:
	cmp	r0, #0x2
	beq	.L438	@cond_branch
	ldr	r0, .L444
	ldrh	r0, [r0]
	lsl	r1, r4, #0x18
	asr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	asr	r2, r2, #0x18
	mov	r3, #0x1
	bl	PlayCry_NormalNoDucking
.L438:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L445:
	.align	2, 0
.L444:
	.word	sAmbientCrySpecies
.Lfe85:
	.size	 PlayAmbientCry,.Lfe85-PlayAmbientCry
	.align	2, 0
	.globl	UpdateAmbientCry
	.type	 UpdateAmbientCry,function
	.thumb_func
UpdateAmbientCry:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r5, r1, #0
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0x4
	bhi	.L447	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L459
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L460:
	.align	2, 0
.L459:
	.word	.L456
	.align	2, 0
	.align	2, 0
.L456:
	.word	.L448
	.word	.L451
	.word	.L452
	.word	.L453
	.word	.L447
.L448:
	ldr	r0, .L461
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L449	@cond_branch
	mov	r0, #0x4
	b	.L458
.L462:
	.align	2, 0
.L461:
	.word	sAmbientCrySpecies
.L449:
	mov	r0, #0x1
	b	.L458
.L451:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x96
	lsl	r1, r1, #0x4
	bl	__umodsi3
	mov	r1, #0x96
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	strh	r0, [r5]
	mov	r0, #0x3
	b	.L458
.L452:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r4, #0x96
	lsl	r4, r4, #0x3
	add	r1, r4, #0
	bl	__umodsi3
	add	r0, r0, r4
	strh	r0, [r5]
	mov	r0, #0x3
	b	.L458
.L453:
	ldrh	r0, [r5]
	sub	r0, r0, #0x1
	strh	r0, [r5]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L447	@cond_branch
	bl	PlayAmbientCry
	mov	r0, #0x2
.L458:
	strh	r0, [r6]
.L447:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe86:
	.size	 UpdateAmbientCry,.Lfe86-UpdateAmbientCry
	.align	2, 0
	.type	 ChooseAmbientCrySpecies,function
	.thumb_func
ChooseAmbientCrySpecies:
	push	{lr}
	ldr	r0, .L464
	bl	GetLocalWildMon
	ldr	r1, .L464+0x4
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L465:
	.align	2, 0
.L464:
	.word	sIsAmbientCryWaterMon
	.word	sAmbientCrySpecies
.Lfe87:
	.size	 ChooseAmbientCrySpecies,.Lfe87-ChooseAmbientCrySpecies
	.align	2, 0
	.globl	Overworld_MusicCanOverrideMapMusic
	.type	 Overworld_MusicCanOverrideMapMusic,function
	.thumb_func
Overworld_MusicCanOverrideMapMusic:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	mov	r0, #0x8d
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L468	@cond_branch
	add	r0, r0, #0x17
	cmp	r1, r0
	bne	.L467	@cond_branch
.L468:
	ldr	r0, .L472
	ldrb	r0, [r0, #0x14]
	cmp	r0, #0x84
	beq	.L470	@cond_branch
	cmp	r0, #0x7b
	beq	.L470	@cond_branch
	cmp	r0, #0x61
	bne	.L467	@cond_branch
.L470:
	mov	r0, #0x0
	b	.L471
.L473:
	.align	2, 0
.L472:
	.word	gMapHeader
.L467:
	mov	r0, #0x1
.L471:
	pop	{r1}
	bx	r1
.Lfe88:
	.size	 Overworld_MusicCanOverrideMapMusic,.Lfe88-Overworld_MusicCanOverrideMapMusic
	.align	2, 0
	.globl	GetMapTypeByGroupAndId
	.type	 GetMapTypeByGroupAndId,function
	.thumb_func
GetMapTypeByGroupAndId:
	push	{lr}
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x8
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x18
	asr	r1, r1, #0x8
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r0, [r0, #0x17]
	pop	{r1}
	bx	r1
.Lfe89:
	.size	 GetMapTypeByGroupAndId,.Lfe89-GetMapTypeByGroupAndId
	.align	2, 0
	.type	 GetMapTypeByWarpData,function
	.thumb_func
GetMapTypeByWarpData:
	push	{lr}
	mov	r2, #0x0
	ldrsb	r2, [r0, r2]
	mov	r1, #0x1
	ldrsb	r1, [r0, r1]
	add	r0, r2, #0
	bl	GetMapTypeByGroupAndId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe90:
	.size	 GetMapTypeByWarpData,.Lfe90-GetMapTypeByWarpData
	.align	2, 0
	.globl	GetCurrentMapType
	.type	 GetCurrentMapType,function
	.thumb_func
GetCurrentMapType:
	push	{lr}
	ldr	r0, .L477
	ldr	r0, [r0]
	add	r0, r0, #0x4
	bl	GetMapTypeByWarpData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L478:
	.align	2, 0
.L477:
	.word	gSaveBlock1Ptr
.Lfe91:
	.size	 GetCurrentMapType,.Lfe91-GetCurrentMapType
	.align	2, 0
	.globl	GetLastUsedWarpMapType
	.type	 GetLastUsedWarpMapType,function
	.thumb_func
GetLastUsedWarpMapType:
	push	{lr}
	ldr	r0, .L480
	bl	GetMapTypeByWarpData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L481:
	.align	2, 0
.L480:
	.word	gLastUsedWarp
.Lfe92:
	.size	 GetLastUsedWarpMapType,.Lfe92-GetLastUsedWarpMapType
	.align	2, 0
	.globl	GetLastUsedWarpMapSectionId
	.type	 GetLastUsedWarpMapSectionId,function
	.thumb_func
GetLastUsedWarpMapSectionId:
	push	{lr}
	ldr	r1, .L483
	mov	r0, #0x0
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x1]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r0, [r0, #0x14]
	pop	{r1}
	bx	r1
.L484:
	.align	2, 0
.L483:
	.word	gLastUsedWarp
.Lfe93:
	.size	 GetLastUsedWarpMapSectionId,.Lfe93-GetLastUsedWarpMapSectionId
	.align	2, 0
	.globl	IsMapTypeOutdoors
	.type	 IsMapTypeOutdoors,function
	.thumb_func
IsMapTypeOutdoors:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.L487	@cond_branch
	cmp	r0, #0x1
	beq	.L487	@cond_branch
	cmp	r0, #0x5
	beq	.L487	@cond_branch
	cmp	r0, #0x2
	beq	.L487	@cond_branch
	cmp	r0, #0x6
	bne	.L486	@cond_branch
.L487:
	mov	r0, #0x1
	b	.L489
.L486:
	mov	r0, #0x0
.L489:
	pop	{r1}
	bx	r1
.Lfe94:
	.size	 IsMapTypeOutdoors,.Lfe94-IsMapTypeOutdoors
	.align	2, 0
	.globl	Overworld_MapTypeAllowsTeleportAndFly
	.type	 Overworld_MapTypeAllowsTeleportAndFly,function
	.thumb_func
Overworld_MapTypeAllowsTeleportAndFly:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.L492	@cond_branch
	cmp	r0, #0x1
	beq	.L492	@cond_branch
	cmp	r0, #0x6
	beq	.L492	@cond_branch
	cmp	r0, #0x2
	bne	.L491	@cond_branch
.L492:
	mov	r0, #0x1
	b	.L494
.L491:
	mov	r0, #0x0
.L494:
	pop	{r1}
	bx	r1
.Lfe95:
	.size	 Overworld_MapTypeAllowsTeleportAndFly,.Lfe95-Overworld_MapTypeAllowsTeleportAndFly
	.align	2, 0
	.globl	IsMapTypeIndoors
	.type	 IsMapTypeIndoors,function
	.thumb_func
IsMapTypeIndoors:
	push	{lr}
	lsl	r0, r0, #0x18
	mov	r1, #0xf8
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L496	@cond_branch
	mov	r0, #0x0
	b	.L498
.L496:
	mov	r0, #0x1
.L498:
	pop	{r1}
	bx	r1
.Lfe96:
	.size	 IsMapTypeIndoors,.Lfe96-IsMapTypeIndoors
	.align	2, 0
	.type	 GetSavedWarpRegionMapSectionId,function
	.thumb_func
GetSavedWarpRegionMapSectionId:
	push	{lr}
	ldr	r0, .L500
	ldr	r1, [r0]
	mov	r0, #0x14
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x15]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r0, [r0, #0x14]
	pop	{r1}
	bx	r1
.L501:
	.align	2, 0
.L500:
	.word	gSaveBlock1Ptr
.Lfe97:
	.size	 GetSavedWarpRegionMapSectionId,.Lfe97-GetSavedWarpRegionMapSectionId
	.align	2, 0
	.globl	GetCurrentRegionMapSectionId
	.type	 GetCurrentRegionMapSectionId,function
	.thumb_func
GetCurrentRegionMapSectionId:
	push	{lr}
	ldr	r0, .L503
	ldr	r1, [r0]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r0, [r0, #0x14]
	pop	{r1}
	bx	r1
.L504:
	.align	2, 0
.L503:
	.word	gSaveBlock1Ptr
.Lfe98:
	.size	 GetCurrentRegionMapSectionId,.Lfe98-GetCurrentRegionMapSectionId
	.align	2, 0
	.globl	GetCurrentMapBattleScene
	.type	 GetCurrentMapBattleScene,function
	.thumb_func
GetCurrentMapBattleScene:
	push	{lr}
	ldr	r0, .L506
	ldr	r1, [r0]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r0, [r0, #0x1b]
	pop	{r1}
	bx	r1
.L507:
	.align	2, 0
.L506:
	.word	gSaveBlock1Ptr
.Lfe99:
	.size	 GetCurrentMapBattleScene,.Lfe99-GetCurrentMapBattleScene
	.section .rodata
	.align	2, 0
	.type	 sUnusedData,object
sUnusedData:
	.word	0x4b0
	.word	0xe10
	.word	0x4b0
	.word	0x960
	.word	0x32
	.word	0x50
	.word	-0x2c
	.word	0x2c
	.size	 sUnusedData,32
	.globl	gDirectionToVectors
	.align	2, 0
	.type	 gDirectionToVectors,object
gDirectionToVectors:
	.word	0x0
	.word	0x0
	.word	0x0
	.word	0x1
	.word	0x0
	.word	-0x1
	.word	-0x1
	.word	0x0
	.word	0x1
	.word	0x0
	.word	-0x1
	.word	0x1
	.word	0x1
	.word	0x1
	.word	-0x1
	.word	-0x1
	.word	0x1
	.word	-0x1
	.size	 gDirectionToVectors,72
	.align	2, 0
	.type	 sOverworldBgTemplates,object
	.size	 sOverworldBgTemplates,16
sOverworldBgTemplates:
	.byte	0xf8
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xd1
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0xc2
	.byte	0x21
	.byte	0x0
	.space	1
	.byte	0xe3
	.byte	0x31
	.byte	0x0
	.space	1
.text
	.align	2, 0
	.type	 InitOverworldBgs,function
	.thumb_func
InitOverworldBgs:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	bl	MoveSaveBlocks_ResetHeap_
	bl	ResetScreenForMapLoad
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L509
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	mov	r0, #0x1
	mov	r1, #0x5
	mov	r2, #0x1
	bl	SetBgAttribute
	mov	r0, #0x2
	mov	r1, #0x5
	mov	r2, #0x1
	bl	SetBgAttribute
	mov	r0, #0x3
	mov	r1, #0x5
	mov	r2, #0x1
	bl	SetBgAttribute
	ldr	r0, .L509+0x4
	mov	r8, r0
	mov	r4, #0x80
	lsl	r4, r4, #0x4
	add	r0, r4, #0
	bl	AllocZeroed
	mov	r1, r8
	str	r0, [r1]
	ldr	r6, .L509+0x8
	add	r0, r4, #0
	bl	AllocZeroed
	str	r0, [r6]
	ldr	r5, .L509+0xc
	add	r0, r4, #0
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, r8
	ldr	r1, [r0]
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r6]
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r1, [r5]
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	bl	InitStandardTextBoxWindows
	bl	InitTextBoxGfxAndPrinters
	bl	InitFieldMessageBox
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L510:
	.align	2, 0
.L509:
	.word	sOverworldBgTemplates
	.word	gBGTilemapBuffers2
	.word	gBGTilemapBuffers1
	.word	gBGTilemapBuffers3
.Lfe100:
	.size	 InitOverworldBgs,.Lfe100-InitOverworldBgs
	.align	2, 0
	.type	 InitOverworldBgs_NoResetHeap,function
	.thumb_func
InitOverworldBgs_NoResetHeap:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L512
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	mov	r0, #0x1
	mov	r1, #0x5
	mov	r2, #0x1
	bl	SetBgAttribute
	mov	r0, #0x2
	mov	r1, #0x5
	mov	r2, #0x1
	bl	SetBgAttribute
	mov	r0, #0x3
	mov	r1, #0x5
	mov	r2, #0x1
	bl	SetBgAttribute
	ldr	r0, .L512+0x4
	mov	r8, r0
	mov	r4, #0x80
	lsl	r4, r4, #0x4
	add	r0, r4, #0
	bl	AllocZeroed
	mov	r1, r8
	str	r0, [r1]
	ldr	r6, .L512+0x8
	add	r0, r4, #0
	bl	AllocZeroed
	str	r0, [r6]
	ldr	r5, .L512+0xc
	add	r0, r4, #0
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, r8
	ldr	r1, [r0]
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r6]
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r1, [r5]
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	bl	InitStandardTextBoxWindows
	bl	InitTextBoxGfxAndPrinters
	bl	InitFieldMessageBox
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L513:
	.align	2, 0
.L512:
	.word	sOverworldBgTemplates
	.word	gBGTilemapBuffers2
	.word	gBGTilemapBuffers1
	.word	gBGTilemapBuffers3
.Lfe101:
	.size	 InitOverworldBgs_NoResetHeap,.Lfe101-InitOverworldBgs_NoResetHeap
	.align	2, 0
	.globl	CleanupOverworldWindowsAndTilemaps
	.type	 CleanupOverworldWindowsAndTilemaps,function
	.thumb_func
CleanupOverworldWindowsAndTilemaps:
	push	{lr}
	bl	FreeAllOverworldWindowBuffers
	ldr	r0, .L515
	ldr	r0, [r0]
	bl	Free
	ldr	r0, .L515+0x4
	ldr	r0, [r0]
	bl	Free
	ldr	r0, .L515+0x8
	ldr	r0, [r0]
	bl	Free
	pop	{r0}
	bx	r0
.L516:
	.align	2, 0
.L515:
	.word	gBGTilemapBuffers3
	.word	gBGTilemapBuffers1
	.word	gBGTilemapBuffers2
.Lfe102:
	.size	 CleanupOverworldWindowsAndTilemaps,.Lfe102-CleanupOverworldWindowsAndTilemaps
	.align	2, 0
	.type	 ResetSafariZoneFlag_,function
	.thumb_func
ResetSafariZoneFlag_:
	push	{lr}
	bl	ResetSafariZoneFlag
	pop	{r0}
	bx	r0
.Lfe103:
	.size	 ResetSafariZoneFlag_,.Lfe103-ResetSafariZoneFlag_
	.align	2, 0
	.globl	IsUpdateLinkStateCBActive
	.type	 IsUpdateLinkStateCBActive,function
	.thumb_func
IsUpdateLinkStateCBActive:
	push	{lr}
	ldr	r0, .L522
	ldr	r1, [r0]
	ldr	r0, .L522+0x4
	cmp	r1, r0
	beq	.L519	@cond_branch
	mov	r0, #0x0
	b	.L521
.L523:
	.align	2, 0
.L522:
	.word	gMain
	.word	CB1_UpdateLinkState
.L519:
	mov	r0, #0x1
.L521:
	pop	{r1}
	bx	r1
.Lfe104:
	.size	 IsUpdateLinkStateCBActive,.Lfe104-IsUpdateLinkStateCBActive
	.align	2, 0
	.type	 DoCB1_Overworld,function
	.thumb_func
DoCB1_Overworld:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r5, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r4, r1, #0
	bl	QL_TryRunActions
	bl	UpdatePlayerAvatarTransitionState
	mov	r6, sp
	mov	r0, sp
	bl	FieldClearPlayerInput
	mov	r0, sp
	add	r1, r5, #0
	add	r2, r4, #0
	bl	FieldGetPlayerInput
	mov	r0, sp
	bl	FieldInput_HandleCancelSignpost
	bl	ArePlayerFieldControlsLocked
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L525	@cond_branch
	mov	r0, sp
	bl	ProcessPlayerFieldInput
	cmp	r0, #0x1
	bne	.L526	@cond_branch
	ldr	r0, .L529
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L527	@cond_branch
	ldr	r0, .L529+0x4
	bl	QL_RecordFieldInput
.L527:
	bl	LockPlayerFieldControls
	bl	DismissMapNamePopup
	b	.L525
.L530:
	.align	2, 0
.L529:
	.word	gQuestLogPlaybackState
	.word	gFieldInputRecord
.L526:
	ldrb	r0, [r6, #0x2]
	add	r1, r5, #0
	add	r2, r4, #0
	bl	player_step
.L525:
	bl	RunQuestLogCB
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe105:
	.size	 DoCB1_Overworld,.Lfe105-DoCB1_Overworld
	.align	2, 0
	.type	 DoCB1_Overworld_QuestLogPlayback,function
	.thumb_func
DoCB1_Overworld_QuestLogPlayback:
	push	{lr}
	add	sp, sp, #-0x4
	bl	QL_TryRunActions
	bl	UpdatePlayerAvatarTransitionState
	bl	QL_HandleInput
	mov	r0, sp
	bl	FieldClearPlayerInput
	ldr	r0, .L537
	ldr	r0, [r0]
	str	r0, [sp]
	mov	r0, sp
	bl	FieldInput_HandleCancelSignpost
	bl	ArePlayerFieldControlsLocked
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L532	@cond_branch
	mov	r0, sp
	bl	ProcessPlayerFieldInput
	cmp	r0, #0x1
	bne	.L533	@cond_branch
	bl	LockPlayerFieldControls
	bl	DismissMapNamePopup
	b	.L535
.L538:
	.align	2, 0
.L537:
	.word	gQuestLogFieldInput
.L533:
	bl	RunQuestLogCB
	b	.L535
.L532:
	bl	QuestLogScenePlaybackIsEnding
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L535	@cond_branch
	bl	RunQuestLogCB
.L535:
	ldr	r0, .L539
	bl	FieldClearPlayerInput
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L540:
	.align	2, 0
.L539:
	.word	gQuestLogFieldInput
.Lfe106:
	.size	 DoCB1_Overworld_QuestLogPlayback,.Lfe106-DoCB1_Overworld_QuestLogPlayback
	.align	2, 0
	.globl	CB1_Overworld
	.type	 CB1_Overworld,function
	.thumb_func
CB1_Overworld:
	push	{r4, lr}
	ldr	r4, .L546
	ldr	r1, [r4, #0x4]
	ldr	r0, .L546+0x4
	cmp	r1, r0
	bne	.L542	@cond_branch
	bl	QL_GetPlaybackState
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L544	@cond_branch
	ldr	r0, .L546+0x8
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L543	@cond_branch
.L544:
	bl	DoCB1_Overworld_QuestLogPlayback
	b	.L542
.L547:
	.align	2, 0
.L546:
	.word	gMain
	.word	CB2_Overworld
	.word	gQuestLogState
.L543:
	ldrh	r0, [r4, #0x2e]
	ldrh	r1, [r4, #0x2c]
	bl	DoCB1_Overworld
.L542:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe107:
	.size	 CB1_Overworld,.Lfe107-CB1_Overworld
	.align	2, 0
	.type	 OverworldBasic,function
	.thumb_func
OverworldBasic:
	push	{lr}
	bl	ScriptContext_RunScript
	bl	RunTasks
	bl	AnimateSprites
	bl	CameraUpdate
	bl	SetQuestLogEvent_Arrived
	bl	UpdateCameraPanning
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	bl	UpdateTilesetAnimations
	bl	DoScheduledBgTilemapCopiesToVram
	pop	{r0}
	bx	r0
.Lfe108:
	.size	 OverworldBasic,.Lfe108-OverworldBasic
	.align	2, 0
	.globl	CB2_OverworldBasic
	.type	 CB2_OverworldBasic,function
	.thumb_func
CB2_OverworldBasic:
	push	{lr}
	bl	OverworldBasic
	pop	{r0}
	bx	r0
.Lfe109:
	.size	 CB2_OverworldBasic,.Lfe109-CB2_OverworldBasic
	.align	2, 0
	.type	 CB2_Overworld,function
	.thumb_func
CB2_Overworld:
	push	{r4, lr}
	ldr	r0, .L553
	ldrb	r0, [r0, #0x7]
	lsr	r0, r0, #0x7
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L551	@cond_branch
	mov	r0, #0x0
	bl	SetVBlankCallback
.L551:
	bl	OverworldBasic
	cmp	r4, #0
	beq	.L552	@cond_branch
	bl	SetFieldVBlankCallback
.L552:
	pop	{r4}
	pop	{r0}
	bx	r0
.L554:
	.align	2, 0
.L553:
	.word	gPaletteFade
.Lfe110:
	.size	 CB2_Overworld,.Lfe110-CB2_Overworld
	.align	2, 0
	.globl	SetMainCallback1
	.type	 SetMainCallback1,function
	.thumb_func
SetMainCallback1:
	ldr	r1, .L556
	str	r0, [r1]
	bx	lr
.L557:
	.align	2, 0
.L556:
	.word	gMain
.Lfe111:
	.size	 SetMainCallback1,.Lfe111-SetMainCallback1
	.align	2, 0
	.type	 RunFieldCallback,function
	.thumb_func
RunFieldCallback:
	push	{r4, lr}
	ldr	r4, .L566
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L559	@cond_branch
	bl	_call_via_r0
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L560	@cond_branch
	mov	r0, #0x0
	b	.L565
.L567:
	.align	2, 0
.L566:
	.word	gFieldCallback2
.L560:
	mov	r1, #0x0
	str	r1, [r4]
	ldr	r0, .L568
	str	r1, [r0]
	b	.L562
.L569:
	.align	2, 0
.L568:
	.word	gFieldCallback
.L559:
	ldr	r0, .L570
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L563	@cond_branch
	bl	_call_via_r0
	b	.L564
.L571:
	.align	2, 0
.L570:
	.word	gFieldCallback
.L563:
	bl	FieldCB_DefaultWarpExit
.L564:
	ldr	r1, .L572
	mov	r0, #0x0
	str	r0, [r1]
.L562:
	mov	r0, #0x1
.L565:
	pop	{r4}
	pop	{r1}
	bx	r1
.L573:
	.align	2, 0
.L572:
	.word	gFieldCallback
.Lfe112:
	.size	 RunFieldCallback,.Lfe112-RunFieldCallback
	.align	2, 0
	.globl	CB2_NewGame
	.type	 CB2_NewGame,function
	.thumb_func
CB2_NewGame:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	bl	StopMapMusic
	bl	ResetSafariZoneFlag_
	bl	NewGameInitData
	bl	ResetInitialPlayerAvatarState
	bl	PlayTimeCounter_Start
	bl	ScriptContext_Init
	bl	UnlockPlayerFieldControls
	ldr	r1, .L575
	ldr	r0, .L575+0x4
	str	r0, [r1]
	ldr	r1, .L575+0x8
	mov	r0, #0x0
	str	r0, [r1]
	ldr	r0, .L575+0xc
	bl	DoMapLoadLoop
	bl	SetFieldVBlankCallback
	ldr	r0, .L575+0x10
	bl	SetMainCallback1
	ldr	r0, .L575+0x14
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L576:
	.align	2, 0
.L575:
	.word	gFieldCallback
	.word	FieldCB_WarpExitFadeFromBlack
	.word	gFieldCallback2
	.word	gMain+0x438
	.word	CB1_Overworld
	.word	CB2_Overworld
.Lfe113:
	.size	 CB2_NewGame,.Lfe113-CB2_NewGame
	.align	2, 0
	.globl	CB2_WhiteOut
	.type	 CB2_WhiteOut,function
	.thumb_func
CB2_WhiteOut:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r1, .L579
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x77
	bls	.L578	@cond_branch
	bl	FieldClearVBlankHBlankCallbacks
	bl	StopMapMusic
	bl	ResetSafariZoneFlag_
	bl	DoWhiteOut
	mov	r0, #0x2
	bl	SetInitialPlayerAvatarStateWithDirection
	bl	ScriptContext_Init
	bl	UnlockPlayerFieldControls
	ldr	r1, .L579+0x4
	ldr	r0, .L579+0x8
	str	r0, [r1]
	mov	r1, sp
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, sp
	bl	DoMapLoadLoop
	bl	QuestLog_CutRecording
	bl	SetFieldVBlankCallback
	ldr	r0, .L579+0xc
	bl	SetMainCallback1
	ldr	r0, .L579+0x10
	bl	SetMainCallback2
.L578:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L580:
	.align	2, 0
.L579:
	.word	gMain
	.word	gFieldCallback
	.word	FieldCB_RushInjuredPokemonToCenter
	.word	CB1_Overworld
	.word	CB2_Overworld
.Lfe114:
	.size	 CB2_WhiteOut,.Lfe114-CB2_WhiteOut
	.align	2, 0
	.globl	CB2_LoadMap
	.type	 CB2_LoadMap,function
	.thumb_func
CB2_LoadMap:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	bl	ScriptContext_Init
	bl	UnlockPlayerFieldControls
	mov	r0, #0x0
	bl	SetMainCallback1
	ldr	r0, .L582
	bl	SetMainCallback2
	ldr	r1, .L582+0x4
	ldr	r0, .L582+0x8
	str	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L583:
	.align	2, 0
.L582:
	.word	CB2_DoChangeMap
	.word	gMain
	.word	CB2_LoadMap2
.Lfe115:
	.size	 CB2_LoadMap,.Lfe115-CB2_LoadMap
	.align	2, 0
	.type	 CB2_LoadMap2,function
	.thumb_func
CB2_LoadMap2:
	push	{lr}
	ldr	r0, .L587
	bl	DoMapLoadLoop
	bl	QuestLog_ShouldEndSceneOnMapChange
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L585	@cond_branch
	bl	QuestLog_AdvancePlayhead_
	b	.L586
.L588:
	.align	2, 0
.L587:
	.word	gMain+0x438
.L585:
	bl	SetFieldVBlankCallback
	ldr	r0, .L589
	bl	SetMainCallback1
	ldr	r0, .L589+0x4
	bl	SetMainCallback2
.L586:
	pop	{r0}
	bx	r0
.L590:
	.align	2, 0
.L589:
	.word	CB1_Overworld
	.word	CB2_Overworld
.Lfe116:
	.size	 CB2_LoadMap2,.Lfe116-CB2_LoadMap2
	.align	2, 0
	.globl	CB2_ReturnToFieldCableClub
	.type	 CB2_ReturnToFieldCableClub,function
	.thumb_func
CB2_ReturnToFieldCableClub:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r0, .L592
	ldr	r1, .L592+0x4
	str	r1, [r0]
	ldr	r0, .L592+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L593:
	.align	2, 0
.L592:
	.word	gFieldCallback
	.word	FieldCB_ReturnToFieldWirelessLink
	.word	CB2_LoadMapOnReturnToFieldCableClub
.Lfe117:
	.size	 CB2_ReturnToFieldCableClub,.Lfe117-CB2_ReturnToFieldCableClub
	.align	2, 0
	.type	 CB2_LoadMapOnReturnToFieldCableClub,function
	.thumb_func
CB2_LoadMapOnReturnToFieldCableClub:
	push	{lr}
	ldr	r0, .L596
	bl	LoadMapInStepsLink
	cmp	r0, #0
	beq	.L595	@cond_branch
	bl	SetFieldVBlankCallback
	ldr	r0, .L596+0x4
	bl	SetMainCallback1
	bl	ResetAllMultiplayerState
	ldr	r0, .L596+0x8
	bl	SetMainCallback2
.L595:
	pop	{r0}
	bx	r0
.L597:
	.align	2, 0
.L596:
	.word	gMain+0x438
	.word	CB1_UpdateLinkState
	.word	CB2_Overworld
.Lfe118:
	.size	 CB2_LoadMapOnReturnToFieldCableClub,.Lfe118-CB2_LoadMapOnReturnToFieldCableClub
	.align	2, 0
	.globl	CB2_ReturnToField
	.type	 CB2_ReturnToField,function
	.thumb_func
CB2_ReturnToField:
	push	{lr}
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0x1
	bne	.L599	@cond_branch
	ldr	r0, .L601
	bl	SetMainCallback2
	b	.L600
.L602:
	.align	2, 0
.L601:
	.word	CB2_ReturnToFieldLink
.L599:
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r0, .L603
	bl	SetMainCallback2
.L600:
	pop	{r0}
	bx	r0
.L604:
	.align	2, 0
.L603:
	.word	CB2_ReturnToFieldLocal
.Lfe119:
	.size	 CB2_ReturnToField,.Lfe119-CB2_ReturnToField
	.align	2, 0
	.type	 CB2_ReturnToFieldLocal,function
	.thumb_func
CB2_ReturnToFieldLocal:
	push	{lr}
	ldr	r0, .L607
	bl	ReturnToFieldLocal
	cmp	r0, #0
	beq	.L606	@cond_branch
	bl	SetFieldVBlankCallback
	ldr	r0, .L607+0x4
	bl	SetMainCallback2
.L606:
	pop	{r0}
	bx	r0
.L608:
	.align	2, 0
.L607:
	.word	gMain+0x438
	.word	CB2_Overworld
.Lfe120:
	.size	 CB2_ReturnToFieldLocal,.Lfe120-CB2_ReturnToFieldLocal
	.align	2, 0
	.type	 CB2_ReturnToFieldLink,function
	.thumb_func
CB2_ReturnToFieldLink:
	push	{lr}
	bl	Overworld_LinkRecvQueueLengthMoreThan2
	cmp	r0, #0
	bne	.L610	@cond_branch
	ldr	r0, .L611
	bl	ReturnToFieldLink
	cmp	r0, #0
	beq	.L610	@cond_branch
	ldr	r0, .L611+0x4
	bl	SetMainCallback2
.L610:
	pop	{r0}
	bx	r0
.L612:
	.align	2, 0
.L611:
	.word	gMain+0x438
	.word	CB2_Overworld
.Lfe121:
	.size	 CB2_ReturnToFieldLink,.Lfe121-CB2_ReturnToFieldLink
	.align	2, 0
	.globl	CB2_ReturnToFieldFromMultiplayer
	.type	 CB2_ReturnToFieldFromMultiplayer,function
	.thumb_func
CB2_ReturnToFieldFromMultiplayer:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	bl	StopMapMusic
	ldr	r0, .L617
	bl	SetMainCallback1
	bl	ResetAllMultiplayerState
	ldr	r0, .L617+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L614	@cond_branch
	ldr	r1, .L617+0x8
	ldr	r0, .L617+0xc
	b	.L616
.L618:
	.align	2, 0
.L617:
	.word	CB1_UpdateLinkState
	.word	gWirelessCommType
	.word	gFieldCallback
	.word	FieldCB_ReturnToFieldWirelessLink
.L614:
	ldr	r1, .L619
	ldr	r0, .L619+0x4
.L616:
	str	r0, [r1]
	bl	ScriptContext_Init
	bl	UnlockPlayerFieldControls
	bl	CB2_ReturnToField
	pop	{r0}
	bx	r0
.L620:
	.align	2, 0
.L619:
	.word	gFieldCallback
	.word	FieldCB_ReturnToFieldCableLink
.Lfe122:
	.size	 CB2_ReturnToFieldFromMultiplayer,.Lfe122-CB2_ReturnToFieldFromMultiplayer
	.align	2, 0
	.globl	CB2_ReturnToFieldWithOpenMenu
	.type	 CB2_ReturnToFieldWithOpenMenu,function
	.thumb_func
CB2_ReturnToFieldWithOpenMenu:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r1, .L622
	ldr	r0, .L622+0x4
	str	r0, [r1]
	bl	CB2_ReturnToField
	pop	{r0}
	bx	r0
.L623:
	.align	2, 0
.L622:
	.word	gFieldCallback2
	.word	FieldCB_ReturnToFieldOpenStartMenu
.Lfe123:
	.size	 CB2_ReturnToFieldWithOpenMenu,.Lfe123-CB2_ReturnToFieldWithOpenMenu
	.align	2, 0
	.globl	CB2_ReturnToFieldContinueScript
	.type	 CB2_ReturnToFieldContinueScript,function
	.thumb_func
CB2_ReturnToFieldContinueScript:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r1, .L625
	ldr	r0, .L625+0x4
	str	r0, [r1]
	bl	CB2_ReturnToField
	pop	{r0}
	bx	r0
.L626:
	.align	2, 0
.L625:
	.word	gFieldCallback
	.word	FieldCB_ContinueScript
.Lfe124:
	.size	 CB2_ReturnToFieldContinueScript,.Lfe124-CB2_ReturnToFieldContinueScript
	.align	2, 0
	.globl	CB2_ReturnToFieldContinueScriptPlayMapMusic
	.type	 CB2_ReturnToFieldContinueScriptPlayMapMusic,function
	.thumb_func
CB2_ReturnToFieldContinueScriptPlayMapMusic:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r1, .L628
	ldr	r0, .L628+0x4
	str	r0, [r1]
	bl	CB2_ReturnToField
	pop	{r0}
	bx	r0
.L629:
	.align	2, 0
.L628:
	.word	gFieldCallback
	.word	FieldCB_ContinueScriptHandleMusic
.Lfe125:
	.size	 CB2_ReturnToFieldContinueScriptPlayMapMusic,.Lfe125-CB2_ReturnToFieldContinueScriptPlayMapMusic
	.align	2, 0
	.globl	CB2_ReturnToFieldFromDiploma
	.type	 CB2_ReturnToFieldFromDiploma,function
	.thumb_func
CB2_ReturnToFieldFromDiploma:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r1, .L631
	ldr	r0, .L631+0x4
	str	r0, [r1]
	bl	CB2_ReturnToField
	pop	{r0}
	bx	r0
.L632:
	.align	2, 0
.L631:
	.word	gFieldCallback
	.word	FieldCB_WarpExitFadeFromBlack
.Lfe126:
	.size	 CB2_ReturnToFieldFromDiploma,.Lfe126-CB2_ReturnToFieldFromDiploma
	.align	2, 0
	.type	 FieldCB_ShowMapNameOnContinue,function
	.thumb_func
FieldCB_ShowMapNameOnContinue:
	push	{lr}
	ldr	r0, .L635
	ldrb	r1, [r0, #0x19]
	mov	r0, #0xfc
	and	r0, r0, r1
	cmp	r0, #0x4
	bne	.L634	@cond_branch
	mov	r0, #0x0
	bl	ShowMapNamePopup
.L634:
	bl	FieldCB_WarpExitFadeFromBlack
	pop	{r0}
	bx	r0
.L636:
	.align	2, 0
.L635:
	.word	gMapHeader
.Lfe127:
	.size	 FieldCB_ShowMapNameOnContinue,.Lfe127-FieldCB_ShowMapNameOnContinue
	.align	2, 0
	.globl	CB2_ContinueSavedGame
	.type	 CB2_ContinueSavedGame,function
	.thumb_func
CB2_ContinueSavedGame:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	bl	StopMapMusic
	bl	ResetSafariZoneFlag_
	bl	LoadSaveblockMapHeader
	bl	LoadSaveblockObjEventScripts
	bl	UnfreezeObjectEvents
	bl	Overworld_ResetStateOnContinue
	bl	InitMapFromSavedGame
	bl	PlayTimeCounter_Start
	bl	ScriptContext_Init
	bl	UnlockPlayerFieldControls
	ldr	r1, .L640
	mov	r0, #0x0
	str	r0, [r1]
	ldr	r1, .L640+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	bl	UseContinueGameWarp
	cmp	r0, #0x1
	bne	.L638	@cond_branch
	bl	ClearContinueGameWarpStatus
	bl	SetWarpDestinationToContinueGameWarp
	bl	WarpIntoMap
	ldr	r0, .L640+0x8
	bl	SetMainCallback2
	b	.L639
.L641:
	.align	2, 0
.L640:
	.word	gFieldCallback2
	.word	gExitStairsMovementDisabled
	.word	CB2_LoadMap
.L638:
	ldr	r0, .L642
	ldr	r1, .L642+0x4
	str	r1, [r0]
	ldr	r0, .L642+0x8
	bl	SetMainCallback1
	bl	CB2_ReturnToField
.L639:
	pop	{r0}
	bx	r0
.L643:
	.align	2, 0
.L642:
	.word	gFieldCallback
	.word	FieldCB_ShowMapNameOnContinue
	.word	CB1_Overworld
.Lfe128:
	.size	 CB2_ContinueSavedGame,.Lfe128-CB2_ContinueSavedGame
	.align	2, 0
	.type	 FieldClearVBlankHBlankCallbacks,function
	.thumb_func
FieldClearVBlankHBlankCallbacks:
	push	{lr}
	bl	UsedPokemonCenterWarp
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L645	@cond_branch
	bl	CloseLink
.L645:
	ldr	r0, .L648
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L646	@cond_branch
	mov	r0, #0xc5
	bl	EnableInterrupts
	mov	r0, #0x2
	bl	DisableInterrupts
	b	.L647
.L649:
	.align	2, 0
.L648:
	.word	gWirelessCommType
.L646:
	mov	r0, #0x2
	bl	DisableInterrupts
	mov	r0, #0x1
	bl	EnableInterrupts
.L647:
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	SetHBlankCallback
	pop	{r0}
	bx	r0
.Lfe129:
	.size	 FieldClearVBlankHBlankCallbacks,.Lfe129-FieldClearVBlankHBlankCallbacks
	.align	2, 0
	.type	 SetFieldVBlankCallback,function
	.thumb_func
SetFieldVBlankCallback:
	push	{lr}
	ldr	r0, .L651
	bl	SetVBlankCallback
	pop	{r0}
	bx	r0
.L652:
	.align	2, 0
.L651:
	.word	VBlankCB_Field
.Lfe130:
	.size	 SetFieldVBlankCallback,.Lfe130-SetFieldVBlankCallback
	.align	2, 0
	.type	 VBlankCB_Field,function
	.thumb_func
VBlankCB_Field:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	ScanlineEffect_InitHBlankDmaTransfer
	bl	FieldUpdateBgTilemapScroll
	bl	TransferPlttBuffer
	bl	TransferTilesetAnimsBuffer
	pop	{r0}
	bx	r0
.Lfe131:
	.size	 VBlankCB_Field,.Lfe131-VBlankCB_Field
	.section .rodata
	.align	2, 0
.LC212:
	.word	0x4000040
	.word	-0x5d9fffff
	.byte	0x1
	.byte	0x0
	.space	2
.text
	.align	2, 0
	.type	 InitCurrentFlashLevelScanlineEffect,function
	.thumb_func
InitCurrentFlashLevelScanlineEffect:
	push	{lr}
	bl	Overworld_GetFlashLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L655	@cond_branch
	bl	WriteFlashScanlineEffectBuffer
	ldr	r2, .L656
	ldr	r0, [r2]
	ldr	r1, [r2, #0x4]
	ldr	r2, [r2, #0x8]
	bl	ScanlineEffect_SetParams
.L655:
	pop	{r0}
	bx	r0
.L657:
	.align	2, 0
.L656:
	.word	.LC212
.Lfe132:
	.size	 InitCurrentFlashLevelScanlineEffect,.Lfe132-InitCurrentFlashLevelScanlineEffect
	.align	2, 0
	.type	 LoadMapInStepsLink,function
	.thumb_func
LoadMapInStepsLink:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0xd
	bls	.LCB5667
	b	.L659	@long jump
.LCB5667:
	lsl	r0, r0, #0x2
	ldr	r1, .L681
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L682:
	.align	2, 0
.L681:
	.word	.L677
	.align	2, 0
	.align	2, 0
.L677:
	.word	.L660
	.word	.L661
	.word	.L662
	.word	.L663
	.word	.L664
	.word	.L665
	.word	.L666
	.word	.L667
	.word	.L668
	.word	.L670
	.word	.L671
	.word	.L672
	.word	.L674
	.word	.L676
.L660:
	bl	InitOverworldBgs
	bl	ScriptContext_Init
	bl	UnlockPlayerFieldControls
	b	.L680
.L661:
	mov	r0, #0x1
	bl	LoadMapFromWarp
	b	.L680
.L662:
	mov	r0, #0x1
	bl	ResumeMap
	b	.L680
.L663:
	bl	OffsetCameraFocusByLinkPlayerId
	bl	InitObjectEventsLink
	bl	SpawnLinkPlayers
	bl	SetCameraToTrackGuestPlayer
	bl	SetHelpContextForMap
	b	.L680
.L664:
	bl	InitCurrentFlashLevelScanlineEffect
	bl	InitOverworldGraphicsRegisters
	b	.L680
.L665:
	bl	move_tilemap_camera_to_upper_left_corner
	b	.L680
.L666:
	ldr	r0, .L683
	ldr	r0, [r0]
	bl	CopyPrimaryTilesetToVram
	b	.L680
.L684:
	.align	2, 0
.L683:
	.word	gMapHeader
.L667:
	ldr	r0, .L685
	ldr	r0, [r0]
	bl	CopySecondaryTilesetToVram
	b	.L680
.L686:
	.align	2, 0
.L685:
	.word	gMapHeader
.L668:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L659	@cond_branch
	ldr	r0, .L687
	ldr	r0, [r0]
	bl	LoadMapTilesetPalettes
	b	.L680
.L688:
	.align	2, 0
.L687:
	.word	gMapHeader
.L670:
	bl	DrawWholeMapView
	b	.L680
.L671:
	bl	InitTilesetAnimations
	b	.L680
.L672:
	ldr	r0, .L689
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L680	@cond_branch
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	b	.L680
.L690:
	.align	2, 0
.L689:
	.word	gWirelessCommType
.L674:
	bl	RunFieldCallback
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L659	@cond_branch
.L680:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L659
.L676:
	mov	r0, #0x1
	b	.L679
.L659:
	mov	r0, #0x0
.L679:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe133:
	.size	 LoadMapInStepsLink,.Lfe133-LoadMapInStepsLink
	.align	2, 0
	.type	 LoadMapInStepsLocal,function
	.thumb_func
LoadMapInStepsLocal:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldrb	r0, [r4]
	cmp	r0, #0xe
	bls	.LCB5828
	b	.L692	@long jump
.LCB5828:
	lsl	r0, r0, #0x2
	ldr	r1, .L720
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L721:
	.align	2, 0
.L720:
	.word	.L715
	.align	2, 0
	.align	2, 0
.L715:
	.word	.L693
	.word	.L694
	.word	.L695
	.word	.L696
	.word	.L698
	.word	.L700
	.word	.L701
	.word	.L702
	.word	.L703
	.word	.L704
	.word	.L706
	.word	.L707
	.word	.L708
	.word	.L712
	.word	.L719
.L693:
	bl	InitOverworldBgs
	bl	FieldClearVBlankHBlankCallbacks
	add	r0, r5, #0
	bl	LoadMapFromWarp
	b	.L718
.L694:
	bl	QuestLog_InitPalettesBackup
	b	.L718
.L695:
	add	r0, r5, #0
	bl	ResumeMap
	b	.L718
.L696:
	bl	QuestLog_ShouldEndSceneOnMapChange
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L718	@cond_branch
.L719:
	mov	r0, #0x1
	b	.L717
.L698:
	bl	InitObjectEventsLocal
	bl	SetCameraToTrackPlayer
	ldr	r0, .L722
	ldrb	r0, [r0]
	cmp	r0, #0x2
	beq	.L699	@cond_branch
	bl	QuestLog_CheckDepartingIndoorsMap
	bl	QuestLog_TryRecordDepartedLocation
.L699:
	bl	SetHelpContextForMap
	b	.L718
.L723:
	.align	2, 0
.L722:
	.word	gQuestLogState
.L700:
	bl	InitCurrentFlashLevelScanlineEffect
	bl	InitOverworldGraphicsRegisters
	b	.L718
.L701:
	bl	move_tilemap_camera_to_upper_left_corner
	b	.L718
.L702:
	ldr	r0, .L724
	ldr	r0, [r0]
	bl	CopyPrimaryTilesetToVram
	b	.L718
.L725:
	.align	2, 0
.L724:
	.word	gMapHeader
.L703:
	ldr	r0, .L726
	ldr	r0, [r0]
	bl	CopySecondaryTilesetToVram
	b	.L718
.L727:
	.align	2, 0
.L726:
	.word	gMapHeader
.L704:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L692	@cond_branch
	ldr	r0, .L728
	ldr	r0, [r0]
	bl	LoadMapTilesetPalettes
	b	.L718
.L729:
	.align	2, 0
.L728:
	.word	gMapHeader
.L706:
	bl	DrawWholeMapView
	b	.L718
.L707:
	bl	InitTilesetAnimations
	b	.L718
.L708:
	bl	GetLastUsedWarpMapSectionId
	ldr	r5, .L730
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r5, #0x14]
	cmp	r0, r1
	beq	.L709	@cond_branch
	ldrb	r0, [r5, #0x14]
	mov	r1, #0x1
	bl	MapHasPreviewScreen_HandleQLState2
	cmp	r0, #0x1
	bne	.L709	@cond_branch
	ldrb	r0, [r5, #0x14]
	bl	MapPreview_LoadGfx
	ldrb	r0, [r5, #0x14]
	bl	MapPreview_StartForestTransition
	b	.L718
.L731:
	.align	2, 0
.L730:
	.word	gMapHeader
.L709:
	ldr	r0, .L732
	ldrb	r1, [r0, #0x19]
	mov	r0, #0xfc
	and	r0, r0, r1
	cmp	r0, #0x4
	bne	.L718	@cond_branch
	mov	r0, #0x0
	bl	ShowMapNamePopup
	b	.L718
.L733:
	.align	2, 0
.L732:
	.word	gMapHeader
.L712:
	bl	RunFieldCallback
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L692	@cond_branch
.L718:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
.L692:
	mov	r0, #0x0
.L717:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe134:
	.size	 LoadMapInStepsLocal,.Lfe134-LoadMapInStepsLocal
	.align	2, 0
	.type	 ReturnToFieldLocal,function
	.thumb_func
ReturnToFieldLocal:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0x4
	bhi	.L735	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L746
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L747:
	.align	2, 0
.L746:
	.word	.L742
	.align	2, 0
	.align	2, 0
.L742:
	.word	.L736
	.word	.L745
	.word	.L738
	.word	.L739
	.word	.L741
.L736:
	bl	InitOverworldBgs
	bl	QuestLog_InitPalettesBackup
	mov	r0, #0x0
	bl	ResumeMap
	bl	ReloadObjectsAndRunReturnToFieldMapScript
	bl	SetCameraToTrackPlayer
	b	.L745
.L738:
	bl	InitViewGraphics
	bl	SetHelpContextForMap
	b	.L745
.L739:
	bl	RunFieldCallback
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L735	@cond_branch
.L745:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L735
.L741:
	mov	r0, #0x1
	b	.L744
.L735:
	mov	r0, #0x0
.L744:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe135:
	.size	 ReturnToFieldLocal,.Lfe135-ReturnToFieldLocal
	.align	2, 0
	.type	 ReturnToFieldLink,function
	.thumb_func
ReturnToFieldLink:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0xd
	bls	.LCB6108
	b	.L749	@long jump
.LCB6108:
	lsl	r0, r0, #0x2
	ldr	r1, .L771
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L772:
	.align	2, 0
.L771:
	.word	.L767
	.align	2, 0
	.align	2, 0
.L767:
	.word	.L750
	.word	.L751
	.word	.L752
	.word	.L753
	.word	.L754
	.word	.L755
	.word	.L756
	.word	.L757
	.word	.L759
	.word	.L760
	.word	.L770
	.word	.L762
	.word	.L764
	.word	.L766
.L750:
	bl	InitOverworldBgs
	bl	FieldClearVBlankHBlankCallbacks
	b	.L770
.L751:
	bl	QuestLog_InitPalettesBackup
	mov	r0, #0x1
	bl	ResumeMap
	b	.L770
.L752:
	bl	CreateLinkPlayerSprites
	bl	ReloadObjectsAndRunReturnToFieldMapScript
	bl	SetCameraToTrackGuestPlayer_2
	bl	SetHelpContextForMap
	b	.L770
.L753:
	bl	InitCurrentFlashLevelScanlineEffect
	bl	InitOverworldGraphicsRegisters
	b	.L770
.L754:
	bl	move_tilemap_camera_to_upper_left_corner
	b	.L770
.L755:
	ldr	r0, .L773
	ldr	r0, [r0]
	bl	CopyPrimaryTilesetToVram
	b	.L770
.L774:
	.align	2, 0
.L773:
	.word	gMapHeader
.L756:
	ldr	r0, .L775
	ldr	r0, [r0]
	bl	CopySecondaryTilesetToVram
	b	.L770
.L776:
	.align	2, 0
.L775:
	.word	gMapHeader
.L757:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L749	@cond_branch
	ldr	r0, .L777
	ldr	r0, [r0]
	bl	LoadMapTilesetPalettes
	b	.L770
.L778:
	.align	2, 0
.L777:
	.word	gMapHeader
.L759:
	bl	DrawWholeMapView
	b	.L770
.L760:
	bl	InitTilesetAnimations
	b	.L770
.L762:
	ldr	r0, .L779
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L770	@cond_branch
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	b	.L770
.L780:
	.align	2, 0
.L779:
	.word	gWirelessCommType
.L764:
	bl	RunFieldCallback
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L749	@cond_branch
.L770:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L749
.L766:
	bl	SetFieldVBlankCallback
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	mov	r0, #0x1
	b	.L769
.L749:
	mov	r0, #0x0
.L769:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe136:
	.size	 ReturnToFieldLink,.Lfe136-ReturnToFieldLink
	.align	2, 0
	.type	 DoMapLoadLoop,function
	.thumb_func
DoMapLoadLoop:
	push	{r4, lr}
	add	r4, r0, #0
.L782:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	LoadMapInStepsLocal
	cmp	r0, #0
	beq	.L782	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe137:
	.size	 DoMapLoadLoop,.Lfe137-DoMapLoadLoop
	.align	2, 0
	.type	 MoveSaveBlocks_ResetHeap_,function
	.thumb_func
MoveSaveBlocks_ResetHeap_:
	push	{lr}
	bl	MoveSaveBlocks_ResetHeap
	pop	{r0}
	bx	r0
.Lfe138:
	.size	 MoveSaveBlocks_ResetHeap_,.Lfe138-MoveSaveBlocks_ResetHeap_
	.align	2, 0
	.type	 ResetScreenForMapLoad,function
	.thumb_func
ResetScreenForMapLoad:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	bl	ScanlineEffect_Stop
	ldr	r2, .L793
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r1, .L793+0x4
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	ldr	r0, .L793+0x8
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r2, #0xc0
	lsl	r2, r2, #0x13
	mov	r3, #0xc0
	lsl	r3, r3, #0x9
	mov	r4, sp
	mov	r6, #0x0
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L793+0xc
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L790:
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r2, r2, r5
	sub	r3, r3, r5
	cmp	r3, r5
	bhi	.L790	@cond_branch
	strh	r6, [r4]
	mov	r0, sp
	str	r0, [r1]
	str	r2, [r1, #0x4]
	lsr	r0, r3, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0x0
	mov	r1, #0x80
	bl	ResetOamRange
	bl	LoadOam
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L794:
	.align	2, 0
.L793:
	.word	0x5000002
	.word	0x40000d4
	.word	-0x7efffe01
	.word	-0x7efff800
.Lfe139:
	.size	 ResetScreenForMapLoad,.Lfe139-ResetScreenForMapLoad
	.align	2, 0
	.type	 InitViewGraphics,function
	.thumb_func
InitViewGraphics:
	push	{lr}
	bl	InitCurrentFlashLevelScanlineEffect
	bl	InitOverworldGraphicsRegisters
	bl	InitMapView
	pop	{r0}
	bx	r0
.Lfe140:
	.size	 InitViewGraphics,.Lfe140-InitViewGraphics
	.align	2, 0
	.type	 InitOverworldGraphicsRegisters,function
	.thumb_func
InitOverworldGraphicsRegisters:
	push	{r4, lr}
	bl	ClearScheduledBgCopiesToVram
	bl	ResetTempTileDataBuffers
	mov	r0, #0x4c
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r1, .L797
	mov	r0, #0x48
	bl	SetGpuReg
	ldr	r1, .L797+0x4
	mov	r0, #0x4a
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0xff
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0xff
	bl	SetGpuReg
	ldr	r4, .L797+0x8
	mov	r0, #0x42
	add	r1, r4, #0
	bl	SetGpuReg
	mov	r0, #0x46
	add	r1, r4, #0
	bl	SetGpuReg
	ldr	r0, .L797+0xc
	ldrh	r1, [r0, #0x2]
	ldrh	r2, [r0, #0x4]
	orr	r1, r1, r2
	ldrh	r0, [r0, #0x6]
	orr	r1, r1, r0
	mov	r2, #0x82
	lsl	r2, r2, #0x5
	add	r0, r2, #0
	orr	r1, r1, r0
	mov	r0, #0x50
	bl	SetGpuReg
	ldr	r1, .L797+0x10
	mov	r0, #0x52
	bl	SetGpuReg
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x3
	bl	ScheduleBgCopyTilemapToVram
	ldr	r1, .L797+0x14
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	pop	{r4}
	pop	{r0}
	bx	r0
.L798:
	.align	2, 0
.L797:
	.word	0x1f1f
	.word	0x101
	.word	0xffff
	.word	gOverworldBackgroundLayerFlags
	.word	0x70d
	.word	0x7060
.Lfe141:
	.size	 InitOverworldGraphicsRegisters,.Lfe141-InitOverworldGraphicsRegisters
	.align	2, 0
	.type	 ResumeMap,function
	.thumb_func
ResumeMap:
	push	{r4, lr}
	add	r4, r0, #0
	bl	ResetTasks
	bl	ResetSpriteData
	bl	ResetPaletteFade
	bl	ScanlineEffect_Clear
	bl	ResetAllPicSprites
	bl	ResetCameraUpdateInfo
	bl	InstallCameraPanAheadCallback
	cmp	r4, #0
	bne	.L800	@cond_branch
	mov	r0, #0x0
	bl	InitObjectEventPalettes
	b	.L801
.L800:
	mov	r0, #0x1
	bl	InitObjectEventPalettes
.L801:
	bl	FieldEffectActiveListClear
	bl	StartWeather
	bl	ResumePausedWeather
	cmp	r4, #0
	bne	.L802	@cond_branch
	bl	SetUpFieldTasks
.L802:
	bl	RunOnResumeMapScript
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe142:
	.size	 ResumeMap,.Lfe142-ResumeMap
	.align	2, 0
	.type	 InitObjectEventsLink,function
	.thumb_func
InitObjectEventsLink:
	push	{lr}
	ldr	r0, .L804
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L804+0x4
	strh	r1, [r0]
	bl	ResetObjectEvents
	mov	r0, #0x0
	mov	r1, #0x0
	bl	TrySpawnObjectEvents
	bl	TryRunOnWarpIntoMapScript
	pop	{r0}
	bx	r0
.L805:
	.align	2, 0
.L804:
	.word	gTotalCameraPixelOffsetX
	.word	gTotalCameraPixelOffsetY
.Lfe143:
	.size	 InitObjectEventsLink,.Lfe143-InitObjectEventsLink
	.align	2, 0
	.type	 InitObjectEventsLocal,function
	.thumb_func
InitObjectEventsLocal:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L807
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L807+0x4
	strh	r1, [r0]
	bl	ResetObjectEvents
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetCameraFocusCoords
	bl	GetInitialPlayerAvatarState
	add	r5, r0, #0
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	ldrb	r2, [r5, #0x1]
	ldr	r3, .L807+0x8
	ldr	r3, [r3]
	ldrb	r3, [r3, #0x8]
	bl	InitPlayerAvatar
	ldrb	r0, [r5]
	bl	SetPlayerAvatarTransitionFlags
	bl	ResetInitialPlayerAvatarState
	mov	r0, #0x0
	mov	r1, #0x0
	bl	TrySpawnObjectEvents
	bl	TryRunOnWarpIntoMapScript
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L808:
	.align	2, 0
.L807:
	.word	gTotalCameraPixelOffsetX
	.word	gTotalCameraPixelOffsetY
	.word	gSaveBlock2Ptr
.Lfe144:
	.size	 InitObjectEventsLocal,.Lfe144-InitObjectEventsLocal
	.align	2, 0
	.type	 ReloadObjectsAndRunReturnToFieldMapScript,function
	.thumb_func
ReloadObjectsAndRunReturnToFieldMapScript:
	push	{lr}
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SpawnObjectEventsOnReturnToField
	bl	RunOnReturnToFieldMapScript
	pop	{r0}
	bx	r0
.Lfe145:
	.size	 ReloadObjectsAndRunReturnToFieldMapScript,.Lfe145-ReloadObjectsAndRunReturnToFieldMapScript
	.align	2, 0
	.type	 SetCameraToTrackPlayer,function
	.thumb_func
SetCameraToTrackPlayer:
	push	{lr}
	ldr	r2, .L811
	ldr	r3, .L811+0x4
	ldrb	r1, [r3, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x1]
	mov	r2, #0x80
	orr	r1, r1, r2
	strb	r1, [r0, #0x1]
	ldrb	r0, [r3, #0x4]
	bl	InitCameraUpdateCallback
	pop	{r0}
	bx	r0
.L812:
	.align	2, 0
.L811:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe146:
	.size	 SetCameraToTrackPlayer,.Lfe146-SetCameraToTrackPlayer
	.align	2, 0
	.type	 SetCameraToTrackGuestPlayer,function
	.thumb_func
SetCameraToTrackGuestPlayer:
	push	{lr}
	ldr	r0, .L814
	ldrb	r0, [r0]
	bl	GetSpriteForLinkedPlayer
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	InitCameraUpdateCallback
	pop	{r0}
	bx	r0
.L815:
	.align	2, 0
.L814:
	.word	gLocalLinkPlayerId
.Lfe147:
	.size	 SetCameraToTrackGuestPlayer,.Lfe147-SetCameraToTrackGuestPlayer
	.align	2, 0
	.type	 SetCameraToTrackGuestPlayer_2,function
	.thumb_func
SetCameraToTrackGuestPlayer_2:
	push	{lr}
	ldr	r0, .L817
	ldrb	r0, [r0]
	bl	GetSpriteForLinkedPlayer
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	InitCameraUpdateCallback
	pop	{r0}
	bx	r0
.L818:
	.align	2, 0
.L817:
	.word	gLocalLinkPlayerId
.Lfe148:
	.size	 SetCameraToTrackGuestPlayer_2,.Lfe148-SetCameraToTrackGuestPlayer_2
	.align	2, 0
	.type	 OffsetCameraFocusByLinkPlayerId,function
	.thumb_func
OffsetCameraFocusByLinkPlayerId:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetCameraFocusCoords
	mov	r2, sp
	ldr	r0, .L820
	ldrb	r1, [r0]
	ldrh	r0, [r2]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrh	r1, [r4]
	bl	SetCameraFocusCoords
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L821:
	.align	2, 0
.L820:
	.word	gLocalLinkPlayerId
.Lfe149:
	.size	 OffsetCameraFocusByLinkPlayerId,.Lfe149-OffsetCameraFocusByLinkPlayerId
	.align	2, 0
	.type	 SpawnLinkPlayers,function
	.thumb_func
SpawnLinkPlayers:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetCameraFocusCoords
	mov	r3, sp
	mov	r2, sp
	ldr	r0, .L828
	ldrb	r1, [r0]
	ldrh	r0, [r2]
	sub	r0, r0, r1
	strh	r0, [r3]
	mov	r6, #0x0
	ldr	r0, .L828+0x4
	mov	r8, r4
	ldrb	r0, [r0]
	cmp	r6, r0
	bcs	.L824	@cond_branch
	ldr	r7, .L828+0x8
.L826:
	lsl	r5, r6, #0x18
	lsr	r5, r5, #0x18
	mov	r0, sp
	ldrh	r1, [r0]
	add	r1, r6, r1
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r0, r8
	mov	r3, #0x0
	ldrsh	r2, [r0, r3]
	lsl	r4, r6, #0x3
	sub	r4, r4, r6
	lsl	r4, r4, #0x2
	add	r4, r4, r7
	ldrb	r3, [r4, #0x13]
	add	r0, r5, #0
	bl	SpawnLinkPlayerObjectEvent
	ldrb	r1, [r4]
	add	r0, r5, #0
	bl	CreateLinkPlayerSprite
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, .L828+0x4
	ldrb	r0, [r0]
	cmp	r6, r0
	bcc	.L826	@cond_branch
.L824:
	bl	ClearAllPlayerKeys
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L829:
	.align	2, 0
.L828:
	.word	gLocalLinkPlayerId
	.word	gFieldLinkPlayerCount
	.word	gLinkPlayers
.Lfe150:
	.size	 SpawnLinkPlayers,.Lfe150-SpawnLinkPlayers
	.align	2, 0
	.type	 CreateLinkPlayerSprites,function
	.thumb_func
CreateLinkPlayerSprites:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r0, .L836
	ldrb	r0, [r0]
	cmp	r4, r0
	bcs	.L832	@cond_branch
	ldr	r5, .L836+0x4
.L834:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r4, #0x3
	sub	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldrb	r1, [r1]
	bl	CreateLinkPlayerSprite
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L836
	ldrb	r0, [r0]
	cmp	r4, r0
	bcc	.L834	@cond_branch
.L832:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L837:
	.align	2, 0
.L836:
	.word	gFieldLinkPlayerCount
	.word	gLinkPlayers
.Lfe151:
	.size	 CreateLinkPlayerSprites,.Lfe151-CreateLinkPlayerSprites
	.align	2, 0
	.globl	CB2_SetUpOverworldForQLPlaybackWithWarpExit
	.type	 CB2_SetUpOverworldForQLPlaybackWithWarpExit,function
	.thumb_func
CB2_SetUpOverworldForQLPlaybackWithWarpExit:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r1, .L839
	mov	r0, #0x1
	strb	r0, [r1]
	bl	ScriptContext_Init
	bl	UnlockPlayerFieldControls
	mov	r0, #0x0
	bl	SetMainCallback1
	ldr	r0, .L839+0x4
	bl	SetMainCallback2
	ldr	r1, .L839+0x8
	ldr	r0, .L839+0xc
	str	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L840:
	.align	2, 0
.L839:
	.word	gGlobalFieldTintMode
	.word	CB2_DoChangeMap
	.word	gMain
	.word	CB2_LoadMapForQLPlayback
.Lfe152:
	.size	 CB2_SetUpOverworldForQLPlaybackWithWarpExit,.Lfe152-CB2_SetUpOverworldForQLPlaybackWithWarpExit
	.align	2, 0
	.globl	CB2_SetUpOverworldForQLPlayback
	.type	 CB2_SetUpOverworldForQLPlayback,function
	.thumb_func
CB2_SetUpOverworldForQLPlayback:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	ldr	r0, .L842
	mov	r1, #0x1
	strb	r1, [r0]
	bl	LoadSaveblockMapHeader
	bl	ScriptContext_Init
	bl	UnlockPlayerFieldControls
	mov	r0, #0x0
	bl	SetMainCallback1
	ldr	r0, .L842+0x4
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L843:
	.align	2, 0
.L842:
	.word	gGlobalFieldTintMode
	.word	CB2_LoadMapForQLPlayback
.Lfe153:
	.size	 CB2_SetUpOverworldForQLPlayback,.Lfe153-CB2_SetUpOverworldForQLPlayback
	.align	2, 0
	.type	 CB2_LoadMapForQLPlayback,function
	.thumb_func
CB2_LoadMapForQLPlayback:
	push	{lr}
	ldr	r0, .L845
	bl	DoLoadMap_QLPlayback
	bl	SetFieldVBlankCallback
	ldr	r0, .L845+0x4
	bl	SetMainCallback1
	ldr	r0, .L845+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L846:
	.align	2, 0
.L845:
	.word	gMain+0x438
	.word	CB1_Overworld
	.word	CB2_Overworld
.Lfe154:
	.size	 CB2_LoadMapForQLPlayback,.Lfe154-CB2_LoadMapForQLPlayback
	.align	2, 0
	.type	 DoLoadMap_QLPlayback,function
	.thumb_func
DoLoadMap_QLPlayback:
	push	{r4, lr}
	add	r4, r0, #0
.L848:
	add	r0, r4, #0
	bl	LoadMap_QLPlayback
	cmp	r0, #0
	beq	.L848	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe155:
	.size	 DoLoadMap_QLPlayback,.Lfe155-DoLoadMap_QLPlayback
	.align	2, 0
	.type	 LoadMap_QLPlayback,function
	.thumb_func
LoadMap_QLPlayback:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0xa
	bls	.LCB7020
	b	.L868	@long jump
.LCB7020:
	lsl	r0, r0, #0x2
	ldr	r1, .L873
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L874:
	.align	2, 0
.L873:
	.word	.L870
	.align	2, 0
	.align	2, 0
.L870:
	.word	.L854
	.word	.L857
	.word	.L858
	.word	.L859
	.word	.L860
	.word	.L861
	.word	.L862
	.word	.L863
	.word	.L864
	.word	.L866
	.word	.L867
.L854:
	bl	InitOverworldBgs
	bl	FieldClearVBlankHBlankCallbacks
	bl	QuestLog_InitPalettesBackup
	bl	QL_CopySaveState
	bl	QL_ResetPartyAndPC
	bl	GetQuestLogStartType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L855	@cond_branch
	ldr	r1, .L875
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x0
	bl	LoadMapFromWarp
	b	.L872
.L876:
	.align	2, 0
.L875:
	.word	gExitStairsMovementDisabled
.L855:
	ldr	r1, .L877
	mov	r0, #0x1
	strb	r0, [r1]
	bl	QL_LoadMapNormal
	b	.L872
.L878:
	.align	2, 0
.L877:
	.word	gExitStairsMovementDisabled
.L857:
	bl	QL_InitSceneObjectsAndActions
	b	.L872
.L858:
	mov	r0, #0x0
	bl	ResumeMap
	b	.L872
.L859:
	bl	ReloadObjectsAndRunReturnToFieldMapScript
	bl	SetCameraToTrackPlayer
	b	.L872
.L860:
	bl	InitCurrentFlashLevelScanlineEffect
	bl	InitOverworldGraphicsRegisters
	b	.L872
.L861:
	bl	move_tilemap_camera_to_upper_left_corner
	b	.L872
.L862:
	ldr	r0, .L879
	ldr	r0, [r0]
	bl	CopyPrimaryTilesetToVram
	b	.L872
.L880:
	.align	2, 0
.L879:
	.word	gMapHeader
.L863:
	ldr	r0, .L881
	ldr	r0, [r0]
	bl	CopySecondaryTilesetToVram
	b	.L872
.L882:
	.align	2, 0
.L881:
	.word	gMapHeader
.L864:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L853	@cond_branch
	ldr	r0, .L883
	ldr	r0, [r0]
	bl	LoadMapTilesetPalettes
	b	.L872
.L884:
	.align	2, 0
.L883:
	.word	gMapHeader
.L866:
	bl	DrawWholeMapView
	b	.L872
.L867:
	bl	InitTilesetAnimations
	bl	QL_TryStopSurfing
.L872:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L853
.L868:
	bl	RunFieldCallback
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L853	@cond_branch
	mov	r0, #0x1
	b	.L871
.L853:
	mov	r0, #0x0
.L871:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe156:
	.size	 LoadMap_QLPlayback,.Lfe156-LoadMap_QLPlayback
	.align	2, 0
	.globl	CB2_EnterFieldFromQuestLog
	.type	 CB2_EnterFieldFromQuestLog,function
	.thumb_func
CB2_EnterFieldFromQuestLog:
	push	{lr}
	bl	FieldClearVBlankHBlankCallbacks
	bl	StopMapMusic
	ldr	r1, .L888
	mov	r0, #0x3
	strb	r0, [r1]
	bl	ResetSafariZoneFlag_
	bl	LoadSaveblockMapHeader
	bl	LoadSaveblockObjEventScripts
	bl	UnfreezeObjectEvents
	bl	Overworld_ResetStateOnContinue
	bl	InitMapFromSavedGame
	bl	PlayTimeCounter_Start
	bl	ScriptContext_Init
	ldr	r1, .L888+0x4
	mov	r0, #0x1
	strb	r0, [r1]
	bl	UseContinueGameWarp
	cmp	r0, #0x1
	bne	.L886	@cond_branch
	bl	ClearContinueGameWarpStatus
	bl	SetWarpDestinationToContinueGameWarp
	bl	WarpIntoMap
	ldr	r0, .L888+0x8
	bl	SetMainCallback2
	b	.L887
.L889:
	.align	2, 0
.L888:
	.word	gGlobalFieldTintMode
	.word	gExitStairsMovementDisabled
	.word	CB2_LoadMap
.L886:
	ldr	r0, .L890
	bl	SetMainCallback1
	bl	CB2_ReturnToField
.L887:
	pop	{r0}
	bx	r0
.L891:
	.align	2, 0
.L890:
	.word	CB1_Overworld
.Lfe157:
	.size	 CB2_EnterFieldFromQuestLog,.Lfe157-CB2_EnterFieldFromQuestLog
	.align	2, 0
	.globl	Overworld_CreditsMainCB
	.type	 Overworld_CreditsMainCB,function
	.thumb_func
Overworld_CreditsMainCB:
	push	{r4, lr}
	ldr	r0, .L895
	ldrb	r0, [r0, #0x7]
	lsr	r0, r0, #0x7
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L893	@cond_branch
	mov	r0, #0x0
	bl	SetVBlankCallback
.L893:
	bl	RunTasks
	bl	AnimateSprites
	bl	CameraUpdateNoObjectRefresh
	bl	UpdateCameraPanning
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	bl	UpdateTilesetAnimations
	bl	DoScheduledBgTilemapCopiesToVram
	cmp	r4, #0
	beq	.L894	@cond_branch
	bl	SetFieldVBlankCallback
.L894:
	pop	{r4}
	pop	{r0}
	bx	r0
.L896:
	.align	2, 0
.L895:
	.word	gPaletteFade
.Lfe158:
	.size	 Overworld_CreditsMainCB,.Lfe158-Overworld_CreditsMainCB
	.align	2, 0
	.type	 FieldCB2_Credits_WaitFade,function
	.thumb_func
FieldCB2_Credits_WaitFade:
	push	{lr}
	ldr	r0, .L901
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L898	@cond_branch
	mov	r0, #0x0
	b	.L900
.L902:
	.align	2, 0
.L901:
	.word	gPaletteFade
.L898:
	mov	r0, #0x1
.L900:
	pop	{r1}
	bx	r1
.Lfe159:
	.size	 FieldCB2_Credits_WaitFade,.Lfe159-FieldCB2_Credits_WaitFade
	.align	2, 0
	.globl	Overworld_DoScrollSceneForCredits
	.type	 Overworld_DoScrollSceneForCredits,function
	.thumb_func
Overworld_DoScrollSceneForCredits:
	push	{lr}
	ldr	r3, .L904
	str	r1, [r3]
	ldr	r1, .L904+0x4
	strb	r2, [r1]
	mov	r1, #0x0
	bl	SetUpScrollSceneForCredits
	pop	{r1}
	bx	r1
.L905:
	.align	2, 0
.L904:
	.word	sCreditsOverworld_Script
	.word	gGlobalFieldTintMode
.Lfe160:
	.size	 Overworld_DoScrollSceneForCredits,.Lfe160-Overworld_DoScrollSceneForCredits
	.align	2, 0
	.type	 SetUpScrollSceneForCredits,function
	.thumb_func
SetUpScrollSceneForCredits:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	ldrb	r1, [r7]
	cmp	r1, #0x1
	beq	.L909	@cond_branch
	cmp	r1, #0x1
	bgt	.L915	@cond_branch
	cmp	r1, #0
	beq	.L908	@cond_branch
	b	.L907
.L915:
	cmp	r1, #0x2
	beq	.L910	@cond_branch
	cmp	r1, #0x3
	beq	.L912	@cond_branch
	b	.L907
.L908:
	ldr	r0, .L918
	strh	r1, [r0]
	ldr	r0, .L918+0x4
	strh	r1, [r0]
.L917:
	ldrb	r0, [r7]
	add	r0, r0, #0x1
	strb	r0, [r7]
	b	.L907
.L919:
	.align	2, 0
.L918:
	.word	sCreditsOverworld_CmdIndex
	.word	sCreditsOverworld_CmdLength
.L909:
	ldr	r3, .L920
	mov	r0, #0x0
	ldrsh	r1, [r3, r0]
	ldr	r0, .L920+0x4
	ldr	r4, [r0]
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	ldrb	r2, [r1, #0x2]
	ldr	r0, .L920+0x8
	and	r0, r0, r5
	orr	r0, r0, r2
	ldrb	r1, [r1, #0x4]
	lsl	r1, r1, #0x8
	ldr	r2, .L920+0xc
	and	r0, r0, r2
	add	r5, r0, #0
	orr	r5, r5, r1
	mov	r0, #0xff
	lsl	r0, r0, #0x10
	orr	r5, r5, r0
	ldrh	r0, [r3]
	add	r0, r0, #0x1
	strh	r0, [r3]
	mov	r2, #0x0
	ldrsh	r1, [r3, r2]
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	ldrh	r2, [r1]
	ldr	r0, .L920+0x10
	and	r0, r0, r6
	orr	r0, r0, r2
	ldrh	r1, [r1, #0x2]
	lsl	r1, r1, #0x10
	ldr	r2, .L920+0x14
	and	r0, r0, r2
	add	r6, r0, #0
	orr	r6, r6, r1
	ldr	r0, .L920+0x18
	str	r5, [r0]
	str	r6, [r0, #0x4]
	ldr	r1, .L920+0x1c
	mov	r2, #0x0
	ldrsh	r0, [r3, r2]
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	ldrh	r0, [r0, #0x4]
	strh	r0, [r1]
	bl	WarpIntoMap
	ldr	r2, .L920+0x20
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	bl	ScriptContext_Init
	bl	UnlockPlayerFieldControls
	mov	r0, #0x0
	bl	SetMainCallback1
	ldr	r1, .L920+0x24
	ldr	r0, .L920+0x28
	str	r0, [r1]
	ldr	r0, .L920+0x2c
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
	b	.L917
.L921:
	.align	2, 0
.L920:
	.word	sCreditsOverworld_CmdIndex
	.word	sCreditsOverworld_Script
	.word	-0x100
	.word	-0xff01
	.word	-0x10000
	.word	0xffff
	.word	sWarpDestination
	.word	sCreditsOverworld_CmdLength
	.word	gPaletteFade
	.word	gFieldCallback2
	.word	FieldCB2_Credits_WaitFade
	.word	gMain
.L910:
	bl	MapLdr_Credits
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L907	@cond_branch
	b	.L917
.L912:
	ldr	r0, .L922
	ldr	r1, .L922+0x4
	str	r1, [r0]
	bl	SetFieldVBlankCallback
	mov	r0, #0x0
	strb	r0, [r7]
	mov	r0, #0x1
	b	.L916
.L923:
	.align	2, 0
.L922:
	.word	gFieldCamera
	.word	CameraCB_CreditsPan
.L907:
	mov	r0, #0x0
.L916:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe161:
	.size	 SetUpScrollSceneForCredits,.Lfe161-SetUpScrollSceneForCredits
	.align	2, 0
	.type	 MapLdr_Credits,function
	.thumb_func
MapLdr_Credits:
	push	{r4, lr}
	ldr	r4, .L940
	ldrb	r0, [r4]
	cmp	r0, #0x8
	bhi	.L936	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L940+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L941:
	.align	2, 0
.L940:
	.word	gMain+0x438
	.word	.L937
	.align	2, 0
	.align	2, 0
.L937:
	.word	.L926
	.word	.L927
	.word	.L928
	.word	.L929
	.word	.L930
	.word	.L931
	.word	.L932
	.word	.L934
	.word	.L935
.L926:
	bl	InitOverworldBgs_NoResetHeap
	mov	r0, #0x0
	bl	LoadMapFromWarp
	b	.L939
.L927:
	bl	ScanlineEffect_Clear
	bl	ResetAllPicSprites
	bl	ResetCameraUpdateInfo
	bl	InstallCameraPanAheadCallback
	bl	FieldEffectActiveListClear
	bl	StartWeather
	bl	ResumePausedWeather
	bl	SetUpFieldTasks
	bl	RunOnResumeMapScript
	b	.L939
.L928:
	bl	InitCurrentFlashLevelScanlineEffect
	bl	InitOverworldGraphicsRegisters
	b	.L939
.L929:
	bl	move_tilemap_camera_to_upper_left_corner
	b	.L939
.L930:
	ldr	r0, .L942
	ldr	r0, [r0]
	bl	CopyPrimaryTilesetToVram
	b	.L939
.L943:
	.align	2, 0
.L942:
	.word	gMapHeader
.L931:
	ldr	r0, .L944
	ldr	r0, [r0]
	bl	CopySecondaryTilesetToVram
	b	.L939
.L945:
	.align	2, 0
.L944:
	.word	gMapHeader
.L932:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L925	@cond_branch
	ldr	r0, .L946
	ldr	r0, [r0]
	bl	LoadMapTilesetPalettes
	b	.L939
.L947:
	.align	2, 0
.L946:
	.word	gMapHeader
.L934:
	bl	DrawWholeMapView
	b	.L939
.L935:
	bl	InitTilesetAnimations
	ldr	r2, .L948
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r2, .L948+0x4
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FadeSelectedPals
.L939:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L925
.L949:
	.align	2, 0
.L948:
	.word	gPaletteFade
	.word	0x3fffffff
.L936:
	mov	r0, #0x1
	b	.L938
.L925:
	mov	r0, #0x0
.L938:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe162:
	.size	 MapLdr_Credits,.Lfe162-MapLdr_Credits
	.align	2, 0
	.type	 CameraCB_CreditsPan,function
	.thumb_func
CameraCB_CreditsPan:
	push	{r4, r5, r6, lr}
	add	r2, r0, #0
	ldr	r0, .L962
	mov	r3, #0x0
	ldrsh	r1, [r0, r3]
	add	r5, r0, #0
	ldr	r4, .L962+0x4
	ldr	r6, .L962+0x8
	cmp	r1, #0
	bne	.L951	@cond_branch
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	ldr	r1, [r6]
	lsl	r0, r0, #0x3
	add	r3, r0, r1
	ldrh	r0, [r3]
	sub	r0, r0, #0xfb
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	bhi	.L958	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L962+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L963:
	.align	2, 0
.L962:
	.word	sCreditsOverworld_CmdLength
	.word	sCreditsOverworld_CmdIndex
	.word	sCreditsOverworld_Script
	.word	.L959
	.align	2, 0
	.align	2, 0
.L959:
	.word	.L956
	.word	.L950
	.word	.L957
	.word	.L950
	.word	.L955
.L955:
	mov	r0, #0x0
	str	r0, [r2, #0x8]
	str	r0, [r2, #0xc]
	str	r0, [r2]
	ldr	r0, .L964
	mov	r1, #0x0
	bl	CreateTask
	b	.L950
.L965:
	.align	2, 0
.L964:
	.word	Task_OvwldCredits_FadeOut
.L956:
	mov	r0, #0x0
	str	r0, [r2, #0x8]
	str	r0, [r2, #0xc]
	str	r0, [r2]
	b	.L951
.L957:
	mov	r0, #0x0
	str	r0, [r2, #0x8]
	str	r0, [r2, #0xc]
	str	r0, [r2]
	b	.L950
.L958:
	ldrh	r0, [r3, #0x4]
	strh	r0, [r5]
	mov	r3, #0x0
	ldrsh	r0, [r4, r3]
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	str	r0, [r2, #0x8]
	mov	r3, #0x0
	ldrsh	r0, [r4, r3]
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x2
	ldrsh	r0, [r0, r1]
	str	r0, [r2, #0xc]
.L951:
	mov	r3, #0x0
	ldrsh	r0, [r4, r3]
	ldr	r1, [r6]
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0xff
	bne	.L960	@cond_branch
	mov	r0, #0x0
	str	r0, [r2, #0x8]
	str	r0, [r2, #0xc]
	b	.L950
.L960:
	ldrh	r0, [r5]
	sub	r0, r0, #0x1
	strh	r0, [r5]
.L950:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe163:
	.size	 CameraCB_CreditsPan,.Lfe163-CameraCB_CreditsPan
	.align	2, 0
	.type	 Task_OvwldCredits_FadeOut,function
	.thumb_func
Task_OvwldCredits_FadeOut:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L967
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L967+0x4
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L968:
	.align	2, 0
.L967:
	.word	gTasks
	.word	Task_OvwldCredits_WaitFade
.Lfe164:
	.size	 Task_OvwldCredits_FadeOut,.Lfe164-Task_OvwldCredits_FadeOut
	.align	2, 0
	.type	 Task_OvwldCredits_WaitFade,function
	.thumb_func
Task_OvwldCredits_WaitFade:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L971
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L970	@cond_branch
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L971+0x4
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L970:
	pop	{r4}
	pop	{r0}
	bx	r0
.L972:
	.align	2, 0
.L971:
	.word	gPaletteFade
	.word	CB2_LoadMap
.Lfe165:
	.size	 Task_OvwldCredits_WaitFade,.Lfe165-Task_OvwldCredits_WaitFade
	.section .rodata
	.align	2, 0
	.type	 sLinkPlayerMovementModes,object
sLinkPlayerMovementModes:
	.word	MovementEventModeCB_Normal
	.word	MovementEventModeCB_Ignored
	.word	MovementEventModeCB_Normal_2
	.size	 sLinkPlayerMovementModes,12
	.align	2, 0
	.type	 sLinkPlayerFacingHandlers,object
sLinkPlayerFacingHandlers:
	.word	FacingHandler_DoNothing
	.word	FacingHandler_DpadMovement
	.word	FacingHandler_DpadMovement
	.word	FacingHandler_DpadMovement
	.word	FacingHandler_DpadMovement
	.size	 sLinkPlayerFacingHandlers,20
	.align	2, 0
	.type	 sUnusedLinkPlayerFacingHandlers,object
sUnusedLinkPlayerFacingHandlers:
	.word	FacingHandler_DoNothing
	.word	FacingHandler_DoNothing
	.word	FacingHandler_ForcedFacingChange
	.word	FacingHandler_ForcedFacingChange
	.word	FacingHandler_ForcedFacingChange
	.word	FacingHandler_ForcedFacingChange
	.size	 sUnusedLinkPlayerFacingHandlers,24
	.align	2, 0
	.type	 sMovementStatusHandler,object
sMovementStatusHandler:
	.word	MovementStatusHandler_EnterFreeMode
	.word	MovementStatusHandler_TryAdvanceScript
	.size	 sMovementStatusHandler,8
.text
	.align	2, 0
	.type	 CB1_UpdateLinkState,function
	.thumb_func
CB1_UpdateLinkState:
	push	{r4, lr}
	ldr	r0, .L976
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L975	@cond_branch
	bl	IsRfuRecvQueueEmpty
	cmp	r0, #0
	beq	.L975	@cond_branch
	bl	IsSendingKeysToLink
	cmp	r0, #0
	bne	.L974	@cond_branch
.L975:
	ldr	r0, .L976+0x4
	ldrb	r4, [r0]
	ldr	r0, .L976+0x8
	add	r1, r4, #0
	bl	UpdateAllLinkPlayers
	ldr	r0, .L976+0xc
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	UpdateHeldKeyCode
	bl	ClearAllPlayerKeys
.L974:
	pop	{r4}
	pop	{r0}
	bx	r0
.L977:
	.align	2, 0
.L976:
	.word	gWirelessCommType
	.word	gLocalLinkPlayerId
	.word	gLinkPartnersHeldKeys
	.word	sPlayerKeyInterceptCallback
.Lfe166:
	.size	 CB1_UpdateLinkState,.Lfe166-CB1_UpdateLinkState
	.align	2, 0
	.type	 ResetAllMultiplayerState,function
	.thumb_func
ResetAllMultiplayerState:
	push	{lr}
	bl	ResetAllLinkStates
	ldr	r0, .L979
	bl	SetKeyInterceptCallback
	pop	{r0}
	bx	r0
.L980:
	.align	2, 0
.L979:
	.word	KeyInterCB_SelfIdle
.Lfe167:
	.size	 ResetAllMultiplayerState,.Lfe167-ResetAllMultiplayerState
	.align	2, 0
	.type	 ClearAllPlayerKeys,function
	.thumb_func
ClearAllPlayerKeys:
	push	{lr}
	ldr	r0, .L982
	bl	ResetPlayerHeldKeys
	pop	{r0}
	bx	r0
.L983:
	.align	2, 0
.L982:
	.word	gLinkPartnersHeldKeys
.Lfe168:
	.size	 ClearAllPlayerKeys,.Lfe168-ClearAllPlayerKeys
	.align	2, 0
	.type	 SetKeyInterceptCallback,function
	.thumb_func
SetKeyInterceptCallback:
	ldr	r2, .L985
	mov	r1, #0x0
	strb	r1, [r2]
	ldr	r1, .L985+0x4
	str	r0, [r1]
	bx	lr
.L986:
	.align	2, 0
.L985:
	.word	sRfuKeepAliveTimer
	.word	sPlayerKeyInterceptCallback
.Lfe169:
	.size	 SetKeyInterceptCallback,.Lfe169-SetKeyInterceptCallback
	.align	2, 0
	.type	 CheckRfuKeepAliveTimer,function
	.thumb_func
CheckRfuKeepAliveTimer:
	push	{lr}
	ldr	r0, .L989
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L988	@cond_branch
	ldr	r1, .L989+0x4
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3c
	bls	.L988	@cond_branch
	bl	LinkRfu_FatalError
.L988:
	pop	{r0}
	bx	r0
.L990:
	.align	2, 0
.L989:
	.word	gWirelessCommType
	.word	sRfuKeepAliveTimer
.Lfe170:
	.size	 CheckRfuKeepAliveTimer,.Lfe170-CheckRfuKeepAliveTimer
	.align	2, 0
	.type	 ResetAllLinkStates,function
	.thumb_func
ResetAllLinkStates:
	push	{lr}
	ldr	r1, .L997
	mov	r2, #0x80
	add	r0, r1, #0x3
.L995:
	strb	r2, [r0]
	sub	r0, r0, #0x1
	cmp	r0, r1
	bge	.L995	@cond_branch
	pop	{r0}
	bx	r0
.L998:
	.align	2, 0
.L997:
	.word	sPlayerLinkStates
.Lfe171:
	.size	 ResetAllLinkStates,.Lfe171-ResetAllLinkStates
	.align	2, 0
	.type	 AreAllPlayersInLinkState,function
	.thumb_func
AreAllPlayersInLinkState:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldr	r0, .L1007
	ldrb	r2, [r0]
	mov	r1, #0x0
	cmp	r1, r2
	bge	.L1001	@cond_branch
	ldr	r4, .L1007+0x4
.L1003:
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, r3
	beq	.L1002	@cond_branch
	mov	r0, #0x0
	b	.L1006
.L1008:
	.align	2, 0
.L1007:
	.word	gFieldLinkPlayerCount
	.word	sPlayerLinkStates
.L1002:
	add	r1, r1, #0x1
	cmp	r1, r2
	blt	.L1003	@cond_branch
.L1001:
	mov	r0, #0x1
.L1006:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe172:
	.size	 AreAllPlayersInLinkState,.Lfe172-AreAllPlayersInLinkState
	.align	2, 0
	.type	 IsAnyPlayerInLinkState,function
	.thumb_func
IsAnyPlayerInLinkState:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldr	r0, .L1017
	ldrb	r2, [r0]
	mov	r1, #0x0
	cmp	r1, r2
	bge	.L1011	@cond_branch
	ldr	r4, .L1017+0x4
.L1013:
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, r3
	bne	.L1012	@cond_branch
	mov	r0, #0x1
	b	.L1016
.L1018:
	.align	2, 0
.L1017:
	.word	gFieldLinkPlayerCount
	.word	sPlayerLinkStates
.L1012:
	add	r1, r1, #0x1
	cmp	r1, r2
	blt	.L1013	@cond_branch
.L1011:
	mov	r0, #0x0
.L1016:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe173:
	.size	 IsAnyPlayerInLinkState,.Lfe173-IsAnyPlayerInLinkState
	.align	2, 0
	.type	 HandleLinkPlayerKeyInput,function
	.thumb_func
HandleLinkPlayerKeyInput:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r7, r0, #0
	add	r6, r2, #0
	mov	r9, r3
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r8, r1
	ldr	r0, .L1053
	add	r5, r7, r0
	ldrb	r0, [r5]
	cmp	r0, #0x80
	beq	.LCB8167
	b	.L1020	@long jump
.LCB8167:
	add	r0, r6, #0
	bl	TryGetTileEventScript
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L1021	@cond_branch
	bl	GetDirectionForEventScript
	mov	r1, r9
	strh	r0, [r1]
	mov	r0, #0x81
	strb	r0, [r5]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	bne	.LCB8185
	b	.L1019	@long jump
.LCB8185:
	ldr	r0, .L1053+0x4
	bl	SetKeyInterceptCallback
	add	r0, r4, #0
	bl	RunInteractLocalPlayerScript
	b	.L1019
.L1054:
	.align	2, 0
.L1053:
	.word	sPlayerLinkStates
	.word	KeyInterCB_DeferToEventScript
.L1021:
	mov	r0, #0x83
	bl	IsAnyPlayerInLinkState
	cmp	r0, #0x1
	bne	.L1023	@cond_branch
	mov	r0, #0x81
	strb	r0, [r5]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	bne	.LCB8214
	b	.L1019	@long jump
.LCB8214:
	ldr	r0, .L1055
	bl	SetKeyInterceptCallback
	bl	RunTerminateLinkScript
	b	.L1019
.L1056:
	.align	2, 0
.L1055:
	.word	KeyInterCB_DeferToEventScript
.L1023:
	mov	r0, r8
	sub	r0, r0, #0x12
	cmp	r0, #0xa
	bls	.LCB8233
	b	.L1020	@long jump
.LCB8233:
	lsl	r0, r0, #0x2
	ldr	r1, .L1057
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1058:
	.align	2, 0
.L1057:
	.word	.L1041
	.align	2, 0
	.align	2, 0
.L1041:
	.word	.L1029
	.word	.L1020
	.word	.L1020
	.word	.L1020
	.word	.L1020
	.word	.L1020
	.word	.L1026
	.word	.L1032
	.word	.L1020
	.word	.L1035
	.word	.L1038
.L1026:
	add	r0, r6, #0
	bl	CanCableClubPlayerPressStart
	cmp	r0, #0
	beq	.L1020	@cond_branch
	ldr	r0, .L1059
	add	r0, r7, r0
	mov	r1, #0x81
	strb	r1, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	beq	.L1020	@cond_branch
	ldr	r0, .L1059+0x4
	bl	SetKeyInterceptCallback
	bl	InitLinkRoomStartMenuScript
	b	.L1020
.L1060:
	.align	2, 0
.L1059:
	.word	sPlayerLinkStates
	.word	KeyInterCB_DeferToEventScript
.L1029:
	add	r0, r6, #0
	bl	PlayerIsAtSouthExit
	cmp	r0, #0x1
	bne	.L1020	@cond_branch
	ldr	r0, .L1061
	add	r0, r7, r0
	mov	r1, #0x81
	strb	r1, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	beq	.L1020	@cond_branch
	ldr	r0, .L1061+0x4
	bl	SetKeyInterceptCallback
	bl	CreateConfirmLeaveTradeRoomPrompt
	b	.L1020
.L1062:
	.align	2, 0
.L1061:
	.word	sPlayerLinkStates
	.word	KeyInterCB_DeferToEventScript
.L1032:
	add	r0, r6, #0
	bl	TryInteractWithPlayer
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L1020	@cond_branch
	ldr	r0, .L1063
	add	r0, r7, r0
	mov	r1, #0x81
	strb	r1, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	beq	.L1020	@cond_branch
	ldr	r0, .L1063+0x4
	bl	SetKeyInterceptCallback
	add	r0, r4, #0
	bl	InitMenuBasedScript
	b	.L1020
.L1064:
	.align	2, 0
.L1063:
	.word	sPlayerLinkStates
	.word	KeyInterCB_DeferToEventScript
.L1035:
	add	r0, r6, #0
	bl	IsCableClubPlayerUnfrozen
	cmp	r0, #0
	beq	.L1020	@cond_branch
	ldr	r0, .L1065
	add	r0, r7, r0
	mov	r1, #0x81
	strb	r1, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	beq	.L1020	@cond_branch
	ldr	r0, .L1065+0x4
	bl	SetKeyInterceptCallback
	bl	InitLinkPlayerQueueScript
	b	.L1020
.L1066:
	.align	2, 0
.L1065:
	.word	sPlayerLinkStates
	.word	KeyInterCB_DeferToRecvQueue
.L1038:
	add	r0, r6, #0
	bl	IsCableClubPlayerUnfrozen
	cmp	r0, #0
	beq	.L1020	@cond_branch
	ldr	r0, .L1067
	add	r0, r7, r0
	mov	r1, #0x81
	strb	r1, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	beq	.L1020	@cond_branch
	ldr	r0, .L1067+0x4
	bl	SetKeyInterceptCallback
	bl	InitLinkPlayerQueueScript
.L1020:
	mov	r0, r8
	cmp	r0, #0x17
	beq	.L1044	@cond_branch
	cmp	r0, #0x17
	bgt	.L1052	@cond_branch
	cmp	r0, #0x16
	beq	.L1045	@cond_branch
	b	.L1019
.L1068:
	.align	2, 0
.L1067:
	.word	sPlayerLinkStates
	.word	KeyInterCB_DeferToSendQueue
.L1052:
	mov	r1, r8
	cmp	r1, #0x1a
	beq	.L1046	@cond_branch
	cmp	r1, #0x1d
	beq	.L1048	@cond_branch
	b	.L1019
.L1044:
	ldr	r0, .L1069
	add	r0, r7, r0
	mov	r1, #0x83
	strb	r1, [r0]
	b	.L1019
.L1070:
	.align	2, 0
.L1069:
	.word	sPlayerLinkStates
.L1045:
	ldr	r0, .L1071
	add	r0, r7, r0
	mov	r1, #0x82
	strb	r1, [r0]
	b	.L1019
.L1072:
	.align	2, 0
.L1071:
	.word	sPlayerLinkStates
.L1046:
	ldr	r0, .L1073
	add	r0, r7, r0
	mov	r1, #0x80
	strb	r1, [r0]
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0
	beq	.L1019	@cond_branch
	ldr	r0, .L1073+0x4
	bl	SetKeyInterceptCallback
	b	.L1019
.L1074:
	.align	2, 0
.L1073:
	.word	sPlayerLinkStates
	.word	KeyInterCB_SelfIdle
.L1048:
	ldr	r0, .L1075
	add	r1, r7, r0
	ldrb	r0, [r1]
	cmp	r0, #0x82
	bne	.L1019	@cond_branch
	mov	r0, #0x81
	strb	r0, [r1]
.L1019:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1076:
	.align	2, 0
.L1075:
	.word	sPlayerLinkStates
.Lfe174:
	.size	 HandleLinkPlayerKeyInput,.Lfe174-HandleLinkPlayerKeyInput
	.align	2, 0
	.type	 UpdateAllLinkPlayers,function
	.thumb_func
UpdateAllLinkPlayers:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x14
	mov	r8, r1
	mov	r6, #0x0
	add	r5, sp, #0x10
	mov	r9, r5
	add	r7, r0, #0
.L1081:
	ldrb	r4, [r7]
	mov	r0, #0x0
	strh	r0, [r5]
	add	r0, r6, #0
	mov	r1, r8
	mov	r2, sp
	bl	LoadCableClubPlayer
	add	r0, r6, #0
	add	r1, r4, #0
	mov	r2, sp
	add	r3, r5, #0
	bl	HandleLinkPlayerKeyInput
	ldr	r0, .L1084
	add	r0, r6, r0
	ldrb	r0, [r0]
	cmp	r0, #0x80
	bne	.L1082	@cond_branch
	add	r0, r4, #0
	bl	GetDirectionForDpadKey
	mov	r1, r9
	strh	r0, [r1]
.L1082:
	lsl	r0, r6, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r5]
	bl	SetPlayerFacingDirection
	add	r7, r7, #0x2
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L1081	@cond_branch
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1085:
	.align	2, 0
.L1084:
	.word	sPlayerLinkStates
.Lfe175:
	.size	 UpdateAllLinkPlayers,.Lfe175-UpdateAllLinkPlayers
	.align	2, 0
	.type	 UpdateHeldKeyCode,function
	.thumb_func
UpdateHeldKeyCode:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r1, .L1100
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	cmp	r0, #0xc
	bhi	.L1087	@cond_branch
	ldr	r0, .L1100+0x4
	strh	r4, [r0]
	b	.L1088
.L1101:
	.align	2, 0
.L1100:
	.word	-0x110000
	.word	gHeldKeyCodeToSend
.L1087:
	ldr	r1, .L1102
	mov	r0, #0x11
	strh	r0, [r1]
.L1088:
	ldr	r0, .L1102+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1089	@cond_branch
	bl	GetLinkSendQueueLength
	cmp	r0, #0x1
	bls	.L1089	@cond_branch
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0x1
	bne	.L1089	@cond_branch
	bl	IsSendingKeysToLink
	cmp	r0, #0x1
	bne	.L1089	@cond_branch
	cmp	r4, #0x11
	blt	.L1089	@cond_branch
	cmp	r4, #0x15
	ble	.L1097	@cond_branch
	cmp	r4, #0x19
	bgt	.L1089	@cond_branch
	cmp	r4, #0x18
	blt	.L1089	@cond_branch
.L1097:
	ldr	r1, .L1102
	mov	r0, #0x0
	strh	r0, [r1]
.L1089:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1103:
	.align	2, 0
.L1102:
	.word	gHeldKeyCodeToSend
	.word	gWirelessCommType
.Lfe176:
	.size	 UpdateHeldKeyCode,.Lfe176-UpdateHeldKeyCode
	.align	2, 0
	.type	 KeyInterCB_ReadButtons,function
	.thumb_func
KeyInterCB_ReadButtons:
	push	{lr}
	ldr	r2, .L1118
	ldrh	r1, [r2, #0x2c]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1105	@cond_branch
	mov	r0, #0x13
	b	.L1117
.L1119:
	.align	2, 0
.L1118:
	.word	gMain
.L1105:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1107	@cond_branch
	mov	r0, #0x12
	b	.L1117
.L1107:
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1109	@cond_branch
	mov	r0, #0x14
	b	.L1117
.L1109:
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1111	@cond_branch
	mov	r0, #0x15
	b	.L1117
.L1111:
	ldrh	r1, [r2, #0x2e]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1113	@cond_branch
	mov	r0, #0x18
	b	.L1117
.L1113:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1115	@cond_branch
	mov	r0, #0x11
	b	.L1117
.L1115:
	mov	r0, #0x19
.L1117:
	pop	{r1}
	bx	r1
.Lfe177:
	.size	 KeyInterCB_ReadButtons,.Lfe177-KeyInterCB_ReadButtons
	.align	2, 0
	.type	 GetDirectionForDpadKey,function
	.thumb_func
GetDirectionForDpadKey:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r0, #0
	cmp	r0, #0x13
	beq	.L1124	@cond_branch
	cmp	r0, #0x13
	bgt	.L1128	@cond_branch
	cmp	r0, #0x12
	beq	.L1125	@cond_branch
	b	.L1126
.L1128:
	cmp	r1, #0x14
	beq	.L1123	@cond_branch
	cmp	r1, #0x15
	bne	.L1126	@cond_branch
	mov	r0, #0x4
	b	.L1129
.L1123:
	mov	r0, #0x3
	b	.L1129
.L1124:
	mov	r0, #0x1
	b	.L1129
.L1125:
	mov	r0, #0x2
	b	.L1129
.L1126:
	mov	r0, #0x0
.L1129:
	pop	{r1}
	bx	r1
.Lfe178:
	.size	 GetDirectionForDpadKey,.Lfe178-GetDirectionForDpadKey
	.align	2, 0
	.type	 ResetPlayerHeldKeys,function
	.thumb_func
ResetPlayerHeldKeys:
	push	{lr}
	mov	r2, #0x11
	add	r1, r0, #0x6
.L1134:
	strh	r2, [r1]
	sub	r1, r1, #0x2
	cmp	r1, r0
	bge	.L1134	@cond_branch
	pop	{r0}
	bx	r0
.Lfe179:
	.size	 ResetPlayerHeldKeys,.Lfe179-ResetPlayerHeldKeys
	.align	2, 0
	.type	 KeyInterCB_SelfIdle,function
	.thumb_func
KeyInterCB_SelfIdle:
	push	{r4, lr}
	add	r4, r0, #0
	bl	ArePlayerFieldControlsLocked
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1137	@cond_branch
	mov	r0, #0x11
	b	.L1140
.L1137:
	bl	GetLinkRecvQueueLength
	cmp	r0, #0x4
	bls	.L1138	@cond_branch
	mov	r0, #0x1b
	b	.L1140
.L1138:
	bl	GetLinkSendQueueLength
	cmp	r0, #0x4
	bls	.L1139	@cond_branch
	mov	r0, #0x1c
	b	.L1140
.L1139:
	add	r0, r4, #0
	bl	KeyInterCB_ReadButtons
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
.L1140:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe180:
	.size	 KeyInterCB_SelfIdle,.Lfe180-KeyInterCB_SelfIdle
	.align	2, 0
	.type	 KeyInterCB_Idle,function
	.thumb_func
KeyInterCB_Idle:
	push	{lr}
	bl	CheckRfuKeepAliveTimer
	mov	r0, #0x11
	pop	{r1}
	bx	r1
.Lfe181:
	.size	 KeyInterCB_Idle,.Lfe181-KeyInterCB_Idle
	.align	2, 0
	.type	 KeyInterCB_DeferToEventScript,function
	.thumb_func
KeyInterCB_DeferToEventScript:
	push	{r4, lr}
	bl	ArePlayerFieldControlsLocked
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r4, #0x11
	cmp	r0, #0x1
	beq	.L1144	@cond_branch
	mov	r4, #0x1a
	ldr	r0, .L1145
	bl	SetKeyInterceptCallback
.L1144:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L1146:
	.align	2, 0
.L1145:
	.word	KeyInterCB_Idle
.Lfe182:
	.size	 KeyInterCB_DeferToEventScript,.Lfe182-KeyInterCB_DeferToEventScript
	.align	2, 0
	.type	 KeyInterCB_DeferToRecvQueue,function
	.thumb_func
KeyInterCB_DeferToRecvQueue:
	push	{r4, lr}
	bl	GetLinkRecvQueueLength
	mov	r4, #0x11
	cmp	r0, #0x2
	bhi	.L1149	@cond_branch
	mov	r4, #0x1a
	bl	UnlockPlayerFieldControls
	ldr	r0, .L1150
	bl	SetKeyInterceptCallback
.L1149:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L1151:
	.align	2, 0
.L1150:
	.word	KeyInterCB_Idle
.Lfe183:
	.size	 KeyInterCB_DeferToRecvQueue,.Lfe183-KeyInterCB_DeferToRecvQueue
	.align	2, 0
	.type	 KeyInterCB_DeferToSendQueue,function
	.thumb_func
KeyInterCB_DeferToSendQueue:
	push	{r4, lr}
	bl	GetLinkSendQueueLength
	mov	r4, #0x11
	cmp	r0, #0x2
	bhi	.L1154	@cond_branch
	mov	r4, #0x1a
	bl	UnlockPlayerFieldControls
	ldr	r0, .L1155
	bl	SetKeyInterceptCallback
.L1154:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L1156:
	.align	2, 0
.L1155:
	.word	KeyInterCB_Idle
.Lfe184:
	.size	 KeyInterCB_DeferToSendQueue,.Lfe184-KeyInterCB_DeferToSendQueue
	.align	2, 0
	.type	 KeyInterCB_DoNothingAndKeepAlive,function
	.thumb_func
KeyInterCB_DoNothingAndKeepAlive:
	push	{lr}
	bl	CheckRfuKeepAliveTimer
	mov	r0, #0x11
	pop	{r1}
	bx	r1
.Lfe185:
	.size	 KeyInterCB_DoNothingAndKeepAlive,.Lfe185-KeyInterCB_DoNothingAndKeepAlive
	.align	2, 0
	.type	 KeyInterCB_Ready,function
	.thumb_func
KeyInterCB_Ready:
	push	{lr}
	ldr	r1, .L1165
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x82
	bne	.L1159	@cond_branch
	ldr	r0, .L1165+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1164	@cond_branch
	ldr	r0, .L1165+0x8
	bl	SetKeyInterceptCallback
	mov	r0, #0x1d
	b	.L1163
.L1166:
	.align	2, 0
.L1165:
	.word	sPlayerLinkStates
	.word	gMain
	.word	KeyInterCB_DoNothingAndKeepAlive
.L1159:
	bl	CheckRfuKeepAliveTimer
.L1164:
	mov	r0, #0x11
.L1163:
	pop	{r1}
	bx	r1
.Lfe186:
	.size	 KeyInterCB_Ready,.Lfe186-KeyInterCB_Ready
	.align	2, 0
	.type	 KeyInterCB_SetReady,function
	.thumb_func
KeyInterCB_SetReady:
	push	{lr}
	ldr	r0, .L1168
	bl	SetKeyInterceptCallback
	mov	r0, #0x16
	pop	{r1}
	bx	r1
.L1169:
	.align	2, 0
.L1168:
	.word	KeyInterCB_Ready
.Lfe187:
	.size	 KeyInterCB_SetReady,.Lfe187-KeyInterCB_SetReady
	.align	2, 0
	.type	 KeyInterCB_SendNothing,function
	.thumb_func
KeyInterCB_SendNothing:
	mov	r0, #0x11
	bx	lr
.Lfe188:
	.size	 KeyInterCB_SendNothing,.Lfe188-KeyInterCB_SendNothing
	.align	2, 0
	.type	 KeyInterCB_WaitForPlayersToExit,function
	.thumb_func
KeyInterCB_WaitForPlayersToExit:
	push	{lr}
	ldr	r1, .L1174
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x83
	beq	.L1172	@cond_branch
	bl	CheckRfuKeepAliveTimer
.L1172:
	mov	r0, #0x83
	bl	AreAllPlayersInLinkState
	cmp	r0, #0x1
	bne	.L1173	@cond_branch
	ldr	r0, .L1174+0x4
	bl	ScriptContext_SetupScript
	ldr	r0, .L1174+0x8
	bl	SetKeyInterceptCallback
.L1173:
	mov	r0, #0x11
	pop	{r1}
	bx	r1
.L1175:
	.align	2, 0
.L1174:
	.word	sPlayerLinkStates
	.word	CableClub_EventScript_DoLinkRoomExit
	.word	KeyInterCB_SendNothing
.Lfe189:
	.size	 KeyInterCB_WaitForPlayersToExit,.Lfe189-KeyInterCB_WaitForPlayersToExit
	.align	2, 0
	.type	 KeyInterCB_SendExitRoomKey,function
	.thumb_func
KeyInterCB_SendExitRoomKey:
	push	{lr}
	ldr	r0, .L1177
	bl	SetKeyInterceptCallback
	mov	r0, #0x17
	pop	{r1}
	bx	r1
.L1178:
	.align	2, 0
.L1177:
	.word	KeyInterCB_WaitForPlayersToExit
.Lfe190:
	.size	 KeyInterCB_SendExitRoomKey,.Lfe190-KeyInterCB_SendExitRoomKey
	.align	2, 0
	.type	 KeyInterCB_SendNothing_2,function
	.thumb_func
KeyInterCB_SendNothing_2:
	mov	r0, #0x11
	bx	lr
.Lfe191:
	.size	 KeyInterCB_SendNothing_2,.Lfe191-KeyInterCB_SendNothing_2
	.align	2, 0
	.globl	GetCableClubPartnersReady
	.type	 GetCableClubPartnersReady,function
	.thumb_func
GetCableClubPartnersReady:
	push	{lr}
	mov	r0, #0x83
	bl	IsAnyPlayerInLinkState
	cmp	r0, #0x1
	beq	.L1186	@cond_branch
	ldr	r0, .L1188
	ldr	r2, [r0]
	ldr	r1, .L1188+0x4
	add	r3, r0, #0
	cmp	r2, r1
	bne	.L1182	@cond_branch
	ldr	r1, .L1188+0x8
	ldr	r0, .L1188+0xc
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x82
	bne	.L1187	@cond_branch
.L1182:
	ldr	r1, [r3]
	ldr	r0, .L1188+0x10
	cmp	r1, r0
	bne	.L1183	@cond_branch
	ldr	r1, .L1188+0x8
	ldr	r0, .L1188+0xc
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x81
	bne	.L1183	@cond_branch
.L1186:
	mov	r0, #0x2
	b	.L1185
.L1189:
	.align	2, 0
.L1188:
	.word	sPlayerKeyInterceptCallback
	.word	KeyInterCB_Ready
	.word	sPlayerLinkStates
	.word	gLocalLinkPlayerId
	.word	KeyInterCB_DoNothingAndKeepAlive
.L1183:
	mov	r0, #0x82
	bl	AreAllPlayersInLinkState
	cmp	r0, #0
	bne	.L1184	@cond_branch
.L1187:
	mov	r0, #0x0
	b	.L1185
.L1184:
	mov	r0, #0x1
.L1185:
	pop	{r1}
	bx	r1
.Lfe192:
	.size	 GetCableClubPartnersReady,.Lfe192-GetCableClubPartnersReady
	.align	2, 0
	.type	 IsAnyPlayerExitingCableClub,function
	.thumb_func
IsAnyPlayerExitingCableClub:
	push	{lr}
	mov	r0, #0x83
	bl	IsAnyPlayerInLinkState
	pop	{r1}
	bx	r1
.Lfe193:
	.size	 IsAnyPlayerExitingCableClub,.Lfe193-IsAnyPlayerExitingCableClub
	.align	2, 0
	.globl	SetInCableClubSeat
	.type	 SetInCableClubSeat,function
	.thumb_func
SetInCableClubSeat:
	push	{lr}
	ldr	r0, .L1192
	bl	SetKeyInterceptCallback
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L1193:
	.align	2, 0
.L1192:
	.word	KeyInterCB_SetReady
.Lfe194:
	.size	 SetInCableClubSeat,.Lfe194-SetInCableClubSeat
	.align	2, 0
	.globl	SetLinkWaitingForScript
	.type	 SetLinkWaitingForScript,function
	.thumb_func
SetLinkWaitingForScript:
	push	{lr}
	ldr	r0, .L1195
	bl	SetKeyInterceptCallback
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L1196:
	.align	2, 0
.L1195:
	.word	KeyInterCB_DeferToEventScript
.Lfe195:
	.size	 SetLinkWaitingForScript,.Lfe195-SetLinkWaitingForScript
	.align	2, 0
	.globl	QueueExitLinkRoomKey
	.type	 QueueExitLinkRoomKey,function
	.thumb_func
QueueExitLinkRoomKey:
	push	{lr}
	ldr	r0, .L1198
	bl	SetKeyInterceptCallback
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L1199:
	.align	2, 0
.L1198:
	.word	KeyInterCB_SendExitRoomKey
.Lfe196:
	.size	 QueueExitLinkRoomKey,.Lfe196-QueueExitLinkRoomKey
	.align	2, 0
	.globl	SetStartedCableClubActivity
	.type	 SetStartedCableClubActivity,function
	.thumb_func
SetStartedCableClubActivity:
	push	{lr}
	ldr	r0, .L1201
	bl	SetKeyInterceptCallback
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L1202:
	.align	2, 0
.L1201:
	.word	KeyInterCB_SendNothing_2
.Lfe197:
	.size	 SetStartedCableClubActivity,.Lfe197-SetStartedCableClubActivity
	.align	2, 0
	.type	 LoadCableClubPlayer,function
	.thumb_func
LoadCableClubPlayer:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r6, r2, #0
	strb	r4, [r6]
	mov	r0, #0x0
	cmp	r4, r1
	bne	.L1204	@cond_branch
	mov	r0, #0x1
.L1204:
	strb	r0, [r6, #0x1]
	ldr	r1, .L1205
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x3]
	strb	r0, [r6, #0x2]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	GetLinkPlayerFacingDirection
	strb	r0, [r6, #0x3]
	mov	r5, sp
	add	r5, r5, #0x2
	add	r0, r4, #0
	mov	r1, sp
	add	r2, r5, #0
	bl	GetLinkPlayerCoords
	mov	r0, sp
	ldrh	r0, [r0]
	strh	r0, [r6, #0x4]
	ldrh	r0, [r5]
	strh	r0, [r6, #0x6]
	add	r0, r4, #0
	bl	GetLinkPlayerElevation
	strb	r0, [r6, #0x8]
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	strh	r0, [r6, #0xc]
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1206:
	.align	2, 0
.L1205:
	.word	gLinkPlayerObjectEvents
.Lfe198:
	.size	 LoadCableClubPlayer,.Lfe198-LoadCableClubPlayer
	.align	2, 0
	.type	 IsCableClubPlayerUnfrozen,function
	.thumb_func
IsCableClubPlayerUnfrozen:
	push	{lr}
	ldrb	r0, [r0, #0x2]
	cmp	r0, #0x2
	beq	.L1209	@cond_branch
	cmp	r0, #0
	bne	.L1208	@cond_branch
.L1209:
	mov	r0, #0x1
	b	.L1211
.L1208:
	mov	r0, #0x0
.L1211:
	pop	{r1}
	bx	r1
.Lfe199:
	.size	 IsCableClubPlayerUnfrozen,.Lfe199-IsCableClubPlayerUnfrozen
	.align	2, 0
	.type	 CanCableClubPlayerPressStart,function
	.thumb_func
CanCableClubPlayerPressStart:
	push	{lr}
	ldrb	r0, [r0, #0x2]
	cmp	r0, #0x2
	beq	.L1214	@cond_branch
	cmp	r0, #0
	bne	.L1213	@cond_branch
.L1214:
	mov	r0, #0x1
	b	.L1216
.L1213:
	mov	r0, #0x0
.L1216:
	pop	{r1}
	bx	r1
.Lfe200:
	.size	 CanCableClubPlayerPressStart,.Lfe200-CanCableClubPlayerPressStart
	.align	2, 0
	.type	 TryGetTileEventScript,function
	.thumb_func
TryGetTileEventScript:
	push	{lr}
	add	r1, r0, #0
	ldrb	r0, [r1, #0x2]
	cmp	r0, #0x2
	bne	.L1218	@cond_branch
	add	r0, r1, #0x4
	bl	GetCoordEventScriptAtMapPosition
	b	.L1219
.L1218:
	mov	r0, #0x0
.L1219:
	pop	{r1}
	bx	r1
.Lfe201:
	.size	 TryGetTileEventScript,.Lfe201-TryGetTileEventScript
	.align	2, 0
	.type	 PlayerIsAtSouthExit,function
	.thumb_func
PlayerIsAtSouthExit:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x2
	beq	.L1221	@cond_branch
	cmp	r0, #0
	bne	.L1225	@cond_branch
.L1221:
	ldrb	r0, [r4, #0xc]
	bl	MetatileBehavior_IsSouthArrowWarp
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1225	@cond_branch
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x1
	bne	.L1225	@cond_branch
	mov	r0, #0x1
	b	.L1227
.L1225:
	mov	r0, #0x0
.L1227:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe202:
	.size	 PlayerIsAtSouthExit,.Lfe202-PlayerIsAtSouthExit
	.align	2, 0
	.type	 TryInteractWithPlayer,function
	.thumb_func
TryInteractWithPlayer:
	push	{r4, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0
	beq	.L1229	@cond_branch
	cmp	r0, #0x2
	beq	.L1229	@cond_branch
	mov	r0, #0x0
	b	.L1237
.L1229:
	ldr	r0, [r4, #0x4]		@ created by thumb_load_double_from_address
	ldr	r1, [r4, #0x8]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	ldr	r3, .L1239
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	ldr	r0, [r0]
	mov	r1, sp
	ldrh	r1, [r1]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L1239+0x4
	ldr	r2, [sp]
	and	r2, r2, r1
	orr	r2, r2, r0
	str	r2, [sp]
	asr	r1, r2, #0x10
	ldrb	r0, [r4, #0x3]
	lsl	r0, r0, #0x3
	add	r3, r3, #0x4
	add	r0, r0, r3
	ldr	r0, [r0]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	ldr	r1, .L1239+0x8
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp]
	ldr	r2, .L1239+0xc
	ldr	r0, [sp, #0x4]
	and	r0, r0, r2
	str	r0, [sp, #0x4]
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	asr	r1, r1, #0x10
	bl	GetLinkPlayerIdAt
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r2, r1, #0
	cmp	r1, #0x4
	beq	.L1230	@cond_branch
	ldrb	r0, [r4, #0x1]
	cmp	r0, #0
	beq	.L1238	@cond_branch
	ldr	r0, .L1239+0x10
	add	r0, r1, r0
	ldrb	r0, [r0]
	cmp	r0, #0x80
	beq	.L1233	@cond_branch
.L1238:
	ldr	r0, .L1239+0x14
	b	.L1237
.L1240:
	.align	2, 0
.L1239:
	.word	gDirectionToVectors
	.word	-0x10000
	.word	0xffff
	.word	-0x100
	.word	sPlayerLinkStates
	.word	CableClub_EventScript_TooBusyToNotice
.L1233:
	add	r0, r2, #0
	bl	GetSeeingLinkPlayerCardMsg
	cmp	r0, #0
	bne	.L1235	@cond_branch
	ldr	r0, .L1241
	b	.L1237
.L1242:
	.align	2, 0
.L1241:
	.word	CableClub_EventScript_ReadTrainerCard
.L1235:
	ldr	r0, .L1243
	b	.L1237
.L1244:
	.align	2, 0
.L1243:
	.word	CableClub_EventScript_ReadTrainerCardColored
.L1230:
	ldrb	r1, [r4, #0xc]
	ldrb	r2, [r4, #0x3]
	mov	r0, sp
	bl	GetInteractedLinkPlayerScript
.L1237:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe203:
	.size	 TryInteractWithPlayer,.Lfe203-TryInteractWithPlayer
	.align	2, 0
	.type	 GetDirectionForEventScript,function
	.thumb_func
GetDirectionForEventScript:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L1272
	cmp	r1, r0
	beq	.L1271	@cond_branch
	ldr	r0, .L1272+0x4
	cmp	r1, r0
	beq	.L1268	@cond_branch
	ldr	r0, .L1272+0x8
	cmp	r1, r0
	beq	.L1271	@cond_branch
	ldr	r0, .L1272+0xc
	cmp	r1, r0
	beq	.L1268	@cond_branch
	ldr	r0, .L1272+0x10
	cmp	r1, r0
	beq	.L1271	@cond_branch
	ldr	r0, .L1272+0x14
	cmp	r1, r0
	beq	.L1268	@cond_branch
	ldr	r0, .L1272+0x18
	cmp	r1, r0
	beq	.L1271	@cond_branch
	ldr	r0, .L1272+0x1c
	cmp	r1, r0
	beq	.L1268	@cond_branch
	ldr	r0, .L1272+0x20
	cmp	r1, r0
	beq	.L1271	@cond_branch
	ldr	r0, .L1272+0x24
	cmp	r1, r0
	beq	.L1268	@cond_branch
	ldr	r0, .L1272+0x28
	cmp	r1, r0
	bne	.L1266	@cond_branch
.L1271:
	mov	r0, #0xa
	b	.L1270
.L1273:
	.align	2, 0
.L1272:
	.word	BattleColosseum_4P_EventScript_PlayerSpot0
	.word	BattleColosseum_4P_EventScript_PlayerSpot1
	.word	BattleColosseum_4P_EventScript_PlayerSpot2
	.word	BattleColosseum_4P_EventScript_PlayerSpot3
	.word	RecordCorner_EventScript_Spot0
	.word	RecordCorner_EventScript_Spot1
	.word	RecordCorner_EventScript_Spot2
	.word	RecordCorner_EventScript_Spot3
	.word	BattleColosseum_2P_EventScript_PlayerSpot0
	.word	BattleColosseum_2P_EventScript_PlayerSpot1
	.word	TradeCenter_EventScript_Chair0
.L1266:
	ldr	r0, .L1274
	cmp	r1, r0
	beq	.L1268	@cond_branch
	mov	r0, #0x0
	b	.L1270
.L1275:
	.align	2, 0
.L1274:
	.word	TradeCenter_EventScript_Chair1
.L1268:
	mov	r0, #0x9
.L1270:
	pop	{r1}
	bx	r1
.Lfe204:
	.size	 GetDirectionForEventScript,.Lfe204-GetDirectionForEventScript
	.align	2, 0
	.type	 InitLinkPlayerQueueScript,function
	.thumb_func
InitLinkPlayerQueueScript:
	push	{lr}
	bl	LockPlayerFieldControls
	pop	{r0}
	bx	r0
.Lfe205:
	.size	 InitLinkPlayerQueueScript,.Lfe205-InitLinkPlayerQueueScript
	.align	2, 0
	.type	 InitLinkRoomStartMenuScript,function
	.thumb_func
InitLinkRoomStartMenuScript:
	push	{lr}
	mov	r0, #0x6
	bl	PlaySE
	bl	ShowStartMenu
	bl	LockPlayerFieldControls
	pop	{r0}
	bx	r0
.Lfe206:
	.size	 InitLinkRoomStartMenuScript,.Lfe206-InitLinkRoomStartMenuScript
	.align	2, 0
	.type	 RunInteractLocalPlayerScript,function
	.thumb_func
RunInteractLocalPlayerScript:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	ScriptContext_SetupScript
	bl	LockPlayerFieldControls
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe207:
	.size	 RunInteractLocalPlayerScript,.Lfe207-RunInteractLocalPlayerScript
	.align	2, 0
	.type	 CreateConfirmLeaveTradeRoomPrompt,function
	.thumb_func
CreateConfirmLeaveTradeRoomPrompt:
	push	{lr}
	mov	r0, #0x6
	bl	PlaySE
	ldr	r0, .L1280
	bl	ScriptContext_SetupScript
	bl	LockPlayerFieldControls
	pop	{r0}
	bx	r0
.L1281:
	.align	2, 0
.L1280:
	.word	TradeCenter_ConfirmLeaveRoom
.Lfe208:
	.size	 CreateConfirmLeaveTradeRoomPrompt,.Lfe208-CreateConfirmLeaveTradeRoomPrompt
	.align	2, 0
	.type	 InitMenuBasedScript,function
	.thumb_func
InitMenuBasedScript:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	ScriptContext_SetupScript
	bl	LockPlayerFieldControls
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe209:
	.size	 InitMenuBasedScript,.Lfe209-InitMenuBasedScript
	.align	2, 0
	.type	 RunTerminateLinkScript,function
	.thumb_func
RunTerminateLinkScript:
	push	{lr}
	ldr	r0, .L1284
	bl	ScriptContext_SetupScript
	bl	LockPlayerFieldControls
	pop	{r0}
	bx	r0
.L1285:
	.align	2, 0
.L1284:
	.word	TradeCenter_TerminateLink
.Lfe210:
	.size	 RunTerminateLinkScript,.Lfe210-RunTerminateLinkScript
	.align	2, 0
	.globl	Overworld_LinkRecvQueueLengthMoreThan2
	.type	 Overworld_LinkRecvQueueLengthMoreThan2,function
	.thumb_func
Overworld_LinkRecvQueueLengthMoreThan2:
	push	{lr}
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0
	bne	.L1287	@cond_branch
	mov	r0, #0x0
	b	.L1290
.L1287:
	bl	GetLinkRecvQueueLength
	cmp	r0, #0x2
	bls	.L1288	@cond_branch
	ldr	r1, .L1292
	mov	r0, #0x1
	b	.L1291
.L1293:
	.align	2, 0
.L1292:
	.word	sReceivingFromLink
.L1288:
	ldr	r1, .L1294
	mov	r0, #0x0
.L1291:
	strb	r0, [r1]
	ldrb	r0, [r1]
.L1290:
	pop	{r1}
	bx	r1
.L1295:
	.align	2, 0
.L1294:
	.word	sReceivingFromLink
.Lfe211:
	.size	 Overworld_LinkRecvQueueLengthMoreThan2,.Lfe211-Overworld_LinkRecvQueueLengthMoreThan2
	.align	2, 0
	.globl	Overworld_RecvKeysFromLinkIsRunning
	.type	 Overworld_RecvKeysFromLinkIsRunning,function
	.thumb_func
Overworld_RecvKeysFromLinkIsRunning:
	push	{lr}
	bl	GetLinkRecvQueueLength
	cmp	r0, #0x1
	bls	.L1308	@cond_branch
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0x1
	bne	.L1308	@cond_branch
	bl	IsSendingKeysToLink
	cmp	r0, #0x1
	bne	.L1308	@cond_branch
	ldr	r0, .L1312
	ldr	r1, [r0]
	ldr	r0, .L1312+0x4
	cmp	r1, r0
	beq	.L1311	@cond_branch
	ldr	r0, .L1312+0x8
	cmp	r1, r0
	bne	.L1308	@cond_branch
	ldr	r0, .L1312+0xc
	ldrb	r2, [r0]
	mov	r1, #0x0
	strb	r1, [r0]
	cmp	r2, #0x1
	beq	.L1311	@cond_branch
	ldr	r2, .L1312+0x10
	ldrb	r1, [r2, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1308	@cond_branch
	ldrb	r1, [r2, #0xa]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1308	@cond_branch
.L1311:
	mov	r0, #0x1
	b	.L1310
.L1313:
	.align	2, 0
.L1312:
	.word	sPlayerKeyInterceptCallback
	.word	KeyInterCB_DeferToRecvQueue
	.word	KeyInterCB_DeferToEventScript
	.word	sReceivingFromLink
	.word	gPaletteFade
.L1308:
	mov	r0, #0x0
.L1310:
	pop	{r1}
	bx	r1
.Lfe212:
	.size	 Overworld_RecvKeysFromLinkIsRunning,.Lfe212-Overworld_RecvKeysFromLinkIsRunning
	.align	2, 0
	.globl	Overworld_SendKeysToLinkIsRunning
	.type	 Overworld_SendKeysToLinkIsRunning,function
	.thumb_func
Overworld_SendKeysToLinkIsRunning:
	push	{lr}
	bl	GetLinkSendQueueLength
	cmp	r0, #0x1
	bls	.L1324	@cond_branch
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0x1
	bne	.L1324	@cond_branch
	bl	IsSendingKeysToLink
	cmp	r0, #0x1
	bne	.L1324	@cond_branch
	ldr	r0, .L1325
	ldr	r1, [r0]
	ldr	r0, .L1325+0x4
	cmp	r1, r0
	beq	.L1321	@cond_branch
.L1324:
	mov	r0, #0x0
	b	.L1323
.L1326:
	.align	2, 0
.L1325:
	.word	sPlayerKeyInterceptCallback
	.word	KeyInterCB_DeferToSendQueue
.L1321:
	mov	r0, #0x1
.L1323:
	pop	{r1}
	bx	r1
.Lfe213:
	.size	 Overworld_SendKeysToLinkIsRunning,.Lfe213-Overworld_SendKeysToLinkIsRunning
	.align	2, 0
	.globl	IsSendingKeysOverCable
	.type	 IsSendingKeysOverCable,function
	.thumb_func
IsSendingKeysOverCable:
	push	{lr}
	ldr	r0, .L1333
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1330	@cond_branch
	bl	IsSendingKeysToLink
	cmp	r0, #0
	beq	.L1330	@cond_branch
	mov	r0, #0x1
	b	.L1332
.L1334:
	.align	2, 0
.L1333:
	.word	gWirelessCommType
.L1330:
	mov	r0, #0x0
.L1332:
	pop	{r1}
	bx	r1
.Lfe214:
	.size	 IsSendingKeysOverCable,.Lfe214-IsSendingKeysOverCable
	.align	2, 0
	.type	 GetLinkSendQueueLength,function
	.thumb_func
GetLinkSendQueueLength:
	push	{lr}
	ldr	r0, .L1340
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1336	@cond_branch
	ldr	r0, .L1340+0x4
	ldr	r1, .L1340+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	b	.L1339
.L1341:
	.align	2, 0
.L1340:
	.word	gWirelessCommType
	.word	gLink
	.word	0x339
.L1336:
	ldr	r0, .L1342
	ldr	r1, .L1342+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
.L1339:
	pop	{r1}
	bx	r1
.L1343:
	.align	2, 0
.L1342:
	.word	gRfu
	.word	0x8d2
.Lfe215:
	.size	 GetLinkSendQueueLength,.Lfe215-GetLinkSendQueueLength
	.align	2, 0
	.type	 ZeroLinkPlayerObjectEvent,function
	.thumb_func
ZeroLinkPlayerObjectEvent:
	mov	r1, #0x0
	str	r1, [r0]
	bx	lr
.Lfe216:
	.size	 ZeroLinkPlayerObjectEvent,.Lfe216-ZeroLinkPlayerObjectEvent
	.align	2, 0
	.globl	ClearLinkPlayerObjectEvents
	.type	 ClearLinkPlayerObjectEvents,function
	.thumb_func
ClearLinkPlayerObjectEvents:
	push	{lr}
	ldr	r0, .L1346
	mov	r1, #0x0
	mov	r2, #0x10
	bl	memset
	pop	{r0}
	bx	r0
.L1347:
	.align	2, 0
.L1346:
	.word	gLinkPlayerObjectEvents
.Lfe217:
	.size	 ClearLinkPlayerObjectEvents,.Lfe217-ClearLinkPlayerObjectEvents
	.align	2, 0
	.type	 ZeroObjectEvent,function
	.thumb_func
ZeroObjectEvent:
	push	{lr}
	mov	r1, #0x0
	mov	r2, #0x24
	bl	memset
	pop	{r0}
	bx	r0
.Lfe218:
	.size	 ZeroObjectEvent,.Lfe218-ZeroObjectEvent
	.align	2, 0
	.type	 SpawnLinkPlayerObjectEvent,function
	.thumb_func
SpawnLinkPlayerObjectEvent:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r9, r1
	mov	sl, r2
	mov	r8, r3
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r0, r9
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	mov	r1, sl
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	sl, r1
	mov	r2, r8
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	bl	GetFirstInactiveObjectEventId
	add	r6, r0, #0
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r4, r7, #0x2
	ldr	r0, .L1350
	add	r4, r4, r0
	lsl	r5, r6, #0x3
	add	r5, r5, r6
	lsl	r5, r5, #0x2
	ldr	r0, .L1350+0x4
	add	r5, r5, r0
	add	r0, r4, #0
	bl	ZeroLinkPlayerObjectEvent
	add	r0, r5, #0
	bl	ZeroObjectEvent
	mov	r2, #0x0
	mov	r1, #0x1
	mov	r0, #0x1
	strb	r0, [r4]
	strb	r7, [r4, #0x1]
	strb	r6, [r4, #0x2]
	strb	r2, [r4, #0x3]
	ldrb	r0, [r5]
	orr	r0, r0, r1
	mov	r2, r8
	and	r2, r2, r1
	lsl	r2, r2, #0x1
	mov	r1, #0x3
	neg	r1, r1
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r5]
	mov	r0, #0x2
	strb	r0, [r5, #0x19]
	mov	r0, #0x40
	strb	r0, [r5, #0x4]
	mov	r0, r9
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r9, r0
	mov	r1, sl
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	sl, r1
	add	r0, r5, #0
	mov	r1, r9
	mov	r2, sl
	bl	InitLinkPlayerObjectEventPos
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1351:
	.align	2, 0
.L1350:
	.word	gLinkPlayerObjectEvents
	.word	gObjectEvents
.Lfe219:
	.size	 SpawnLinkPlayerObjectEvent,.Lfe219-SpawnLinkPlayerObjectEvent
	.align	2, 0
	.type	 InitLinkPlayerObjectEventPos,function
	.thumb_func
InitLinkPlayerObjectEventPos:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r1, #0
	add	r1, r2, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	strh	r0, [r4, #0x10]
	strh	r1, [r4, #0x12]
	strh	r0, [r4, #0x14]
	strh	r1, [r4, #0x16]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	add	r2, r4, #0
	add	r2, r2, #0xc
	add	r3, r4, #0
	add	r3, r3, #0xe
	bl	SetSpritePosToMapCoords
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x8
	strh	r0, [r4, #0xc]
	add	r0, r4, #0
	bl	ObjectEventUpdateElevation
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe220:
	.size	 InitLinkPlayerObjectEventPos,.Lfe220-InitLinkPlayerObjectEventPos
	.align	2, 0
	.type	 SetLinkPlayerObjectRange,function
	.thumb_func
SetLinkPlayerObjectRange:
	push	{lr}
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	ldr	r1, .L1355
	lsr	r0, r0, #0x16
	add	r1, r0, r1
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L1354	@cond_branch
	ldrb	r0, [r1, #0x2]
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1355+0x4
	add	r1, r1, r0
	strb	r2, [r1, #0x19]
.L1354:
	pop	{r0}
	bx	r0
.L1356:
	.align	2, 0
.L1355:
	.word	gLinkPlayerObjectEvents
	.word	gObjectEvents
.Lfe221:
	.size	 SetLinkPlayerObjectRange,.Lfe221-SetLinkPlayerObjectRange
	.align	2, 0
	.type	 DestroyLinkPlayerObject,function
	.thumb_func
DestroyLinkPlayerObject:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	ldr	r1, .L1359
	add	r5, r0, r1
	ldrb	r1, [r5, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1359+0x4
	add	r4, r0, r1
	ldrb	r0, [r4, #0x4]
	cmp	r0, #0x40
	beq	.L1358	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1359+0x8
	add	r0, r0, r1
	bl	DestroySprite
.L1358:
	mov	r0, #0x0
	strb	r0, [r5]
	ldrb	r1, [r4]
	sub	r0, r0, #0x2
	and	r0, r0, r1
	strb	r0, [r4]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1360:
	.align	2, 0
.L1359:
	.word	gLinkPlayerObjectEvents
	.word	gObjectEvents
	.word	gSprites
.Lfe222:
	.size	 DestroyLinkPlayerObject,.Lfe222-DestroyLinkPlayerObject
	.align	2, 0
	.type	 GetSpriteForLinkedPlayer,function
	.thumb_func
GetSpriteForLinkedPlayer:
	lsl	r0, r0, #0x18
	ldr	r1, .L1362
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1362+0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x4]
	bx	lr
.L1363:
	.align	2, 0
.L1362:
	.word	gLinkPlayerObjectEvents
	.word	gObjectEvents
.Lfe223:
	.size	 GetSpriteForLinkedPlayer,.Lfe223-GetSpriteForLinkedPlayer
	.align	2, 0
	.type	 GetLinkPlayerCoords,function
	.thumb_func
GetLinkPlayerCoords:
	lsl	r0, r0, #0x18
	ldr	r3, .L1365
	lsr	r0, r0, #0x16
	add	r0, r0, r3
	ldrb	r3, [r0, #0x2]
	lsl	r0, r3, #0x3
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	ldr	r3, .L1365+0x4
	add	r0, r0, r3
	ldrh	r3, [r0, #0x10]
	strh	r3, [r1]
	ldrh	r0, [r0, #0x12]
	strh	r0, [r2]
	bx	lr
.L1366:
	.align	2, 0
.L1365:
	.word	gLinkPlayerObjectEvents
	.word	gObjectEvents
.Lfe224:
	.size	 GetLinkPlayerCoords,.Lfe224-GetLinkPlayerCoords
	.align	2, 0
	.type	 GetLinkPlayerFacingDirection,function
	.thumb_func
GetLinkPlayerFacingDirection:
	lsl	r0, r0, #0x18
	ldr	r1, .L1368
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1368+0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x19]
	bx	lr
.L1369:
	.align	2, 0
.L1368:
	.word	gLinkPlayerObjectEvents
	.word	gObjectEvents
.Lfe225:
	.size	 GetLinkPlayerFacingDirection,.Lfe225-GetLinkPlayerFacingDirection
	.align	2, 0
	.type	 GetLinkPlayerElevation,function
	.thumb_func
GetLinkPlayerElevation:
	lsl	r0, r0, #0x18
	ldr	r1, .L1371
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1371+0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0xb]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bx	lr
.L1372:
	.align	2, 0
.L1371:
	.word	gLinkPlayerObjectEvents
	.word	gObjectEvents
.Lfe226:
	.size	 GetLinkPlayerElevation,.Lfe226-GetLinkPlayerElevation
	.align	2, 0
	.type	 GetLinkPlayerObjectStepTimer,function
	.thumb_func
GetLinkPlayerObjectStepTimer:
	lsl	r0, r0, #0x18
	ldr	r1, .L1374
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldrb	r1, [r0, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1374+0x4
	add	r0, r0, r1
	add	r0, r0, #0x21
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	mov	r0, #0x10
	sub	r0, r0, r1
	bx	lr
.L1375:
	.align	2, 0
.L1374:
	.word	gLinkPlayerObjectEvents
	.word	gObjectEvents
.Lfe227:
	.size	 GetLinkPlayerObjectStepTimer,.Lfe227-GetLinkPlayerObjectStepTimer
	.align	2, 0
	.type	 GetLinkPlayerIdAt,function
	.thumb_func
GetLinkPlayerIdAt:
	push	{r4, r5, r6, lr}
	mov	r2, #0x0
	ldr	r5, .L1386
	lsl	r0, r0, #0x10
	asr	r4, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r3, r1, #0x10
.L1380:
	lsl	r0, r2, #0x2
	add	r1, r0, r5
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L1379	@cond_branch
	ldrb	r0, [r1, #0x3]
	cmp	r0, #0
	beq	.L1382	@cond_branch
	cmp	r0, #0x2
	bne	.L1379	@cond_branch
.L1382:
	ldrb	r1, [r1, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1386+0x4
	add	r1, r0, r1
	mov	r6, #0x10
	ldrsh	r0, [r1, r6]
	cmp	r0, r4
	bne	.L1379	@cond_branch
	mov	r6, #0x12
	ldrsh	r0, [r1, r6]
	cmp	r0, r3
	bne	.L1379	@cond_branch
	add	r0, r2, #0
	b	.L1385
.L1387:
	.align	2, 0
.L1386:
	.word	gLinkPlayerObjectEvents
	.word	gObjectEvents
.L1379:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3
	bls	.L1380	@cond_branch
	mov	r0, #0x4
.L1385:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe228:
	.size	 GetLinkPlayerIdAt,.Lfe228-GetLinkPlayerIdAt
	.align	2, 0
	.type	 SetPlayerFacingDirection,function
	.thumb_func
SetPlayerFacingDirection:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r3, r1, #0x18
	add	r2, r3, #0
	lsr	r0, r0, #0x16
	ldr	r1, .L1392
	add	r5, r0, r1
	ldrb	r1, [r5, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1392+0x4
	add	r6, r0, r1
	ldrb	r0, [r5]
	cmp	r0, #0
	beq	.L1389	@cond_branch
	cmp	r3, #0xa
	bls	.L1390	@cond_branch
	ldrb	r0, [r6]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r6]
	b	.L1389
.L1393:
	.align	2, 0
.L1392:
	.word	gLinkPlayerObjectEvents
	.word	gObjectEvents
.L1390:
	ldr	r4, .L1394
	ldr	r1, .L1394+0x4
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r3, [r0]
	add	r0, r5, #0
	add	r1, r6, #0
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r2, [r0]
	add	r0, r5, #0
	add	r1, r6, #0
	bl	_call_via_r2
.L1389:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1395:
	.align	2, 0
.L1394:
	.word	sMovementStatusHandler
	.word	sLinkPlayerMovementModes
.Lfe229:
	.size	 SetPlayerFacingDirection,.Lfe229-SetPlayerFacingDirection
	.align	2, 0
	.type	 MovementEventModeCB_Normal,function
	.thumb_func
MovementEventModeCB_Normal:
	push	{r4, lr}
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r4, .L1397
	lsl	r3, r2, #0x2
	add	r3, r3, r4
	ldr	r3, [r3]
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L1398:
	.align	2, 0
.L1397:
	.word	sLinkPlayerFacingHandlers
.Lfe230:
	.size	 MovementEventModeCB_Normal,.Lfe230-MovementEventModeCB_Normal
	.align	2, 0
	.type	 MovementEventModeCB_Ignored,function
	.thumb_func
MovementEventModeCB_Ignored:
	mov	r0, #0x1
	bx	lr
.Lfe231:
	.size	 MovementEventModeCB_Ignored,.Lfe231-MovementEventModeCB_Ignored
	.align	2, 0
	.type	 MovementEventModeCB_Normal_2,function
	.thumb_func
MovementEventModeCB_Normal_2:
	push	{r4, lr}
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r4, .L1401
	lsl	r3, r2, #0x2
	add	r3, r3, r4
	ldr	r3, [r3]
	bl	_call_via_r3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L1402:
	.align	2, 0
.L1401:
	.word	sLinkPlayerFacingHandlers
.Lfe232:
	.size	 MovementEventModeCB_Normal_2,.Lfe232-MovementEventModeCB_Normal_2
	.align	2, 0
	.type	 FacingHandler_DoNothing,function
	.thumb_func
FacingHandler_DoNothing:
	mov	r0, #0x0
	bx	lr
.Lfe233:
	.size	 FacingHandler_DoNothing,.Lfe233-FacingHandler_DoNothing
	.align	2, 0
	.type	 FacingHandler_DpadMovement,function
	.thumb_func
FacingHandler_DpadMovement:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r5, #0x19]
	bl	FlipVerticalAndClearForced
	strb	r0, [r5, #0x19]
	ldrb	r1, [r5, #0x19]
	mov	r6, sp
	add	r6, r6, #0x2
	add	r0, r5, #0
	mov	r2, sp
	add	r3, r6, #0
	bl	ObjectEventMoveDestCoords
	ldrb	r0, [r4, #0x2]
	ldrb	r1, [r5, #0x19]
	mov	r2, sp
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	mov	r4, #0x0
	ldrsh	r3, [r6, r4]
	bl	LinkPlayerDetectCollision
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1405	@cond_branch
	add	r1, r5, #0
	add	r1, r1, #0x21
	mov	r0, #0x10
	strb	r0, [r1]
	mov	r0, sp
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	mov	r3, #0x0
	ldrsh	r2, [r6, r3]
	add	r0, r5, #0
	bl	ShiftObjectEventCoords
	add	r0, r5, #0
	bl	ObjectEventUpdateElevation
	mov	r0, #0x1
	b	.L1407
.L1405:
	mov	r0, #0x0
.L1407:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe234:
	.size	 FacingHandler_DpadMovement,.Lfe234-FacingHandler_DpadMovement
	.align	2, 0
	.type	 FacingHandler_ForcedFacingChange,function
	.thumb_func
FacingHandler_ForcedFacingChange:
	push	{r4, lr}
	add	r4, r1, #0
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
	ldrb	r1, [r4, #0x19]
	bl	FlipVerticalAndClearForced
	strb	r0, [r4, #0x19]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe235:
	.size	 FacingHandler_ForcedFacingChange,.Lfe235-FacingHandler_ForcedFacingChange
	.align	2, 0
	.type	 MovementStatusHandler_EnterFreeMode,function
	.thumb_func
MovementStatusHandler_EnterFreeMode:
	mov	r1, #0x0
	strb	r1, [r0, #0x3]
	bx	lr
.Lfe236:
	.size	 MovementStatusHandler_EnterFreeMode,.Lfe236-MovementStatusHandler_EnterFreeMode
	.align	2, 0
	.type	 MovementStatusHandler_TryAdvanceScript,function
	.thumb_func
MovementStatusHandler_TryAdvanceScript:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	add	r5, r4, #0
	add	r5, r5, #0x21
	ldrb	r0, [r5]
	sub	r0, r0, #0x1
	strb	r0, [r5]
	mov	r0, #0x1
	strb	r0, [r6, #0x3]
	ldrb	r0, [r4, #0x19]
	add	r1, r1, #0xc
	add	r2, r4, #0
	add	r2, r2, #0xe
	bl	MoveCoords
	ldrb	r0, [r5]
	cmp	r0, #0
	bne	.L1411	@cond_branch
	add	r0, r4, #0
	bl	ShiftStillObjectEventCoords
	mov	r0, #0x2
	strb	r0, [r6, #0x3]
.L1411:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe237:
	.size	 MovementStatusHandler_TryAdvanceScript,.Lfe237-MovementStatusHandler_TryAdvanceScript
	.align	2, 0
	.type	 FlipVerticalAndClearForced,function
	.thumb_func
FlipVerticalAndClearForced:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x9
	bhi	.L1413	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L1425
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1426:
	.align	2, 0
.L1425:
	.word	.L1422
	.align	2, 0
	.align	2, 0
.L1422:
	.word	.L1415
	.word	.L1417
	.word	.L1419
	.word	.L1421
	.word	.L1413
	.word	.L1413
	.word	.L1415
	.word	.L1417
	.word	.L1419
	.word	.L1421
.L1415:
	mov	r0, #0x2
	b	.L1424
.L1417:
	mov	r0, #0x1
	b	.L1424
.L1419:
	mov	r0, #0x3
	b	.L1424
.L1421:
	mov	r0, #0x4
	b	.L1424
.L1413:
	add	r0, r2, #0
.L1424:
	pop	{r1}
	bx	r1
.Lfe238:
	.size	 FlipVerticalAndClearForced,.Lfe238-FlipVerticalAndClearForced
	.align	2, 0
	.type	 LinkPlayerDetectCollision,function
	.thumb_func
LinkPlayerDetectCollision:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	ip, r2
	lsl	r3, r3, #0x10
	mov	r4, #0x0
	ldr	r0, .L1438
	mov	r9, r0
	lsr	r2, r3, #0x10
	mov	sl, r2
	asr	r6, r3, #0x10
.L1431:
	mov	r7, ip
	lsl	r3, r7, #0x10
	mov	r0, sl
	lsl	r5, r0, #0x10
	cmp	r4, r8
	beq	.L1430	@cond_branch
	lsl	r0, r4, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	mov	r2, r9
	add	r1, r0, r2
	mov	r7, #0x10
	ldrsh	r0, [r1, r7]
	asr	r2, r3, #0x10
	cmp	r0, r2
	bne	.L1435	@cond_branch
	mov	r7, #0x12
	ldrsh	r0, [r1, r7]
	cmp	r0, r6
	beq	.L1434	@cond_branch
.L1435:
	mov	r7, #0x14
	ldrsh	r0, [r1, r7]
	cmp	r0, r2
	bne	.L1430	@cond_branch
	mov	r0, #0x16
	ldrsh	r1, [r1, r0]
	asr	r0, r5, #0x10
	cmp	r1, r0
	bne	.L1430	@cond_branch
.L1434:
	mov	r0, #0x1
	b	.L1437
.L1439:
	.align	2, 0
.L1438:
	.word	gObjectEvents
.L1430:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xf
	bls	.L1431	@cond_branch
	asr	r0, r3, #0x10
	asr	r1, r5, #0x10
	bl	MapGridGetCollisionAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L1437:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe239:
	.size	 LinkPlayerDetectCollision,.Lfe239-LinkPlayerDetectCollision
	.align	2, 0
	.type	 CreateLinkPlayerSprite,function
	.thumb_func
CreateLinkPlayerSprite:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r3, r1, #0x18
	lsl	r2, r5, #0x2
	ldr	r0, .L1445
	add	r2, r2, r0
	ldrb	r1, [r2, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1445+0x4
	add	r4, r0, r1
	ldrb	r0, [r2]
	cmp	r0, #0
	beq	.L1441	@cond_branch
	sub	r0, r3, #0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L1442	@cond_branch
	ldrb	r1, [r4]
	lsl	r1, r1, #0x1e
	lsr	r1, r1, #0x1f
	mov	r0, #0x0
	bl	GetRivalAvatarGraphicsIdByStateIdAndGender
	b	.L1444
.L1446:
	.align	2, 0
.L1445:
	.word	gLinkPlayerObjectEvents
	.word	gObjectEvents
.L1442:
	ldrb	r0, [r4]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1f
	bl	GetRSAvatarGraphicsIdByGender
.L1444:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L1447
	mov	r2, #0x0
	str	r2, [sp]
	mov	r3, #0x0
	bl	CreateObjectGraphicsSprite
	strb	r0, [r4, #0x4]
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1447+0x4
	add	r0, r0, r1
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	strh	r5, [r0, #0x2e]
	ldrb	r1, [r4]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r4]
.L1441:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1448:
	.align	2, 0
.L1447:
	.word	SpriteCB_LinkPlayer
	.word	gSprites
.Lfe240:
	.size	 CreateLinkPlayerSprite,.Lfe240-CreateLinkPlayerSprite
	.align	2, 0
	.type	 SpriteCB_LinkPlayer,function
	.thumb_func
SpriteCB_LinkPlayer:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r0, #0x2e
	ldrsh	r4, [r5, r0]
	lsl	r4, r4, #0x2
	ldr	r0, .L1453
	add	r4, r4, r0
	ldrb	r1, [r4, #0x2]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1453+0x4
	add	r6, r0, r1
	ldrh	r0, [r6, #0xc]
	strh	r0, [r5, #0x20]
	ldrh	r0, [r6, #0xe]
	strh	r0, [r5, #0x22]
	ldrb	r0, [r6, #0xb]
	lsr	r0, r0, #0x4
	add	r1, r5, #0
	mov	r2, #0x1
	bl	SetObjectSubpriorityByElevation
	ldrb	r0, [r6, #0xb]
	lsr	r0, r0, #0x4
	bl	ElevationToPriority
	mov	r1, #0x3
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r5, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r5, #0x5]
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0
	bne	.L1450	@cond_branch
	ldrb	r0, [r6, #0x19]
	bl	GetFaceDirectionAnimNum
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	StartSpriteAnim
	b	.L1451
.L1454:
	.align	2, 0
.L1453:
	.word	gLinkPlayerObjectEvents
	.word	gObjectEvents
.L1450:
	ldrb	r0, [r6, #0x19]
	bl	GetMoveDirectionAnimNum
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	StartSpriteAnimIfDifferent
.L1451:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteInvisibility
	ldrb	r0, [r6]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	bge	.L1452	@cond_branch
	ldrh	r0, [r5, #0x3c]
	mov	r1, #0x4
	and	r1, r1, r0
	lsl	r1, r1, #0x10
	add	r3, r5, #0
	add	r3, r3, #0x3e
	lsr	r1, r1, #0x12
	lsl	r1, r1, #0x2
	ldrb	r2, [r3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrh	r0, [r5, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x3c]
.L1452:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe241:
	.size	 SpriteCB_LinkPlayer,.Lfe241-SpriteCB_LinkPlayer
	.comm	gFieldCallback2, 4	@ 4
	.comm	gFieldCallback, 4	@ 4
	.comm	gFieldLinkPlayerCount, 4	@ 1
	.comm	gLocalLinkPlayerId, 4	@ 1
	.comm	gBGTilemapBuffers1, 4	@ 4
	.comm	gBGTilemapBuffers2, 4	@ 4
	.comm	gBGTilemapBuffers3, 4	@ 4
	.comm	gHeldKeyCodeToSend, 4	@ 2

	.lcomm	sPlayerLinkStates,4

	.lcomm	sPlayerKeyInterceptCallback,4

	.lcomm	sReceivingFromLink,1

	.lcomm	sRfuKeepAliveTimer,1
.text
	.align	2, 0 @ Don't pad with nop

