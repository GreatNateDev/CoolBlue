@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sPokemonJump,object
	.size	 sPokemonJump,4
sPokemonJump:
	.word	0x0
	.align	2, 0
	.type	 sPokemonJumpGfx,object
	.size	 sPokemonJumpGfx,4
sPokemonJumpGfx:
	.word	0x0
	.section .rodata
	.align	1, 0
	.type	 s321Start_Static_Pal,object
s321Start_Static_Pal:
	.short	0x7353
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x1084
	.short	0x18d0
	.short	0x151c
	.short	0x2113
	.short	0x257f
	.short	0x1dd5
	.short	0x26ff
	.short	0x7fff
	.size	 s321Start_Static_Pal,32
	.align	2, 0
	.type	 s321Start_Static_Gfx,object
s321Start_Static_Gfx:
	.word	0xc0010
	.word	0x6000002a
	.word	0x300f001
	.word	-0x70f9ff01
	.word	-0x37fcff60
	.word	0x8f0340
	.word	0xffffff
	.word	-0x77772001
	.word	-0x11112721
	.word	0x200200c0
	.word	-0x743333ff
	.word	0x48ccc88
	.word	-0x7330008
	.word	0xf1e00ff
	.word	-0x27780000
	.word	-0x2111f001
	.word	0xa0ff88
	.word	0x300f81a
	.word	-0x33337772
	.word	-0x3700ff74
	.word	-0x700f3334
	.word	-0x7f663334
	.word	0x400f005f
	.word	0x640003
	.word	-0xbfcbf08
	.word	0x7b100e40
	.word	0x170001f0
	.word	-0x80ef78
	.word	0x883188
	.word	0x3204b10
	.word	0x1000aaaa
	.word	0xf0680f
	.word	-0xb3ffea
	.word	-0x3777ed00
	.word	-0x3373cf34
	.word	0x3107300
	.word	-0x55555556
	.word	-0x55777800
	.word	-0x57000056
	.word	-0xffff056
	.word	0x6310aaa8
	.word	0x77a06010
	.word	-0x7591f400
	.word	-0xc7ffcc0
	.word	0x340a8
	.word	-0x776c8ff5
	.word	-0x559bff7f
	.word	-0x55000068
	.word	0x1d55109a
	.word	0x10a9aaaa
	.word	0x4005f
	.word	-0x7def777e
	.word	0x67000040
	.word	-0x55567001
	.word	0x10949888
	.word	0x9aaa1d
	.word	0x2008903
	.word	-0x77c87708
	.word	0x20b810f8
	.word	0x3008963
	.word	-0x746f8cf0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xe0bff
	.word	-0xe000f
	.word	0x11deffd1
	.word	0x47888dff
	.word	-0x4700fe35
	.word	-0xe4334
	.word	-0xe000f
	.word	-0x77704f46
	.word	-0x18eee300
	.word	0x1ff0140
	.word	-0xff87009
	.word	-0x577701
	.word	-0x6fee72ff
	.word	0x10ce1312
	.word	-0x4390fd99
	.word	0x177008f
	.word	-0x6580fe7a
	.word	0x1d00f857
	.word	0xf0200ff
	.word	0x7b916750
	.word	0x10ff7fc1
	.word	-0x5d006e11
	.word	0x11ef1107
	.word	0x215600f2
	.word	-0xfeaf01
	.word	-0x65dd01ff
	.word	-0x5ecde0ee
	.word	0x1fd01f32
	.word	0x7392e050
	.word	0x100310ff
	.word	-0xfe3dff1
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0fc01
	.word	0x1f001f0
	.word	0x3407b71
	.word	-0x700f3d00
	.word	-0xff7800
	.word	-0x700f1118
	.word	0xee56ee
	.word	0x6e01ee06
	.word	0xde03cc
	.word	-0x339273fd
	.word	-0x5cee64ef
	.word	0x506001ee
	.word	0x380cc03
	.word	-0xffe0f10
	.word	-0x7eed0f95
	.word	-0x33773364
	.word	-0x7077e201
	.word	0x2f601cc
	.word	-0x55fcdfb5
	.word	-0x6f00fc70
	.word	0x1303106b
	.word	-0xffc6f10
	.word	-0xbfe0fff
	.word	0x5f079403
	.word	-0x70b4fb71
	.word	-0x216e30ef
	.word	0x6730df61
	.word	-0xe00f900
	.word	-0xe000e01
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xafe0fff
	.word	0x1f001f0
	.word	0x61137e31
	.word	-0x1211ff73
	.word	0x6fe311
	.word	0x4f13e301
	.word	0x10dc01f0
	.word	0x13db4203
	.word	0x43de5dfa
	.word	0xf00eefe
	.word	-0x65ec05fd
	.word	-0x5501fe10
	.word	0xf0505
	.word	0x3800ff22
	.word	-0x71fcff08
	.word	0xee8f3f
	.word	0x63205035
	.word	0x303b501b
	.word	-0x150fcc1
	.word	0x6300cf45
	.word	0x3102734
	.word	-0x78ff3bfd
	.word	-0x120084ff
	.word	0x5e007b31
	.word	0x58b4515
	.word	-0x3320bab4
	.word	0x1a65b41
	.word	0x2700ff93
	.word	0x3268f00
	.word	-0x73a0bf
	.word	-0x70cef800
	.word	0x6401b305
	.word	0x37760310
	.word	0x3903f86
	.word	-0xf5aff49
	.word	0x2a06de01
	.word	0x50320aa
	.word	0x5a1300cb
	.word	-0x7784ff57
	.word	-0x20ffe4ef
	.word	-0x6794ff71
	.word	0x447300fb
	.word	0x61e7350a
	.word	-0x5598bf01
	.word	0x7710e405
	.word	0x7f009a7f
	.word	0x6724b354
	.word	0x77706fd0
	.word	-0x700e3cda
	.word	-0xffe0f02
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0xf9f2101
	.word	0x47ca10ff
	.word	0x100320bb
	.word	0x77110f
	.word	0x1e015ca
	.word	-0x14f900e1
	.word	-0x4dc08fd
	.word	0x72472000
	.word	0x1e12ad01
	.word	0x92ef00
	.word	0x108eeef7
	.word	0xff03
	.word	-0x33f2ffc2
	.word	0xff8cc
	.word	-0xfcefe5
	.word	0x12fb2317
	.word	0x50372000
	.word	0x3f0003
	.word	0x310f803
	.word	-0x70aa9d00
	.word	0x10f00330
	.word	0x300c803
	.word	-0x42fc6f58
	.word	0x30ff2200
	.word	0x31351203
	.word	-0x75fedf01
	.word	-0x7581fbfe
	.word	0x47409903
	.word	0x23221c00
	.word	0x1d201910
	.word	0x1d00f5a8
	.word	0x1f500300
	.word	0x1cc7340
	.word	0x340aa7a
	.word	0x300887f
	.word	0x6fb07f00
	.word	-0xbebfcb0
	.word	-0x209ea5ee
	.word	0x1003c0f6
	.word	0x2fb10f3
	.word	0x3f08a33
	.word	0x3f8f0300
	.word	0x3b11f888
	.word	0x3f06310
	.word	0x63013104
	.word	-0xe00c6ed
	.word	-0xffe0f6f
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x50005eff
	.word	0x788a363
	.word	-0x3ff80040
	.word	0x6f050201
	.word	0xaa2000
	.word	0x2ffcc
	.word	-0x71fffd08
	.word	0x3f8c0300
	.word	-0x20dc7001
	.word	-0x200c90eb
	.word	0x1c423f00
	.word	0x5f3f44
	.word	0x40fbe03
	.word	0x10036018
	.word	0x2017100f
	.word	0x6300fffc
	.word	-0x22febf00
	.word	-0x208eaeea
	.word	-0x28aa3ca7
	.word	-0x738024ed
	.word	0x47854759
	.word	0x360a754
	.word	-0x10a8783f
	.word	0x43fd03f0
	.word	0x24009f
	.word	0x3053a683
	.word	-0x7500ccfd
	.word	-0x4f00ac9c
	.word	-0xe1cacfd
	.word	-0xf004e05
	.word	-0xf7c078d
	.word	-0x7fe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1d0
	.size	 s321Start_Static_Gfx,1060
	.align	2, 0
	.type	 sSpriteSheet_321Start_Static,object
sSpriteSheet_321Start_Static:
	.word	s321Start_Static_Gfx
	.short	0xc00
	.short	0x2000
	.space	8
	.size	 sSpriteSheet_321Start_Static,16
	.align	2, 0
	.type	 sSpritePalette_321Start_Static,object
sSpritePalette_321Start_Static:
	.word	s321Start_Static_Pal
	.short	0x2000
	.space	2
	.space	8
	.size	 sSpritePalette_321Start_Static,16
	.align	2, 0
	.type	 sAnim_StaticCountdown_Three,object
sAnim_StaticCountdown_Three:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_StaticCountdown_Three,8
	.align	2, 0
	.type	 sAnim_StaticCountdown_Two,object
sAnim_StaticCountdown_Two:
	.short	0x10
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_StaticCountdown_Two,8
	.align	2, 0
	.type	 sAnim_StaticCountdown_One,object
sAnim_StaticCountdown_One:
	.short	0x20
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_StaticCountdown_One,8
	.align	2, 0
	.type	 sAnim_StaticCountdown_StartLeft,object
sAnim_StaticCountdown_StartLeft:
	.short	0x40
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_StaticCountdown_StartLeft,8
	.align	2, 0
	.type	 sAnim_StaticCountdown_StartMid,object
sAnim_StaticCountdown_StartMid:
	.short	0x30
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_StaticCountdown_StartMid,8
	.align	2, 0
	.type	 sAnim_StaticCountdown_StartRight,object
sAnim_StaticCountdown_StartRight:
	.short	0x50
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_StaticCountdown_StartRight,8
	.align	2, 0
	.type	 sAnims_StaticCountdown,object
sAnims_StaticCountdown:
	.word	sAnim_StaticCountdown_Three
	.word	sAnim_StaticCountdown_Two
	.word	sAnim_StaticCountdown_One
	.word	sAnim_StaticCountdown_StartLeft
	.word	sAnim_StaticCountdown_StartMid
	.word	sAnim_StaticCountdown_StartRight
	.size	 sAnims_StaticCountdown,24
	.align	2, 0
	.type	 sSpriteTemplate_StaticCountdown,object
sSpriteTemplate_StaticCountdown:
	.short	0x2000
	.short	0x2000
	.word	gOamData_AffineOff_ObjNormal_32x32
	.word	sAnims_StaticCountdown
	.space	4
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.size	 sSpriteTemplate_StaticCountdown,24
	.align	2, 0
	.type	 sStaticCountdownFuncs,object
sStaticCountdownFuncs:
	.word	Task_StaticCountdown_Init
	.word	Task_StaticCountdown_Free
	.word	Task_StaticCountdown_Start
	.word	Task_StaticCountdown_Run
	.size	 sStaticCountdownFuncs,16
.text
	.align	2, 0
	.type	 CreateStaticCountdownTask,function
	.thumb_func
CreateStaticCountdownTask:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L5
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L5+0x4
	add	r0, r0, r1
	mov	r1, #0x1
	strh	r1, [r0, #0x8]
	strh	r5, [r0, #0xa]
	ldr	r0, .L5+0x8
	lsl	r5, r5, #0x4
	add	r5, r5, r0
	ldr	r1, [r5]
	add	r0, r4, #0
	bl	_call_via_r1
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L6:
	.align	2, 0
.L5:
	.word	Task_StaticCountdown
	.word	gTasks
	.word	sStaticCountdownFuncs
.Lfe1:
	.size	 CreateStaticCountdownTask,.Lfe1-CreateStaticCountdownTask
	.align	2, 0
	.type	 StartStaticCountdown,function
	.thumb_func
StartStaticCountdown:
	push	{lr}
	ldr	r0, .L10
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xff
	beq	.L8	@cond_branch
	ldr	r0, .L10+0x4
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r0, #0x2
	strh	r0, [r1, #0x8]
	mov	r0, #0x1
	b	.L9
.L11:
	.align	2, 0
.L10:
	.word	Task_StaticCountdown
	.word	gTasks
.L8:
	mov	r0, #0x0
.L9:
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 StartStaticCountdown,.Lfe2-StartStaticCountdown
	.align	2, 0
	.type	 IsStaticCountdownRunning,function
	.thumb_func
IsStaticCountdownRunning:
	push	{lr}
	ldr	r0, .L13
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L14:
	.align	2, 0
.L13:
	.word	Task_StaticCountdown
.Lfe3:
	.size	 IsStaticCountdownRunning,.Lfe3-IsStaticCountdownRunning
	.align	2, 0
	.type	 Task_StaticCountdown,function
	.thumb_func
Task_StaticCountdown:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L23
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x3
	beq	.L18	@cond_branch
	cmp	r0, #0x3
	bgt	.L22	@cond_branch
	cmp	r0, #0x2
	beq	.L17	@cond_branch
	b	.L16
.L24:
	.align	2, 0
.L23:
	.word	gTasks+0x8
.L22:
	cmp	r0, #0x4
	beq	.L19	@cond_branch
	b	.L16
.L17:
	ldr	r1, .L25
	mov	r2, #0x2
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x4
	add	r1, r1, #0x8
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
	mov	r0, #0x3
	strh	r0, [r4]
	b	.L16
.L26:
	.align	2, 0
.L25:
	.word	sStaticCountdownFuncs
.L18:
	ldr	r0, .L27
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	lsl	r1, r1, #0x4
	add	r0, r0, #0xc
	add	r1, r1, r0
	ldr	r1, [r1]
	add	r0, r5, #0
	bl	_call_via_r1
	b	.L16
.L28:
	.align	2, 0
.L27:
	.word	sStaticCountdownFuncs
.L19:
	ldr	r0, .L29
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	lsl	r1, r1, #0x4
	add	r0, r0, #0x4
	add	r1, r1, r0
	ldr	r1, [r1]
	add	r0, r5, #0
	bl	_call_via_r1
	add	r0, r5, #0
	bl	DestroyTask
.L16:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L30:
	.align	2, 0
.L29:
	.word	sStaticCountdownFuncs
.Lfe4:
	.size	 Task_StaticCountdown,.Lfe4-Task_StaticCountdown
	.align	2, 0
	.type	 StaticCountdown_CreateSprites,function
	.thumb_func
StaticCountdown_CreateSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	mov	r1, #0x6
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x3
	ldr	r1, .L42
	add	r0, r0, r1
	bl	LoadCompressedSpriteSheet
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x3
	ldr	r1, .L42+0x4
	add	r0, r0, r1
	bl	LoadSpritePalette
	mov	r5, #0x0
	mov	r3, #0x10
	ldrsh	r0, [r4, r3]
	cmp	r5, r0
	bge	.L33	@cond_branch
.L35:
	mov	r0, #0x4
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L42+0x8
	add	r0, r0, r1
	mov	r2, #0x12
	ldrsh	r1, [r4, r2]
	mov	r3, #0x14
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0xe]
	bl	CreateSprite
	lsl	r1, r5, #0x1
	add	r1, r1, r4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0x1a]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	cmp	r5, r0
	blt	.L35	@cond_branch
.L33:
	mov	r5, #0x0
	mov	r2, #0x10
	ldrsh	r0, [r4, r2]
	cmp	r5, r0
	bge	.L38	@cond_branch
	mov	r7, #0x3
	mov	r3, #0xd
	neg	r3, r3
	mov	ip, r3
	ldr	r6, .L42+0xc
.L40:
	lsl	r0, r5, #0x1
	add	r0, r0, r4
	mov	r1, #0x1a
	ldrsh	r0, [r0, r1]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r6
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r7
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, ip
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrh	r0, [r4, #0xa]
	strh	r0, [r2, #0x30]
	mov	r3, r8
	strh	r3, [r2, #0x34]
	strh	r5, [r2, #0x36]
	ldrh	r0, [r4, #0x1a]
	strh	r0, [r2, #0x38]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	cmp	r5, r0
	blt	.L40	@cond_branch
.L38:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L43:
	.align	2, 0
.L42:
	.word	sSpriteSheet_321Start_Static
	.word	sSpritePalette_321Start_Static
	.word	sSpriteTemplate_StaticCountdown
	.word	gSprites
.Lfe5:
	.size	 StaticCountdown_CreateSprites,.Lfe5-StaticCountdown_CreateSprites
	.align	2, 0
	.type	 Task_StaticCountdown_Init,function
	.thumb_func
Task_StaticCountdown_Init:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r1, .L45
	add	r4, r4, r1
	mov	r5, #0x0
	strh	r5, [r4, #0x4]
	strh	r5, [r4, #0x6]
	strh	r5, [r4, #0x8]
	mov	r1, #0x3c
	strh	r1, [r4, #0xa]
	strh	r5, [r4, #0xc]
	strh	r5, [r4, #0xe]
	mov	r1, #0x3
	strh	r1, [r4, #0x10]
	mov	r1, #0x78
	strh	r1, [r4, #0x12]
	mov	r1, #0x58
	strh	r1, [r4, #0x14]
	add	r1, r4, #0
	bl	StaticCountdown_CreateSprites
	mov	r0, #0x1c
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r5, .L45+0x4
	add	r0, r0, r5
	mov	r1, #0x4
	bl	StartSpriteAnim
	mov	r0, #0x1c
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, .L45+0x8
	strh	r1, [r0, #0x24]
	mov	r0, #0x1e
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, #0x5
	bl	StartSpriteAnim
	mov	r0, #0x1e
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	mov	r1, #0x20
	strh	r1, [r0, #0x24]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L46:
	.align	2, 0
.L45:
	.word	gTasks+0x8
	.word	gSprites
	.word	0xffe0
.Lfe6:
	.size	 Task_StaticCountdown_Init,.Lfe6-Task_StaticCountdown_Init
	.align	2, 0
	.type	 Task_StaticCountdown_Free,function
	.thumb_func
Task_StaticCountdown_Free:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r5, #0x0
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L54
	add	r4, r1, r0
	b	.L53
.L55:
	.align	2, 0
.L54:
	.word	gTasks+0x8
.L51:
	lsl	r0, r5, #0x1
	add	r0, r0, r4
	mov	r2, #0x1a
	ldrsh	r1, [r0, r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L56
	add	r0, r0, r1
	bl	DestroySprite
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L53:
	mov	r1, #0x10
	ldrsh	r0, [r4, r1]
	cmp	r5, r0
	blt	.L51	@cond_branch
	ldr	r1, .L56+0x4
	mov	r2, #0x6
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x6]
	bl	FreeSpriteTilesByTag
	ldr	r1, .L56+0x8
	mov	r2, #0x8
	ldrsh	r0, [r4, r2]
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldrh	r0, [r0, #0x4]
	bl	FreeSpritePaletteByTag
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L57:
	.align	2, 0
.L56:
	.word	gSprites
	.word	sSpriteSheet_321Start_Static
	.word	sSpritePalette_321Start_Static
.Lfe7:
	.size	 Task_StaticCountdown_Free,.Lfe7-Task_StaticCountdown_Free
	.align	2, 0
	.type	 SpriteCB_StaticCountdown,function
	.thumb_func
SpriteCB_StaticCountdown:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r0, #0x34
	ldrsh	r1, [r6, r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L69
	add	r5, r0, r1
	mov	r1, #0x16
	ldrsh	r0, [r5, r1]
	mov	r2, #0xa
	ldrsh	r1, [r5, r2]
	bl	__modsi3
	cmp	r0, #0
	bne	.L58	@cond_branch
	ldrh	r2, [r5, #0x16]
	mov	r3, #0x16
	ldrsh	r1, [r5, r3]
	mov	r3, #0x14
	ldrsh	r0, [r5, r3]
	cmp	r1, r0
	beq	.L58	@cond_branch
	strh	r2, [r5, #0x14]
	mov	r1, #0x32
	ldrsh	r0, [r6, r1]
	cmp	r0, #0x4
	bhi	.L61	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L69+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L70:
	.align	2, 0
.L69:
	.word	gTasks+0x8
	.word	.L67
	.align	2, 0
	.align	2, 0
.L67:
	.word	.L62
	.word	.L64
	.word	.L64
	.word	.L65
	.word	.L66
.L62:
	add	r2, r6, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
.L64:
	mov	r0, #0x31
	bl	PlaySE
	ldrh	r1, [r6, #0x32]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r6, #0
	bl	StartSpriteAnim
	b	.L61
.L65:
	mov	r0, #0x15
	bl	PlaySE
	ldrh	r1, [r6, #0x32]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r6, #0
	bl	StartSpriteAnim
	ldr	r4, .L71
	mov	r2, #0x1c
	ldrsh	r0, [r5, r2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	add	r1, r1, #0x3e
	ldrb	r3, [r1]
	mov	r2, #0x5
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r3
	strb	r0, [r1]
	mov	r3, #0x1e
	ldrsh	r1, [r5, r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	and	r2, r2, r1
	strb	r2, [r0]
	b	.L61
.L72:
	.align	2, 0
.L71:
	.word	gSprites
.L66:
	add	r1, r6, #0
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1]
	ldr	r3, .L73
	mov	r0, #0x1c
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r0, #0x1e
	ldrsh	r1, [r5, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r0, #0x4
	strh	r0, [r5]
	b	.L58
.L74:
	.align	2, 0
.L73:
	.word	gSprites
.L61:
	ldrh	r0, [r6, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x32]
.L58:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 SpriteCB_StaticCountdown,.Lfe8-SpriteCB_StaticCountdown
	.align	2, 0
	.type	 Task_StaticCountdown_Start,function
	.thumb_func
Task_StaticCountdown_Start:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r5, .L76
	add	r6, r4, r5
	mov	r0, #0x31
	bl	PlaySE
	ldr	r2, .L76+0x4
	mov	r0, #0x1a
	ldrsh	r1, [r6, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r2, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L76+0x8
	str	r1, [r0]
	mov	r0, #0x1a
	ldrsh	r1, [r6, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	sub	r5, r5, #0x8
	add	r4, r4, r5
	mov	r0, #0x3
	strh	r0, [r4, #0x8]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L77:
	.align	2, 0
.L76:
	.word	gTasks+0x8
	.word	gSprites
	.word	SpriteCB_StaticCountdown
.Lfe9:
	.size	 Task_StaticCountdown_Start,.Lfe9-Task_StaticCountdown_Start
	.align	2, 0
	.type	 Task_StaticCountdown_Run,function
	.thumb_func
Task_StaticCountdown_Run:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L83
	add	r4, r1, r0
	ldr	r0, .L83+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L79	@cond_branch
	ldr	r1, .L83+0x8
	ldrh	r0, [r1, #0x2]
	ldr	r5, .L83+0xc
	cmp	r0, r5
	bne	.L80	@cond_branch
	ldrh	r0, [r1, #0x4]
	strh	r0, [r4, #0x16]
.L80:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L82	@cond_branch
	ldrh	r0, [r4, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x18]
	mov	r0, sp
	mov	r1, #0x0
	mov	r2, #0xc
	bl	memset
	mov	r0, sp
	strh	r5, [r0]
	mov	r1, sp
	ldrh	r0, [r4, #0x18]
	strh	r0, [r1, #0x2]
	mov	r0, sp
	bl	Rfu_SendPacket
	b	.L82
.L84:
	.align	2, 0
.L83:
	.word	gTasks+0x8
	.word	gReceivedRemoteLinkPlayers
	.word	gRecvCmds
	.word	0x7fff
.L79:
	ldrh	r0, [r4, #0x16]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x16]
.L82:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 Task_StaticCountdown_Run,.Lfe10-Task_StaticCountdown_Run
	.section .rodata
	.align	2, 0
	.type	 sPokeJumpMons,object
sPokeJumpMons:
	.short	0x1
	.short	0x2
	.short	0x4
	.short	0x1
	.short	0x7
	.short	0x0
	.short	0xa
	.short	0x1
	.short	0xb
	.short	0x1
	.short	0xd
	.short	0x1
	.short	0xe
	.short	0x1
	.short	0x13
	.short	0x1
	.short	0x14
	.short	0x1
	.short	0x19
	.short	0x0
	.short	0x1b
	.short	0x0
	.short	0x1d
	.short	0x0
	.short	0x20
	.short	0x0
	.short	0x23
	.short	0x0
	.short	0x25
	.short	0x0
	.short	0x27
	.short	0x2
	.short	0x2b
	.short	0x2
	.short	0x2e
	.short	0x1
	.short	0x34
	.short	0x0
	.short	0x36
	.short	0x2
	.short	0x38
	.short	0x1
	.short	0x3a
	.short	0x1
	.short	0x3c
	.short	0x2
	.short	0x45
	.short	0x2
	.short	0x5a
	.short	0x1
	.short	0x62
	.short	0x1
	.short	0x66
	.short	0x2
	.short	0x68
	.short	0x0
	.short	0x84
	.short	0x2
	.short	0x85
	.short	0x0
	.short	0x8a
	.short	0x1
	.short	0x8c
	.short	0x1
	.short	0x98
	.short	0x2
	.short	0x9b
	.short	0x1
	.short	0x9e
	.short	0x0
	.short	0xa7
	.short	0x1
	.short	0xac
	.short	0x0
	.short	0xad
	.short	0x0
	.short	0xae
	.short	0x2
	.short	0xaf
	.short	0x2
	.short	0xb3
	.short	0x0
	.short	0xb6
	.short	0x2
	.short	0xb7
	.short	0x2
	.short	0xbf
	.short	0x2
	.short	0xc2
	.short	0x2
	.short	0xcc
	.short	0x2
	.short	0xd1
	.short	0x0
	.short	0xd5
	.short	0x2
	.short	0xd8
	.short	0x0
	.short	0xda
	.short	0x2
	.short	0xdc
	.short	0x0
	.short	0xe4
	.short	0x1
	.short	0xe7
	.short	0x0
	.short	0xe9
	.short	0x0
	.short	0xec
	.short	0x1
	.short	0xee
	.short	0x2
	.short	0xef
	.short	0x1
	.short	0xf0
	.short	0x1
	.short	0xf6
	.short	0x1
	.short	0x115
	.short	0x1
	.short	0x118
	.short	0x2
	.short	0x11b
	.short	0x0
	.short	0x11c
	.short	0x0
	.short	0x11e
	.short	0x1
	.short	0x120
	.short	0x0
	.short	0x121
	.short	0x0
	.short	0x122
	.short	0x1
	.short	0x123
	.short	0x2
	.short	0x125
	.short	0x2
	.short	0x127
	.short	0x2
	.short	0x12a
	.short	0x1
	.short	0x188
	.short	0x0
	.short	0x189
	.short	0x0
	.short	0x137
	.short	0x2
	.short	0x132
	.short	0x2
	.short	0x12d
	.short	0x1
	.short	0x172
	.short	0x0
	.short	0x15e
	.short	0x2
	.short	0x13b
	.short	0x0
	.short	0x142
	.short	0x0
	.short	0x163
	.short	0x0
	.short	0x17e
	.short	0x1
	.short	0x164
	.short	0x2
	.short	0x151
	.short	0x1
	.short	0x161
	.short	0x1
	.short	0x162
	.short	0x1
	.short	0x182
	.short	0x0
	.short	0x183
	.short	0x0
	.short	0x16b
	.short	0x2
	.short	0x16f
	.short	0x2
	.short	0x153
	.short	0x2
	.short	0x141
	.short	0x2
	.short	0x15f
	.short	0x0
	.short	0x14c
	.short	0x2
	.short	0x158
	.short	0x2
	.short	0x186
	.short	0x1
	.short	0x168
	.short	0x0
	.short	0x15a
	.short	0x0
	.short	0x175
	.short	0x1
	.short	0x18b
	.short	0x1
	.size	 sPokeJumpMons,400
.text
	.align	2, 0
	.globl	StartPokemonJump
	.type	 StartPokemonJump,function
	.thumb_func
StartPokemonJump:
	push	{r4, r5, r6, r7, lr}
	add	r6, r1, #0
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	ldr	r0, .L88
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L86	@cond_branch
	ldr	r5, .L88+0x4
	ldr	r0, .L88+0x8
	bl	Alloc
	str	r0, [r5]
	cmp	r0, #0
	beq	.L86	@cond_branch
	bl	ResetTasks
	ldr	r0, .L88+0xc
	mov	r1, #0x1
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, [r5]
	mov	r1, #0x0
	strh	r1, [r0, #0x8]
	str	r6, [r0]
	strb	r4, [r0, #0x4]
	bl	GetMultiplayerId
	ldr	r1, [r5]
	strb	r0, [r1, #0x6]
	ldr	r0, [r5]
	ldrb	r2, [r0, #0x6]
	lsl	r1, r2, #0x1
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r2, .L88+0x10
	add	r1, r1, r2
	add	r0, r0, r1
	mov	r1, #0x64
	mul	r1, r1, r7
	ldr	r2, .L88+0x14
	add	r1, r1, r2
	bl	InitJumpMonInfo
	ldr	r0, [r5]
	bl	InitGame
	ldr	r2, [r5]
	add	r0, r4, #0
	mov	r1, #0x2
	bl	SetWordTaskArg
	ldr	r0, .L88+0x18
	bl	SetMainCallback2
	b	.L85
.L89:
	.align	2, 0
.L88:
	.word	gReceivedRemoteLinkPlayers
	.word	sPokemonJump
	.word	0x83b0
	.word	Task_StartPokemonJump
	.word	0x82a8
	.word	gPlayerParty
	.word	CB2_PokemonJump
.L86:
	add	r0, r6, #0
	bl	SetMainCallback2
.L85:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe11:
	.size	 StartPokemonJump,.Lfe11-StartPokemonJump
	.align	2, 0
	.type	 FreePokemonJump,function
	.thumb_func
FreePokemonJump:
	push	{lr}
	bl	FreeWindowsAndDigitObj
	ldr	r0, .L91
	ldr	r0, [r0]
	bl	Free
	pop	{r0}
	bx	r0
.L92:
	.align	2, 0
.L91:
	.word	sPokemonJump
.Lfe12:
	.size	 FreePokemonJump,.Lfe12-FreePokemonJump
	.align	2, 0
	.type	 InitGame,function
	.thumb_func
InitGame:
	push	{r4, lr}
	add	r4, r0, #0
	bl	GetLinkPlayerCount
	mov	r2, #0x0
	strb	r0, [r4, #0x5]
	add	r1, r4, #0
	add	r1, r1, #0x70
	mov	r0, #0x5
	strb	r0, [r1]
	add	r0, r4, #0
	add	r0, r0, #0x72
	strh	r2, [r0]
	bl	InitPlayerAndJumpTypes
	add	r0, r4, #0
	bl	ResetForNewGame
	ldrb	r0, [r4, #0x5]
	cmp	r0, #0x5
	bne	.L94	@cond_branch
	bl	IncrementGamesWithMaxPlayers
.L94:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 InitGame,.Lfe13-InitGame
	.align	2, 0
	.type	 ResetForNewGame,function
	.thumb_func
ResetForNewGame:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	mov	r0, #0x6
	str	r0, [r4, #0x14]
	str	r0, [r4, #0x18]
	add	r0, r4, #0
	add	r0, r0, #0x4a
	mov	r6, #0x0
	mov	r5, #0x0
	strh	r5, [r0]
	str	r5, [r4, #0x1c]
	str	r5, [r4, #0x5c]
	bl	GetMultiplayerId
	mov	r1, #0x0
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L96	@cond_branch
	mov	r1, #0x1
.L96:
	add	r0, r4, #0
	add	r0, r0, #0x47
	strb	r1, [r0]
	strh	r5, [r4, #0x8]
	strh	r5, [r4, #0xa]
	strh	r5, [r4, #0xc]
	strh	r5, [r4, #0xe]
	str	r5, [r4, #0x58]
	strh	r5, [r4, #0x3a]
	sub	r0, r0, #0x3
	strb	r6, [r0]
	str	r5, [r4, #0x54]
	add	r0, r0, #0x2
	strb	r6, [r0]
	add	r0, r0, #0x3
	strb	r6, [r0]
	sub	r0, r0, #0x1
	mov	r1, #0x1
	strb	r1, [r0]
	str	r5, [r4, #0x78]
	add	r0, r0, #0x29
	strb	r6, [r0]
	add	r0, r0, #0x3
	strh	r5, [r0]
	str	r1, [r4, #0x60]
	sub	r0, r0, #0x27
	strb	r6, [r0]
	str	r5, [r4, #0x68]
	str	r5, [r4, #0x64]
	str	r5, [r4, #0x2c]
	str	r5, [r4, #0x30]
	bl	ResetPlayersForNewGame
	bl	ResetPlayersJumpStates
	mov	r2, #0x0
	add	r5, r4, #0
	add	r5, r5, #0x7c
	mov	r3, #0x0
	add	r1, r4, #0
	add	r1, r1, #0x9a
.L100:
	add	r0, r5, r2
	strb	r3, [r0]
	strh	r3, [r1]
	add	r1, r1, #0x2
	add	r2, r2, #0x1
	cmp	r2, #0x4
	ble	.L100	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe14:
	.size	 ResetForNewGame,.Lfe14-ResetForNewGame
	.align	2, 0
	.type	 InitPlayerAndJumpTypes,function
	.thumb_func
InitPlayerAndJumpTypes:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r7, .L108
	mov	r6, #0x0
	mov	r5, #0x0
	ldr	r0, .L108+0x4
	mov	r8, r0
	mov	r4, #0x4
.L106:
	ldr	r0, [r7]
	add	r0, r0, r5
	ldr	r1, .L108+0x8
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	GetPokemonJumpSpeciesIdx
	lsl	r0, r0, #0x10
	ldr	r1, [r7]
	add	r1, r1, r6
	asr	r0, r0, #0xe
	add	r0, r0, r8
	ldrh	r0, [r0, #0x2]
	ldr	r2, .L108+0xc
	add	r1, r1, r2
	strh	r0, [r1]
	add	r6, r6, #0x28
	add	r5, r5, #0xc
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L106	@cond_branch
	ldr	r0, .L108
	ldr	r1, [r0]
	ldr	r0, .L108+0x10
	add	r3, r1, r0
	ldrb	r2, [r1, #0x6]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r2, .L108+0x14
	add	r0, r0, r2
	add	r1, r1, r0
	str	r1, [r3]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L109:
	.align	2, 0
.L108:
	.word	sPokemonJump
	.word	sPokeJumpMons
	.word	0x82a8
	.word	0x82f0
	.word	0x83ac
	.word	0x82e4
.Lfe15:
	.size	 InitPlayerAndJumpTypes,.Lfe15-InitPlayerAndJumpTypes
	.align	2, 0
	.type	 ResetPlayersForNewGame,function
	.thumb_func
ResetPlayersForNewGame:
	push	{r4, r5, r6, r7, lr}
	mov	r5, #0x0
	ldr	r6, .L116
	mov	r4, #0x0
	mov	r3, #0x0
.L114:
	ldr	r2, [r6]
	add	r1, r2, r3
	ldr	r7, .L116+0x4
	add	r0, r1, r7
	strh	r4, [r0]
	add	r7, r7, #0x2
	add	r0, r1, r7
	strh	r4, [r0]
	ldr	r0, .L116+0x8
	add	r1, r1, r0
	strh	r4, [r1]
	ldr	r1, .L116+0xc
	add	r0, r2, r1
	add	r0, r0, r3
	str	r4, [r0]
	sub	r7, r7, #0xc
	add	r0, r2, r7
	add	r0, r0, r3
	ldr	r1, .L116+0x10
	str	r1, [r0]
	ldr	r1, .L116+0x14
	add	r0, r2, r1
	add	r0, r0, r3
	str	r4, [r0]
	add	r2, r2, #0x8b
	add	r2, r2, r5
	mov	r0, #0x9
	strb	r0, [r2]
	add	r3, r3, #0x28
	add	r5, r5, #0x1
	cmp	r5, #0x4
	ble	.L114	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L117:
	.align	2, 0
.L116:
	.word	sPokemonJump
	.word	0x82f2
	.word	0x82f6
	.word	0x82e4
	.word	0x7fffffff
	.word	0x82f8
.Lfe16:
	.size	 ResetPlayersForNewGame,.Lfe16-ResetPlayersForNewGame
	.align	2, 0
	.type	 GetPokemonJumpSpeciesIdx,function
	.thumb_func
GetPokemonJumpSpeciesIdx:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	mov	r1, #0x0
	ldr	r2, .L126
.L122:
	ldrh	r0, [r2]
	cmp	r0, r3
	bne	.L121	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	b	.L125
.L127:
	.align	2, 0
.L126:
	.word	sPokeJumpMons
.L121:
	add	r2, r2, #0x4
	add	r1, r1, #0x1
	cmp	r1, #0x63
	bls	.L122	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L125:
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 GetPokemonJumpSpeciesIdx,.Lfe17-GetPokemonJumpSpeciesIdx
	.align	2, 0
	.type	 InitJumpMonInfo,function
	.thumb_func
InitJumpMonInfo:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	strh	r0, [r5]
	add	r0, r4, #0
	mov	r1, #0x1
	bl	GetMonData
	str	r0, [r5, #0x4]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	str	r0, [r5, #0x8]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 InitJumpMonInfo,.Lfe18-InitJumpMonInfo
	.align	2, 0
	.type	 VBlankCB_PokemonJump,function
	.thumb_func
VBlankCB_PokemonJump:
	push	{lr}
	bl	TransferPlttBuffer
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 VBlankCB_PokemonJump,.Lfe19-VBlankCB_PokemonJump
	.align	2, 0
	.type	 CB2_PokemonJump,function
	.thumb_func
CB2_PokemonJump:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 CB2_PokemonJump,.Lfe20-CB2_PokemonJump
	.align	2, 0
	.type	 SetPokeJumpTask,function
	.thumb_func
SetPokeJumpTask:
	push	{lr}
	mov	r1, #0x1
	bl	CreateTask
	ldr	r2, .L132
	ldr	r1, [r2]
	mov	r3, #0x0
	strb	r0, [r1, #0x4]
	ldr	r0, [r2]
	strh	r3, [r0, #0x8]
	pop	{r0}
	bx	r0
.L133:
	.align	2, 0
.L132:
	.word	sPokemonJump
.Lfe21:
	.size	 SetPokeJumpTask,.Lfe21-SetPokeJumpTask
	.align	2, 0
	.type	 Task_StartPokemonJump,function
	.thumb_func
Task_StartPokemonJump:
	push	{r4, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r1, .L152
	ldr	r0, [r1]
	ldrh	r0, [r0, #0x8]
	add	r2, r1, #0
	cmp	r0, #0x5
	bls	.LCB1309
	b	.L135	@long jump
.LCB1309:
	lsl	r0, r0, #0x2
	ldr	r1, .L152+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L153:
	.align	2, 0
.L152:
	.word	sPokemonJump
	.word	.L149
	.align	2, 0
	.align	2, 0
.L149:
	.word	.L136
	.word	.L137
	.word	.L139
	.word	.L141
	.word	.L143
	.word	.L145
.L136:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	ldr	r0, .L154
	mov	r1, #0x5
	bl	SetTaskWithPokeJumpStruct
	mov	r0, #0x4
	bl	FadeOutMapMusic
	ldr	r0, .L154+0x4
	ldr	r1, [r0]
	b	.L151
.L155:
	.align	2, 0
.L154:
	.word	Task_CommunicateMonInfo
	.word	sPokemonJump
.L137:
	ldr	r0, .L156
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L135	@cond_branch
	ldr	r4, .L156+0x4
	ldr	r0, [r4]
	add	r0, r0, #0xa4
	bl	StartPokeJumpGfx
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	ldr	r1, [r4]
	b	.L151
.L157:
	.align	2, 0
.L156:
	.word	Task_CommunicateMonInfo
	.word	sPokemonJump
.L139:
	bl	IsPokeJumpGfxFuncFinished
	cmp	r0, #0
	bne	.L135	@cond_branch
	bl	IsNotWaitingForBGMStop
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L135	@cond_branch
	mov	r0, #0xa3
	lsl	r0, r0, #0x1
	mov	r1, #0x8
	bl	FadeOutAndPlayNewMapMusic
	ldr	r0, .L158
	ldr	r1, [r0]
	b	.L151
.L159:
	.align	2, 0
.L158:
	.word	sPokemonJump
.L141:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L135	@cond_branch
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	mov	r0, #0x0
	str	r0, [sp]
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L160
	bl	SetVBlankCallback
	ldr	r0, .L160+0x4
	ldr	r1, [r0]
	b	.L151
.L161:
	.align	2, 0
.L160:
	.word	VBlankCB_PokemonJump
	.word	sPokemonJump
.L143:
	bl	UpdatePaletteFade
	ldr	r0, .L162
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	bne	.L135	@cond_branch
	ldr	r1, .L162+0x4
	ldr	r0, [r1]
	strb	r2, [r0, #0x7]
	ldr	r1, [r1]
.L151:
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L135
.L163:
	.align	2, 0
.L162:
	.word	gPaletteFade
	.word	sPokemonJump
.L145:
	ldr	r0, [r2]
	ldrb	r1, [r0, #0x7]
	add	r1, r1, #0x1
	strb	r1, [r0, #0x7]
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x7]
	cmp	r0, #0x13
	bls	.L135	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x47
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L147	@cond_branch
	ldr	r0, .L164
	bl	SetPokeJumpTask
	b	.L148
.L165:
	.align	2, 0
.L164:
	.word	Task_PokemonJump_Leader
.L147:
	ldr	r0, .L166
	bl	SetPokeJumpTask
.L148:
	bl	InitVineState
	add	r0, r4, #0
	bl	DestroyTask
.L135:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L167:
	.align	2, 0
.L166:
	.word	Task_PokemonJump_Member
.Lfe22:
	.size	 Task_StartPokemonJump,.Lfe22-Task_StartPokemonJump
	.align	2, 0
	.type	 SetLinkTimeInterval,function
	.thumb_func
SetLinkTimeInterval:
	push	{lr}
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L169	@cond_branch
	ldr	r0, .L171
	ldr	r1, [r0]
	ldr	r0, .L171+0x4
	str	r0, [r1, #0x30]
	mov	r0, #0x1
	str	r0, [r1, #0x2c]
	b	.L170
.L172:
	.align	2, 0
.L171:
	.word	sPokemonJump
	.word	0x1111
.L169:
	ldr	r0, .L173
	ldr	r2, [r0]
	sub	r1, r1, #0x1
	mov	r0, #0x1
	lsl	r0, r0, r1
	sub	r0, r0, #0x1
	str	r0, [r2, #0x30]
	mov	r0, #0x0
	str	r0, [r2, #0x2c]
.L170:
	pop	{r0}
	bx	r0
.L174:
	.align	2, 0
.L173:
	.word	sPokemonJump
.Lfe23:
	.size	 SetLinkTimeInterval,.Lfe23-SetLinkTimeInterval
	.align	2, 0
	.type	 SetFunc_Leader,function
	.thumb_func
SetFunc_Leader:
	push	{r4, r5, r6, lr}
	ldr	r4, .L181
	ldr	r1, [r4]
	add	r1, r1, #0x70
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r0, [r4]
	mov	r3, #0x0
	strh	r2, [r0, #0x8]
	strh	r2, [r0, #0xa]
	add	r0, r0, #0x48
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x49
	strb	r3, [r0]
	mov	r3, #0x1
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x5]
	cmp	r3, r0
	bge	.L177	@cond_branch
	add	r6, r4, #0
	ldr	r5, .L181+0x4
	mov	r4, #0x0
	mov	r2, #0x28
.L179:
	ldr	r1, [r6]
	add	r0, r1, r5
	add	r0, r0, r2
	str	r4, [r0]
	add	r2, r2, #0x28
	add	r3, r3, #0x1
	ldrb	r1, [r1, #0x5]
	cmp	r3, r1
	blt	.L179	@cond_branch
.L177:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L182:
	.align	2, 0
.L181:
	.word	sPokemonJump
	.word	0x82fc
.Lfe24:
	.size	 SetFunc_Leader,.Lfe24-SetFunc_Leader
	.align	2, 0
	.type	 RecvLinkData_Leader,function
	.thumb_func
RecvLinkData_Leader:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	mov	r4, #0x1
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	ldr	r7, .L192
	ldr	r0, [r7]
	ldrb	r0, [r0, #0x5]
	cmp	r4, r0
	bge	.L185	@cond_branch
	add	r1, r7, #0
	mov	sl, r1
	mov	r2, #0x2
	add	r2, r2, sp
	mov	r8, r2
	ldr	r3, .L192+0x4
	mov	r9, r3
	mov	r6, #0x28
.L187:
	mov	r1, sl
	ldr	r0, [r1]
	add	r1, r0, r6
	ldr	r2, .L192+0x8
	add	r1, r1, r2
	ldrh	r5, [r1]
	add	r0, r0, r9
	add	r1, r4, #0
	mov	r2, sp
	mov	r3, r8
	bl	RecvPacket_MemberStateToLeader
	cmp	r0, #0
	beq	.L188	@cond_branch
	ldr	r2, [r7]
	lsl	r1, r4, #0x1
	add	r0, r2, #0
	add	r0, r0, #0x90
	add	r0, r0, r1
	mov	r3, r8
	ldrh	r1, [r3]
	strh	r1, [r0]
	add	r2, r2, #0x8b
	add	r2, r2, r4
	mov	r0, sp
	ldrb	r0, [r0]
	strb	r0, [r2]
	ldr	r0, [r7]
	add	r0, r0, r6
	ldr	r1, .L192+0xc
	add	r0, r0, r1
	strh	r5, [r0]
.L188:
	mov	r2, sl
	ldr	r1, [r2]
	ldr	r3, .L192+0x10
	add	r0, r1, r3
	add	r0, r0, r6
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L186	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x8b
	add	r0, r0, r4
	add	r1, r1, #0x70
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L186	@cond_branch
	ldr	r0, [sp, #0x4]
	add	r0, r0, #0x1
	str	r0, [sp, #0x4]
.L186:
	mov	r1, #0x28
	add	r9, r9, r1
	add	r6, r6, #0x28
	add	r4, r4, #0x1
	ldr	r7, .L192
	ldr	r0, [r7]
	ldrb	r0, [r0, #0x5]
	cmp	r4, r0
	blt	.L187	@cond_branch
.L185:
	ldr	r2, .L192
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x5]
	sub	r0, r0, #0x1
	ldr	r3, [sp, #0x4]
	cmp	r3, r0
	bne	.L191	@cond_branch
	add	r1, r1, #0x49
	mov	r0, #0x1
	strb	r0, [r1]
.L191:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L193:
	.align	2, 0
.L192:
	.word	sPokemonJump
	.word	0x830c
	.word	0x82f4
	.word	0x82f6
	.word	0x82fc
.Lfe25:
	.size	 RecvLinkData_Leader,.Lfe25-RecvLinkData_Leader
	.section .rodata
	.align	2, 0
	.type	 sPokeJumpLeaderFuncs,object
sPokeJumpLeaderFuncs:
	.word	GameIntro_Leader
	.word	WaitRound_Leader
	.word	GameRound_Leader
	.word	GameOver_Leader
	.word	AskPlayAgain_Leader
	.word	ResetGame_Leader
	.word	ExitGame
	.word	GivePrize_Leader
	.word	SavePokeJump
	.size	 sPokeJumpLeaderFuncs,36
.text
	.align	2, 0
	.type	 Task_PokemonJump_Leader,function
	.thumb_func
Task_PokemonJump_Leader:
	push	{r4, r5, lr}
	bl	RecvLinkData_Leader
	bl	TryUpdateScore
	ldr	r0, .L198
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x48
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L195	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x49
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L195	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x4c
	ldrb	r0, [r0]
	bl	SetFunc_Leader
	mov	r0, #0x3
	bl	SetLinkTimeInterval
.L195:
	ldr	r4, .L198
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0x48
	ldrb	r5, [r0]
	cmp	r5, #0x1
	bne	.L196	@cond_branch
	ldr	r1, .L198+0x4
	add	r0, r0, #0x28
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L196	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0x48
	strb	r1, [r0]
	ldr	r1, [r4]
	ldrb	r2, [r1, #0x6]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r2, .L198+0x8
	add	r1, r1, r2
	add	r1, r1, r0
	str	r5, [r1]
.L196:
	bl	UpdateGame
	bl	SendLinkData_Leader
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L199:
	.align	2, 0
.L198:
	.word	sPokemonJump
	.word	sPokeJumpLeaderFuncs
	.word	0x82fc
.Lfe26:
	.size	 Task_PokemonJump_Leader,.Lfe26-Task_PokemonJump_Leader
	.align	2, 0
	.type	 SendLinkData_Leader,function
	.thumb_func
SendLinkData_Leader:
	push	{r4, lr}
	ldr	r4, .L203
	ldr	r1, [r4]
	ldr	r0, [r1, #0x2c]
	cmp	r0, #0
	bne	.L201	@cond_branch
	ldr	r2, .L203+0x4
	add	r0, r1, r2
	add	r1, r1, #0x70
	bl	SendPacket_LeaderState
.L201:
	ldr	r1, [r4]
	ldr	r2, [r1, #0x30]
	ldr	r0, .L203+0x8
	cmp	r2, r0
	beq	.L202	@cond_branch
	ldr	r0, [r1, #0x2c]
	add	r0, r0, #0x1
	and	r0, r0, r2
	str	r0, [r1, #0x2c]
.L202:
	pop	{r4}
	pop	{r0}
	bx	r0
.L204:
	.align	2, 0
.L203:
	.word	sPokemonJump
	.word	0x82e4
	.word	0x1111
.Lfe27:
	.size	 SendLinkData_Leader,.Lfe27-SendLinkData_Leader
	.align	2, 0
	.type	 SetFunc_Member,function
	.thumb_func
SetFunc_Member:
	ldr	r2, .L206
	ldr	r1, [r2]
	add	r1, r1, #0x70
	mov	r3, #0x0
	strb	r0, [r1]
	ldr	r0, [r2]
	strh	r3, [r0, #0x8]
	strh	r3, [r0, #0xa]
	add	r0, r0, #0x48
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r1, [r2]
	ldrb	r2, [r1, #0x6]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r2, .L206+0x4
	add	r1, r1, r2
	add	r1, r1, r0
	str	r3, [r1]
	bx	lr
.L207:
	.align	2, 0
.L206:
	.word	sPokemonJump
	.word	0x82fc
.Lfe28:
	.size	 SetFunc_Member,.Lfe28-SetFunc_Member
	.align	2, 0
	.type	 RecvLinkData_Member,function
	.thumb_func
RecvLinkData_Member:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x10
	ldr	r4, .L221
	ldr	r0, [r4]
	ldr	r2, .L221+0x4
	add	r1, r0, r2
	ldrh	r1, [r1]
	mov	r8, r1
	ldr	r3, .L221+0x8
	add	r0, r0, r3
	mov	r1, sp
	bl	RecvPacket_LeaderState
	cmp	r0, #0
	beq	.L209	@cond_branch
	ldr	r2, [r4]
	ldrb	r0, [r2, #0x6]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r3, .L221+0xc
	add	r0, r2, r3
	add	r0, r0, r1
	ldr	r0, [r0]
	cmp	r0, #0x1
	bne	.L210	@cond_branch
	mov	r0, sp
	add	r1, r2, #0
	add	r1, r1, #0x70
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	beq	.L210	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0]
	bl	SetFunc_Member
.L210:
	ldr	r3, .L221
	ldr	r2, [r3]
	ldr	r0, [r2, #0x78]
	ldr	r1, [sp, #0x8]
	cmp	r0, r1
	beq	.L211	@cond_branch
	str	r1, [r2, #0x78]
	mov	r4, #0x1
	str	r4, [r2, #0x5c]
	mov	r0, sp
	ldrb	r1, [r0, #0x1]
	add	r0, r2, #0
	add	r0, r0, #0x71
	strb	r1, [r0]
	ldr	r0, [r3]
	add	r1, r0, #0
	add	r1, r1, #0x71
	ldrb	r1, [r1]
	cmp	r1, #0
	beq	.L212	@cond_branch
	add	r0, r0, #0x4d
	strb	r4, [r0]
	b	.L211
.L222:
	.align	2, 0
.L221:
	.word	sPokemonJump
	.word	0x82f4
	.word	0x82e4
	.word	0x82fc
.L212:
	add	r0, r0, #0x4d
	strb	r1, [r0]
.L211:
	ldr	r0, .L223
	ldr	r1, [r0]
	mov	r0, sp
	ldrh	r0, [r0, #0x2]
	add	r2, r1, #0
	add	r2, r2, #0x72
	strh	r0, [r2]
	mov	r0, sp
	ldrh	r2, [r0, #0x4]
	add	r0, r1, #0
	add	r0, r0, #0x74
	strh	r2, [r0]
	ldr	r0, .L223+0x4
	add	r1, r1, r0
	mov	r2, r8
	strh	r2, [r1]
.L209:
	mov	r4, #0x1
	ldr	r2, .L223
	ldr	r0, [r2]
	ldrb	r0, [r0, #0x5]
	cmp	r4, r0
	bge	.L215	@cond_branch
	add	r7, r2, #0
	ldr	r6, .L223+0x8
	mov	r5, #0x28
.L217:
	ldr	r1, [r7]
	ldrb	r3, [r1, #0x6]
	cmp	r4, r3
	beq	.L216	@cond_branch
	add	r0, r1, r5
	ldr	r3, .L223+0xc
	add	r0, r0, r3
	ldrh	r0, [r0]
	mov	r8, r0
	add	r0, r1, r6
	add	r1, r4, #0
	str	r2, [sp, #0xc]
	bl	RecvPacket_MemberStateToMember
	ldr	r2, [sp, #0xc]
	cmp	r0, #0
	beq	.L216	@cond_branch
	ldr	r0, [r7]
	add	r0, r0, r5
	ldr	r1, .L223+0x4
	add	r0, r0, r1
	mov	r3, r8
	strh	r3, [r0]
.L216:
	add	r6, r6, #0x28
	add	r5, r5, #0x28
	add	r4, r4, #0x1
	ldr	r0, [r2]
	ldrb	r0, [r0, #0x5]
	cmp	r4, r0
	blt	.L217	@cond_branch
.L215:
	add	sp, sp, #0x10
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L224:
	.align	2, 0
.L223:
	.word	sPokemonJump
	.word	0x82f6
	.word	0x830c
	.word	0x82f4
.Lfe29:
	.size	 RecvLinkData_Member,.Lfe29-RecvLinkData_Member
	.section .rodata
	.align	2, 0
	.type	 sPokeJumpMemberFuncs,object
sPokeJumpMemberFuncs:
	.word	GameIntro_Member
	.word	WaitRound_Member
	.word	GameRound_Member
	.word	GameOver_Member
	.word	AskPlayAgain_Member
	.word	ResetGame_Member
	.word	ExitGame
	.word	GivePrize_Member
	.word	SavePokeJump
	.size	 sPokeJumpMemberFuncs,36
.text
	.align	2, 0
	.type	 Task_PokemonJump_Member,function
	.thumb_func
Task_PokemonJump_Member:
	push	{r4, lr}
	bl	RecvLinkData_Member
	ldr	r4, .L228
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0x48
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L226	@cond_branch
	ldr	r1, .L228+0x4
	add	r0, r2, #0
	add	r0, r0, #0x70
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L226	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0x48
	strb	r1, [r0]
	ldr	r1, [r4]
	ldrb	r2, [r1, #0x6]
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	lsl	r0, r0, #0x3
	ldr	r2, .L228+0x8
	add	r1, r1, r2
	add	r1, r1, r0
	mov	r0, #0x1
	str	r0, [r1]
	mov	r0, #0x3
	bl	SetLinkTimeInterval
.L226:
	bl	UpdateGame
	bl	SendLinkData_Member
	pop	{r4}
	pop	{r0}
	bx	r0
.L229:
	.align	2, 0
.L228:
	.word	sPokemonJump
	.word	sPokeJumpMemberFuncs
	.word	0x82fc
.Lfe30:
	.size	 Task_PokemonJump_Member,.Lfe30-Task_PokemonJump_Member
	.align	2, 0
	.type	 SendLinkData_Member,function
	.thumb_func
SendLinkData_Member:
	push	{r4, lr}
	ldr	r4, .L233
	ldr	r2, [r4]
	ldr	r0, [r2, #0x2c]
	cmp	r0, #0
	bne	.L231	@cond_branch
	ldrb	r1, [r2, #0x6]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, .L233+0x4
	add	r0, r0, r1
	add	r0, r2, r0
	add	r1, r2, #0
	add	r1, r1, #0x70
	ldrb	r1, [r1]
	add	r2, r2, #0x42
	ldrh	r2, [r2]
	bl	SendPacket_MemberState
.L231:
	ldr	r1, [r4]
	ldr	r2, [r1, #0x30]
	ldr	r0, .L233+0x8
	cmp	r2, r0
	beq	.L232	@cond_branch
	ldr	r0, [r1, #0x2c]
	add	r0, r0, #0x1
	and	r0, r0, r2
	str	r0, [r1, #0x2c]
.L232:
	pop	{r4}
	pop	{r0}
	bx	r0
.L234:
	.align	2, 0
.L233:
	.word	sPokemonJump
	.word	0x82e4
	.word	0x1111
.Lfe31:
	.size	 SendLinkData_Member,.Lfe31-SendLinkData_Member
	.align	2, 0
	.type	 GameIntro_Leader,function
	.thumb_func
GameIntro_Leader:
	push	{r4, lr}
	ldr	r4, .L243
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L237	@cond_branch
	cmp	r0, #0x1
	beq	.L238	@cond_branch
	b	.L236
.L244:
	.align	2, 0
.L243:
	.word	sPokemonJump
.L237:
	mov	r0, #0x3
	bl	SetLinkTimeInterval
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
.L238:
	bl	DoGameIntro
	cmp	r0, #0
	bne	.L236	@cond_branch
	ldr	r0, .L245
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	add	r2, r1, #0
	add	r2, r2, #0x72
	strh	r0, [r2]
	add	r1, r1, #0x4c
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
	b	.L242
.L246:
	.align	2, 0
.L245:
	.word	sPokemonJump
.L236:
	mov	r0, #0x1
.L242:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 GameIntro_Leader,.Lfe32-GameIntro_Leader
	.align	2, 0
	.type	 GameIntro_Member,function
	.thumb_func
GameIntro_Member:
	push	{r4, lr}
	ldr	r4, .L254
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L249	@cond_branch
	cmp	r0, #0x1
	beq	.L250	@cond_branch
	mov	r0, #0x1
	b	.L253
.L255:
	.align	2, 0
.L254:
	.word	sPokemonJump
.L249:
	mov	r0, #0x0
	bl	SetLinkTimeInterval
	ldr	r1, [r4]
	add	r0, r1, #0
	add	r0, r0, #0x72
	ldrh	r0, [r0]
	str	r0, [r1, #0x24]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
.L250:
	bl	DoGameIntro
.L253:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe33:
	.size	 GameIntro_Member,.Lfe33-GameIntro_Member
	.align	2, 0
	.type	 WaitRound_Leader,function
	.thumb_func
WaitRound_Leader:
	push	{r4, lr}
	ldr	r4, .L264
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	cmp	r0, #0
	beq	.L258	@cond_branch
	cmp	r0, #0x1
	beq	.L259	@cond_branch
	b	.L257
.L265:
	.align	2, 0
.L264:
	.word	sPokemonJump
.L258:
	bl	ResetPlayersJumpStates
	mov	r0, #0x5
	bl	SetLinkTimeInterval
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L257
.L259:
	add	r0, r1, #0
	add	r0, r0, #0x49
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L257	@cond_branch
	add	r1, r1, #0x4c
	mov	r0, #0x2
	strb	r0, [r1]
	mov	r0, #0x0
	b	.L263
.L257:
	mov	r0, #0x1
.L263:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe34:
	.size	 WaitRound_Leader,.Lfe34-WaitRound_Leader
	.align	2, 0
	.type	 WaitRound_Member,function
	.thumb_func
WaitRound_Member:
	push	{r4, lr}
	ldr	r4, .L274
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L268	@cond_branch
	cmp	r0, #0x1
	beq	.L269	@cond_branch
	b	.L267
.L275:
	.align	2, 0
.L274:
	.word	sPokemonJump
.L268:
	bl	ResetPlayersJumpStates
	mov	r0, #0x0
	bl	SetLinkTimeInterval
	ldr	r1, [r4]
	add	r0, r1, #0
	add	r0, r0, #0x72
	ldrh	r0, [r0]
	add	r2, r1, #0
	add	r2, r2, #0x4a
	strh	r0, [r2]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
.L269:
	bl	AreLinkQueuesEmpty
	cmp	r0, #0
	beq	.L267	@cond_branch
	mov	r0, #0x0
	b	.L273
.L267:
	mov	r0, #0x1
.L273:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe35:
	.size	 WaitRound_Member,.Lfe35-WaitRound_Member
	.align	2, 0
	.type	 GameRound_Leader,function
	.thumb_func
GameRound_Leader:
	push	{lr}
	bl	HandleSwingRound
	cmp	r0, #0
	bne	.L277	@cond_branch
	ldr	r0, .L282
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	add	r2, r1, #0
	add	r2, r2, #0x72
	strh	r0, [r2]
	add	r1, r1, #0x4c
	mov	r0, #0x1
	strb	r0, [r1]
	b	.L278
.L283:
	.align	2, 0
.L282:
	.word	sPokemonJump
.L277:
	bl	UpdateVineHitStates
	cmp	r0, #0
	beq	.L279	@cond_branch
	mov	r0, #0x1
	b	.L281
.L279:
	bl	ResetVineAfterHit
	ldr	r0, .L284
	ldr	r0, [r0]
	add	r0, r0, #0x4c
	mov	r1, #0x3
	strb	r1, [r0]
.L278:
	mov	r0, #0x0
.L281:
	pop	{r1}
	bx	r1
.L285:
	.align	2, 0
.L284:
	.word	sPokemonJump
.Lfe36:
	.size	 GameRound_Leader,.Lfe36-GameRound_Leader
	.align	2, 0
	.type	 GameRound_Member,function
	.thumb_func
GameRound_Member:
	push	{lr}
	bl	HandleSwingRound
	cmp	r0, #0
	beq	.L288	@cond_branch
	bl	UpdateVineHitStates
	cmp	r0, #0
	beq	.L289	@cond_branch
	mov	r0, #0x1
	b	.L291
.L289:
	bl	ResetVineAfterHit
.L288:
	mov	r0, #0x0
.L291:
	pop	{r1}
	bx	r1
.Lfe37:
	.size	 GameRound_Member,.Lfe37-GameRound_Member
	.align	2, 0
	.type	 GameOver_Leader,function
	.thumb_func
GameOver_Leader:
	push	{r4, lr}
	ldr	r4, .L309
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x8]
	cmp	r0, #0x1
	beq	.L296	@cond_branch
	cmp	r0, #0x1
	bgt	.L305	@cond_branch
	cmp	r0, #0
	beq	.L294	@cond_branch
	b	.L293
.L310:
	.align	2, 0
.L309:
	.word	sPokemonJump
.L305:
	cmp	r0, #0x2
	beq	.L308	@cond_branch
	b	.L293
.L294:
	bl	UpdateVineHitStates
	bl	AllPlayersJumpedOrHit
	cmp	r0, #0
	beq	.L293	@cond_branch
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L293
.L296:
	bl	DoVineHitEffect
	cmp	r0, #0
	bne	.L293	@cond_branch
	bl	HasEnoughScoreForPrize
	cmp	r0, #0
	beq	.L298	@cond_branch
	bl	GetPrizeData
	ldr	r1, [r4]
	add	r2, r1, #0
	add	r2, r2, #0x72
	strh	r0, [r2]
	add	r1, r1, #0x4c
	mov	r0, #0x7
	b	.L307
.L298:
	ldr	r1, [r4]
	add	r0, r1, #0
	add	r0, r0, #0x74
	ldrh	r0, [r0]
	cmp	r0, #0xc7
	bls	.L300	@cond_branch
	ldrh	r0, [r1, #0xe]
	add	r2, r1, #0
	add	r2, r2, #0x72
	strh	r0, [r2]
	add	r1, r1, #0x4c
	mov	r0, #0x8
	b	.L307
.L300:
	ldrh	r0, [r1, #0xe]
	add	r2, r1, #0
	add	r2, r2, #0x72
	strh	r0, [r2]
	add	r1, r1, #0x4c
	mov	r0, #0x4
.L307:
	strb	r0, [r1]
	ldr	r0, .L311
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
.L308:
	mov	r0, #0x0
	b	.L306
.L312:
	.align	2, 0
.L311:
	.word	sPokemonJump
.L293:
	mov	r0, #0x1
.L306:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe38:
	.size	 GameOver_Leader,.Lfe38-GameOver_Leader
	.align	2, 0
	.type	 GameOver_Member,function
	.thumb_func
GameOver_Member:
	push	{r4, lr}
	ldr	r4, .L326
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x8]
	cmp	r0, #0x1
	beq	.L318	@cond_branch
	cmp	r0, #0x1
	bgt	.L323	@cond_branch
	cmp	r0, #0
	beq	.L315	@cond_branch
	b	.L314
.L327:
	.align	2, 0
.L326:
	.word	sPokemonJump
.L323:
	cmp	r0, #0x2
	beq	.L325	@cond_branch
	b	.L314
.L315:
	bl	UpdateVineHitStates
	cmp	r0, #0
	bne	.L316	@cond_branch
	bl	ResetVineAfterHit
.L316:
	bl	AllPlayersJumpedOrHit
	cmp	r0, #0
	beq	.L314	@cond_branch
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L314
.L318:
	bl	DoVineHitEffect
	cmp	r0, #0
	bne	.L314	@cond_branch
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
.L325:
	mov	r0, #0x0
	b	.L324
.L314:
	mov	r0, #0x1
.L324:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe39:
	.size	 GameOver_Member,.Lfe39-GameOver_Member
	.align	2, 0
	.type	 AskPlayAgain_Leader,function
	.thumb_func
AskPlayAgain_Leader:
	push	{r4, lr}
	ldr	r4, .L344
	ldr	r0, [r4]
	ldrh	r1, [r0, #0x8]
	cmp	r1, #0x1
	beq	.L331	@cond_branch
	cmp	r1, #0x1
	bgt	.L340	@cond_branch
	cmp	r1, #0
	beq	.L330	@cond_branch
	b	.L329
.L345:
	.align	2, 0
.L344:
	.word	sPokemonJump
.L340:
	cmp	r1, #0x2
	beq	.L333	@cond_branch
	cmp	r1, #0x3
	beq	.L343	@cond_branch
	b	.L329
.L330:
	mov	r0, #0x4
	bl	SetLinkTimeInterval
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
.L331:
	bl	DoPlayAgainPrompt
	cmp	r0, #0
	bne	.L329	@cond_branch
	ldr	r4, .L346
	ldr	r2, [r4]
	ldr	r0, [r2, #0x78]
	add	r1, r2, #0
	add	r1, r1, #0x74
	ldrh	r1, [r1]
	add	r2, r2, #0x72
	ldrh	r2, [r2]
	bl	TryUpdateRecords
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L329
.L347:
	.align	2, 0
.L346:
	.word	sPokemonJump
.L333:
	add	r0, r0, #0x49
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L329	@cond_branch
	bl	ShouldPlayAgain
	cmp	r0, #0
	beq	.L335	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0x4c
	mov	r1, #0x5
	b	.L342
.L335:
	ldr	r0, [r4]
	add	r0, r0, #0x4c
	mov	r1, #0x6
.L342:
	strb	r1, [r0]
	ldr	r0, .L348
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
.L343:
	mov	r0, #0x0
	b	.L341
.L349:
	.align	2, 0
.L348:
	.word	sPokemonJump
.L329:
	mov	r0, #0x1
.L341:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe40:
	.size	 AskPlayAgain_Leader,.Lfe40-AskPlayAgain_Leader
	.align	2, 0
	.type	 AskPlayAgain_Member,function
	.thumb_func
AskPlayAgain_Member:
	push	{r4, lr}
	ldr	r4, .L358
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L352	@cond_branch
	cmp	r0, #0x1
	beq	.L353	@cond_branch
	b	.L351
.L359:
	.align	2, 0
.L358:
	.word	sPokemonJump
.L352:
	mov	r0, #0x0
	bl	SetLinkTimeInterval
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
.L353:
	bl	DoPlayAgainPrompt
	cmp	r0, #0
	bne	.L351	@cond_branch
	ldr	r4, .L360
	ldr	r2, [r4]
	ldr	r0, [r2, #0x78]
	add	r1, r2, #0
	add	r1, r1, #0x74
	ldrh	r1, [r1]
	add	r2, r2, #0x72
	ldrh	r2, [r2]
	bl	TryUpdateRecords
	ldr	r0, [r4]
	add	r1, r0, #0
	add	r1, r1, #0x45
	ldrb	r1, [r1]
	add	r0, r0, #0x42
	strh	r1, [r0]
	mov	r0, #0x0
	b	.L357
.L361:
	.align	2, 0
.L360:
	.word	sPokemonJump
.L351:
	mov	r0, #0x1
.L357:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe41:
	.size	 AskPlayAgain_Member,.Lfe41-AskPlayAgain_Member
	.align	2, 0
	.type	 ResetGame_Leader,function
	.thumb_func
ResetGame_Leader:
	push	{r4, lr}
	ldr	r4, .L371
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	cmp	r0, #0
	beq	.L364	@cond_branch
	cmp	r0, #0x1
	beq	.L366	@cond_branch
	b	.L363
.L372:
	.align	2, 0
.L371:
	.word	sPokemonJump
.L364:
	bl	CloseMessageAndResetScore
	cmp	r0, #0
	bne	.L363	@cond_branch
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L363
.L366:
	add	r0, r1, #0
	add	r0, r0, #0x49
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L363	@cond_branch
	add	r0, r1, #0
	bl	ResetForNewGame
	bl	Random
	ldr	r1, [r4]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [r1, #0x24]
	add	r3, r1, #0
	add	r3, r3, #0x72
	mov	r2, #0x0
	strh	r0, [r3]
	add	r1, r1, #0x4c
	strb	r2, [r1]
	mov	r0, #0x0
	b	.L370
.L363:
	mov	r0, #0x1
.L370:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe42:
	.size	 ResetGame_Leader,.Lfe42-ResetGame_Leader
	.align	2, 0
	.type	 ResetGame_Member,function
	.thumb_func
ResetGame_Member:
	push	{r4, lr}
	ldr	r4, .L382
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L375	@cond_branch
	cmp	r0, #0x1
	beq	.L381	@cond_branch
	b	.L374
.L383:
	.align	2, 0
.L382:
	.word	sPokemonJump
.L375:
	bl	CloseMessageAndResetScore
	cmp	r0, #0
	bne	.L374	@cond_branch
	ldr	r0, [r4]
	bl	ResetForNewGame
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
.L381:
	mov	r0, #0x0
	b	.L380
.L374:
	mov	r0, #0x1
.L380:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe43:
	.size	 ResetGame_Member,.Lfe43-ResetGame_Member
	.align	2, 0
	.type	 ExitGame,function
	.thumb_func
ExitGame:
	push	{r4, lr}
	ldr	r4, .L393
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	cmp	r0, #0x1
	beq	.L387	@cond_branch
	cmp	r0, #0x1
	bgt	.L392	@cond_branch
	cmp	r0, #0
	beq	.L386	@cond_branch
	b	.L385
.L394:
	.align	2, 0
.L393:
	.word	sPokemonJump
.L392:
	cmp	r0, #0x2
	beq	.L388	@cond_branch
	b	.L385
.L386:
	mov	r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L385
.L387:
	mov	r0, #0x0
	bl	SetLinkTimeInterval
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L385
.L388:
	bl	ClosePokeJumpLink
	cmp	r0, #0
	bne	.L385	@cond_branch
	ldr	r0, [r4]
	ldr	r0, [r0]
	bl	SetMainCallback2
	bl	FreePokemonJump
.L385:
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe44:
	.size	 ExitGame,.Lfe44-ExitGame
	.align	2, 0
	.type	 GivePrize_Leader,function
	.thumb_func
GivePrize_Leader:
	push	{r4, lr}
	ldr	r4, .L403
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L397	@cond_branch
	cmp	r0, #0x1
	beq	.L398	@cond_branch
	b	.L396
.L404:
	.align	2, 0
.L403:
	.word	sPokemonJump
.L397:
	mov	r0, #0x4
	bl	SetLinkTimeInterval
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L396
.L398:
	bl	TryGivePrize
	cmp	r0, #0
	bne	.L396	@cond_branch
	ldr	r0, [r4]
	ldrh	r1, [r0, #0xe]
	add	r2, r0, #0
	add	r2, r2, #0x72
	strh	r1, [r2]
	add	r0, r0, #0x4c
	mov	r1, #0x8
	strb	r1, [r0]
	mov	r0, #0x0
	b	.L402
.L396:
	mov	r0, #0x1
.L402:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe45:
	.size	 GivePrize_Leader,.Lfe45-GivePrize_Leader
	.align	2, 0
	.type	 GivePrize_Member,function
	.thumb_func
GivePrize_Member:
	push	{lr}
	mov	r0, #0x0
	bl	SetLinkTimeInterval
	bl	TryGivePrize
	cmp	r0, #0
	beq	.L406	@cond_branch
	mov	r0, #0x1
	b	.L408
.L406:
	mov	r0, #0x0
.L408:
	pop	{r1}
	bx	r1
.Lfe46:
	.size	 GivePrize_Member,.Lfe46-GivePrize_Member
	.align	2, 0
	.type	 SavePokeJump,function
	.thumb_func
SavePokeJump:
	push	{r4, lr}
	ldr	r1, .L425
	ldr	r0, [r1]
	ldrh	r0, [r0, #0x8]
	add	r4, r1, #0
	cmp	r0, #0x4
	bhi	.L410	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L425+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L426:
	.align	2, 0
.L425:
	.word	sPokemonJump
	.word	.L420
	.align	2, 0
	.align	2, 0
.L420:
	.word	.L411
	.word	.L412
	.word	.L414
	.word	.L416
	.word	.L418
.L411:
	ldr	r2, [r4]
	ldr	r0, [r2, #0x78]
	add	r1, r2, #0
	add	r1, r1, #0x74
	ldrh	r1, [r1]
	add	r2, r2, #0x72
	ldrh	r2, [r2]
	bl	TryUpdateRecords
	mov	r0, #0x5
	bl	SetUpPokeJumpGfxFuncById
	ldr	r1, [r4]
	b	.L423
.L412:
	bl	IsPokeJumpGfxFuncFinished
	cmp	r0, #0
	bne	.L410	@cond_branch
	mov	r0, #0x0
	bl	SetLinkTimeInterval
	b	.L424
.L414:
	bl	AreLinkQueuesEmpty
	cmp	r0, #0
	beq	.L410	@cond_branch
	ldr	r0, .L427
	mov	r1, #0x6
	bl	CreateTask
	b	.L424
.L428:
	.align	2, 0
.L427:
	.word	Task_LinkFullSave
.L416:
	ldr	r0, .L429
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L410	@cond_branch
	bl	ClearMessageWindow
.L424:
	ldr	r0, .L429+0x4
	ldr	r1, [r0]
.L423:
	ldrh	r0, [r1, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x8]
	b	.L410
.L430:
	.align	2, 0
.L429:
	.word	Task_LinkFullSave
	.word	sPokemonJump
.L418:
	bl	RemoveMessageWindow
	cmp	r0, #0
	bne	.L410	@cond_branch
	ldr	r0, .L431
	ldr	r0, [r0]
	add	r0, r0, #0x4c
	mov	r1, #0x4
	strb	r1, [r0]
	mov	r0, #0x0
	b	.L422
.L432:
	.align	2, 0
.L431:
	.word	sPokemonJump
.L410:
	mov	r0, #0x1
.L422:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe47:
	.size	 SavePokeJump,.Lfe47-SavePokeJump
	.align	2, 0
	.type	 DoGameIntro,function
	.thumb_func
DoGameIntro:
	push	{r4, r5, lr}
	ldr	r1, .L454
	ldr	r0, [r1]
	ldrh	r0, [r0, #0xa]
	add	r4, r1, #0
	cmp	r0, #0x7
	bhi	.L434	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L454+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L455:
	.align	2, 0
.L454:
	.word	sPokemonJump
	.word	.L448
	.align	2, 0
	.align	2, 0
.L448:
	.word	.L435
	.word	.L436
	.word	.L438
	.word	.L440
	.word	.L442
	.word	.L443
	.word	.L445
	.word	.L453
.L435:
	mov	r0, #0x2
	bl	SetUpPokeJumpGfxFuncById
	bl	ResetMonSpriteSubpriorities
	b	.L451
.L436:
	bl	IsPokeJumpGfxFuncFinished
	add	r5, r0, #0
	cmp	r5, #0
	bne	.L434	@cond_branch
	ldr	r4, .L456
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x6]
	bl	StartMonIntroBounce
	ldr	r1, [r4]
	strh	r5, [r1, #0x3c]
	b	.L452
.L457:
	.align	2, 0
.L456:
	.word	sPokemonJump
.L438:
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x3c]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x78
	bls	.L434	@cond_branch
	mov	r0, #0x3
	bl	SetUpPokeJumpGfxFuncById
	ldr	r1, [r4]
	b	.L452
.L440:
	bl	IsPokeJumpGfxFuncFinished
	cmp	r0, #0x1
	beq	.L434	@cond_branch
	bl	IsMonIntroBounceActive
	cmp	r0, #0x1
	beq	.L434	@cond_branch
	b	.L451
.L442:
	mov	r0, #0x9
	bl	SetUpPokeJumpGfxFuncById
	b	.L451
.L443:
	bl	IsPokeJumpGfxFuncFinished
	cmp	r0, #0
	bne	.L434	@cond_branch
	bl	DisallowVineUpdates
	bl	SetUpResetVineGfx
.L451:
	ldr	r0, .L458
	ldr	r1, [r0]
.L452:
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
	b	.L434
.L459:
	.align	2, 0
.L458:
	.word	sPokemonJump
.L445:
	bl	ResetVineGfx
	cmp	r0, #0
	bne	.L434	@cond_branch
	bl	AllowVineUpdates
	bl	ResetVineState
	ldr	r0, .L460
	ldr	r1, [r0]
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
.L453:
	mov	r0, #0x0
	b	.L450
.L461:
	.align	2, 0
.L460:
	.word	sPokemonJump
.L434:
	mov	r0, #0x1
.L450:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe48:
	.size	 DoGameIntro,.Lfe48-DoGameIntro
	.align	2, 0
	.type	 HandleSwingRound,function
	.thumb_func
HandleSwingRound:
	push	{r4, r5, lr}
	bl	UpdateVineState
	ldr	r5, .L479
	ldr	r1, [r5]
	ldrh	r4, [r1, #0x36]
	cmp	r4, #0
	beq	.L463	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1, #0x36]
	b	.L477
.L480:
	.align	2, 0
.L479:
	.word	sPokemonJump
.L463:
	ldrh	r0, [r1, #0xa]
	cmp	r0, #0x1
	beq	.L468	@cond_branch
	cmp	r0, #0x1
	bgt	.L476	@cond_branch
	cmp	r0, #0
	beq	.L465	@cond_branch
	b	.L464
.L476:
	cmp	r0, #0x2
	beq	.L470	@cond_branch
	cmp	r0, #0x3
	beq	.L472	@cond_branch
	b	.L464
.L465:
	mov	r0, #0x0
	bl	IsPlayersMonState
	cmp	r0, #0
	beq	.L464	@cond_branch
	ldr	r1, [r5]
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
.L468:
	ldr	r0, .L481
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L464	@cond_branch
	bl	SetMonStateJump
	mov	r0, #0x3
	bl	SetLinkTimeInterval
	ldr	r0, .L481+0x4
	ldr	r1, [r0]
	b	.L478
.L482:
	.align	2, 0
.L481:
	.word	gMain
	.word	sPokemonJump
.L470:
	mov	r0, #0x1
	bl	IsPlayersMonState
	cmp	r0, #0x1
	bne	.L464	@cond_branch
	ldr	r1, [r5]
.L478:
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
	b	.L464
.L472:
	mov	r0, #0x0
	bl	IsPlayersMonState
	cmp	r0, #0x1
	bne	.L464	@cond_branch
	ldr	r0, [r5]
	strh	r4, [r0, #0xa]
.L464:
	mov	r0, #0x1
.L477:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe49:
	.size	 HandleSwingRound,.Lfe49-HandleSwingRound
	.align	2, 0
	.type	 DoVineHitEffect,function
	.thumb_func
DoVineHitEffect:
	push	{r4, r5, r6, lr}
	ldr	r1, .L511
	ldr	r0, [r1]
	ldrh	r0, [r0, #0xa]
	add	r5, r1, #0
	cmp	r0, #0x4
	bhi	.L484	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L511+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L512:
	.align	2, 0
.L511:
	.word	sPokemonJump
	.word	.L504
	.align	2, 0
	.align	2, 0
.L504:
	.word	.L485
	.word	.L492
	.word	.L499
	.word	.L501
	.word	.L510
.L485:
	mov	r4, #0x0
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x5]
	cmp	r4, r0
	bge	.L487	@cond_branch
	add	r6, r5, #0
.L489:
	add	r0, r4, #0
	bl	IsMonHitShakeActive
	cmp	r0, #0x1
	beq	.L507	@cond_branch
	add	r4, r4, #0x1
	ldr	r0, [r6]
	ldrb	r0, [r0, #0x5]
	cmp	r4, r0
	blt	.L489	@cond_branch
.L487:
	ldr	r1, [r5]
	b	.L508
.L492:
	mov	r4, #0x0
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x5]
	cmp	r4, r0
	bge	.L494	@cond_branch
	add	r6, r5, #0
	mov	r5, #0x0
.L496:
	ldr	r0, [r6]
	add	r0, r0, r5
	ldr	r1, .L513
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0x2
	bne	.L495	@cond_branch
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	StartMonHitFlash
.L495:
	add	r5, r5, #0x28
	add	r4, r4, #0x1
	ldr	r0, [r6]
	ldrb	r0, [r0, #0x5]
	cmp	r4, r0
	blt	.L496	@cond_branch
.L494:
	mov	r0, #0x1
	bl	SetUpPokeJumpGfxFuncById
	ldr	r0, .L513+0x4
	ldr	r1, [r0]
	b	.L509
.L514:
	.align	2, 0
.L513:
	.word	0x82f4
	.word	sPokemonJump
.L499:
	ldr	r1, [r5]
	ldrh	r0, [r1, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x3c]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x64
	bls	.L484	@cond_branch
	mov	r0, #0x3
	bl	SetUpPokeJumpGfxFuncById
	ldr	r1, [r5]
.L509:
	mov	r0, #0x0
	strh	r0, [r1, #0x3c]
.L508:
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
	b	.L484
.L501:
	bl	IsPokeJumpGfxFuncFinished
	add	r5, r0, #0
	cmp	r5, #0
	bne	.L484	@cond_branch
	bl	StopMonHitFlash
	ldr	r4, .L515
	ldr	r0, [r4]
	add	r0, r0, #0x71
	strb	r5, [r0]
	bl	ResetPlayersMonState
	ldr	r1, [r4]
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
.L510:
	mov	r0, #0x0
	b	.L506
.L516:
	.align	2, 0
.L515:
	.word	sPokemonJump
.L507:
.L484:
	mov	r0, #0x1
.L506:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 DoVineHitEffect,.Lfe50-DoVineHitEffect
	.align	2, 0
	.type	 TryGivePrize,function
	.thumb_func
TryGivePrize:
	push	{r4, lr}
	ldr	r1, .L541
	ldr	r0, [r1]
	ldrh	r0, [r0, #0xa]
	add	r4, r1, #0
	cmp	r0, #0x6
	bls	.LCB3750
	b	.L518	@long jump
.LCB3750:
	lsl	r0, r0, #0x2
	ldr	r1, .L541+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L542:
	.align	2, 0
.L541:
	.word	sPokemonJump
	.word	.L535
	.align	2, 0
	.align	2, 0
.L535:
	.word	.L519
	.word	.L521
	.word	.L524
	.word	.L527
	.word	.L521
	.word	.L524
	.word	.L533
.L519:
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0x72
	ldrh	r0, [r0]
	add	r1, r2, #0
	add	r1, r1, #0x3e
	add	r2, r2, #0x40
	bl	UnpackPrizeData
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x3e]
	add	r1, r1, #0x40
	ldrh	r1, [r1]
	bl	PrintPrizeMessage
	b	.L538
.L521:
	bl	DoPrizeMessageAndFanfare
	add	r2, r0, #0
	cmp	r2, #0
	bne	.L518	@cond_branch
	ldr	r0, .L543
	ldr	r1, [r0]
	strh	r2, [r1, #0x3c]
	b	.L539
.L544:
	.align	2, 0
.L543:
	.word	sPokemonJump
.L524:
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x3c]
	add	r2, r0, #0x1
	strh	r2, [r1, #0x3c]
	ldr	r0, .L545
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L526	@cond_branch
	lsl	r0, r2, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0xb4
	bls	.L518	@cond_branch
.L526:
	bl	ClearMessageWindow
.L538:
	ldr	r1, [r4]
.L539:
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
	b	.L518
.L546:
	.align	2, 0
.L545:
	.word	gMain
.L527:
	bl	RemoveMessageWindow
	cmp	r0, #0
	bne	.L518	@cond_branch
	ldr	r4, .L547
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x3e]
	add	r1, r1, #0x40
	ldrh	r1, [r1]
	bl	GetQuantityLimitedByBag
	ldr	r1, [r4]
	add	r2, r1, #0
	add	r2, r2, #0x40
	strh	r0, [r2]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L529	@cond_branch
	ldrh	r0, [r1, #0x3e]
	ldrh	r1, [r2]
	bl	AddBagItem
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L529	@cond_branch
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x3e]
	mov	r1, #0x1
	bl	CheckBagHasSpace
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L530	@cond_branch
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x3e]
	bl	PrintPrizeFilledBagMessage
	b	.L540
.L548:
	.align	2, 0
.L547:
	.word	sPokemonJump
.L530:
	ldr	r1, [r4]
	mov	r0, #0x6
	strh	r0, [r1, #0xa]
	b	.L518
.L529:
	ldr	r4, .L549
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x3e]
	bl	PrintNoRoomForPrizeMessage
.L540:
	ldr	r1, [r4]
	mov	r0, #0x4
	strh	r0, [r1, #0xa]
	b	.L518
.L550:
	.align	2, 0
.L549:
	.word	sPokemonJump
.L533:
	bl	RemoveMessageWindow
	cmp	r0, #0
	bne	.L518	@cond_branch
	mov	r0, #0x0
	b	.L537
.L518:
	mov	r0, #0x1
.L537:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 TryGivePrize,.Lfe51-TryGivePrize
	.align	2, 0
	.type	 DoPlayAgainPrompt,function
	.thumb_func
DoPlayAgainPrompt:
	push	{r4, lr}
	ldr	r0, .L577
	ldr	r0, [r0]
	ldrh	r0, [r0, #0xa]
	cmp	r0, #0x6
	bhi	.L552	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L577+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L578:
	.align	2, 0
.L577:
	.word	sPokemonJump
	.word	.L570
	.align	2, 0
	.align	2, 0
.L570:
	.word	.L553
	.word	.L554
	.word	.L556
	.word	.L564
	.word	.L566
	.word	.L567
	.word	.L576
.L553:
	mov	r0, #0x4
	b	.L573
.L554:
	bl	IsPokeJumpGfxFuncFinished
	cmp	r0, #0
	bne	.L552	@cond_branch
	b	.L574
.L556:
	bl	HandlePlayAgainInput
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L560	@cond_branch
	cmp	r1, #0
	bgt	.L563	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L559	@cond_branch
	b	.L552
.L563:
	cmp	r1, #0x1
	bne	.L552	@cond_branch
.L559:
	ldr	r4, .L579
	ldr	r0, [r4]
	add	r0, r0, #0x45
	mov	r1, #0x1
	strb	r1, [r0]
	mov	r0, #0x6
	bl	SetUpPokeJumpGfxFuncById
	ldr	r1, [r4]
	b	.L575
.L580:
	.align	2, 0
.L579:
	.word	sPokemonJump
.L560:
	ldr	r4, .L581
	ldr	r0, [r4]
	add	r0, r0, #0x45
	mov	r1, #0x2
	strb	r1, [r0]
	mov	r0, #0x6
	bl	SetUpPokeJumpGfxFuncById
	ldr	r1, [r4]
	b	.L575
.L582:
	.align	2, 0
.L581:
	.word	sPokemonJump
.L564:
	bl	IsPokeJumpGfxFuncFinished
	cmp	r0, #0
	bne	.L552	@cond_branch
	b	.L574
.L566:
	mov	r0, #0x8
.L573:
	bl	SetUpPokeJumpGfxFuncById
.L574:
	ldr	r0, .L583
	ldr	r1, [r0]
.L575:
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
	b	.L552
.L584:
	.align	2, 0
.L583:
	.word	sPokemonJump
.L567:
	bl	IsPokeJumpGfxFuncFinished
	cmp	r0, #0
	bne	.L552	@cond_branch
	ldr	r0, .L585
	ldr	r1, [r0]
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
.L576:
	mov	r0, #0x0
	b	.L572
.L586:
	.align	2, 0
.L585:
	.word	sPokemonJump
.L552:
	mov	r0, #0x1
.L572:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe52:
	.size	 DoPlayAgainPrompt,.Lfe52-DoPlayAgainPrompt
	.align	2, 0
	.type	 ClosePokeJumpLink,function
	.thumb_func
ClosePokeJumpLink:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L605
	ldr	r0, [r1]
	ldrh	r0, [r0, #0xa]
	add	r4, r1, #0
	cmp	r0, #0x5
	bhi	.L588	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L605+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L606:
	.align	2, 0
.L605:
	.word	sPokemonJump
	.word	.L600
	.align	2, 0
	.align	2, 0
.L600:
	.word	.L589
	.word	.L590
	.word	.L592
	.word	.L594
	.word	.L596
	.word	.L598
.L589:
	bl	ClearMessageWindow
	b	.L603
.L590:
	bl	RemoveMessageWindow
	cmp	r0, #0
	bne	.L588	@cond_branch
	mov	r0, #0x7
	bl	SetUpPokeJumpGfxFuncById
	b	.L603
.L592:
	bl	IsPokeJumpGfxFuncFinished
	add	r2, r0, #0
	cmp	r2, #0
	bne	.L588	@cond_branch
	ldr	r0, .L607
	ldr	r1, [r0]
	strh	r2, [r1, #0x3c]
	b	.L604
.L608:
	.align	2, 0
.L607:
	.word	sPokemonJump
.L594:
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x3c]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x78
	bls	.L588	@cond_branch
	mov	r1, #0x1
	neg	r1, r1
	mov	r0, #0x0
	str	r0, [sp]
	add	r0, r1, #0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, [r4]
	b	.L604
.L596:
	ldr	r0, .L609
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L588	@cond_branch
	bl	SetCloseLinkCallback
.L603:
	ldr	r0, .L609+0x4
	ldr	r1, [r0]
.L604:
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
	b	.L588
.L610:
	.align	2, 0
.L609:
	.word	gPaletteFade
	.word	sPokemonJump
.L598:
	ldr	r0, .L611
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L588	@cond_branch
	mov	r0, #0x0
	b	.L602
.L612:
	.align	2, 0
.L611:
	.word	gReceivedRemoteLinkPlayers
.L588:
	mov	r0, #0x1
.L602:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe53:
	.size	 ClosePokeJumpLink,.Lfe53-ClosePokeJumpLink
	.align	2, 0
	.type	 CloseMessageAndResetScore,function
	.thumb_func
CloseMessageAndResetScore:
	push	{r4, lr}
	ldr	r4, .L624
	ldr	r0, [r4]
	ldrh	r0, [r0, #0xa]
	cmp	r0, #0x1
	beq	.L616	@cond_branch
	cmp	r0, #0x1
	bgt	.L621	@cond_branch
	cmp	r0, #0
	beq	.L615	@cond_branch
	b	.L614
.L625:
	.align	2, 0
.L624:
	.word	sPokemonJump
.L621:
	cmp	r0, #0x2
	beq	.L623	@cond_branch
	b	.L614
.L615:
	bl	ClearMessageWindow
	mov	r0, #0x0
	bl	PrintScore
	ldr	r1, [r4]
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
	b	.L614
.L616:
	bl	RemoveMessageWindow
	cmp	r0, #0
	bne	.L614	@cond_branch
	ldr	r1, [r4]
	ldrh	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xa]
.L623:
	mov	r0, #0x0
	b	.L622
.L614:
	mov	r0, #0x1
.L622:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe54:
	.size	 CloseMessageAndResetScore,.Lfe54-CloseMessageAndResetScore
	.align	2, 0
	.type	 Task_CommunicateMonInfo,function
	.thumb_func
Task_CommunicateMonInfo:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	lsl	r0, r0, #0x2
	add	r0, r0, sl
	lsl	r0, r0, #0x3
	ldr	r1, .L645
	add	r6, r0, r1
	mov	r0, sl
	mov	r1, #0xe
	bl	GetWordTaskArg
	mov	r8, r0
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0
	beq	.L628	@cond_branch
	cmp	r0, #0x1
	beq	.L634	@cond_branch
	b	.L627
.L646:
	.align	2, 0
.L645:
	.word	gTasks+0x8
.L644:
	bl	InitPlayerAndJumpTypes
	mov	r0, sl
	bl	DestroyTask
	b	.L627
.L628:
	mov	r1, #0x0
	add	r0, r6, #0
	add	r0, r0, #0x8
.L632:
	strh	r1, [r0, #0x4]
	sub	r0, r0, #0x2
	cmp	r0, r6
	bge	.L632	@cond_branch
	ldrh	r0, [r6]
	add	r0, r0, #0x1
	strh	r0, [r6]
.L634:
	mov	r3, r8
	ldrb	r1, [r3, #0x6]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L647
	add	r0, r0, r4
	add	r0, r0, r8
	bl	SendPacket_MonInfo
	mov	r2, #0x0
	add	r5, r6, #0x4
	mov	r9, r2
	mov	r7, #0x83
	lsl	r7, r7, #0x8
	add	r7, r7, r8
	add	r4, r4, r8
.L638:
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L637	@cond_branch
	add	r0, r2, #0
	add	r1, r4, #0
	str	r2, [sp]
	bl	RecvPacket_MonInfo
	ldr	r2, [sp]
	cmp	r0, #0
	beq	.L637	@cond_branch
	ldr	r1, .L647+0x4
	add	r1, r1, r9
	add	r0, r7, #0
	bl	StringCopy
	mov	r0, #0x1
	strh	r0, [r5]
	ldrh	r0, [r6, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r6, #0x2]
	mov	r3, #0x2
	ldrsh	r0, [r6, r3]
	ldr	r2, [sp]
	mov	r1, r8
	ldrb	r1, [r1, #0x5]
	cmp	r0, r1
	beq	.L644	@cond_branch
.L637:
	add	r5, r5, #0x2
	mov	r3, #0x1c
	add	r9, r9, r3
	add	r7, r7, #0x28
	add	r4, r4, #0xc
	add	r2, r2, #0x1
	cmp	r2, #0x4
	ble	.L638	@cond_branch
.L627:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L648:
	.align	2, 0
.L647:
	.word	0x82a8
	.word	gLinkPlayers+0x8
.Lfe55:
	.size	 Task_CommunicateMonInfo,.Lfe55-Task_CommunicateMonInfo
	.align	2, 0
	.type	 SetTaskWithPokeJumpStruct,function
	.thumb_func
SetTaskWithPokeJumpStruct:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L650
	ldr	r2, [r1]
	mov	r1, #0xe
	bl	SetWordTaskArg
	pop	{r0}
	bx	r0
.L651:
	.align	2, 0
.L650:
	.word	sPokemonJump
.Lfe56:
	.size	 SetTaskWithPokeJumpStruct,.Lfe56-SetTaskWithPokeJumpStruct
	.align	2, 0
	.type	 InitVineState,function
	.thumb_func
InitVineState:
	ldr	r0, .L653
	ldr	r2, [r0]
	add	r0, r2, #0
	add	r0, r0, #0x4a
	mov	r1, #0x0
	strh	r1, [r0]
	mov	r0, #0x6
	str	r0, [r2, #0x14]
	strh	r1, [r2, #0x34]
	str	r1, [r2, #0x1c]
	strh	r1, [r2, #0x36]
	str	r1, [r2, #0x10]
	bx	lr
.L654:
	.align	2, 0
.L653:
	.word	sPokemonJump
.Lfe57:
	.size	 InitVineState,.Lfe57-InitVineState
	.align	2, 0
	.type	 ResetVineState,function
	.thumb_func
ResetVineState:
	push	{r4, lr}
	ldr	r3, .L656
	ldr	r0, [r3]
	add	r1, r0, #0
	add	r1, r1, #0x4a
	mov	r4, #0x0
	mov	r2, #0x0
	strh	r2, [r1]
	ldr	r1, .L656+0x4
	strh	r1, [r0, #0x34]
	mov	r1, #0x7
	str	r1, [r0, #0x14]
	strh	r2, [r0, #0x36]
	str	r2, [r0, #0x10]
	add	r0, r0, #0x51
	strb	r4, [r0]
	ldr	r0, [r3]
	add	r0, r0, #0x50
	strb	r4, [r0]
	ldr	r0, [r3]
	str	r2, [r0, #0x20]
	add	r1, r0, #0
	add	r1, r1, #0x4e
	strh	r2, [r1]
	str	r2, [r0, #0x6c]
	bl	UpdateVineSpeed
	pop	{r4}
	pop	{r0}
	bx	r0
.L657:
	.align	2, 0
.L656:
	.word	sPokemonJump
	.word	0x6ff
.Lfe58:
	.size	 ResetVineState,.Lfe58-ResetVineState
	.align	2, 0
	.type	 UpdateVineState,function
	.thumb_func
UpdateVineState:
	push	{r4, lr}
	ldr	r4, .L662
	ldr	r1, [r4]
	add	r0, r1, #0
	add	r0, r0, #0x46
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L659	@cond_branch
	add	r1, r1, #0x4a
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	bl	GetVineSpeed
	ldr	r3, [r4]
	ldrh	r1, [r3, #0x34]
	add	r2, r1, r0
	strh	r2, [r3, #0x34]
	lsl	r1, r2, #0x10
	ldr	r0, .L662+0x4
	cmp	r1, r0
	bls	.L660	@cond_branch
	ldr	r1, .L662+0x8
	add	r0, r2, r1
	strh	r0, [r3, #0x34]
.L660:
	ldr	r1, [r4]
	ldr	r2, [r1, #0x14]
	str	r2, [r1, #0x18]
	ldrh	r0, [r1, #0x34]
	lsr	r0, r0, #0x8
	str	r0, [r1, #0x14]
	cmp	r0, #0x6
	bls	.L659	@cond_branch
	cmp	r2, #0x6
	bhi	.L659	@cond_branch
	ldrh	r0, [r1, #0x36]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x36]
	bl	UpdateVineSpeed
.L659:
	pop	{r4}
	pop	{r0}
	bx	r0
.L663:
	.align	2, 0
.L662:
	.word	sPokemonJump
	.word	0x9fe0000
	.word	-0x9ff
.Lfe59:
	.size	 UpdateVineState,.Lfe59-UpdateVineState
	.align	2, 0
	.type	 GetVineSpeed,function
	.thumb_func
GetVineSpeed:
	push	{lr}
	ldr	r0, .L668
	ldr	r2, [r0]
	ldr	r0, [r2, #0x10]
	cmp	r0, #0
	beq	.L665	@cond_branch
	mov	r0, #0x0
	b	.L667
.L669:
	.align	2, 0
.L668:
	.word	sPokemonJump
.L665:
	ldr	r3, [r2, #0x1c]
	ldrh	r1, [r2, #0x34]
	ldr	r0, .L670
	cmp	r1, r0
	bhi	.L666	@cond_branch
	ldr	r0, [r2, #0x20]
	add	r0, r0, #0x50
	str	r0, [r2, #0x20]
	lsr	r0, r0, #0x8
	add	r3, r3, r0
.L666:
	add	r0, r3, #0
.L667:
	pop	{r1}
	bx	r1
.L671:
	.align	2, 0
.L670:
	.word	0x5ff
.Lfe60:
	.size	 GetVineSpeed,.Lfe60-GetVineSpeed
	.section .rodata
	.align	1, 0
	.type	 sVineBaseSpeeds,object
sVineBaseSpeeds:
	.short	0x1a
	.short	0x1f
	.short	0x24
	.short	0x29
	.short	0x2e
	.short	0x33
	.short	0x38
	.short	0x3d
	.size	 sVineBaseSpeeds,16
	.align	1, 0
	.type	 sVineSpeedDelays,object
sVineSpeedDelays:
	.short	0x0
	.short	0x1
	.short	0x1
	.short	0x2
	.size	 sVineSpeedDelays,8
.text
	.align	2, 0
	.type	 UpdateVineSpeed,function
	.thumb_func
UpdateVineSpeed:
	push	{r4, lr}
	ldr	r4, .L689
	ldr	r3, [r4]
	mov	r0, #0x0
	str	r0, [r3, #0x20]
	add	r1, r3, #0
	add	r1, r1, #0x4e
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L673	@cond_branch
	sub	r0, r0, #0x1
	strh	r0, [r1]
	ldr	r0, [r3, #0x6c]
	cmp	r0, #0
	beq	.L679	@cond_branch
	bl	PokeJumpRandom
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L675	@cond_branch
	ldr	r1, [r4]
	b	.L687
.L690:
	.align	2, 0
.L689:
	.word	sPokemonJump
.L675:
	ldr	r1, [r4]
	ldr	r0, [r1, #0x28]
	cmp	r0, #0x36
	bls	.L677	@cond_branch
	mov	r0, #0x1e
	b	.L688
.L677:
	mov	r0, #0x52
	b	.L688
.L673:
	add	r2, r3, #0
	add	r2, r2, #0x50
	ldrb	r1, [r2]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L680	@cond_branch
	ldr	r0, .L691
	ldrb	r1, [r2]
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	add	r0, r3, #0
	add	r0, r0, #0x51
	ldrb	r2, [r0]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	ldrh	r1, [r1]
	add	r0, r0, r1
	str	r0, [r3, #0x28]
	bl	PokeJumpRandom
	ldr	r2, [r4]
	ldr	r3, .L691+0x4
	mov	r1, #0x3
	and	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, r3
	ldrh	r0, [r1]
	add	r0, r0, #0x2
	add	r1, r2, #0
	add	r1, r1, #0x4e
	strh	r0, [r1]
	add	r2, r2, #0x50
	ldrb	r0, [r2]
	add	r0, r0, #0x1
	strb	r0, [r2]
	b	.L681
.L692:
	.align	2, 0
.L691:
	.word	sVineBaseSpeeds
	.word	sVineSpeedDelays
.L680:
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x8
	bne	.L682	@cond_branch
	add	r1, r3, #0
	add	r1, r1, #0x51
	ldrb	r0, [r1]
	cmp	r0, #0x2
	bhi	.L683	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L682
.L683:
	mov	r0, #0x1
	str	r0, [r3, #0x6c]
.L682:
	ldr	r2, .L693
	ldr	r4, .L693+0x4
	ldr	r0, [r4]
	mov	ip, r0
	mov	r3, ip
	add	r3, r3, #0x50
	ldrb	r0, [r3]
	mov	r1, #0xf
	sub	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, r2
	mov	r0, ip
	add	r0, r0, #0x51
	ldrb	r2, [r0]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	ldrh	r1, [r1]
	add	r0, r0, r1
	mov	r1, ip
	str	r0, [r1, #0x28]
	ldrb	r0, [r3]
	add	r0, r0, #0x1
	strb	r0, [r3]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xf
	bls	.L681	@cond_branch
	bl	PokeJumpRandom
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L686	@cond_branch
	ldr	r1, [r4]
	ldr	r0, [r1, #0x28]
	sub	r0, r0, #0x5
	str	r0, [r1, #0x28]
.L686:
	ldr	r0, [r4]
	add	r0, r0, #0x50
	mov	r1, #0x0
	strb	r1, [r0]
.L681:
	ldr	r0, .L693+0x4
	ldr	r1, [r0]
.L687:
	ldr	r0, [r1, #0x28]
.L688:
	str	r0, [r1, #0x1c]
.L679:
	pop	{r4}
	pop	{r0}
	bx	r0
.L694:
	.align	2, 0
.L693:
	.word	sVineBaseSpeeds
	.word	sPokemonJump
.Lfe61:
	.size	 UpdateVineSpeed,.Lfe61-UpdateVineSpeed
	.align	2, 0
	.type	 PokeJumpRandom,function
	.thumb_func
PokeJumpRandom:
	ldr	r0, .L696
	ldr	r2, [r0]
	ldr	r1, [r2, #0x24]
	ldr	r0, .L696+0x4
	mul	r0, r0, r1
	ldr	r1, .L696+0x8
	add	r0, r0, r1
	str	r0, [r2, #0x24]
	lsr	r0, r0, #0x10
	bx	lr
.L697:
	.align	2, 0
.L696:
	.word	sPokemonJump
	.word	0x41c64e6d
	.word	0x6073
.Lfe62:
	.size	 PokeJumpRandom,.Lfe62-PokeJumpRandom
	.align	2, 0
	.type	 ResetVineAfterHit,function
	.thumb_func
ResetVineAfterHit:
	push	{lr}
	ldr	r0, .L699
	ldr	r1, [r0]
	mov	r0, #0x1
	str	r0, [r1, #0x10]
	mov	r0, #0x6
	str	r0, [r1, #0x14]
	ldr	r0, .L699+0x4
	strh	r0, [r1, #0x34]
	bl	AllowVineUpdates
	pop	{r0}
	bx	r0
.L700:
	.align	2, 0
.L699:
	.word	sPokemonJump
	.word	0x5ff
.Lfe63:
	.size	 ResetVineAfterHit,.Lfe63-ResetVineAfterHit
	.align	2, 0
	.type	 IsGameOver,function
	.thumb_func
IsGameOver:
	ldr	r0, .L702
	ldr	r0, [r0]
	ldr	r0, [r0, #0x10]
	bx	lr
.L703:
	.align	2, 0
.L702:
	.word	sPokemonJump
.Lfe64:
	.size	 IsGameOver,.Lfe64-IsGameOver
	.align	2, 0
	.type	 ResetPlayersJumpStates,function
	.thumb_func
ResetPlayersJumpStates:
	push	{r4, r5, lr}
	ldr	r5, .L710
	ldr	r4, .L710+0x4
	mov	r3, #0x0
	mov	r2, #0x0
	mov	r1, #0x4
.L708:
	ldr	r0, [r5]
	add	r0, r0, r4
	add	r0, r0, r2
	str	r3, [r0]
	add	r2, r2, #0x28
	sub	r1, r1, #0x1
	cmp	r1, #0
	bge	.L708	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L711:
	.align	2, 0
.L710:
	.word	sPokemonJump
	.word	0x82f8
.Lfe65:
	.size	 ResetPlayersJumpStates,.Lfe65-ResetPlayersJumpStates
	.align	2, 0
	.type	 ResetPlayersMonState,function
	.thumb_func
ResetPlayersMonState:
	ldr	r0, .L713
	ldr	r0, [r0]
	ldr	r1, .L713+0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r2, #0x0
	strh	r2, [r1, #0x10]
	ldr	r0, [r0]
	strh	r2, [r0, #0x12]
	bx	lr
.L714:
	.align	2, 0
.L713:
	.word	sPokemonJump
	.word	0x83ac
.Lfe66:
	.size	 ResetPlayersMonState,.Lfe66-ResetPlayersMonState
	.align	2, 0
	.type	 IsPlayersMonState,function
	.thumb_func
IsPlayersMonState:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L719
	ldr	r2, [r1]
	ldrb	r3, [r2, #0x6]
	lsl	r1, r3, #0x2
	add	r1, r1, r3
	lsl	r1, r1, #0x3
	add	r2, r2, r1
	ldr	r1, .L719+0x4
	add	r2, r2, r1
	ldrh	r1, [r2]
	cmp	r1, r0
	beq	.L716	@cond_branch
	mov	r0, #0x0
	b	.L718
.L720:
	.align	2, 0
.L719:
	.word	sPokemonJump
	.word	0x82f4
.L716:
	mov	r0, #0x1
.L718:
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 IsPlayersMonState,.Lfe67-IsPlayersMonState
	.align	2, 0
	.type	 SetMonStateJump,function
	.thumb_func
SetMonStateJump:
	ldr	r0, .L722
	ldr	r0, [r0]
	ldr	r1, .L722+0x4
	add	r2, r0, r1
	ldr	r1, [r2]
	add	r0, r0, #0x4a
	ldrh	r0, [r0]
	strh	r0, [r1, #0xe]
	ldr	r1, [r2]
	ldrh	r0, [r1, #0x10]
	strh	r0, [r1, #0x12]
	ldr	r1, [r2]
	mov	r0, #0x1
	strh	r0, [r1, #0x10]
	bx	lr
.L723:
	.align	2, 0
.L722:
	.word	sPokemonJump
	.word	0x83ac
.Lfe68:
	.size	 SetMonStateJump,.Lfe68-SetMonStateJump
	.align	2, 0
	.type	 SetMonStateHit,function
	.thumb_func
SetMonStateHit:
	push	{r4, lr}
	ldr	r0, .L725
	ldr	r2, [r0]
	ldr	r0, .L725+0x4
	add	r3, r2, r0
	ldr	r1, [r3]
	ldrh	r0, [r1, #0x10]
	strh	r0, [r1, #0x12]
	ldr	r0, [r3]
	mov	r4, #0x2
	strh	r4, [r0, #0x10]
	ldr	r1, [r3]
	add	r2, r2, #0x4a
	ldrh	r0, [r2]
	strh	r0, [r1, #0xe]
	ldr	r0, [r3]
	str	r4, [r0, #0x14]
	pop	{r4}
	pop	{r0}
	bx	r0
.L726:
	.align	2, 0
.L725:
	.word	sPokemonJump
	.word	0x83ac
.Lfe69:
	.size	 SetMonStateHit,.Lfe69-SetMonStateHit
	.align	2, 0
	.type	 SetMonStateNormal,function
	.thumb_func
SetMonStateNormal:
	ldr	r0, .L728
	ldr	r0, [r0]
	ldr	r1, .L728+0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	ldrh	r2, [r1, #0x10]
	mov	r3, #0x0
	strh	r2, [r1, #0x12]
	ldr	r0, [r0]
	strh	r3, [r0, #0x10]
	bx	lr
.L729:
	.align	2, 0
.L728:
	.word	sPokemonJump
	.word	0x83ac
.Lfe70:
	.size	 SetMonStateNormal,.Lfe70-SetMonStateNormal
	.section .rodata
	.align	1, 0
	.type	 sSoundEffects,object
	.size	 sSoundEffects,8
sSoundEffects:
	.short	0x58
	.short	0x5f
	.short	0xdd
	.short	0xfe
.text
	.align	2, 0
	.type	 UpdateGame,function
	.thumb_func
UpdateGame:
	push	{r4, r5, lr}
	ldr	r4, .L733
	ldr	r1, [r4]
	ldr	r0, [r1, #0x5c]
	cmp	r0, #0
	beq	.L731	@cond_branch
	ldr	r0, [r1, #0x78]
	bl	PrintScore
	ldr	r1, [r4]
	mov	r5, #0x0
	str	r5, [r1, #0x5c]
	add	r0, r1, #0
	add	r0, r0, #0x4d
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L731	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x71
	ldrb	r0, [r0]
	bl	DoSameJumpTimeBonus
	ldr	r1, .L733+0x4
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	PlaySE
	ldr	r0, [r4]
	add	r0, r0, #0x4d
	strb	r5, [r0]
.L731:
	ldr	r0, .L733
	ldr	r0, [r0]
	add	r0, r0, #0x74
	ldrh	r0, [r0]
	bl	PrintJumpsInRow
	bl	HandleMonState
	bl	TryUpdateVineSwing
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L734:
	.align	2, 0
.L733:
	.word	sPokemonJump
	.word	sSoundEffects
.Lfe71:
	.size	 UpdateGame,.Lfe71-UpdateGame
	.align	2, 0
	.type	 TryUpdateVineSwing,function
	.thumb_func
TryUpdateVineSwing:
	push	{lr}
	ldr	r0, .L737
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x46
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L736	@cond_branch
	ldr	r0, [r1, #0x14]
	bl	UpdateVineSwing
.L736:
	pop	{r0}
	bx	r0
.L738:
	.align	2, 0
.L737:
	.word	sPokemonJump
.Lfe72:
	.size	 TryUpdateVineSwing,.Lfe72-TryUpdateVineSwing
	.align	2, 0
	.type	 DisallowVineUpdates,function
	.thumb_func
DisallowVineUpdates:
	ldr	r0, .L740
	ldr	r0, [r0]
	add	r0, r0, #0x46
	mov	r1, #0x0
	strb	r1, [r0]
	bx	lr
.L741:
	.align	2, 0
.L740:
	.word	sPokemonJump
.Lfe73:
	.size	 DisallowVineUpdates,.Lfe73-DisallowVineUpdates
	.align	2, 0
	.type	 AllowVineUpdates,function
	.thumb_func
AllowVineUpdates:
	ldr	r0, .L743
	ldr	r0, [r0]
	add	r0, r0, #0x46
	mov	r1, #0x1
	strb	r1, [r0]
	bx	lr
.L744:
	.align	2, 0
.L743:
	.word	sPokemonJump
.Lfe74:
	.size	 AllowVineUpdates,.Lfe74-AllowVineUpdates
	.align	2, 0
	.type	 HandleMonState,function
	.thumb_func
HandleMonState:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	r6, #0x0
	ldr	r2, .L766
	ldr	r0, [r2]
	ldrb	r0, [r0, #0x5]
	mov	r9, r0
	mov	r5, #0x0
	cmp	r6, r9
	bge	.L747	@cond_branch
	mov	sl, r2
	mov	r8, r5
	mov	r7, #0x0
.L749:
	mov	r0, sl
	ldr	r3, [r0]
	add	r1, r3, r7
	ldr	r2, .L766+0x4
	add	r0, r1, r2
	ldrh	r2, [r0]
	cmp	r2, #0x1
	beq	.L752	@cond_branch
	cmp	r2, #0x1
	bgt	.L761	@cond_branch
	cmp	r2, #0
	beq	.L751	@cond_branch
	b	.L748
.L767:
	.align	2, 0
.L766:
	.word	sPokemonJump
	.word	0x82f4
.L761:
	cmp	r2, #0x2
	beq	.L756	@cond_branch
	b	.L748
.L751:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	SetMonSpriteY
	b	.L748
.L752:
	ldr	r0, .L768
	add	r4, r1, r0
	ldrh	r0, [r4]
	cmp	r0, #0x1
	bne	.L754	@cond_branch
	ldr	r0, .L768+0x4
	add	r0, r0, r1
	add	r1, r3, #0
	add	r1, r1, #0x9a
	add	r1, r1, r8
	str	r1, [sp]
	ldrh	r1, [r0]
	mov	ip, r1
	ldr	r0, [sp]
	ldrh	r0, [r0]
	cmp	ip, r0
	beq	.L753	@cond_branch
.L754:
	ldrb	r3, [r3, #0x6]
	cmp	r5, r3
	bne	.L755	@cond_branch
	strh	r2, [r4]
.L755:
	orr	r6, r6, r2
	mov	r1, sl
	ldr	r2, [r1]
	ldr	r1, .L768+0x8
	add	r0, r2, r1
	add	r0, r0, r7
	ldr	r1, .L768+0xc
	str	r1, [r0]
	add	r1, r2, #0
	add	r1, r1, #0x9a
	add	r1, r1, r8
	add	r2, r2, r7
	ldr	r0, .L768+0x4
	add	r2, r2, r0
	ldrh	r0, [r2]
	strh	r0, [r1]
.L753:
	add	r0, r5, #0
	bl	UpdateJump
	b	.L748
.L769:
	.align	2, 0
.L768:
	.word	0x82f6
	.word	0x82f2
	.word	0x82e8
	.word	0x7fffffff
.L756:
	ldr	r0, .L770
	add	r1, r1, r0
	ldrh	r0, [r1]
	cmp	r0, #0x2
	beq	.L748	@cond_branch
	ldrb	r3, [r3, #0x6]
	cmp	r5, r3
	bne	.L758	@cond_branch
	strh	r2, [r1]
.L758:
	orr	r6, r6, r2
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	bl	StartMonHitShake
.L748:
	mov	r1, #0x2
	add	r8, r8, r1
	add	r7, r7, #0x28
	add	r5, r5, #0x1
	cmp	r5, r9
	blt	.L749	@cond_branch
.L747:
	mov	r0, #0x2
	and	r0, r0, r6
	cmp	r0, #0
	beq	.L763	@cond_branch
	mov	r0, #0xff
	bl	PlaySE
	b	.L764
.L771:
	.align	2, 0
.L770:
	.word	0x82f6
.L763:
	mov	r0, #0x1
	and	r6, r6, r0
	cmp	r6, #0
	beq	.L764	@cond_branch
	mov	r0, #0xa
	bl	PlaySE
.L764:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe75:
	.size	 HandleMonState,.Lfe75-HandleMonState
	.section .rodata
	.type	 sJumpOffsets,object
sJumpOffsets:
	.byte	-0x3
	.byte	-0x6
	.byte	-0x8
	.byte	-0xa
	.byte	-0xd
	.byte	-0xf
	.byte	-0x11
	.byte	-0x13
	.byte	-0x15
	.byte	-0x17
	.byte	-0x19
	.byte	-0x1b
	.byte	-0x1c
	.byte	-0x1d
	.byte	-0x1e
	.byte	-0x1e
	.byte	-0x1e
	.byte	-0x1c
	.byte	-0x1b
	.byte	-0x1a
	.byte	-0x19
	.byte	-0x17
	.byte	-0x16
	.byte	-0x14
	.byte	-0x12
	.byte	-0x11
	.byte	-0xf
	.byte	-0xd
	.byte	-0xb
	.byte	-0x8
	.byte	-0x6
	.byte	-0x4
	.byte	-0x1
	.space	15
	.byte	-0x3
	.byte	-0x6
	.byte	-0x9
	.byte	-0xb
	.byte	-0xe
	.byte	-0x10
	.byte	-0x12
	.byte	-0x14
	.byte	-0x16
	.byte	-0x18
	.byte	-0x1a
	.byte	-0x1c
	.byte	-0x1d
	.byte	-0x1e
	.byte	-0x1e
	.byte	-0x1c
	.byte	-0x1a
	.byte	-0x18
	.byte	-0x16
	.byte	-0x14
	.byte	-0x12
	.byte	-0x10
	.byte	-0xe
	.byte	-0xb
	.byte	-0x9
	.byte	-0x6
	.byte	-0x4
	.byte	-0x1
	.space	20
	.byte	-0x3
	.byte	-0x6
	.byte	-0x9
	.byte	-0xb
	.byte	-0xd
	.byte	-0xf
	.byte	-0x11
	.byte	-0x13
	.byte	-0x15
	.byte	-0x17
	.byte	-0x19
	.byte	-0x1b
	.byte	-0x1c
	.byte	-0x1d
	.byte	-0x1e
	.byte	-0x1e
	.byte	-0x1e
	.byte	-0x1e
	.byte	-0x1d
	.byte	-0x1d
	.byte	-0x1c
	.byte	-0x1c
	.byte	-0x1b
	.byte	-0x1b
	.byte	-0x1a
	.byte	-0x19
	.byte	-0x18
	.byte	-0x16
	.byte	-0x14
	.byte	-0x12
	.byte	-0x10
	.byte	-0xe
	.byte	-0xc
	.byte	-0xb
	.byte	-0x9
	.byte	-0x6
	.byte	-0x4
	.byte	-0x1
	.space	10
	.size	 sJumpOffsets,144
.text
	.align	2, 0
	.type	 UpdateJump,function
	.thumb_func
UpdateJump:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	ldr	r0, .L781
	ldr	r2, [r0]
	ldr	r0, [r2, #0x68]
	cmp	r0, #0
	bne	.L772	@cond_branch
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L781+0x4
	add	r0, r0, r1
	add	r5, r2, r0
	ldr	r1, [r5, #0x4]
	ldr	r0, .L781+0x8
	cmp	r1, r0
	beq	.L774	@cond_branch
	add	r0, r1, #0x1
	str	r0, [r5, #0x4]
	add	r3, r0, #0
	b	.L775
.L782:
	.align	2, 0
.L781:
	.word	sPokemonJump
	.word	0x82e4
	.word	0x7fffffff
.L774:
	add	r0, r2, #0
	add	r0, r0, #0x4a
	ldrh	r1, [r0]
	ldrh	r0, [r5, #0xe]
	sub	r3, r1, r0
	ldr	r0, .L783
	cmp	r3, r0
	ble	.L776	@cond_branch
	ldr	r0, .L783+0x4
	add	r3, r3, r0
	add	r3, r3, r1
.L776:
	str	r3, [r5, #0x4]
.L775:
	cmp	r3, #0x3
	ble	.L772	@cond_branch
	sub	r3, r3, #0x4
	cmp	r3, #0x2f
	bgt	.L778	@cond_branch
	ldr	r2, .L783+0x8
	ldrh	r1, [r5, #0xc]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x4
	add	r0, r3, r0
	add	r0, r0, r2
	mov	r4, #0x0
	ldrsb	r4, [r0, r4]
	b	.L779
.L784:
	.align	2, 0
.L783:
	.word	0xfde7
	.word	-0xfde8
	.word	sJumpOffsets
.L778:
	mov	r4, #0x0
.L779:
	add	r1, r4, #0
	add	r0, r6, #0
	bl	SetMonSpriteY
	cmp	r4, #0
	bne	.L780	@cond_branch
	ldr	r0, .L785
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x6]
	cmp	r6, r0
	bne	.L780	@cond_branch
	bl	SetMonStateNormal
.L780:
	str	r4, [r5]
.L772:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L786:
	.align	2, 0
.L785:
	.word	sPokemonJump
.Lfe76:
	.size	 UpdateJump,.Lfe76-UpdateJump
	.align	2, 0
	.type	 TryUpdateScore,function
	.thumb_func
TryUpdateScore:
	push	{r4, r5, lr}
	ldr	r5, .L799
	ldr	r1, [r5]
	ldr	r0, [r1, #0x14]
	cmp	r0, #0x8
	bne	.L788	@cond_branch
	ldr	r0, [r1, #0x18]
	cmp	r0, #0x7
	bne	.L788	@cond_branch
	ldr	r4, [r1, #0x58]
	cmp	r4, #0
	bne	.L789	@cond_branch
	bl	ClearUnreadField
	ldr	r0, [r5]
	str	r4, [r0, #0x54]
	mov	r1, #0x1
	str	r1, [r0, #0x58]
	add	r0, r0, #0x71
	strb	r4, [r0]
	b	.L788
.L800:
	.align	2, 0
.L799:
	.word	sPokemonJump
.L789:
	ldr	r0, [r1, #0x54]
	cmp	r0, #0x5
	bne	.L791	@cond_branch
	ldrh	r0, [r1, #0xc]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xc]
	ldrh	r0, [r1, #0xc]
	bl	TryUpdateExcellentsRecord
	b	.L792
.L791:
	mov	r0, #0x0
	strh	r0, [r1, #0xc]
.L792:
	ldr	r4, .L801
	ldr	r1, [r4]
	ldr	r0, [r1, #0x54]
	cmp	r0, #0x1
	ble	.L793	@cond_branch
	mov	r0, #0x1
	str	r0, [r1, #0x64]
	add	r0, r1, #0
	add	r0, r0, #0x86
	add	r1, r1, #0x81
	mov	r2, #0x5
	bl	memcpy
.L793:
	bl	ClearUnreadField
	ldr	r0, [r4]
	mov	r2, #0x0
	str	r2, [r0, #0x54]
	mov	r1, #0x1
	str	r1, [r0, #0x58]
	add	r0, r0, #0x71
	strb	r2, [r0]
	ldr	r0, [r4]
	add	r2, r0, #0
	add	r2, r2, #0x74
	ldrh	r1, [r2]
	ldr	r0, .L801+0x4
	cmp	r1, r0
	bhi	.L794	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r2]
.L794:
	mov	r0, #0xa
	bl	AddJumpScore
	mov	r0, #0x3
	bl	SetLinkTimeInterval
.L788:
	ldr	r4, .L801
	ldr	r0, [r4]
	ldr	r0, [r0, #0x64]
	cmp	r0, #0
	beq	.L795	@cond_branch
	bl	DidAllPlayersClearVine
	cmp	r0, #0x1
	beq	.L796	@cond_branch
	ldr	r0, [r4]
	ldr	r0, [r0, #0x14]
	cmp	r0, #0
	bne	.L795	@cond_branch
.L796:
	ldr	r0, [r4]
	add	r0, r0, #0x86
	bl	GetNumPlayersForBonus
	bl	GetScoreBonus
	bl	AddJumpScore
	mov	r0, #0x3
	bl	SetLinkTimeInterval
	ldr	r1, [r4]
	mov	r0, #0x0
	str	r0, [r1, #0x64]
.L795:
	ldr	r4, .L801
	ldr	r0, [r4]
	ldr	r0, [r0, #0x58]
	cmp	r0, #0
	beq	.L797	@cond_branch
	bl	GetPlayersAtJumpPeak
	add	r2, r0, #0
	ldr	r1, [r4]
	ldr	r0, [r1, #0x54]
	cmp	r2, r0
	ble	.L797	@cond_branch
	str	r2, [r1, #0x54]
	add	r0, r1, #0
	add	r0, r0, #0x81
	add	r1, r1, #0x7c
	mov	r2, #0x5
	bl	memcpy
.L797:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L802:
	.align	2, 0
.L801:
	.word	sPokemonJump
	.word	0x270e
.Lfe77:
	.size	 TryUpdateScore,.Lfe77-TryUpdateScore
	.align	2, 0
	.type	 UpdateVineHitStates,function
	.thumb_func
UpdateVineHitStates:
	push	{r4, r5, lr}
	ldr	r5, .L816
	ldr	r1, [r5]
	ldr	r0, [r1, #0x14]
	cmp	r0, #0x6
	bne	.L804	@cond_branch
	ldr	r4, .L816+0x4
	add	r0, r1, r4
	ldr	r1, [r0]
	ldr	r0, [r1]
	cmp	r0, #0
	bne	.L804	@cond_branch
	ldrh	r0, [r1, #0x12]
	cmp	r0, #0x1
	bne	.L805	@cond_branch
	bl	IsGameOver
	add	r1, r0, #0
	cmp	r1, #0x1
	bne	.L805	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r0, [r0]
	str	r1, [r0, #0x14]
	b	.L804
.L817:
	.align	2, 0
.L816:
	.word	sPokemonJump
	.word	0x83ac
.L815:
	mov	r0, #0x0
	b	.L814
.L805:
	bl	SetMonStateHit
	mov	r0, #0x3
	bl	SetLinkTimeInterval
.L804:
	ldr	r0, .L818
	ldr	r1, [r0]
	ldr	r0, [r1, #0x14]
	cmp	r0, #0x7
	bne	.L807	@cond_branch
	ldr	r0, [r1, #0x18]
	cmp	r0, #0x6
	bne	.L807	@cond_branch
	ldr	r2, .L818+0x4
	add	r0, r1, r2
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x10]
	cmp	r0, #0x2
	beq	.L807	@cond_branch
	mov	r0, #0x1
	str	r0, [r1, #0x14]
	mov	r0, #0x3
	bl	SetLinkTimeInterval
.L807:
	mov	r2, #0x0
	ldr	r0, .L818
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x5]
	cmp	r2, r1
	bge	.L809	@cond_branch
	add	r3, r1, #0
	ldr	r4, .L818+0x8
	add	r1, r0, r4
.L811:
	ldrh	r0, [r1]
	cmp	r0, #0x2
	beq	.L815	@cond_branch
	add	r1, r1, #0x28
	add	r2, r2, #0x1
	cmp	r2, r3
	blt	.L811	@cond_branch
.L809:
	mov	r0, #0x1
.L814:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L819:
	.align	2, 0
.L818:
	.word	sPokemonJump
	.word	0x83ac
	.word	0x82f4
.Lfe78:
	.size	 UpdateVineHitStates,.Lfe78-UpdateVineHitStates
	.align	2, 0
	.type	 AllPlayersJumpedOrHit,function
	.thumb_func
AllPlayersJumpedOrHit:
	push	{r4, lr}
	ldr	r0, .L828
	ldr	r0, [r0]
	ldrb	r3, [r0, #0x5]
	mov	r4, #0x0
	cmp	r4, r3
	bge	.L822	@cond_branch
	ldr	r1, .L828+0x4
	add	r2, r0, r1
	add	r1, r3, #0
.L824:
	ldr	r0, [r2]
	cmp	r0, #0
	beq	.L823	@cond_branch
	add	r4, r4, #0x1
.L823:
	add	r2, r2, #0x28
	sub	r1, r1, #0x1
	cmp	r1, #0
	bne	.L824	@cond_branch
.L822:
	mov	r0, #0x0
	cmp	r4, r3
	bne	.L827	@cond_branch
	mov	r0, #0x1
.L827:
	pop	{r4}
	pop	{r1}
	bx	r1
.L829:
	.align	2, 0
.L828:
	.word	sPokemonJump
	.word	0x82f8
.Lfe79:
	.size	 AllPlayersJumpedOrHit,.Lfe79-AllPlayersJumpedOrHit
	.align	2, 0
	.type	 DidAllPlayersClearVine,function
	.thumb_func
DidAllPlayersClearVine:
	push	{r4, lr}
	mov	r2, #0x0
	ldr	r0, .L838
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x5]
	cmp	r2, r1
	bge	.L832	@cond_branch
	add	r3, r1, #0
	ldr	r4, .L838+0x4
	add	r1, r0, r4
.L834:
	ldr	r0, [r1]
	cmp	r0, #0x1
	beq	.L833	@cond_branch
	mov	r0, #0x0
	b	.L837
.L839:
	.align	2, 0
.L838:
	.word	sPokemonJump
	.word	0x82f8
.L833:
	add	r1, r1, #0x28
	add	r2, r2, #0x1
	cmp	r2, r3
	blt	.L834	@cond_branch
.L832:
	mov	r0, #0x1
.L837:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe80:
	.size	 DidAllPlayersClearVine,.Lfe80-DidAllPlayersClearVine
	.align	2, 0
	.type	 ShouldPlayAgain,function
	.thumb_func
ShouldPlayAgain:
	push	{lr}
	ldr	r0, .L851
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x45
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L841	@cond_branch
.L850:
	mov	r0, #0x0
	b	.L848
.L852:
	.align	2, 0
.L851:
	.word	sPokemonJump
.L841:
	mov	r2, #0x1
	ldrb	r0, [r1, #0x5]
	cmp	r2, r0
	bge	.L843	@cond_branch
	add	r3, r0, #0
	add	r1, r1, #0x92
.L845:
	ldrh	r0, [r1]
	cmp	r0, #0x1
	beq	.L850	@cond_branch
	add	r1, r1, #0x2
	add	r2, r2, #0x1
	cmp	r2, r3
	blt	.L845	@cond_branch
.L843:
	mov	r0, #0x1
.L848:
	pop	{r1}
	bx	r1
.Lfe81:
	.size	 ShouldPlayAgain,.Lfe81-ShouldPlayAgain
	.align	2, 0
	.type	 AddJumpScore,function
	.thumb_func
AddJumpScore:
	push	{lr}
	ldr	r1, .L855
	ldr	r2, [r1]
	ldr	r1, [r2, #0x78]
	add	r1, r1, r0
	str	r1, [r2, #0x78]
	mov	r0, #0x1
	str	r0, [r2, #0x5c]
	ldr	r0, .L855+0x4
	cmp	r1, r0
	bls	.L854	@cond_branch
	add	r0, r0, #0x1
	str	r0, [r2, #0x78]
.L854:
	pop	{r0}
	bx	r0
.L856:
	.align	2, 0
.L855:
	.word	sPokemonJump
	.word	0x18695
.Lfe82:
	.size	 AddJumpScore,.Lfe82-AddJumpScore
	.align	2, 0
	.type	 GetPlayersAtJumpPeak,function
	.thumb_func
GetPlayersAtJumpPeak:
	push	{r4, r5, r6, r7, lr}
	mov	r5, #0x0
	ldr	r1, .L865
	ldr	r0, [r1]
	ldrb	r4, [r0, #0x5]
	mov	r2, #0x0
	cmp	r5, r4
	bge	.L859	@cond_branch
	mov	ip, r1
	mov	r3, #0x0
	ldr	r7, .L865+0x4
	mov	r6, #0x1e
	neg	r6, r6
.L861:
	mov	r0, ip
	ldr	r1, [r0]
	add	r0, r1, r7
	add	r0, r0, r3
	ldr	r0, [r0]
	cmp	r0, r6
	bne	.L862	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x7c
	add	r0, r0, r2
	mov	r1, #0x1
	strb	r1, [r0]
	add	r5, r5, #0x1
	b	.L860
.L866:
	.align	2, 0
.L865:
	.word	sPokemonJump
	.word	0x82e4
.L862:
	add	r0, r1, #0
	add	r0, r0, #0x7c
	add	r0, r0, r2
	mov	r1, #0x0
	strb	r1, [r0]
.L860:
	add	r3, r3, #0x28
	add	r2, r2, #0x1
	cmp	r2, r4
	blt	.L861	@cond_branch
.L859:
	add	r0, r5, #0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe83:
	.size	 GetPlayersAtJumpPeak,.Lfe83-GetPlayersAtJumpPeak
	.align	2, 0
	.type	 AreLinkQueuesEmpty,function
	.thumb_func
AreLinkQueuesEmpty:
	push	{lr}
	mov	r2, #0x0
	ldr	r1, .L869
	ldr	r3, .L869+0x4
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L868	@cond_branch
	ldr	r3, .L869+0x8
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L868	@cond_branch
	mov	r2, #0x1
.L868:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.L870:
	.align	2, 0
.L869:
	.word	gRfu
	.word	0x69e
	.word	0x8d2
.Lfe84:
	.size	 AreLinkQueuesEmpty,.Lfe84-AreLinkQueuesEmpty
	.align	2, 0
	.type	 GetNumPlayersForBonus,function
	.thumb_func
GetNumPlayersForBonus:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	ldr	r6, .L879
	mov	r5, #0x1
.L875:
	add	r0, r4, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L874	@cond_branch
	add	r0, r5, #0
	lsl	r0, r0, r1
	orr	r2, r2, r0
	add	r3, r3, #0x1
.L874:
	add	r1, r1, #0x1
	cmp	r1, #0x4
	ble	.L875	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x71
	strb	r2, [r0]
	cmp	r2, #0
	beq	.L878	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x4d
	mov	r1, #0x1
	strb	r1, [r0]
.L878:
	add	r0, r3, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L880:
	.align	2, 0
.L879:
	.word	sPokemonJump
.Lfe85:
	.size	 GetNumPlayersForBonus,.Lfe85-GetNumPlayersForBonus
	.align	2, 0
	.type	 ClearUnreadField,function
	.thumb_func
ClearUnreadField:
	ldr	r0, .L882
	ldr	r0, [r0]
	add	r0, r0, #0x44
	mov	r1, #0x0
	strb	r1, [r0]
	bx	lr
.L883:
	.align	2, 0
.L882:
	.word	sPokemonJump
.Lfe86:
	.size	 ClearUnreadField,.Lfe86-ClearUnreadField
	.section .rodata
	.align	2, 0
	.type	 sScoreBonuses,object
	.size	 sScoreBonuses,24
sScoreBonuses:
	.word	0x0
	.word	0x0
	.word	0x32
	.word	0x64
	.word	0xc8
	.word	0x1f4
.text
	.align	2, 0
	.type	 GetScoreBonus,function
	.thumb_func
GetScoreBonus:
	ldr	r1, .L885
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bx	lr
.L886:
	.align	2, 0
.L885:
	.word	sScoreBonuses
.Lfe87:
	.size	 GetScoreBonus,.Lfe87-GetScoreBonus
	.align	2, 0
	.type	 TryUpdateExcellentsRecord,function
	.thumb_func
TryUpdateExcellentsRecord:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, .L889
	ldr	r0, [r0]
	ldrh	r2, [r0, #0xe]
	cmp	r1, r2
	bls	.L888	@cond_branch
	strh	r1, [r0, #0xe]
.L888:
	pop	{r0}
	bx	r0
.L890:
	.align	2, 0
.L889:
	.word	sPokemonJump
.Lfe88:
	.size	 TryUpdateExcellentsRecord,.Lfe88-TryUpdateExcellentsRecord
	.section .rodata
	.align	1, 0
	.type	 sPrizeItems,object
sPrizeItems:
	.short	0x8a
	.short	0x8d
	.short	0x8e
	.short	0x8f
	.short	0x90
	.short	0x91
	.short	0x92
	.short	0x93
	.size	 sPrizeItems,16
	.align	2, 0
	.type	 sPrizeQuantityData,object
sPrizeQuantityData:
	.word	0x1388
	.word	0x1
	.word	0x1f40
	.word	0x2
	.word	0x2ee0
	.word	0x3
	.word	0x3e80
	.word	0x4
	.word	0x4e20
	.word	0x5
	.size	 sPrizeQuantityData,40
.text
	.align	2, 0
	.type	 HasEnoughScoreForPrize,function
	.thumb_func
HasEnoughScoreForPrize:
	push	{lr}
	ldr	r0, .L895
	ldr	r0, [r0]
	ldr	r1, .L895+0x4
	ldr	r2, [r0, #0x78]
	ldr	r0, [r1]
	cmp	r2, r0
	bcs	.L892	@cond_branch
	mov	r0, #0x0
	b	.L894
.L896:
	.align	2, 0
.L895:
	.word	sPokemonJump
	.word	sPrizeQuantityData
.L892:
	mov	r0, #0x1
.L894:
	pop	{r1}
	bx	r1
.Lfe89:
	.size	 HasEnoughScoreForPrize,.Lfe89-HasEnoughScoreForPrize
	.align	2, 0
	.type	 GetPrizeData,function
	.thumb_func
GetPrizeData:
	push	{r4, lr}
	bl	GetPrizeItemId
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	bl	GetPrizeQuantity
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x4
	ldr	r1, .L898
	and	r4, r4, r1
	orr	r0, r0, r4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r4}
	pop	{r1}
	bx	r1
.L899:
	.align	2, 0
.L898:
	.word	0xfff
.Lfe90:
	.size	 GetPrizeData,.Lfe90-GetPrizeData
	.align	2, 0
	.type	 UnpackPrizeData,function
	.thumb_func
UnpackPrizeData:
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x1c
	strh	r3, [r2]
	lsl	r0, r0, #0x4
	lsr	r0, r0, #0x14
	strh	r0, [r1]
	bx	lr
.Lfe91:
	.size	 UnpackPrizeData,.Lfe91-UnpackPrizeData
	.align	2, 0
	.type	 GetPrizeItemId,function
	.thumb_func
GetPrizeItemId:
	push	{lr}
	bl	Random
	lsl	r0, r0, #0x10
	mov	r1, #0xe0
	lsl	r1, r1, #0xb
	and	r1, r1, r0
	ldr	r0, .L902
	lsr	r1, r1, #0xf
	add	r1, r1, r0
	ldrh	r0, [r1]
	pop	{r1}
	bx	r1
.L903:
	.align	2, 0
.L902:
	.word	sPrizeItems
.Lfe92:
	.size	 GetPrizeItemId,.Lfe92-GetPrizeItemId
	.align	2, 0
	.type	 GetPrizeQuantity,function
	.thumb_func
GetPrizeQuantity:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	mov	r4, #0x0
	ldr	r3, .L912
	ldr	r0, [r3]
	ldr	r2, .L912+0x4
	ldr	r1, [r0, #0x78]
	ldr	r0, [r2]
	cmp	r1, r0
	bcc	.L906	@cond_branch
	ldr	r5, [r2, #0x4]
	add	r6, r3, #0
	add	r3, r2, #0x4
.L907:
	add	r3, r3, #0x8
	add	r2, r2, #0x8
	add	r4, r4, #0x1
	cmp	r4, #0x4
	bhi	.L906	@cond_branch
	ldr	r0, [r6]
	ldr	r1, [r0, #0x78]
	ldr	r0, [r2]
	cmp	r1, r0
	bcc	.L906	@cond_branch
	ldr	r5, [r3]
	b	.L907
.L913:
	.align	2, 0
.L912:
	.word	sPokemonJump
	.word	sPrizeQuantityData
.L906:
	lsl	r0, r5, #0x10
	lsr	r0, r0, #0x10
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe93:
	.size	 GetPrizeQuantity,.Lfe93-GetPrizeQuantity
	.align	2, 0
	.type	 GetQuantityLimitedByBag,function
	.thumb_func
GetQuantityLimitedByBag:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	b	.L915
.L917:
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
.L915:
	cmp	r4, #0
	beq	.L916	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	bl	CheckBagHasSpace
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L917	@cond_branch
.L916:
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe94:
	.size	 GetQuantityLimitedByBag,.Lfe94-GetQuantityLimitedByBag
	.align	2, 0
	.type	 GetNumPokeJumpPlayers,function
	.thumb_func
GetNumPokeJumpPlayers:
	push	{lr}
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe95:
	.size	 GetNumPokeJumpPlayers,.Lfe95-GetNumPokeJumpPlayers
	.align	2, 0
	.type	 GetPokeJumpMultiplayerId,function
	.thumb_func
GetPokeJumpMultiplayerId:
	ldr	r0, .L922
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x6]
	bx	lr
.L923:
	.align	2, 0
.L922:
	.word	sPokemonJump
.Lfe96:
	.size	 GetPokeJumpMultiplayerId,.Lfe96-GetPokeJumpMultiplayerId
	.align	2, 0
	.type	 GetMonInfoByMultiplayerId,function
	.thumb_func
GetMonInfoByMultiplayerId:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L925
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L925+0x4
	add	r1, r1, r0
	ldr	r0, [r2]
	add	r0, r0, r1
	bx	lr
.L926:
	.align	2, 0
.L925:
	.word	sPokemonJump
	.word	0x82a8
.Lfe97:
	.size	 GetMonInfoByMultiplayerId,.Lfe97-GetMonInfoByMultiplayerId
	.align	2, 0
	.type	 GetPokeJumpPlayerName,function
	.thumb_func
GetPokeJumpPlayerName:
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L928
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	ldr	r1, [r2]
	add	r0, r0, r1
	mov	r1, #0x83
	lsl	r1, r1, #0x8
	add	r0, r0, r1
	bx	lr
.L929:
	.align	2, 0
.L928:
	.word	sPokemonJump
.Lfe98:
	.size	 GetPokeJumpPlayerName,.Lfe98-GetPokeJumpPlayerName
	.align	2, 0
	.globl	IsSpeciesAllowedInPokemonJump
	.type	 IsSpeciesAllowedInPokemonJump,function
	.thumb_func
IsSpeciesAllowedInPokemonJump:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	GetPokemonJumpSpeciesIdx
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mvn	r0, r0
	lsr	r0, r0, #0x1f
	pop	{r1}
	bx	r1
.Lfe99:
	.size	 IsSpeciesAllowedInPokemonJump,.Lfe99-IsSpeciesAllowedInPokemonJump
	.align	2, 0
	.globl	IsPokemonJumpSpeciesInParty
	.type	 IsPokemonJumpSpeciesInParty,function
	.thumb_func
IsPokemonJumpSpeciesInParty:
	push	{r4, r5, lr}
	mov	r5, #0x0
.L935:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L940
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x5
	bl	GetMonData
	cmp	r0, #0
	beq	.L934	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	IsSpeciesAllowedInPokemonJump
	cmp	r0, #0
	beq	.L934	@cond_branch
	ldr	r1, .L940+0x4
	mov	r0, #0x1
	b	.L939
.L941:
	.align	2, 0
.L940:
	.word	gPlayerParty
	.word	gSpecialVar_Result
.L934:
	add	r5, r5, #0x1
	cmp	r5, #0x5
	ble	.L935	@cond_branch
	ldr	r1, .L942
	mov	r0, #0x0
.L939:
	strh	r0, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L943:
	.align	2, 0
.L942:
	.word	gSpecialVar_Result
.Lfe100:
	.size	 IsPokemonJumpSpeciesInParty,.Lfe100-IsPokemonJumpSpeciesInParty
	.align	2, 0
	.type	 SendPacket_MonInfo,function
	.thumb_func
SendPacket_MonInfo:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r2, sp
	mov	r1, #0x1
	strb	r1, [r2]
	ldrh	r1, [r0]
	strh	r1, [r2, #0x2]
	ldr	r1, [r0, #0x4]
	str	r1, [sp, #0x8]
	ldr	r0, [r0, #0x8]
	str	r0, [sp, #0x4]
	mov	r0, sp
	bl	Rfu_SendPacket
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.Lfe101:
	.size	 SendPacket_MonInfo,.Lfe101-SendPacket_MonInfo
	.align	2, 0
	.type	 RecvPacket_MonInfo,function
	.thumb_func
RecvPacket_MonInfo:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r1, #0
	ldr	r3, .L950
	lsl	r2, r0, #0x4
	add	r0, r2, r3
	ldrh	r1, [r0]
	mov	r0, #0xff
	lsl	r0, r0, #0x8
	and	r0, r0, r1
	mov	r1, #0xbc
	lsl	r1, r1, #0x6
	cmp	r0, r1
	bne	.L949	@cond_branch
	add	r1, r3, #0x2
	add	r1, r2, r1
	mov	r0, sp
	mov	r2, #0xc
	bl	memcpy
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L947	@cond_branch
.L949:
	mov	r0, #0x0
	b	.L948
.L951:
	.align	2, 0
.L950:
	.word	gRecvCmds
.L947:
	mov	r0, sp
	ldrh	r0, [r0, #0x2]
	strh	r0, [r4]
	ldr	r0, [sp, #0x8]
	str	r0, [r4, #0x4]
	ldr	r0, [sp, #0x4]
	str	r0, [r4, #0x8]
	mov	r0, #0x1
.L948:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe102:
	.size	 RecvPacket_MonInfo,.Lfe102-RecvPacket_MonInfo
	.align	2, 0
	.type	 SendPacket_Unused,function
	.thumb_func
SendPacket_Unused:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r2, sp
	mov	r1, #0x2
	strb	r1, [r2]
	str	r0, [sp, #0x4]
	mov	r0, sp
	bl	Rfu_SendPacket
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.Lfe103:
	.size	 SendPacket_Unused,.Lfe103-SendPacket_Unused
	.align	2, 0
	.type	 SendPacket_LeaderState,function
	.thumb_func
SendPacket_LeaderState:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0xc
	mov	r3, sp
	mov	r2, #0x3
	strb	r2, [r3]
	ldr	r3, [r1, #0x8]
	lsl	r3, r3, #0xf
	ldr	r2, [sp, #0x8]
	ldr	r4, .L954
	mov	r8, r4
	and	r2, r2, r4
	orr	r2, r2, r3
	str	r2, [sp, #0x8]
	mov	r6, sp
	ldrb	r2, [r1, #0x1]
	mov	r5, #0x1f
	add	r3, r5, #0
	and	r3, r3, r2
	ldrb	r4, [r6, #0x3]
	mov	r2, #0x20
	neg	r2, r2
	and	r2, r2, r4
	orr	r2, r2, r3
	strb	r2, [r6, #0x3]
	mov	r3, sp
	ldrb	r2, [r1]
	strb	r2, [r3, #0x1]
	ldrh	r2, [r1, #0x2]
	strh	r2, [r3, #0x6]
	mov	r4, sp
	ldrh	r2, [r1, #0x4]
	mov	r1, r8
	and	r2, r2, r1
	ldrh	r3, [r4, #0x8]
	ldr	r1, .L954+0x4
	and	r1, r1, r3
	orr	r1, r1, r2
	strh	r1, [r4, #0x8]
	mov	r2, sp
	ldrh	r1, [r0, #0x10]
	strb	r1, [r2, #0x2]
	mov	r3, sp
	ldr	r1, [r0, #0x14]
	lsl	r1, r1, #0x5
	ldrb	r2, [r3, #0x3]
	and	r5, r5, r2
	orr	r5, r5, r1
	strb	r5, [r3, #0x3]
	mov	r1, sp
	ldrh	r0, [r0, #0xe]
	strh	r0, [r1, #0x4]
	mov	r0, sp
	bl	Rfu_SendPacket
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L955:
	.align	2, 0
.L954:
	.word	0x7fff
	.word	-0x8000
.Lfe104:
	.size	 SendPacket_LeaderState,.Lfe104-SendPacket_LeaderState
	.align	2, 0
	.type	 RecvPacket_LeaderState,function
	.thumb_func
RecvPacket_LeaderState:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r5, r0, #0
	add	r4, r1, #0
	ldr	r2, .L960
	ldrh	r0, [r2]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r1, r1, r0
	mov	r0, #0xbc
	lsl	r0, r0, #0x6
	cmp	r1, r0
	bne	.L958	@cond_branch
	add	r1, r2, #0x2
	mov	r0, sp
	mov	r2, #0xc
	bl	memcpy
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L958	@cond_branch
	ldr	r0, [sp, #0x8]
	lsr	r0, r0, #0xf
	str	r0, [r4, #0x8]
	mov	r0, sp
	ldrb	r1, [r0, #0x3]
	lsl	r0, r1, #0x1b
	lsr	r0, r0, #0x1b
	strb	r0, [r4, #0x1]
	mov	r0, sp
	ldrb	r0, [r0, #0x1]
	strb	r0, [r4]
	mov	r0, sp
	ldrh	r0, [r0, #0x6]
	strh	r0, [r4, #0x2]
	mov	r0, sp
	ldrh	r0, [r0, #0x8]
	lsl	r0, r0, #0x11
	lsr	r0, r0, #0x11
	strh	r0, [r4, #0x4]
	mov	r0, sp
	ldrb	r0, [r0, #0x2]
	strh	r0, [r5, #0x10]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x1d
	str	r1, [r5, #0x14]
	mov	r0, sp
	ldrh	r0, [r0, #0x4]
	strh	r0, [r5, #0xe]
	mov	r0, #0x1
	b	.L959
.L961:
	.align	2, 0
.L960:
	.word	gRecvCmds
.L958:
	mov	r0, #0x0
.L959:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe105:
	.size	 RecvPacket_LeaderState,.Lfe105-RecvPacket_LeaderState
	.align	2, 0
	.type	 SendPacket_MemberState,function
	.thumb_func
SendPacket_MemberState:
	push	{r4, lr}
	add	sp, sp, #-0xc
	mov	r4, sp
	mov	r3, #0x4
	strb	r3, [r4]
	ldrh	r3, [r0, #0x10]
	strb	r3, [r4, #0x1]
	ldr	r3, [r0, #0x14]
	strb	r3, [r4, #0x2]
	ldr	r3, [r0, #0x18]
	strb	r3, [r4, #0x3]
	mov	r3, sp
	ldrh	r0, [r0, #0xe]
	strh	r0, [r3, #0x4]
	mov	r0, sp
	strb	r1, [r0, #0x6]
	strh	r2, [r0, #0x8]
	bl	Rfu_SendPacket
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe106:
	.size	 SendPacket_MemberState,.Lfe106-SendPacket_MemberState
	.align	2, 0
	.type	 RecvPacket_MemberStateToLeader,function
	.thumb_func
RecvPacket_MemberStateToLeader:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	add	r5, r2, #0
	add	r6, r3, #0
	ldr	r3, .L967
	lsl	r2, r1, #0x4
	add	r0, r2, r3
	ldrh	r1, [r0]
	mov	r0, #0xff
	lsl	r0, r0, #0x8
	and	r0, r0, r1
	mov	r1, #0xbc
	lsl	r1, r1, #0x6
	cmp	r0, r1
	bne	.L965	@cond_branch
	add	r1, r3, #0x2
	add	r1, r2, r1
	mov	r0, sp
	mov	r2, #0xc
	bl	memcpy
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L965	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0, #0x1]
	strh	r0, [r4, #0x10]
	mov	r0, sp
	ldrb	r0, [r0, #0x2]
	str	r0, [r4, #0x14]
	mov	r0, sp
	ldrb	r0, [r0, #0x3]
	str	r0, [r4, #0x18]
	mov	r0, sp
	ldrh	r0, [r0, #0x4]
	strh	r0, [r4, #0xe]
	mov	r0, sp
	ldrb	r0, [r0, #0x6]
	strb	r0, [r5]
	mov	r0, sp
	ldrh	r0, [r0, #0x8]
	strh	r0, [r6]
	mov	r0, #0x1
	b	.L966
.L968:
	.align	2, 0
.L967:
	.word	gRecvCmds
.L965:
	mov	r0, #0x0
.L966:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe107:
	.size	 RecvPacket_MemberStateToLeader,.Lfe107-RecvPacket_MemberStateToLeader
	.align	2, 0
	.type	 RecvPacket_MemberStateToMember,function
	.thumb_func
RecvPacket_MemberStateToMember:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	ldr	r3, .L973
	lsl	r2, r1, #0x4
	add	r0, r2, r3
	ldrh	r1, [r0]
	mov	r0, #0xff
	lsl	r0, r0, #0x8
	and	r0, r0, r1
	mov	r1, #0xbc
	lsl	r1, r1, #0x6
	cmp	r0, r1
	bne	.L971	@cond_branch
	add	r1, r3, #0x2
	add	r1, r2, r1
	mov	r0, sp
	mov	r2, #0xc
	bl	memcpy
	mov	r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L971	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0, #0x1]
	strh	r0, [r4, #0x10]
	mov	r0, sp
	ldrb	r0, [r0, #0x2]
	str	r0, [r4, #0x14]
	mov	r0, sp
	ldrb	r0, [r0, #0x3]
	str	r0, [r4, #0x18]
	mov	r0, sp
	ldrh	r0, [r0, #0x4]
	strh	r0, [r4, #0xe]
	mov	r0, #0x1
	b	.L972
.L974:
	.align	2, 0
.L973:
	.word	gRecvCmds
.L971:
	mov	r0, #0x0
.L972:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe108:
	.size	 RecvPacket_MemberStateToMember,.Lfe108-RecvPacket_MemberStateToMember
	.align	2, 0
	.type	 StartPokeJumpGfx,function
	.thumb_func
StartPokeJumpGfx:
	push	{r4, lr}
	ldr	r4, .L976
	str	r0, [r4]
	bl	InitPokeJumpGfx
	ldr	r0, .L976+0x4
	mov	r1, #0x3
	bl	CreateTask
	ldr	r1, [r4]
	strb	r0, [r1, #0x6]
	ldr	r2, [r4]
	ldrb	r0, [r2, #0x6]
	mov	r1, #0x2
	bl	SetWordTaskArg
	ldr	r0, .L976+0x8
	bl	SetUpPokeJumpGfxFunc
	pop	{r4}
	pop	{r0}
	bx	r0
.L977:
	.align	2, 0
.L976:
	.word	sPokemonJumpGfx
	.word	Task_RunPokeJumpGfxFunc
	.word	LoadPokeJumpGfx
.Lfe109:
	.size	 StartPokeJumpGfx,.Lfe109-StartPokeJumpGfx
	.align	2, 0
	.type	 FreeWindowsAndDigitObj,function
	.thumb_func
FreeWindowsAndDigitObj:
	push	{lr}
	bl	FreeAllWindowBuffers
	bl	DigitObjUtil_Free
	pop	{r0}
	bx	r0
.Lfe110:
	.size	 FreeWindowsAndDigitObj,.Lfe110-FreeWindowsAndDigitObj
	.align	2, 0
	.type	 InitPokeJumpGfx,function
	.thumb_func
InitPokeJumpGfx:
	mov	r1, #0x0
	strh	r1, [r0, #0x4]
	str	r1, [r0]
	mov	r1, #0xff
	strh	r1, [r0, #0x12]
	bx	lr
.Lfe111:
	.size	 InitPokeJumpGfx,.Lfe111-InitPokeJumpGfx
	.section .rodata
	.align	1, 0
	.type	 sInterface_Pal,object
sInterface_Pal:
	.short	0x0
	.short	0x7fde
	.short	0x0
	.short	0x6b7b
	.short	0xe7f
	.short	0x5f7f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sInterface_Pal,32
	.align	1, 0
	.type	 sBg_Pal,object
sBg_Pal:
	.short	0x6273
	.short	0x4f6d
	.short	0x738d
	.short	0x7f91
	.short	0x7fb3
	.short	0x7fd8
	.short	0x4357
	.short	0x3b5c
	.short	0x439d
	.short	0x4fde
	.short	0x577b
	.short	0x578d
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.size	 sBg_Pal,32
	.align	2, 0
	.type	 sBg_Gfx,object
sBg_Gfx:
	.word	0x7e010
	.word	-0xfffffce
	.word	-0x44fe6fff
	.word	0x110130bb
	.word	0x130117e
	.word	0x1900fd0
	.word	0x1ff01bf0
	.word	-0x7d9ee0c0
	.word	0x11760200
	.word	-0x3f8899ef
	.word	0x6b00661f
	.word	0x76776666
	.word	0x877777
	.word	-0x66666789
	.word	-0x67766668
	.word	0x611d7085
	.word	0x666666
	.word	0x19107719
	.word	-0x556666e3
	.word	0x1d500340
	.word	0x10661c00
	.word	0x1b10bb1c
	.word	0x10034088
	.word	-0x78e46fff
	.word	0x39501120
	.word	0x601f60ff
	.word	-0x7feb9fa8
	.word	0x203b5001
	.word	-0x3fa76f8c
	.word	0x39f0ee1f
	.word	0x77201f70
	.word	0x10410089
	.word	0x661ff003
	.word	0x7035f0c9
	.word	0x30333301
	.word	0x30222201
	.word	0x63f1fb01
	.word	0x13f077f1
	.word	0x17001f0
	.word	0x10830176
	.word	-0x74ee32fd
	.word	0x66119311
	.word	-0x7ceee270
	.word	-0xcff89
	.word	-0x18efc1ef
	.word	0x2e112811
	.word	0x1f105511
	.word	0x1a00d790
	.word	0x2310887c
	.word	0x15110110
	.word	0x18205911
	.word	0x20fd9aa9
	.word	0x50251003
	.word	0x23201f
	.word	-0x5619bfb4
	.word	-0x66c3fcc0
	.word	0x606b3087
	.word	0x131001
	.word	-0x86566c3
	.word	0x1fa067b0
	.word	-0x24cefe90
	.word	-0xfd9ff78
	.word	0x7f01601f
	.word	-0xffcef77
	.word	0x1001301f
	.word	-0xf586f9f
	.word	-0xfecfc2
	.word	0x19f0a750
	.word	0x1ff0f070
	.word	0x1ff006b2
	.word	0x1f1001b0
	.word	0xff51d7
	.word	0x2004301
	.word	0x50070044
	.word	-0x74f0fffd
	.word	0x44441000
	.word	0x55034054
	.word	0x3000600
	.word	0x600710c7
	.word	0x55554413
	.word	0x19001f0
	.word	-0xf00b4c0
	.word	0x10014001
	.word	0x10011043
	.word	0x200c1068
	.word	-0x62f3fffd
	.word	0x54330340
	.word	0x64104300
	.word	0x30450320
	.word	0x150fe73
	.word	0x6fd02b10
	.word	0xc002fa0
	.word	0x1f04b92
	.word	0x32117f11
	.word	-0x3fe00fb5
	.word	-0x6f481de1
	.word	0x7043f01f
	.word	0x4751ff01
	.word	0x63115771
	.word	0x1f0bb30
	.word	-0x3ccf946f
	.word	-0x3f00ce0f
	.word	-0xfa6efff
	.word	-0xe9e5eff
	.word	0x210370d7
	.word	-0xaa5e2e
	.word	0x61316091
	.word	0x190f3d1
	.word	0x6f817311
	.word	-0x68aede20
	.word	-0xfc4bd03
	.word	0xba713f
	.word	0x10e0010b
	.word	0x5fc04525
	.word	-0x1f80cf21
	.word	-0x41ffcbff
	.word	0x2003310
	.word	-0x3ebfa710
	.word	-0xe83ea01
	.word	0x529f8195
	.word	-0x3fd8de91
	.word	0x20941203
	.word	-0x27df0001
	.word	-0x6cdffc80
	.word	-0x740d000e
	.word	-0x5e0e40ef
	.word	-0xd20003e
	.word	0x34da10f7
	.word	-0x70fe0e0
	.word	0x57339f50
	.word	0x347f3b43
	.word	0x11203210
	.word	0x5fb03630
	.word	-0x780f00cf
	.word	0xbf1f30
	.word	0x25323403
	.word	0x3fe03b10
	.word	0x1f01740
	.word	0x120
	.size	 sBg_Gfx,556
	.align	2, 0
	.type	 sBg_Tilemap,object
sBg_Tilemap:
	.word	0x50010
	.word	0x30002a20
	.word	0x1e001d01
	.word	-0xf5ee100
	.word	0x1d00401
	.word	0x41d041e
	.word	0x633350
	.word	0xb500100
	.word	-0xfd6ffd8
	.word	0xc3ff03d
	.word	0x28042904
	.word	0x1003ff0
	.word	0x36180035
	.word	0x3ff03700
	.word	0x4373dc0
	.word	0x35043036
	.word	0x1003ff0
	.word	0x210020
	.word	0x23002218
	.word	0x1803ff0
	.word	0xc220423
	.word	0x20042104
	.word	0x1203ff0
	.word	0x2c06002b
	.word	0x2e002d00
	.word	0x1403ff0
	.word	0x2d04002e
	.word	0x2b042c04
	.word	-0xf2fd5fc
	.word	0x3801403f
	.word	0x390300
	.word	0x2f00003a
	.word	0x31003000
	.word	0x3200
	.word	0x4330033
	.word	0x4310432
	.word	0x2f043001
	.word	0x39043a04
	.word	0x38703900
	.word	0x3ff03d10
	.word	0x3b01c0
	.word	0x3d44003c
	.word	0x3e4d00
	.word	0x3d31003e
	.word	0x43c1f04
	.word	0x5037303b
	.word	-0xfc00fff
	.word	-0xfe0fff
	.word	0x3ff001e0
	.word	0x1f001f0
	.word	0x1f03ff0
	.word	0x1f001f0
	.word	-0xfc00f01
	.word	-0xffe0fff
	.word	-0xffe0fc1
	.word	-0xffe0fff
	.word	0x1f0fe3f
	.word	0x3ff001f0
	.word	0x1f015f0
	.word	0x3f7001f0
	.word	0x1f0fb0d
	.word	0x1f001f0
	.word	0x3f100120
	.word	-0xffe0fff
	.word	0x1f0ef01
	.word	0x3f100120
	.word	-0xffe0ff2
	.word	0x2001f001
	.word	0x3f108001
	.word	0x30002
	.word	0x50004
	.word	0x7000600
	.word	0x9000800
	.word	0xa0022
	.word	0xc000b01
	.word	-0x77fbfeb0
	.word	0x40b0130
	.word	0x901000a
	.word	0x4000804
	.word	0x4060407
	.word	0x4040405
	.word	0x2040304
	.word	0xf3f1004
	.word	0x100000
	.word	0x120011
	.word	0x14000013
	.word	0x16001500
	.word	0x1700
	.word	0x190018
	.word	0x1b001a
	.word	0x1101c40
	.word	0x1b041c04
	.word	0x4001a04
	.word	0x4180419
	.word	0x160417
	.word	0x14041504
	.word	0x12041304
	.word	0x4110403
	.word	0x400f0410
	.word	0x1303f
	.word	0x240034
	.word	0x260025
	.word	0x1b02750
	.word	0x26019004
	.word	0x1c042504
	.word	0x340424
	.word	0x10013039
	.word	0x3f
	.size	 sBg_Tilemap,432
	.align	1, 0
	.type	 sVenusaur_Pal,object
sVenusaur_Pal:
	.short	0x6b5a
	.short	0x1984
	.short	0x3a6c
	.short	0x4b2b
	.short	0x5fb1
	.short	0xf1
	.short	0x19b7
	.short	0x842
	.short	0x213c
	.short	0x3a1f
	.short	0x47d3
	.short	0x1b3b
	.short	0x2bbf
	.short	0xe88
	.short	0x232d
	.short	0x7fff
	.size	 sVenusaur_Pal,32
	.align	2, 0
	.type	 sVenusaur_Gfx,object
sVenusaur_Gfx:
	.word	0x100010
	.word	-0xfffffc4
	.word	-0xffe0fff
	.word	0x57010001
	.word	0x50001000
	.word	0x500a30cb
	.word	0x550055
	.word	-0x7a8f677b
	.word	-0x77783368
	.word	0x77999900
	.word	-0x67677aa9
	.word	-0x7666fc67
	.word	-0x63346667
	.word	0x1c001d10
	.word	0x55895508
	.word	-0x7ae6ff78
	.word	-0x76ff66a8
	.word	0x5889c555
	.word	0x15566bc
	.word	-0x768893a8
	.word	0x307cbc55
	.word	0x1f
	.word	0x555888
	.word	-0x77ff77a5
	.word	-0x777a33a8
	.word	0x6bbc88
	.word	0x66675556
	.word	-0x438874a4
	.word	-0x6f33a3d6
	.word	0x3000570
	.word	0x552f1058
	.word	0x520
	.word	-0x7663fad6
	.word	-0xf02a448
	.word	-0xfd04f6a
	.word	0x50c3d001
	.word	-0x773cdfff
	.word	-0x779f3c80
	.word	0x7ba0c310
	.word	-0x66aaaafb
	.word	-0x388f42a8
	.word	-0x6f38ffab
	.word	0x5096004c
	.word	-0x38afaa39
	.word	0x4072f0e2
	.word	0xc3402b
	.word	-0x1cff4b00
	.word	0x9909b5
	.word	0x3309850
	.word	0x3008885
	.word	0x99b800
	.word	0x98bb87
	.word	-0x6447ff79
	.word	-0x33366667
	.word	-0x66936667
	.word	0xa000310
	.word	0x1009009c
	.word	0x75bc03
	.word	0x775b99
	.word	0x70000775
	.word	-0x33776700
	.word	-0x3a776644
	.word	-0x7766f734
	.word	-0x64ff3aa8
	.word	0x758958
	.word	0x75778857
	.word	0x77779885
	.word	0x3007540
	.word	-0x43496889
	.word	-0x34ff36a5
	.word	-0x3377aa34
	.word	0x3559b55
	.word	-0x6633377b
	.word	0x3f009998
	.word	0xc80140
	.word	-0x76aeffac
	.word	-0x7419ff45
	.word	-0x76fe6668
	.word	-0x76677678
	.word	-0x58ce66a8
	.word	-0x64337800
	.word	-0x633377a8
	.word	0x11855e88
	.word	-0x28ef7791
	.word	0xb100300
	.word	-0x687cfef
	.word	-0x23cffcc0
	.word	-0x3c0ffcee
	.word	-0x447a3ce0
	.word	-0x3489bdff
	.word	-0x3c0f9000
	.word	0x99c300
	.word	0x6c0302c3
	.word	0x58997707
	.word	-0x380f8344
	.word	0x752c730
	.word	0x30c7f0dd
	.word	0x30298c3
	.word	0x300c310
	.word	0x3cc7008b
	.word	-0x3c3f7778
	.word	-0x3c0fccae
	.word	0x50000330
	.word	0x588800
	.word	0x158870
	.word	-0x2288fff0
	.word	-0x22111ef0
	.word	0x1e00eee1
	.word	-0x2882ee89
	.word	0xa710aa
	.word	-0x18ef5116
	.word	0x1100aaae
	.word	0x11700100
	.word	-0x228ee223
	.word	0x57dd00dd
	.word	0x57dd7771
	.word	0x1100eeee
	.word	-0x211115af
	.word	0xdaaadd
	.word	-0x11551123
	.word	0x5756eaaa
	.word	0x66b77700
	.word	0x66777556
	.word	0x75550066
	.word	0x55556665
	.word	0x57027755
	.word	0x5ddddd55
	.word	0x7d2f0077
	.word	0x400ee79
	.word	-0x7ef9cef
	.word	-0x687637ff
	.word	-0x78ff6100
	.word	0x7188b889
	.word	0x188bbb88
	.word	0xb88871
	.word	-0x77dcfdfd
	.word	0xa88588
	.word	0xa0078b5
	.word	0x785a0278
	.word	-0x77ffa878
	.word	-0x7a8777f9
	.word	0x1588807
	.word	-0x2887ff8b
	.word	0x7011d
	.word	0x310fca2
	.word	0x14001f0
	.word	-0x3c0fdcfe
	.word	-0x5e113d00
	.word	0x7d10ea04
	.word	0x2302aaa7
	.word	0x10010000
	.word	-0x2eee8eef
	.word	-0x71ff8223
	.word	-0x3caf88bf
	.word	-0x22111112
	.word	-0x1a38ff56
	.word	-0x386fd8ae
	.word	0x7d55c500
	.word	0x30c9c740
	.word	-0x3cdf2141
	.word	0x89b501
	.word	0x12c3a0c7
	.word	0x75c30023
	.word	0x8c380ab
	.word	0x17c340
	.word	0x2312ddc3
	.word	0x12c3f0
	.word	0x3001100
	.word	0x12a001dd
	.word	0x340a810
	.word	0x71034070
	.word	0x11210300
	.word	-0x5555ff5f
	.word	-0x1155edbf
	.word	-0x2effbbb8
	.word	-0x5ebb7756
	.word	0x2358aa
	.word	0x4221daa2
	.word	0x4442ea14
	.word	0x23ad140a
	.word	-0x55efffbc
	.word	-0x7fe5fef0
	.word	-0x525efbf0
	.word	-0x55125526
	.word	0x100a0da
	.word	-0x52fcff52
	.word	0x71aa771a
	.word	-0x25ccc8ec
	.word	0xda8401
	.word	0xe1dee7
	.word	0x7eeed1de
	.word	0x7eee1117
	.word	0x1e332200
	.word	0x37333227
	.word	0x23330033
	.word	-0x7ccccccd
	.word	-0x77ef7ee3
	.word	0x1401dd77
	.word	-0x22222ee3
	.word	-0x22eecd00
	.word	0x117113d1
	.word	0x782100dd
	.word	0x7888dd12
	.word	-0x77ffeede
	.word	0x17122275
	.word	-0x6de22223
	.word	0x1ddd1b10
	.word	0x11dd0300
	.word	0xfe10410
	.word	-0x2211222f
	.word	0x1203f01
	.word	0x310c750
	.word	0x3001d4b
	.word	0x3301eee
	.word	-0x4ff4ef13
	.word	-0x180f1021
	.word	0x67020310
	.word	-0xf98fe00
	.word	0x52e730e7
	.word	-0x180f0399
	.word	0x6752e730
	.word	-0x18cf1810
	.word	-0x78ee9cee
	.word	-0x221ccf50
	.word	-0x183f3900
	.word	-0x222887ef
	.word	0x200dd41
	.word	0x11111ddd
	.word	0x25e030ed
	.word	0x200eeed
	.word	-0x24ffe212
	.word	-0xfdbed1f
	.word	-0x28df2810
	.word	-0x35fff0b0
	.word	0x20000044
	.word	-0x55feb0c0
	.word	0x3210002f
	.word	0x1010008f
	.word	0x12007f34
	.word	0x431000f3
	.word	0x10004400
	.word	0x44244441
	.word	0x44140244
	.word	0x34444444
	.word	-0x52c0fd00
	.word	0xf70300
	.word	0x10104f03
	.word	0x1770140
	.word	0x1109884
	.word	0x3403444
	.word	0x33330b10
	.word	0x310d013
	.word	0x40130e00
	.word	0x2233331e
	.word	0x42330033
	.word	0x43333234
	.word	0x33202344
	.word	0x441c0044
	.word	-0xdcce08e
	.word	0x331f7800
	.word	0x22227523
	.word	0x715433
	.word	0x3007303
	.word	0x23030013
	.word	0x2c00e121
	.word	0x320dd01
	.word	-0x211ebbce
	.word	-0x22ff3900
	.word	-0x1eed1212
	.word	0x2211ee
	.word	0x22211112
	.word	0x32222222
	.word	0x231900b5
	.word	-0x38affec0
	.word	0x110300e1
	.word	0x11d7d700
	.word	0x130310b2
	.word	0x31120300
	.word	-0xf78dd51
	.word	-0x18cf0019
	.word	-0x180f78ae
	.word	-0x78ad18d0
	.word	-0x18cf1810
	.word	-0xf1478ae
	.word	0x2e730e7
	.word	-0x78fded79
	.word	0x20e7f022
	.word	0x124462e7
	.word	-0x121cff7d
	.word	-0x20ffeeee
	.word	0x200fb22
	.word	0x1d00de00
	.word	-0x20cfba00
	.word	0x50d7c0ed
	.word	0x35080db
	.word	0x44231000
	.word	-0x7febbf00
	.word	0x47440300
	.word	0x74444220
	.word	-0x3dff37f0
	.word	0x1033ba01
	.word	0x2f102401
	.word	0x61125233
	.word	0x52043a8
	.word	-0x6cffdede
	.word	0x32170073
	.word	0x51722233
	.word	0x771e2185
	.word	-0x35ffdde9
	.word	-0x2cfffe10
	.word	-0x7fa789fe
	.word	0x7f558605
	.word	-0xcccc009
	.word	0x333206ff
	.word	0x11332223
	.word	0x52030076
	.word	0x55f52200
	.word	-0xaaadddb
	.word	0x2f120222
	.word	0x33177122
	.word	0x6833e900
	.word	0x30023
	.word	0x3102269
	.word	0x1444431
	.word	0x44423311
	.word	0x233331
	.word	0x33320069
	.word	0x33313144
	.word	0x31142143
	.word	-0x45fecbdd
	.word	0x34de0043
	.word	0x12220021
	.word	0x1f222274
	.word	-0xefc0d8d
	.word	0x7177111f
	.word	0x10a31107
	.word	-0x24af07fd
	.word	-0x78cd920d
	.word	-0x1cff18b0
	.word	0x34431047
	.word	-0x201f8ccc
	.word	0x11e7c0
	.word	-0xeede83
	.word	-0x78bd8100
	.word	-0x18cf1810
	.word	-0x180f78ae
	.word	-0x5cee18d0
	.word	0xd101e8
	.word	0x33e75003
	.word	0x3323e700
	.word	0x33310822
	.word	-0x60feeece
	.word	0x313324
	.word	0x31323433
	.word	0x21124423
	.word	0x14342201
	.word	0x14442222
	.word	0x13000501
	.word	0x17331f22
	.word	-0x7fcce00f
	.word	0x2ff1df00
	.word	0x7771f122
	.word	0x2ff5021
	.word	-0x230f887a
	.word	0x71f0000
	.word	0x7f17001f
	.word	0x1605ff5
	.word	-0x20faefee
	.word	0x40853bf0
	.word	0x771201
	.word	0x273b0070
	.word	-0x88bf600
	.word	0x1a09344
	.word	0x32e410
	.word	0x1223fd4
	.word	-0xd88edd1
	.word	-0x3fff8801
	.word	0x7311f04a
	.word	0x3107f10
	.word	0x64f0
	.word	0x5102772f
	.word	0x17007f85
	.word	0x17630022
	.word	0x71df0fe
	.word	-0xfd8bd6d
	.word	0x422749a7
	.word	-0x858ffd9
	.word	-0x1fbcff21
	.word	0x1400139f
	.word	0x1f07ff0
	.word	0x634601c0
	.word	-0x667a8fe0
	.word	-0x36aaff6f
	.word	0x681579c
	.word	-0x77aa7719
	.word	0x6997758
	.word	-0x3346cd07
	.word	0x1e40bf2a
	.word	-0x29f6aa4b
	.word	0x6bc50089
	.word	0x76c588c6
	.word	-0x3afeaa89
	.word	-0x37778835
	.word	0x3d806bcc
	.word	0x95c0020
	.word	-0x7a994431
	.word	-0x39ff9978
	.word	-0x3438777b
	.word	0x1fcb5555
	.word	-0x5774a45
	.word	0x1a471a93
	.word	0x9033a27
	.word	0x99c6a37
	.word	-0x64fcffbe
	.word	0x20992f09
	.word	0xa815003
	.word	-0x6477af87
	.word	0x8b87099
	.word	0x2c29c0d2
	.word	-0x66334f77
	.word	0x55ccc975
	.word	0x77b97004
	.word	-0x5ff888ef
	.word	0x58088967
	.word	0x1089bccc
	.word	0x55888597
	.word	-0x7a88a800
	.word	-0x77a8a878
	.word	0x57770888
	.word	0x4a019987
	.word	0x7575c9
	.word	0x5ccccb77
	.word	0x555cbbb5
	.word	-0x77337afc
	.word	0x620959bb
	.word	0x10e0589c
	.word	0x290140d6
	.word	0x55889889
	.word	-0x77fb6700
	.word	-0x6666aa45
	.word	-0x774793f0
	.word	0x9995528
	.word	-0x2cf86ac5
	.word	0x1f788889
	.word	0x608859cc
	.word	0x104759bf
	.word	0x100b1003
	.word	0x73f2c003
	.word	-0x778f180a
	.word	-0x78ef8645
	.word	-0x1e888800
	.word	0x11aad77e
	.word	0x9aa50a7
	.word	0x5309aa57
	.word	0x1011aaad
	.word	0x24daaa00
	.word	0x77adaa21
	.word	0x67dd0277
	.word	0x6511deee
	.word	0x2dd6906
	.word	-0x22122256
	.word	-0x12f95116
	.word	-0x155edb56
	.word	-0x5555c8fb
	.word	0x5566e806
	.word	0x66c77700
	.word	0x75b75556
	.word	0x75550257
	.word	0x75577ddd
	.word	-0x588a11fa
	.word	0x6772a00
	.word	0x6ed7da5
	.word	0xc4d4aef
	.word	-0x48ff7f95
	.word	-0x78777478
	.word	0x2288bbb8
	.word	0x3108887
	.word	0x11d8888
	.word	-0x77bf64f6
	.word	0x5888880b
	.word	0x58888558
	.word	-0x5ff787c0
	.word	0x77858807
	.word	0x2be8800
	.word	-0x47f888d8
	.word	-0x3cdf11fa
	.word	0x1a027fc
	.word	0x340b481
	.word	0x2030087
	.word	0x2b0310c3
	.word	0x443210
	.word	0x3005
	.word	0x11f505f2
	.word	0x344800ae
	.word	0x4235aa13
	.word	0x220caa14
	.word	0x4713444
	.word	0x44ed033b
	.word	0x300e434
	.word	-0x47f8fee0
	.word	0x300daed
	.word	0x773c771a
	.word	0x20911673
	.word	0x35601
	.word	0x27ee1e03
	.word	-0x52f622e3
	.word	-0x6af9eecf
	.word	-0x10e999fd
	.word	0x3008255
	.word	0x112a5088
	.word	0x7d32001
	.word	-0x28eeff60
	.word	0x1782d1dd
	.word	-0x77ff22ef
	.word	0x58dd1227
	.word	0x2112227
	.word	0x12222752
	.word	-0xefad8ed
	.word	0x1dd2edd
	.word	0x271dd707
	.word	0x100800d8
	.word	0x8fcee0a
	.word	0x10ba1705
	.word	-0x89466fc
	.word	-0xd5eee35
	.word	0x21000042
	.word	0x4100f8f3
	.word	0x477f3
	.word	0xff3441
	.word	0x11007f05
	.word	0x1003009f
	.word	0x15372542
	.word	-0x68fceff2
	.word	0x5b0180b3
	.word	0x23c74634
	.word	0x3001f15
	.word	0x31041
	.word	-0x63e940f6
	.word	0x52025f3
	.word	0xca0609
	.word	0x4b05eb
	.word	-0x8dbfbe4
	.word	0x8f3331
	.word	0xdff7703
	.word	0x2fff3333
	.word	-0x3cffe000
	.word	0x3c950733
	.word	-0x24d9edcd
	.word	-0x63d8a3fa
	.word	0x32332a27
	.word	-0x2ebbbcf0
	.word	-0x11ed3d00
	.word	0x2203eeed
	.word	0x22deeed1
	.word	0x10e32612
	.word	0x10224e29
	.word	0x7323422
	.word	0x17cf80bf
	.word	-0x3872ef3d
	.word	0x741000c3
	.word	0x300db26
	.word	0x2ffb0514
	.word	-0x7affefbc
	.word	0x553b0010
	.word	0xaf07ff
	.word	0x32241402
	.word	0x779b0042
	.word	0x5517b510
	.word	0x72338800
	.word	0x12225221
	.word	0x21213677
	.word	-0x103aa0f3
	.word	0xe4c0252
	.word	-0xaa3a7db
	.word	0x22af54
	.word	0x7b00083
	.word	0x222256a
	.word	0x1222555f
	.word	-0x7bf8d0ab
	.word	0x22771912
	.word	0x1a0071
	.word	0x123377d
	.word	-0x2ce934b1
	.word	0x2144f605
	.word	0x8320306
	.word	-0x3f16fe6d
	.word	0x1002236
	.word	0x33233143
	.word	0x36872134
	.word	0x221144e3
	.word	0x7df1623
	.word	-0x120191e
	.word	-0x9a1c0a
	.word	-0x740c04dc
	.word	-0x200a145c
	.word	0x140
	.size	 sVenusaur_Gfx,2384
	.align	2, 0
	.type	 sVenusaur_Tilemap,object
sVenusaur_Tilemap:
	.word	0x100010
	.word	-0xfcfffc1
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf02fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x34016001
	.word	-0xf1ffe60
	.word	-0x5ffe0fe1
	.word	0x3340401
	.word	0x34380234
	.word	-0xfc00fff
	.word	0x1016001
	.word	0x30000230
	.word	0x30043003
	.word	0x63005
	.word	0xe340f30
	.word	0xc340d34
	.word	-0xfc00f20
	.word	0xc016001
	.word	0xe300d30
	.word	0x300f3000
	.word	0x30113010
	.word	0x1a34031b
	.word	0x18341934
	.word	0x1f03ff0
	.word	0x18016080
	.word	0x1a301930
	.word	0x30001b30
	.word	0x301d301c
	.word	0x3273428
	.word	0x25342634
	.word	0x3ff02434
	.word	0x208001f0
	.word	0x25302401
	.word	0x27302630
	.word	0x30283000
	.word	0x302a3029
	.word	0x35340036
	.word	0x33343434
	.word	-0xf1fcdcc
	.word	0x2001f03f
	.word	0x33303201
	.word	0x30003430
	.word	0x30363035
	.word	0x383037
	.word	0x43344430
	.word	0x41344234
	.word	-0xfbfcbc8
	.word	0x2001f03f
	.word	0x41304001
	.word	0x30423000
	.word	0x30443043
	.word	0x46300045
	.word	0x50345130
	.word	0x340e4f34
	.word	-0xfb2cbb2
	.word	0x2001f03f
	.word	0x30004d01
	.word	0x304f304e
	.word	0x3f513050
	.word	0x1df05230
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xf402bff
	.word	-0xffe0fe5
	.word	-0xfc00fff
	.word	-0x7ffe0fff
	.word	0x340a0160
	.word	0x34083409
	.word	0x41f0e007
	.word	0x16001f0
	.word	0x30083007
	.word	0xa300809
	.word	0xb000b30
	.word	0xe143415
	.word	0x12341334
	.word	0x1f03ff0
	.word	0x120160
	.word	0x14301330
	.word	0x16301530
	.word	0x30173000
	.word	0x34203421
	.word	0x1e34381f
	.word	0x1f03ff0
	.word	0x301e0160
	.word	0x2030001f
	.word	0x22302130
	.word	0x30002330
	.word	0x342e342f
	.word	0x382c342d
	.word	0x3ff02b34
	.word	0x12001f0
	.word	0x2c302b
	.word	0x2e302d30
	.word	0x30302f30
	.word	0x30313000
	.word	0x343c343d
	.word	0x3a340e3b
	.word	0x3ff03934
	.word	0x12001f0
	.word	0x3a300039
	.word	0x3c303b30
	.word	0x30003d30
	.word	0x303f303e
	.word	0x34a344b
	.word	0x48344934
	.word	0x3ff04734
	.word	0x208001f0
	.word	0x48304701
	.word	0x4a304930
	.word	0x304b3008
	.word	0x55ff244c
	.word	0x343c5434
	.word	-0xf00cbad
	.word	0x401f02d
	.word	0x173053ff
	.word	0x4553054
	.word	0x9d256ff
	.word	0x1f02df0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xb0fff
	.word	0x1f001f0
	.word	0x345a0160
	.word	0x581c3459
	.word	0x3ff05734
	.word	0x16001f0
	.word	0x58013057
	.word	0x5a305930
	.word	0xb005b30
	.word	0x5e345f01
	.word	0x5c345d34
	.word	-0xf3fc010
	.word	0x5c016001
	.word	0x5e305d30
	.word	0x305f0030
	.word	0x30613060
	.word	0x65013466
	.word	0x63346434
	.word	0x3ff06234
	.word	0x2001f0c0
	.word	0x63306201
	.word	0x306430
	.word	0x30663065
	.word	0x30683067
	.word	0x6c346d00
	.word	0x6a346b34
	.word	-0xf968fcc
	.word	0x2001f03f
	.word	0x6a306901
	.word	0x306b0030
	.word	0x306d306c
	.word	0x6f00306e
	.word	0x73347430
	.word	0x1c347234
	.word	-0xf8fcb8f
	.word	0x2001f03f
	.word	0x307001
	.word	0x30723071
	.word	0x30743073
	.word	0x76307500
	.word	0x7a347b30
	.word	0x34790734
	.word	-0xf88cb88
	.word	0x2001f03f
	.word	0x30770001
	.word	0x30793078
	.word	0x7b05307a
	.word	0x7d307c30
	.word	0x17fff04
	.word	0x147e7a3b
	.word	-0xfd40f01
	.word	0x7eff2401
	.word	-0x80fb00
	.word	0x1f0fff9
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0fc01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1a0
	.size	 sVenusaur_Tilemap,952
	.align	1, 0
	.type	 sBonuses_Pal,object
sBonuses_Pal:
	.short	0x6273
	.short	0x3b12
	.short	0x3f75
	.short	0x1eda
	.short	0x233d
	.short	0x429c
	.short	0x56fe
	.short	0x298c
	.short	0x2e54
	.short	0x2af9
	.short	0x27bf
	.short	0x7293
	.short	0x356b
	.short	0x3655
	.short	0x3f3c
	.short	0x7af6
	.size	 sBonuses_Pal,32
	.align	2, 0
	.type	 sBonuses_Gfx,object
sBonuses_Gfx:
	.word	0x154010
	.word	-0xfffffc8
	.word	0x6001f001
	.word	0xcc01
	.word	0xedc000
	.word	0xeeec00
	.word	-0x1111fd40
	.word	-0x71112400
	.word	0xc01520
	.word	-0x23333334
	.word	-0x11122223
	.word	0x130ee40
	.word	-0x72777773
	.word	-0xa70008
	.word	0x20ff0200
	.word	-0x22e1ffcc
	.word	-0x22bc2223
	.word	-0x7777e1b0
	.word	0x1a008888
	.word	0x800120
	.word	-0x123f77b6
	.word	-0x113f0722
	.word	-0x3f007200
	.word	-0x23007212
	.word	-0x7ed12
	.word	-0x47fcdf14
	.word	-0xf8ef45
	.word	0x7777ff00
	.word	-0x65568001
	.word	-0x5580ed01
	.word	-0x44fc6f56
	.word	-0xf4bf85
	.word	-0x8888100
	.word	-0x8556801
	.word	-0x5558eb01
	.word	0x7a030079
	.word	-0x855fd00
	.word	-0x585558f7
	.word	0x7a030079
	.word	0x171700a7
	.word	0x797777
	.word	0x2b007a3f
	.word	0x3f0003a0
	.word	0x100710e0
	.word	-0x56dcffa0
	.word	-0x55568009
	.word	0xf00f742
	.word	-0x65556809
	.word	0x707a3e00
	.word	0x100300b7
	.word	-0x82fff9
	.word	0x29779aaa
	.word	0x1600aaff
	.word	0x771e00aa
	.word	0x86630a9
	.word	-0x48888845
	.word	0x7777c020
	.word	0x3a00b377
	.word	0x403a00aa
	.word	0x10779a03
	.word	-0x28a1fffd
	.word	0x5c000f20
	.word	-0xceff01
	.word	0x7209800
	.word	0x30fe0f10
	.word	0xc10013
	.word	0x400751ac
	.word	0x108220e6
	.word	0xeb7703
	.word	0x203e003a
	.word	-0x20ff0021
	.word	-0x6f8bff01
	.word	-0x4448c5fd
	.word	0x7e00eb30
	.word	0x799710
	.word	0x10d57a03
	.word	-0x84ffff9
	.word	0xff6a00
	.word	-0x4cef44f9
	.word	-0x47b48e72
	.word	0x300dcbb
	.word	0x3006301
	.word	0x1bb5c8e
	.word	0x7b11b873
	.word	0x3f04b51
	.word	-0x44b46557
	.word	-0x55881c00
	.word	0xa96300
	.word	0x4456016f
	.word	-0x48e8ff49
	.word	0x7b20a97b
	.word	-0x68fc4449
	.word	0x7bbbbbaa
	.word	-0x3fb49e89
	.word	0x795f03
	.word	0x3f00b73f
	.word	0x3204b51
	.word	0x43705b01
	.word	-0x445688e1
	.word	-0x5efa000
	.word	-0x31efb4ef
	.word	0xac5b11
	.word	-0x48ff483d
	.word	0x4201b7
	.word	-0x204444ea
	.word	0x4b114311
	.word	0x3153217b
	.word	0x1032057
	.word	-0x1261df8d
	.word	0x4b010411
	.word	0x10bb4100
	.word	-0x44f4fffd
	.word	0x20ff9d01
	.word	0x110f2007
	.word	0x20020083
	.word	0x207a2076
	.word	-0x485ff6a
	.word	0x3e100130
	.word	0x330cb50
	.word	0xa70b10
	.word	-0x3eccffd
	.word	-0x64ffa4af
	.word	0x67510320
	.word	0x7e00a310
	.word	0xbfb8bb
	.word	0x4008d43
	.word	-0x24ed0cee
	.word	0xb130313
	.word	0x12ff1313
	.word	0x126750fb
	.word	0x13ff52f3
	.word	0x6313130b
	.word	0x53ff355
	.word	0x22288d88
	.word	0x22020022
	.word	0x33f53ff3
	.word	0x201a003f
	.word	0x283f4301
	.word	0x122d301
	.word	-0x23ddfd25
	.word	-0x13ddd712
	.word	0x68180320
	.word	0x71011
	.word	0x2007222
	.word	0x222297
	.word	0x2222aa97
	.word	0x7222aaa7
	.word	0x300a941
	.word	0x7111aaaa
	.word	0xa0720aa
	.word	0x22277777
	.word	0x5027ce00
	.word	0x1a779e7
	.word	0x170027a3
	.word	-0x22ff8ee9
	.word	0x3f000100
	.word	0x77030096
	.word	0x273750a9
	.word	-0x54fee0f0
	.word	0x300fa11
	.word	0x21100710
	.word	0x43009601
	.word	0x2743109a
	.word	0xc311fa
	.word	0x101f2066
	.word	0x777b0007
	.word	-0x54558200
	.word	0xaa7e00
	.word	0x4600aa0f
	.word	0x461079
	.word	0x10176e7e
	.word	0x227e0007
	.word	-0x7cef8200
	.word	-0x1085fd00
	.word	0x7e202600
	.word	0x721f60
	.word	0x23a0083
	.word	0x2b035085
	.word	0x300977a
	.word	0x71030072
	.word	0x3e000710
	.word	0x3e00227f
	.word	0x3004300
	.word	0x3e006d00
	.word	0x3104700
	.word	0x1011173b
	.word	0x27513e
	.word	0x5c002786
	.word	0x10b99b20
	.word	0x3007703
	.word	-0x20cfe4ee
	.word	0x300a972
	.word	0x700b00de
	.word	0x20117703
	.word	-0x3ef7700
	.word	-0x49566f00
	.word	0xaaf810
	.word	0x170360f0
	.word	0x6b710730
	.word	-0x23eec6e8
	.word	-0x7cfefd00
	.word	0x118e0300
	.word	0x18719301
	.word	0x6b519b11
	.word	-0x5556fcd0
	.word	0x11180111
	.word	0x971111
	.word	0x11977103
	.word	0xb80400
	.word	-0x24af65bb
	.word	0x5f727b11
	.word	0x1f771779
	.word	0x11111777
	.word	0x306a0063
	.word	0x701f0003
	.word	-0x5688d1b9
	.word	0x51773f00
	.word	0x4303106b
	.word	0xa0173f
	.word	-0x6cfee8ae
	.word	0x11777711
	.word	0x4b51f711
	.word	0x1f000320
	.word	0xaa2700
	.word	0x2043007e
	.word	-0x6f888b7d
	.word	0x5e001f
	.word	0x37017a3b
	.word	0xbf1179
	.word	0x7e00117e
	.word	0x6b515610
	.word	0x7b010310
	.word	0x11faab30
	.word	0x21221293
	.word	0x6b2124
	.word	0x3009a03
	.word	0x114b7a
	.word	0x11113b
	.word	0x200113e
	.word	0x2ef1700
	.word	0xa38063
	.word	0x7600797b
	.word	0x1201a10
	.word	0xfe6321
	.word	-0x2f74ff2c
	.word	0x61df2003
	.word	0x1003a06b
	.word	-0x56b48e57
	.word	0x1877de00
	.word	0x8d2400
	.word	-0x7800cfc
	.word	0x67505f33
	.word	0x7ff37ff3
	.word	0x44487fa3
	.word	0x200be44
	.word	0x337ff344
	.word	0x201a007f
	.word	0x487f4301
	.word	0x44f301a0
	.word	-0x23bb04ff
	.word	0x4d4448ee
	.word	0x380320ec
	.word	0x71033
	.word	0x2007422
	.word	0x44449700
	.word	-0x7bbb5569
	.word	0x44aa08a7
	.word	0x300a974
	.word	0x2133aaaa
	.word	0x720aa73
	.word	0x44477777
	.word	0x47526f01
	.word	0x477f93
	.word	0x33733717
	.word	0x746d447f
	.word	0x6c010300
	.word	0x10f60044
	.word	0x43014703
	.word	0x330310ba
	.word	0x3f400740
	.word	0x109a0300
	.word	0xd64743
	.word	0x473e102a
	.word	0x20375e00
	.word	0x793fe34a
	.word	0x108e01e9
	.word	0x770f3003
	.word	0x479a9c00
	.word	0x47166100
	.word	0x700a744
	.word	0xf00a7
	.word	-0x56e08bfd
	.word	0x4100379a
	.word	0x3e004900
	.word	0x3209b60
	.word	0x300995f
	.word	0x15a70277
	.word	-0x5ffcffe7
	.word	0x807109f
	.word	0x47a77774
	.word	0x33374300
	.word	0x720d033
	.word	0x793fc0
	.word	0x7aaa47b1
	.word	0x445b44
	.word	0x71033c1
	.word	0x740170
	.word	-0x20dcfe86
	.word	0x3104800
	.word	0xa10033
	.word	0x300b00c7
	.word	0x3b4b0001
	.word	0x3007974
	.word	0x3303200
	.word	0x3f0077
	.word	-0x20af1d4c
	.word	0x1700e06
	.word	0xa9779a
	.word	0x10c7a916
	.word	0x388b7117
	.word	0x300dc33
	.word	0x300a301
	.word	0x1338e2e
	.word	-0x44eec74d
	.word	0x3308b51
	.word	0xaa68a9
	.word	-0x68fcff4a
	.word	-0x688cfd00
	.word	0x400e033
	.word	-0x609c600d
	.word	0x37777737
	.word	-0x7cfe61cd
	.word	0x37037aa
	.word	0x3209721
	.word	0x1a33e702
	.word	0x377773
	.word	0x7aff002e
	.word	-0xe65f900
	.word	-0x29fe70ff
	.word	0x61010350
	.word	0x777733
	.word	-0x680e01d6
	.word	0x2125f53
	.word	0x39108311
	.word	0x3102910
	.word	0x6840ce9a
	.word	0x77731330
	.word	-0x96f70ff
	.word	-0x48867fa0
	.word	0x378000
	.word	0x7983111f
	.word	0x6e01d400
	.word	0xaf03a0
	.word	-0x5cfe68ed
	.word	-0x3f748e8d
	.word	0x200003
	.word	0x11337fde
	.word	0x318b1183
	.word	0x11b6117
	.word	0x1201307d
	.word	-0x74fe44dc
	.word	0x20320073
	.word	0x73360003
	.word	0x3b115710
	.word	0x711f10df
	.word	0x2d027997
	.word	0x1300310
	.word	-0x20ede8f0
	.word	0x2300385f
	.word	-0xcfbff73
	.word	0x509f33bf
	.word	-0x3a400c99
	.word	-0x405c400d
	.word	0x666668
	.word	-0x400c99fe
	.word	0xbf33f5
	.word	0x4301201a
	.word	0x130268bf
	.word	0x21b0266
	.word	0x68eedc66
	.word	0x320ec66
	.word	0x10554158
	.word	0x77766607
	.word	-0x73fe9989
	.word	0x7601666b
	.word	0x10790340
	.word	0xf405503
	.word	0x760c1d00
	.word	0x679aaa
	.word	-0x65fcfff7
	.word	0x10976467
	.word	0x5713300f
	.word	0x66130075
	.word	0x675e77
	.word	0x29007a0b
	.word	-0x5feefcf0
	.word	-0x3966c7dd
	.word	0x7f23ff20
	.word	0x666667
	.word	0x76c7081b
	.word	0x769d05bb
	.word	0x6c003200
	.word	0x30574a10
	.word	0x3c220132
	.word	0x3800a966
	.word	-0x1c9e21ef
	.word	0x77554e10
	.word	0x207a7731
	.word	-0x5692ef3f
	.word	0x3a1067aa
	.word	0x300ce
	.word	0x407a9a42
	.word	0x79007d
	.word	0x667f673f
	.word	0x60001520
	.word	0xf000710
	.word	0xb000320
	.word	0x7a462100
	.word	-0x569954f0
	.word	-0x2fdcef66
	.word	0x556d5703
	.word	0x5f400710
	.word	-0x6fb4ef66
	.word	0x5f405503
	.word	0x8110d0
	.word	0x3d07625
	.word	0x75555557
	.word	0x110710fe
	.word	0x49bc3e3
	.word	0x3037163d
	.word	0x77210101
	.word	0x5f00797d
	.word	-0x3ccf62d0
	.word	0x5f109d70
	.word	0x7fc10076
	.word	0x31270097
	.word	0x11fb1078
	.word	0x40df5b1f
	.word	-0x18d4dfc1
	.word	0x4a014211
	.word	0x7a761711
	.word	0x7107f00
	.word	0x51f87f10
	.word	0x1007303b
	.word	0x71df700f
	.word	-0x23aaa715
	.word	0x20300e5
	.word	-0x71fcfffd
	.word	0x58130255
	.word	0x10fe1b12
	.word	0xeb116e
	.word	0x21f31103
	.word	0x10320f7
	.word	0x754f55a6
	.word	0x579a4b40
	.word	0xd108d01
	.word	0x79211501
	.word	0x1bc01ff
	.word	0x630f00c0
	.word	0x130331cf
	.word	0x213200ac
	.word	0x205573c4
	.word	0x31cb311f
	.word	0x57aaef
	.word	0x333e1054
	.word	0x1f10757a
	.word	0x5555b900
	.word	-0x14de1cef
	.word	0x712310de
	.word	0x13129a49
	.word	-0x1cdedff0
	.word	0x75aa3220
	.word	0x3033019a
	.word	0x5503007d
	.word	0x554200
	.word	-0x8be20c9
	.word	0x20579b00
	.word	0x20594103
	.word	0x210f0007
	.word	0xb31fd03
	.word	-0x606c6c8f
	.word	0x3990eb51
	.word	0xa93d30
	.word	0x5d12fe35
	.word	0x5bb0eb31
	.word	0x7d305f70
	.word	0x7db03f30
	.word	0x3521ffa9
	.word	-0x1dfa0a4
	.word	0x57102320
	.word	0x60010f00
	.word	0x61df5610
	.word	0x7903c0cb
	.word	0x77000300
	.word	0x3b0bf80
	.word	0x55175d30
	.word	0x23005855
	.word	-0xbfbff73
	.word	-0xfc0cba1
	.word	0x1201e00
	.word	0x5f745ff4
	.word	0xccccc
	.word	-0x322222f6
	.word	-0x21e5ff34
	.word	0x5d83f34
	.word	-0x70000012
	.word	-0x7045f328
	.word	0x11ccf
	.word	0xcde
	.word	0x300ceee
	.word	0xcee01
	.word	0xcdeee8
	.word	0x7753be0d
	.word	-0x415541f3
	.word	0xc99aa23
	.word	-0x32d8f175
	.word	0x1f5e6201
	.word	0x630ef79a
	.word	0xcb70390
	.word	-0x8ef45
	.word	-0x70b3ff78
	.word	0x20cdeed
	.word	0xceee8ff
	.word	0x300d8ff
	.word	-0x3211df71
	.word	-0x4431fd00
	.word	-0x311175
	.word	0x43100710
	.word	0x3004b10
	.word	0x1b7d5310
	.word	-0x41f38d00
	.word	0x50d301fe
	.word	0xd03804b
	.word	0x501f5d02
	.word	-0x32fcbfb5
	.word	0x6300bb57
	.word	-0x7494ff45
	.word	0x7b107300
	.word	-0x74a445f4
	.word	0x10d80200
	.word	-0x21e1be0d
	.word	0x13110b11
	.word	0x711ff1c2
	.word	-0x7ddddde1
	.word	-0x7da4f428
	.word	0x4c421cf7
	.word	0x243681b
	.word	-0x45fc8544
	.word	-0x68f4fce0
	.word	0x1b1c776d
	.word	0xaaa610b
	.word	-0x66fcafb8
	.word	0x1afa8f0a
	.word	0x3b9e1c9b
	.word	-0x54289425
	.word	-0x5cefdd21
	.word	-0x54ff577e
	.word	0x22b30022
	.word	-0x7ddd4500
	.word	0xcd41ee
	.word	-0x7eee31fd
	.word	0x710ceee
	.word	0x106750fa
	.word	0x3dc36873
	.word	0x775f0bbf
	.word	-0x1088e0e5
	.word	0x3006b10
	.word	0x20aa7310
	.word	0x3b8b0003
	.word	-0x120d5dd
	.word	0x3806b40
	.word	-0x1cf518e6
	.word	0x6b50c51a
	.word	0x56cd0340
	.word	0x11830011
	.word	0x41818b00
	.word	-0x7e85f5c1
	.word	-0xefdff10
	.word	-0x5ec00ec1
	.word	-0x7bbbbbc1
	.word	-0x9f75828
	.word	0x77bf0784
	.word	0x298f1979
	.word	-0xffc527
	.word	0x7180320
	.word	0x221a0700
	.word	0x5ff1fb49
	.word	-0x60a6fd00
	.word	0x29760aea
	.word	-0x66fcbfb1
	.word	0x4a776a03
	.word	0xabb447e
	.word	0x4200443e
	.word	0x3904700
	.word	0x105f2937
	.word	0x8454c3
	.word	-0x2cffbb35
	.word	0x44db0044
	.word	-0x3211df7c
	.word	0x33ce0300
	.word	-0x131117d
	.word	-0x7ceff8f0
	.word	-0x60476ce8
	.word	-0x1ef7d7f7
	.word	-0x1488dbf8
	.word	0x7f617ff1
	.word	0x18773f09
	.word	0xf09775f
	.word	-0x66a0fcf0
	.word	0x20aa0300
	.word	0x8ab0003
	.word	0x118f0966
	.word	-0x74af0381
	.word	0x3a090380
	.word	-0x74af60a8
	.word	0x33cd0340
	.word	0x33a300ad
	.word	0x4183ab00
	.word	-0x7cc5f781
	.word	-0xe1efe00
	.word	-0x5e800e81
	.word	-0x79999981
	.word	0x777a05d8
	.word	0x10df4686
	.word	-0x5635e8fd
	.word	-0x6ce971fc
	.word	0x38ebfb15
	.word	0x747480f
	.word	0x46076646
	.word	0x20321766
	.word	0x5b25bf03
	.word	-0x317fd986
	.word	0x150e1dbf
	.word	0x281b26f5
	.word	0x6797f1f
	.word	0x17ff47e0
	.word	0x265f109a
	.word	0xb004a
	.word	0x41677f3e
	.word	0x66c356db
	.word	0x67031046
	.word	0x503638ff
	.word	0x3e28fa03
	.word	0x1f0c0700
	.word	-0x20d87500
	.word	0x7a030079
	.word	0x580320f5
	.word	0x11871041
	.word	0x2b018623
	.word	0x42330166
	.word	0x663b0166
	.word	0xcdee86
	.word	0x550fce03
	.word	0x10ceee85
	.word	0xff2607
	.word	-0x4091fa15
	.word	0x5a90350
	.word	0x3059052e
	.word	0x10532001
	.word	-0x273fa15
	.word	0x76050310
	.word	0x1001c70
	.word	0xc06cb5a
	.word	-0x22fcef57
	.word	0x13400b51
	.word	-0x7965c789
	.word	-0x68e389ca
	.word	0x75754700
	.word	-0x186518b0
	.word	0x790b41
	.word	-0x1cefa8c2
	.word	0x37eb10fd
	.word	0x27792771
	.word	0x41ff5646
	.word	0x5017556b
	.word	0x405c00cb
	.word	0x47557903
	.word	-0x14afaa4d
	.word	-0x32d4fcc0
	.word	0x55030155
	.word	0x42850b01
	.word	0x70c2003f
	.word	-0xdfdff7b
	.word	0x3f423f
	.size	 sBonuses_Gfx,2736
	.align	2, 0
	.type	 sBonuses_Tilemap,object
sBonuses_Tilemap:
	.word	0x200010
	.word	-0x4fefffe0
	.word	0x2100101
	.word	-0xf78fcf0
	.word	0x10791001
	.word	-0xfd63f86
	.word	0x11001
	.word	0x10051004
	.word	0x10071006
	.word	0x9100800
	.word	0xb100a10
	.word	0x100c0010
	.word	0x100e100d
	.word	0x7c18107b
	.word	0x2df07d10
	.word	0xf1001f0
	.word	0x10100010
	.word	0x10121011
	.word	0x14001013
	.word	0x16101510
	.word	0x101710
	.word	0x10191018
	.word	0x107f107e
	.word	0x2df08060
	.word	0x11001f0
	.word	0x41101a18
	.word	0x1001f01b
	.word	0x187a1081
	.word	-0xf00d210
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf07fe10
	.word	-0xffe0fff
	.word	0x5701f001
	.word	0x391038fb
	.word	0x6001f0d8
	.word	0x3f88c01
	.word	0x103a01a0
	.word	0x3c10003b
	.word	0x3e103d10
	.word	0x10003f10
	.word	0x10411040
	.word	0x431042
	.word	0x45104410
	.word	-0x72efb9f0
	.word	0x108e1000
	.word	0x1090108f
	.word	0x35f0c091
	.word	0x10470180
	.word	0x10491048
	.word	0x4b104a00
	.word	0x4d104c10
	.word	0x104e0010
	.word	0x1050104f
	.word	0x52001051
	.word	-0x6defacf0
	.word	0x6109310
	.word	0x10951094
	.word	-0x58ca0f6a
	.word	0x103754fb
	.word	0x6001f055
	.word	0x3f89701
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f1d
	.word	0x1c016801
	.word	0x1f01d10
	.word	-0x7d9ffee0
	.word	0x1e0fdf7
	.word	0x101f101e
	.word	0x21100020
	.word	0x23102210
	.word	0x10002410
	.word	0x10261025
	.word	0x281027
	.word	-0x7cefd6f0
	.word	-0x7aef7bf0
	.word	-0xf79efd0
	.word	0x2a01c031
	.word	0x102b10
	.word	0x102d102c
	.word	0x102f102e
	.word	0x31103000
	.word	0x33103210
	.word	0x10340010
	.word	0x10871035
	.word	-0x76e7ef78
	.word	0x31f08a10
	.word	0x103601e8
	.word	0x1f0df37
	.word	-0x874fee0
	.word	-0xffe0f03
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x8f871ff
	.word	-0xfa8efaa
	.word	0x1f001
	.word	-0x77f67ff
	.word	0x10581007
	.word	0x105a1059
	.word	0x5c105b00
	.word	0x5e105d10
	.word	0x105f0010
	.word	0x10611060
	.word	0x63001062
	.word	0x65106410
	.word	0x106610
	.word	0x10991067
	.word	0x109b109a
	.word	-0x62ef6400
	.word	-0x60ef61f0
	.word	-0x1f5fbff0
	.word	0x6910683f
	.word	0x106a10
	.word	0x106c106b
	.word	0x106e106d
	.word	0x70106f00
	.word	0x72107110
	.word	0x18630010
	.word	0x10741073
	.word	0x76001075
	.word	-0x5def5ef0
	.word	0x10a310
	.word	0x10a510a4
	.word	0x10a710a6
	.word	-0x400f57bd
	.word	0x78107718
	.word	0x1f001f0
	.word	-0x56feff41
	.word	0x1f007f8
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x1fe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x120
	.size	 sBonuses_Tilemap,1324
	.align	2, 0
	.type	 sBgTemplates,object
	.size	 sBgTemplates,16
sBgTemplates:
	.byte	0xb0
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xe6
	.byte	0x25
	.byte	0x0
	.space	1
	.byte	0xc9
	.byte	0x16
	.byte	0x0
	.space	1
	.byte	0xdf
	.byte	0x31
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sWindowTemplates,object
sWindowTemplates:
	.byte	0x0
	.byte	0x13
	.byte	0x0
	.byte	0x6
	.byte	0x2
	.byte	0x2
	.short	0x13
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x6
	.byte	0x2
	.byte	0x2
	.short	0x1f
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates,24
	.align	2, 0
	.type	 sPokeJumpGfxFuncs,object
sPokeJumpGfxFuncs:
	.word	0x0
	.word	LoadPokeJumpGfx
	.word	0x1
	.word	PrintPlayerNamesNoHighlight
	.word	0x2
	.word	PrintPlayerNamesWithHighlight
	.word	0x3
	.word	ErasePlayerNames
	.word	0x4
	.word	Msg_WantToPlayAgain
	.word	0x5
	.word	Msg_SavingDontTurnOff
	.word	0x6
	.word	EraseMessage
	.word	0x7
	.word	Msg_SomeoneDroppedOut
	.word	0x9
	.word	DoPokeJumpCountdown
	.word	0x8
	.word	Msg_CommunicationStandby
	.size	 sPokeJumpGfxFuncs,80
.text
	.align	2, 0
	.type	 SetUpPokeJumpGfxFuncById,function
	.thumb_func
SetUpPokeJumpGfxFuncById:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r5, #0x0
	ldr	r4, .L987
.L984:
	ldr	r0, [r4]
	cmp	r0, r6
	bne	.L983	@cond_branch
	ldr	r0, [r4, #0x4]
	bl	SetUpPokeJumpGfxFunc
.L983:
	add	r4, r4, #0x8
	add	r5, r5, #0x1
	cmp	r5, #0x9
	bls	.L984	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L988:
	.align	2, 0
.L987:
	.word	sPokeJumpGfxFuncs
.Lfe112:
	.size	 SetUpPokeJumpGfxFuncById,.Lfe112-SetUpPokeJumpGfxFuncById
	.align	2, 0
	.type	 IsPokeJumpGfxFuncFinished,function
	.thumb_func
IsPokeJumpGfxFuncFinished:
	ldr	r0, .L991
	ldr	r0, [r0]
	ldr	r1, [r0]
	mov	r0, #0x1
	eor	r1, r1, r0
	neg	r0, r1
	orr	r0, r0, r1
	lsr	r0, r0, #0x1f
	bx	lr
.L992:
	.align	2, 0
.L991:
	.word	sPokemonJumpGfx
.Lfe113:
	.size	 IsPokeJumpGfxFuncFinished,.Lfe113-IsPokeJumpGfxFuncFinished
	.align	2, 0
	.type	 SetUpPokeJumpGfxFunc,function
	.thumb_func
SetUpPokeJumpGfxFunc:
	push	{r4, lr}
	add	r2, r0, #0
	ldr	r4, .L994
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x6]
	mov	r1, #0x0
	bl	SetWordTaskArg
	ldr	r1, [r4]
	mov	r0, #0x0
	strh	r0, [r1, #0x4]
	str	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L995:
	.align	2, 0
.L994:
	.word	sPokemonJumpGfx
.Lfe114:
	.size	 SetUpPokeJumpGfxFunc,.Lfe114-SetUpPokeJumpGfxFunc
	.align	2, 0
	.type	 Task_RunPokeJumpGfxFunc,function
	.thumb_func
Task_RunPokeJumpGfxFunc:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	ldr	r0, .L998
	ldr	r0, [r0]
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L997	@cond_branch
	add	r0, r1, #0
	mov	r1, #0x0
	bl	GetWordTaskArg
	bl	_call_via_r0
.L997:
	pop	{r0}
	bx	r0
.L999:
	.align	2, 0
.L998:
	.word	sPokemonJumpGfx
.Lfe115:
	.size	 Task_RunPokeJumpGfxFunc,.Lfe115-Task_RunPokeJumpGfxFunc
	.align	2, 0
	.type	 LoadPokeJumpGfx,function
	.thumb_func
LoadPokeJumpGfx:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	ldr	r6, .L1010
	ldr	r1, [r6]
	ldrh	r5, [r1, #0x4]
	cmp	r5, #0x1
	bne	.LCB7378
	b	.L1003	@long jump
.LCB7378:
	cmp	r5, #0x1
	bgt	.L1008	@cond_branch
	cmp	r5, #0
	beq	.L1002	@cond_branch
	b	.L1001
.L1011:
	.align	2, 0
.L1010:
	.word	sPokemonJumpGfx
.L1008:
	cmp	r5, #0x2
	bne	.LCB7393
	b	.L1005	@long jump
.LCB7393:
	b	.L1001
.L1002:
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L1012
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	ldr	r0, .L1012+0x4
	bl	InitWindows
	bl	ResetBgPositions
	bl	ResetTempTileDataBuffers
	ldr	r0, [r6]
	bl	LoadSpriteSheetsAndPalettes
	bl	InitDigitPrinters
	ldr	r0, .L1012+0x8
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L1012+0xc
	str	r5, [sp]
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r1, .L1012+0x10
	mov	r4, #0x1
	str	r4, [sp]
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r0, .L1012+0x14
	mov	r1, #0x30
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L1012+0x18
	str	r5, [sp]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r1, .L1012+0x1c
	str	r4, [sp]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r0, .L1012+0x20
	mov	r1, #0x10
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, .L1012+0x24
	str	r5, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r1, .L1012+0x28
	str	r4, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r0, .L1012+0x2c
	mov	r1, #0x20
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r1, [r6]
	mov	r0, #0xd3
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	mov	r0, #0x0
	bl	SetBgTilemapBuffer
	mov	r0, #0x20
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	bl	PrintScoreSuffixes
	mov	r0, #0x0
	bl	PrintScore
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xe0
	bl	LoadStdWindowGfxOnBg
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0xd0
	bl	LoadUserWindowGfx2
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	b	.L1009
.L1013:
	.align	2, 0
.L1012:
	.word	sBgTemplates
	.word	sWindowTemplates
	.word	sBg_Pal
	.word	sBg_Gfx
	.word	sBg_Tilemap
	.word	sVenusaur_Pal
	.word	sVenusaur_Gfx
	.word	sVenusaur_Tilemap
	.word	sBonuses_Pal
	.word	sBonuses_Gfx
	.word	sBonuses_Tilemap
	.word	sInterface_Pal
.L1003:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1001	@cond_branch
	bl	CreateJumpMonSprites
	ldr	r0, [r6]
	bl	CreateVineSprites
	ldr	r0, [r6]
	mov	r1, #0x6
	bl	UpdateVineAnim
	mov	r0, #0x3
	bl	ShowBg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x1
	bl	HideBg
.L1009:
	ldr	r1, [r6]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
	b	.L1001
.L1005:
	mov	r0, #0x1
	str	r0, [r1]
.L1001:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe116:
	.size	 LoadPokeJumpGfx,.Lfe116-LoadPokeJumpGfx
	.align	2, 0
	.type	 PrintPlayerNamesNoHighlight,function
	.thumb_func
PrintPlayerNamesNoHighlight:
	push	{r4, lr}
	ldr	r4, .L1027
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x4]
	cmp	r0, #0x1
	beq	.L1017	@cond_branch
	cmp	r0, #0x1
	bgt	.L1025	@cond_branch
	cmp	r0, #0
	beq	.L1016	@cond_branch
	b	.L1015
.L1028:
	.align	2, 0
.L1027:
	.word	sPokemonJumpGfx
.L1025:
	cmp	r0, #0x2
	beq	.L1019	@cond_branch
	cmp	r0, #0x3
	beq	.L1021	@cond_branch
	b	.L1015
.L1016:
	bl	AddPlayerNameWindows
	b	.L1026
.L1017:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1015	@cond_branch
	mov	r0, #0x0
	bl	PrintPokeJumpPlayerNames
	b	.L1026
.L1019:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1015	@cond_branch
	bl	DrawPlayerNameWindows
.L1026:
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
	b	.L1015
.L1021:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1015	@cond_branch
	ldr	r1, [r4]
	mov	r0, #0x1
	str	r0, [r1]
.L1015:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe117:
	.size	 PrintPlayerNamesNoHighlight,.Lfe117-PrintPlayerNamesNoHighlight
	.align	2, 0
	.type	 PrintPlayerNamesWithHighlight,function
	.thumb_func
PrintPlayerNamesWithHighlight:
	push	{r4, lr}
	ldr	r4, .L1042
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x4]
	cmp	r0, #0x1
	beq	.L1032	@cond_branch
	cmp	r0, #0x1
	bgt	.L1040	@cond_branch
	cmp	r0, #0
	beq	.L1031	@cond_branch
	b	.L1030
.L1043:
	.align	2, 0
.L1042:
	.word	sPokemonJumpGfx
.L1040:
	cmp	r0, #0x2
	beq	.L1034	@cond_branch
	cmp	r0, #0x3
	beq	.L1036	@cond_branch
	b	.L1030
.L1031:
	bl	AddPlayerNameWindows
	b	.L1041
.L1032:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1030	@cond_branch
	mov	r0, #0x1
	bl	PrintPokeJumpPlayerNames
	b	.L1041
.L1034:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1030	@cond_branch
	bl	DrawPlayerNameWindows
.L1041:
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
	b	.L1030
.L1036:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1030	@cond_branch
	ldr	r1, [r4]
	mov	r0, #0x1
	str	r0, [r1]
.L1030:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe118:
	.size	 PrintPlayerNamesWithHighlight,.Lfe118-PrintPlayerNamesWithHighlight
	.align	2, 0
	.type	 ErasePlayerNames,function
	.thumb_func
ErasePlayerNames:
	push	{r4, r5, lr}
	bl	GetNumPokeJumpPlayers
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r0, .L1061
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x4]
	cmp	r0, #0
	beq	.L1046	@cond_branch
	cmp	r0, #0x1
	beq	.L1052	@cond_branch
	b	.L1045
.L1062:
	.align	2, 0
.L1061:
	.word	sPokemonJumpGfx
.L1046:
	mov	r4, #0x0
	cmp	r4, r5
	bge	.L1048	@cond_branch
.L1050:
	ldr	r0, .L1063
	ldr	r0, [r0]
	lsl	r1, r4, #0x1
	add	r0, r0, #0x1c
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	ClearWindowTilemap
	add	r4, r4, #0x1
	cmp	r4, r5
	blt	.L1050	@cond_branch
.L1048:
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldr	r0, .L1063
	ldr	r1, [r0]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
	b	.L1045
.L1064:
	.align	2, 0
.L1063:
	.word	sPokemonJumpGfx
.L1052:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1045	@cond_branch
	mov	r4, #0x0
	cmp	r4, r5
	bge	.L1055	@cond_branch
.L1057:
	ldr	r0, .L1065
	ldr	r0, [r0]
	lsl	r1, r4, #0x1
	add	r0, r0, #0x1c
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	RemoveWindow
	add	r4, r4, #0x1
	cmp	r4, r5
	blt	.L1057	@cond_branch
.L1055:
	ldr	r0, .L1065
	ldr	r1, [r0]
	mov	r0, #0x1
	str	r0, [r1]
.L1045:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1066:
	.align	2, 0
.L1065:
	.word	sPokemonJumpGfx
.Lfe119:
	.size	 ErasePlayerNames,.Lfe119-ErasePlayerNames
	.align	2, 0
	.type	 Msg_WantToPlayAgain,function
	.thumb_func
Msg_WantToPlayAgain:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r5, .L1078
	ldr	r0, [r5]
	ldrh	r4, [r0, #0x4]
	cmp	r4, #0x1
	beq	.L1070	@cond_branch
	cmp	r4, #0x1
	bgt	.L1076	@cond_branch
	cmp	r4, #0
	beq	.L1069	@cond_branch
	b	.L1068
.L1079:
	.align	2, 0
.L1078:
	.word	sPokemonJumpGfx
.L1076:
	cmp	r4, #0x2
	beq	.L1072	@cond_branch
	b	.L1068
.L1069:
	mov	r0, #0x1
	mov	r1, #0x8
	mov	r2, #0x14
	mov	r3, #0x2
	bl	AddMessageWindow
	ldr	r1, [r5]
	strh	r0, [r1, #0x12]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1080
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x12]
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L1077
.L1081:
	.align	2, 0
.L1080:
	.word	gText_WantToPlayAgain2
.L1070:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1068	@cond_branch
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x12]
	bl	PutWindowTilemap
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x12]
	mov	r1, #0x1
	mov	r2, #0xe
	bl	DrawTextBorderOuter
	mov	r0, #0x17
	mov	r1, #0x7
	mov	r2, #0x0
	bl	CreatePokeJumpYesNoMenu
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L1077:
	ldr	r1, [r5]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
	b	.L1068
.L1072:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1068	@cond_branch
	ldr	r1, [r5]
	mov	r0, #0x1
	str	r0, [r1]
.L1068:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe120:
	.size	 Msg_WantToPlayAgain,.Lfe120-Msg_WantToPlayAgain
	.align	2, 0
	.type	 Msg_SavingDontTurnOff,function
	.thumb_func
Msg_SavingDontTurnOff:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r5, .L1093
	ldr	r0, [r5]
	ldrh	r4, [r0, #0x4]
	cmp	r4, #0x1
	beq	.L1085	@cond_branch
	cmp	r4, #0x1
	bgt	.L1091	@cond_branch
	cmp	r4, #0
	beq	.L1084	@cond_branch
	b	.L1083
.L1094:
	.align	2, 0
.L1093:
	.word	sPokemonJumpGfx
.L1091:
	cmp	r4, #0x2
	beq	.L1087	@cond_branch
	b	.L1083
.L1084:
	mov	r0, #0x2
	mov	r1, #0x7
	mov	r2, #0x1a
	mov	r3, #0x4
	bl	AddMessageWindow
	ldr	r1, [r5]
	strh	r0, [r1, #0x12]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1095
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x12]
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L1092
.L1096:
	.align	2, 0
.L1095:
	.word	gText_SavingDontTurnOffPower
.L1085:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1083	@cond_branch
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x12]
	bl	PutWindowTilemap
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x12]
	mov	r1, #0x1
	mov	r2, #0xe
	bl	DrawTextBorderOuter
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L1092:
	ldr	r1, [r5]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
	b	.L1083
.L1087:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1083	@cond_branch
	ldr	r1, [r5]
	mov	r0, #0x1
	str	r0, [r1]
.L1083:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe121:
	.size	 Msg_SavingDontTurnOff,.Lfe121-Msg_SavingDontTurnOff
	.align	2, 0
	.type	 EraseMessage,function
	.thumb_func
EraseMessage:
	push	{r4, r5, lr}
	ldr	r5, .L1104
	ldr	r0, [r5]
	ldrh	r4, [r0, #0x4]
	cmp	r4, #0
	beq	.L1099	@cond_branch
	cmp	r4, #0x1
	beq	.L1100	@cond_branch
	b	.L1098
.L1105:
	.align	2, 0
.L1104:
	.word	sPokemonJumpGfx
.L1099:
	bl	ClearMessageWindow
	bl	DestroyYesNoMenu
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldr	r1, [r5]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
	b	.L1098
.L1100:
	bl	RemoveMessageWindow
	cmp	r0, #0
	bne	.L1098	@cond_branch
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1098	@cond_branch
	ldr	r0, [r5]
	str	r4, [r0]
.L1098:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe122:
	.size	 EraseMessage,.Lfe122-EraseMessage
	.align	2, 0
	.type	 Msg_SomeoneDroppedOut,function
	.thumb_func
Msg_SomeoneDroppedOut:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r5, .L1117
	ldr	r0, [r5]
	ldrh	r4, [r0, #0x4]
	cmp	r4, #0x1
	beq	.L1109	@cond_branch
	cmp	r4, #0x1
	bgt	.L1115	@cond_branch
	cmp	r4, #0
	beq	.L1108	@cond_branch
	b	.L1107
.L1118:
	.align	2, 0
.L1117:
	.word	sPokemonJumpGfx
.L1115:
	cmp	r4, #0x2
	beq	.L1111	@cond_branch
	b	.L1107
.L1108:
	mov	r0, #0x2
	mov	r1, #0x8
	mov	r2, #0x16
	mov	r3, #0x4
	bl	AddMessageWindow
	ldr	r1, [r5]
	strh	r0, [r1, #0x12]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1119
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x12]
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L1116
.L1120:
	.align	2, 0
.L1119:
	.word	gText_SomeoneDroppedOut2
.L1109:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1107	@cond_branch
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x12]
	bl	PutWindowTilemap
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x12]
	mov	r1, #0x1
	mov	r2, #0xe
	bl	DrawTextBorderOuter
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L1116:
	ldr	r1, [r5]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
	b	.L1107
.L1111:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1107	@cond_branch
	ldr	r1, [r5]
	mov	r0, #0x1
	str	r0, [r1]
.L1107:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe123:
	.size	 Msg_SomeoneDroppedOut,.Lfe123-Msg_SomeoneDroppedOut
	.align	2, 0
	.type	 Msg_CommunicationStandby,function
	.thumb_func
Msg_CommunicationStandby:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r5, .L1132
	ldr	r0, [r5]
	ldrh	r4, [r0, #0x4]
	cmp	r4, #0x1
	beq	.L1124	@cond_branch
	cmp	r4, #0x1
	bgt	.L1130	@cond_branch
	cmp	r4, #0
	beq	.L1123	@cond_branch
	b	.L1122
.L1133:
	.align	2, 0
.L1132:
	.word	sPokemonJumpGfx
.L1130:
	cmp	r4, #0x2
	beq	.L1126	@cond_branch
	b	.L1122
.L1123:
	mov	r0, #0x7
	mov	r1, #0xa
	mov	r2, #0x10
	mov	r3, #0x2
	bl	AddMessageWindow
	ldr	r1, [r5]
	strh	r0, [r1, #0x12]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1134
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x12]
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L1131
.L1135:
	.align	2, 0
.L1134:
	.word	gText_CommunicationStandby4
.L1124:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1122	@cond_branch
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x12]
	bl	PutWindowTilemap
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x12]
	mov	r1, #0x1
	mov	r2, #0xe
	bl	DrawTextBorderOuter
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L1131:
	ldr	r1, [r5]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
	b	.L1122
.L1126:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1122	@cond_branch
	ldr	r1, [r5]
	mov	r0, #0x1
	str	r0, [r1]
.L1122:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe124:
	.size	 Msg_CommunicationStandby,.Lfe124-Msg_CommunicationStandby
	.align	2, 0
	.type	 DoPokeJumpCountdown,function
	.thumb_func
DoPokeJumpCountdown:
	push	{r4, r5, lr}
	ldr	r5, .L1143
	ldr	r0, [r5]
	ldrh	r4, [r0, #0x4]
	cmp	r4, #0
	beq	.L1138	@cond_branch
	cmp	r4, #0x1
	beq	.L1139	@cond_branch
	b	.L1137
.L1144:
	.align	2, 0
.L1143:
	.word	sPokemonJumpGfx
.L1138:
	bl	StartPokeJumpCountdown
	ldr	r1, [r5]
	ldrh	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x4]
	b	.L1137
.L1139:
	bl	IsPokeJumpCountdownRunning
	cmp	r0, #0
	bne	.L1137	@cond_branch
	ldr	r0, [r5]
	str	r4, [r0]
.L1137:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe125:
	.size	 DoPokeJumpCountdown,.Lfe125-DoPokeJumpCountdown
	.align	2, 0
	.type	 SetUpResetVineGfx,function
	.thumb_func
SetUpResetVineGfx:
	push	{lr}
	ldr	r1, .L1146
	ldr	r0, [r1]
	mov	r2, #0x0
	strb	r2, [r0, #0xa]
	ldr	r0, [r1]
	strb	r2, [r0, #0xb]
	ldr	r2, [r1]
	mov	r0, #0x6
	strb	r0, [r2, #0xc]
	ldr	r0, [r1]
	ldrb	r0, [r0, #0xc]
	bl	UpdateVineSwing
	pop	{r0}
	bx	r0
.L1147:
	.align	2, 0
.L1146:
	.word	sPokemonJumpGfx
.Lfe126:
	.size	 SetUpResetVineGfx,.Lfe126-SetUpResetVineGfx
	.align	2, 0
	.type	 ResetVineGfx,function
	.thumb_func
ResetVineGfx:
	push	{r4, lr}
	ldr	r0, .L1158
	ldr	r2, [r0]
	ldrb	r3, [r2, #0xa]
	add	r4, r0, #0
	cmp	r3, #0
	beq	.L1150	@cond_branch
	cmp	r3, #0x1
	beq	.L1154	@cond_branch
	b	.L1149
.L1159:
	.align	2, 0
.L1158:
	.word	sPokemonJumpGfx
.L1150:
	ldrb	r0, [r2, #0xb]
	add	r0, r0, #0x1
	strb	r0, [r2, #0xb]
	ldr	r1, [r4]
	ldrb	r0, [r1, #0xb]
	cmp	r0, #0xa
	bls	.L1151	@cond_branch
	strb	r3, [r1, #0xb]
	ldr	r0, [r4]
	ldrb	r1, [r0, #0xc]
	add	r1, r1, #0x1
	strb	r1, [r0, #0xc]
	ldr	r1, [r4]
	ldrb	r0, [r1, #0xc]
	cmp	r0, #0x9
	bls	.L1151	@cond_branch
	strb	r3, [r1, #0xc]
	ldr	r1, [r4]
	ldrb	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xa]
.L1151:
	ldr	r0, [r4]
	ldrb	r0, [r0, #0xc]
	bl	UpdateVineSwing
	ldr	r0, [r4]
	ldrb	r0, [r0, #0xc]
	cmp	r0, #0x7
	bne	.L1149	@cond_branch
.L1154:
	mov	r0, #0x0
	b	.L1157
.L1149:
	mov	r0, #0x1
.L1157:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe127:
	.size	 ResetVineGfx,.Lfe127-ResetVineGfx
	.section .rodata
	.type	 sPluralTxt,object
sPluralTxt:
	.byte	0xc3
	.byte	0xbf
	.byte	0xcd
	.byte	0xff
	.size	 sPluralTxt,4
.text
	.align	2, 0
	.type	 PrintPrizeMessage,function
	.thumb_func
PrintPrizeMessage:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	ldr	r5, .L1164
	ldr	r1, [r5]
	add	r1, r1, #0x26
	add	r0, r4, #0
	bl	CopyItemName
	ldr	r0, [r5]
	add	r0, r0, #0x66
	add	r1, r6, #0
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	sub	r4, r4, #0x85
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	cmp	r4, #0x29
	bhi	.L1161	@cond_branch
	cmp	r6, #0x1
	bls	.L1161	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, #0x26
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	beq	.L1161	@cond_branch
	ldr	r0, [r5]
	add	r0, r1, r0
	add	r0, r0, #0x25
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x26
	ldr	r1, .L1164+0x4
	bl	StringAppend
.L1161:
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r4, .L1164
	ldr	r1, [r4]
	add	r1, r1, #0x26
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r1, [r4]
	add	r1, r1, #0x66
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, [r4]
	add	r0, r0, #0xa6
	ldr	r1, .L1164+0x8
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	mov	r0, #0x4
	mov	r1, #0x8
	mov	r2, #0x16
	mov	r3, #0x4
	bl	AddMessageWindow
	ldr	r2, [r4]
	mov	r5, #0x0
	mov	r3, #0x0
	strh	r0, [r2, #0x12]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r2, r2, #0xa6
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	str	r3, [sp, #0x8]
	mov	r1, #0x2
	bl	AddTextPrinterParameterized
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x12]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r1, [r4]
	ldr	r0, .L1164+0xc
	strh	r0, [r1, #0x14]
	strb	r5, [r1, #0xd]
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1165:
	.align	2, 0
.L1164:
	.word	sPokemonJumpGfx
	.word	sPluralTxt
	.word	gText_AwesomeWonF701F700
	.word	0x101
.Lfe128:
	.size	 PrintPrizeMessage,.Lfe128-PrintPrizeMessage
	.align	2, 0
	.type	 PrintPrizeFilledBagMessage,function
	.thumb_func
PrintPrizeFilledBagMessage:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, .L1167
	ldr	r1, [r4]
	add	r1, r1, #0x26
	bl	CopyItemName
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r1, [r4]
	add	r1, r1, #0x26
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, [r4]
	add	r0, r0, #0xa6
	ldr	r1, .L1167+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	mov	r0, #0x4
	mov	r1, #0x8
	mov	r2, #0x16
	mov	r3, #0x4
	bl	AddMessageWindow
	ldr	r2, [r4]
	mov	r6, #0x0
	mov	r5, #0x0
	strh	r0, [r2, #0x12]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r2, r2, #0xa6
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x12]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	strh	r5, [r0, #0x14]
	strb	r6, [r0, #0xd]
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1168:
	.align	2, 0
.L1167:
	.word	sPokemonJumpGfx
	.word	gText_FilledStorageSpace2
.Lfe129:
	.size	 PrintPrizeFilledBagMessage,.Lfe129-PrintPrizeFilledBagMessage
	.align	2, 0
	.type	 PrintNoRoomForPrizeMessage,function
	.thumb_func
PrintNoRoomForPrizeMessage:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, .L1170
	ldr	r1, [r4]
	add	r1, r1, #0x26
	bl	CopyItemName
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r1, [r4]
	add	r1, r1, #0x26
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, [r4]
	add	r0, r0, #0xa6
	ldr	r1, .L1170+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	mov	r0, #0x4
	mov	r1, #0x9
	mov	r2, #0x16
	mov	r3, #0x2
	bl	AddMessageWindow
	ldr	r2, [r4]
	mov	r6, #0x0
	mov	r5, #0x0
	strh	r0, [r2, #0x12]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r2, r2, #0xa6
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0xff
	str	r1, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x12]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	strh	r5, [r0, #0x14]
	strb	r6, [r0, #0xd]
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1171:
	.align	2, 0
.L1170:
	.word	sPokemonJumpGfx
	.word	gText_CantHoldMore
.Lfe130:
	.size	 PrintNoRoomForPrizeMessage,.Lfe130-PrintNoRoomForPrizeMessage
	.align	2, 0
	.type	 DoPrizeMessageAndFanfare,function
	.thumb_func
DoPrizeMessageAndFanfare:
	push	{r4, lr}
	ldr	r4, .L1187
	ldr	r0, [r4]
	ldrb	r0, [r0, #0xd]
	cmp	r0, #0x1
	beq	.L1176	@cond_branch
	cmp	r0, #0x1
	bgt	.L1184	@cond_branch
	cmp	r0, #0
	beq	.L1174	@cond_branch
	b	.L1173
.L1188:
	.align	2, 0
.L1187:
	.word	sPokemonJumpGfx
.L1184:
	cmp	r0, #0x2
	beq	.L1179	@cond_branch
	cmp	r0, #0x3
	beq	.L1181	@cond_branch
	b	.L1173
.L1174:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1173	@cond_branch
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x12]
	bl	PutWindowTilemap
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x12]
	mov	r1, #0x1
	mov	r2, #0xe
	bl	DrawTextBorderOuter
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldr	r1, [r4]
	ldrb	r0, [r1, #0xd]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xd]
	b	.L1173
.L1176:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1173	@cond_branch
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x14]
	cmp	r0, #0
	bne	.L1178	@cond_branch
	ldrb	r0, [r1, #0xd]
	add	r0, r0, #0x2
	b	.L1186
.L1178:
	ldrh	r0, [r1, #0x14]
	bl	PlayFanfare
	ldr	r1, [r4]
	ldrb	r0, [r1, #0xd]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xd]
.L1179:
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1173	@cond_branch
	ldr	r0, .L1189
	ldr	r1, [r0]
	ldrb	r0, [r1, #0xd]
	add	r0, r0, #0x1
.L1186:
	strb	r0, [r1, #0xd]
.L1181:
	mov	r0, #0x0
	b	.L1185
.L1190:
	.align	2, 0
.L1189:
	.word	sPokemonJumpGfx
.L1173:
	mov	r0, #0x1
.L1185:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe131:
	.size	 DoPrizeMessageAndFanfare,.Lfe131-DoPrizeMessageAndFanfare
	.align	2, 0
	.type	 ClearMessageWindow,function
	.thumb_func
ClearMessageWindow:
	push	{r4, lr}
	ldr	r4, .L1193
	ldr	r0, [r4]
	ldrh	r0, [r0, #0x12]
	cmp	r0, #0xff
	beq	.L1192	@cond_branch
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	rbox_fill_rectangle
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x12]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldr	r1, [r4]
	mov	r0, #0x0
	strb	r0, [r1, #0xd]
.L1192:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1194:
	.align	2, 0
.L1193:
	.word	sPokemonJumpGfx
.Lfe132:
	.size	 ClearMessageWindow,.Lfe132-ClearMessageWindow
	.align	2, 0
	.type	 RemoveMessageWindow,function
	.thumb_func
RemoveMessageWindow:
	push	{r4, lr}
	ldr	r4, .L1206
	ldr	r1, [r4]
	ldrh	r0, [r1, #0x12]
	cmp	r0, #0xff
	bne	.L1196	@cond_branch
.L1205:
	mov	r0, #0x0
	b	.L1204
.L1207:
	.align	2, 0
.L1206:
	.word	sPokemonJumpGfx
.L1196:
	ldrb	r0, [r1, #0xd]
	cmp	r0, #0
	bne	.L1198	@cond_branch
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1197	@cond_branch
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x12]
	bl	RemoveWindow
	ldr	r1, [r4]
	mov	r0, #0xff
	strh	r0, [r1, #0x12]
	ldrb	r0, [r1, #0xd]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xd]
	b	.L1205
.L1198:
	cmp	r0, #0x1
	beq	.L1205	@cond_branch
.L1197:
	mov	r0, #0x1
.L1204:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe133:
	.size	 RemoveMessageWindow,.Lfe133-RemoveMessageWindow
	.align	2, 0
	.type	 HandlePlayAgainInput,function
	.thumb_func
HandlePlayAgainInput:
	push	{lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe134:
	.size	 HandlePlayAgainInput,.Lfe134-HandlePlayAgainInput
	.align	2, 0
	.type	 AddMessageWindow,function
	.thumb_func
AddMessageWindow:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	ldr	r6, .L1210
	ldr	r4, [sp]
	and	r4, r4, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x10
	ldr	r5, .L1210+0x4
	and	r4, r4, r5
	orr	r4, r4, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x8
	ldr	r0, .L1210+0x8
	and	r4, r4, r0
	orr	r4, r4, r1
	lsl	r2, r2, #0x18
	ldr	r0, .L1210+0xc
	and	r4, r4, r0
	orr	r4, r4, r2
	str	r4, [sp]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, [sp, #0x4]
	and	r0, r0, r6
	orr	r0, r0, r3
	and	r0, r0, r5
	mov	r1, #0xf0
	lsl	r1, r1, #0x4
	orr	r0, r0, r1
	ldr	r1, .L1210+0x10
	and	r0, r0, r1
	mov	r1, #0x86
	lsl	r1, r1, #0xf
	orr	r0, r0, r1
	str	r0, [sp, #0x4]
	mov	r0, sp
	bl	AddWindow
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	add	r0, r4, #0
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L1211:
	.align	2, 0
.L1210:
	.word	-0x100
	.word	-0xff01
	.word	-0xff0001
	.word	0xffffff
	.word	0xffff
.Lfe135:
	.size	 AddMessageWindow,.Lfe135-AddMessageWindow
	.align	2, 0
	.type	 CreatePokeJumpYesNoMenu,function
	.thumb_func
CreatePokeJumpYesNoMenu:
	push	{r4, r5, lr}
	add	sp, sp, #-0x14
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r5, .L1213
	ldr	r3, [sp, #0xc]
	and	r3, r3, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x10
	ldr	r4, .L1213+0x4
	and	r3, r3, r4
	orr	r3, r3, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x8
	ldr	r0, .L1213+0x8
	and	r3, r3, r0
	orr	r3, r3, r1
	ldr	r0, .L1213+0xc
	and	r3, r3, r0
	mov	r0, #0xc0
	lsl	r0, r0, #0x13
	orr	r3, r3, r0
	str	r3, [sp, #0xc]
	ldr	r0, [sp, #0x10]
	and	r0, r0, r5
	mov	r1, #0x4
	orr	r0, r0, r1
	and	r0, r0, r4
	mov	r1, #0x80
	lsl	r1, r1, #0x2
	orr	r0, r0, r1
	ldr	r1, .L1213+0x10
	and	r0, r0, r1
	mov	r1, #0xac
	lsl	r1, r1, #0xe
	orr	r0, r0, r1
	str	r0, [sp, #0x10]
	mov	r0, #0xa
	str	r0, [sp]
	mov	r0, #0xd
	str	r0, [sp, #0x4]
	str	r2, [sp, #0x8]
	add	r0, sp, #0xc
	mov	r1, #0x2
	mov	r2, #0x0
	mov	r3, #0x2
	bl	CreateYesNoMenu
	add	sp, sp, #0x14
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1214:
	.align	2, 0
.L1213:
	.word	-0x100
	.word	-0xff01
	.word	-0xff0001
	.word	0xffffff
	.word	0xffff
.Lfe136:
	.size	 CreatePokeJumpYesNoMenu,.Lfe136-CreatePokeJumpYesNoMenu
	.section .rodata
.LC205:
	.byte	0x0
	.byte	0x2
	.byte	0x3
.text
	.align	2, 0
	.type	 PrintScoreSuffixes,function
	.thumb_func
PrintScoreSuffixes:
	push	{r4, lr}
	add	sp, sp, #-0x10
	ldr	r1, .L1216
	add	r0, sp, #0xc
	mov	r2, #0x3
	bl	memcpy
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, sp, #0xc
	str	r0, [sp]
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r0, .L1216+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	AddTextPrinterParameterized3
	add	r0, sp, #0xc
	str	r0, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L1216+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L1217:
	.align	2, 0
.L1216:
	.word	.LC205
	.word	gText_SpacePoints2
	.word	gText_SpaceTimes3
.Lfe137:
	.size	 PrintScoreSuffixes,.Lfe137-PrintScoreSuffixes
	.section .rodata
	.type	 sVenusaurStates,object
sVenusaurStates:
	.byte	0x2
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.size	 sVenusaurStates,10
	.align	2, 0
	.type	 sSpriteSheet_Digits,object
	.size	 sSpriteSheet_Digits,8
sSpriteSheet_Digits:
	.word	gMinigameDigits_Gfx
	.short	0x0
	.short	0x320
	.align	2, 0
	.type	 sSpritePalette_Digits,object
	.size	 sSpritePalette_Digits,8
sSpritePalette_Digits:
	.word	gMinigameDigits_Pal
	.short	0x320
	.space	2
	.align	1, 0
	.type	 sPlayerNameWindowCoords_2Players,object
sPlayerNameWindowCoords_2Players:
	.short	0x6
	.short	0x8
	.short	0x10
	.short	0x8
	.size	 sPlayerNameWindowCoords_2Players,8
	.align	1, 0
	.type	 sPlayerNameWindowCoords_3Players,object
sPlayerNameWindowCoords_3Players:
	.short	0x6
	.short	0x8
	.short	0xb
	.short	0x6
	.short	0x10
	.short	0x8
	.size	 sPlayerNameWindowCoords_3Players,12
	.align	1, 0
	.type	 sPlayerNameWindowCoords_4Players,object
sPlayerNameWindowCoords_4Players:
	.short	0x2
	.short	0x6
	.short	0x6
	.short	0x8
	.short	0x10
	.short	0x8
	.short	0x14
	.short	0x6
	.size	 sPlayerNameWindowCoords_4Players,16
	.align	1, 0
	.type	 sPlayerNameWindowCoords_5Players,object
sPlayerNameWindowCoords_5Players:
	.short	0x2
	.short	0x6
	.short	0x6
	.short	0x8
	.short	0xb
	.short	0x6
	.short	0x10
	.short	0x8
	.short	0x14
	.short	0x6
	.size	 sPlayerNameWindowCoords_5Players,20
	.align	2, 0
	.type	 sPlayerNameWindowCoords,object
	.size	 sPlayerNameWindowCoords,16
sPlayerNameWindowCoords:
	.word	sPlayerNameWindowCoords_2Players
	.word	sPlayerNameWindowCoords_3Players
	.word	sPlayerNameWindowCoords_4Players
	.word	sPlayerNameWindowCoords_5Players
	.align	1, 0
	.type	 sMonXCoords_2Players,object
sMonXCoords_2Players:
	.short	0x58
	.short	0x98
	.size	 sMonXCoords_2Players,4
	.align	1, 0
	.type	 sMonXCoords_3Players,object
sMonXCoords_3Players:
	.short	0x58
	.short	0x78
	.short	0x98
	.size	 sMonXCoords_3Players,6
	.align	1, 0
	.type	 sMonXCoords_4Players,object
sMonXCoords_4Players:
	.short	0x38
	.short	0x58
	.short	0x98
	.short	0xb8
	.size	 sMonXCoords_4Players,8
	.align	1, 0
	.type	 sMonXCoords_5Players,object
sMonXCoords_5Players:
	.short	0x38
	.short	0x58
	.short	0x78
	.short	0x98
	.short	0xb8
	.size	 sMonXCoords_5Players,10
	.align	2, 0
	.type	 sMonXCoords,object
	.size	 sMonXCoords,16
sMonXCoords:
	.word	sMonXCoords_2Players
	.word	sMonXCoords_3Players
	.word	sMonXCoords_4Players
	.word	sMonXCoords_5Players
.text
	.align	2, 0
	.type	 CreateJumpMonSprites,function
	.thumb_func
CreateJumpMonSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	bl	GetNumPokeJumpPlayers
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	sl, r0
	ldr	r1, .L1224
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r5, [r0]
	mov	r6, #0x0
	cmp	r6, sl
	bge	.L1220	@cond_branch
	ldr	r0, .L1224+0x4
	mov	r9, r0
	ldr	r1, .L1224+0x8
	mov	r8, r1
.L1222:
	lsl	r4, r6, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	GetMonInfoByMultiplayerId
	add	r1, r0, #0
	ldrh	r0, [r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r9
	ldrb	r3, [r0, #0x1]
	mov	r2, r8
	ldr	r0, [r2]
	mov	r7, #0x0
	ldrsh	r2, [r5, r7]
	add	r3, r3, #0x70
	str	r4, [sp]
	bl	CreateJumpMonSprite
	mov	r1, r8
	ldr	r0, [r1]
	mov	r2, #0x0
	ldrsh	r1, [r5, r2]
	mov	r2, #0x70
	add	r3, r4, #0
	bl	CreateStarSprite
	add	r5, r5, #0x2
	add	r6, r6, #0x1
	cmp	r6, sl
	blt	.L1222	@cond_branch
.L1220:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1225:
	.align	2, 0
.L1224:
	.word	sMonXCoords
	.word	gMonFrontPicCoords
	.word	sPokemonJumpGfx
.Lfe138:
	.size	 CreateJumpMonSprites,.Lfe138-CreateJumpMonSprites
	.align	2, 0
	.type	 SetMonSpriteY,function
	.thumb_func
SetMonSpriteY:
	ldr	r2, .L1227
	ldr	r2, [r2]
	lsl	r0, r0, #0x2
	ldr	r3, .L1227+0x4
	add	r2, r2, r3
	add	r2, r2, r0
	ldr	r0, [r2]
	strh	r1, [r0, #0x26]
	bx	lr
.L1228:
	.align	2, 0
.L1227:
	.word	sPokemonJumpGfx
	.word	0x81a8
.Lfe139:
	.size	 SetMonSpriteY,.Lfe139-SetMonSpriteY
	.align	2, 0
	.type	 UpdateVineSwing,function
	.thumb_func
UpdateVineSwing:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L1230
	ldr	r0, [r0]
	add	r1, r4, #0
	bl	UpdateVineAnim
	ldr	r0, .L1230+0x4
	add	r4, r4, r0
	ldrb	r0, [r4]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0xd
	mov	r0, #0x2
	mov	r2, #0x0
	bl	ChangeBgY
	pop	{r4}
	pop	{r0}
	bx	r0
.L1231:
	.align	2, 0
.L1230:
	.word	sPokemonJumpGfx
	.word	sVenusaurStates
.Lfe140:
	.size	 UpdateVineSwing,.Lfe140-UpdateVineSwing
	.align	2, 0
	.type	 DoSameJumpTimeBonus,function
	.thumb_func
DoSameJumpTimeBonus:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r5, #0x0
	mov	r6, #0x0
.L1236:
	mov	r0, #0x1
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L1237	@cond_branch
	ldr	r0, .L1239
	ldr	r0, [r0]
	add	r1, r5, #0
	bl	DoStarAnim
	add	r6, r6, #0x1
.L1237:
	lsr	r4, r4, #0x1
	add	r5, r5, #0x1
	cmp	r5, #0x4
	ble	.L1236	@cond_branch
	sub	r0, r6, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ShowBonus
	add	r0, r6, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L1240:
	.align	2, 0
.L1239:
	.word	sPokemonJumpGfx
.Lfe141:
	.size	 DoSameJumpTimeBonus,.Lfe141-DoSameJumpTimeBonus
	.align	2, 0
	.type	 InitDigitPrinters,function
	.thumb_func
InitDigitPrinters:
	push	{r4, lr}
	add	sp, sp, #-0x10
	mov	r1, sp
	mov	r0, #0x40
	strb	r0, [r1]
	mov	r0, #0x5
	strb	r0, [r1, #0x1]
	mov	r0, #0x8
	strb	r0, [r1, #0x2]
	mov	r0, #0x6c
	strh	r0, [r1, #0x4]
	mov	r4, #0x6
	strh	r4, [r1, #0x6]
	ldr	r0, .L1242
	str	r0, [sp, #0x8]
	ldr	r0, .L1242+0x4
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	bl	DigitObjUtil_Init
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, sp
	bl	DigitObjUtil_CreatePrinter
	mov	r1, sp
	mov	r0, #0x4
	strb	r0, [r1, #0x1]
	mov	r0, #0x1e
	strh	r0, [r1, #0x4]
	mov	r0, sp
	strh	r4, [r0, #0x6]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, sp
	bl	DigitObjUtil_CreatePrinter
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L1243:
	.align	2, 0
.L1242:
	.word	sSpriteSheet_Digits
	.word	sSpritePalette_Digits
.Lfe142:
	.size	 InitDigitPrinters,.Lfe142-InitDigitPrinters
	.align	2, 0
	.type	 PrintScore,function
	.thumb_func
PrintScore:
	push	{lr}
	add	r1, r0, #0
	mov	r0, #0x0
	bl	DigitObjUtil_PrintNumOn
	pop	{r0}
	bx	r0
.Lfe143:
	.size	 PrintScore,.Lfe143-PrintScore
	.align	2, 0
	.type	 PrintJumpsInRow,function
	.thumb_func
PrintJumpsInRow:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x1
	bl	DigitObjUtil_PrintNumOn
	pop	{r0}
	bx	r0
.Lfe144:
	.size	 PrintJumpsInRow,.Lfe144-PrintJumpsInRow
	.align	2, 0
	.type	 StartMonHitShake,function
	.thumb_func
StartMonHitShake:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L1247
	ldr	r0, [r0]
	bl	Gfx_StartMonHitShake
	pop	{r0}
	bx	r0
.L1248:
	.align	2, 0
.L1247:
	.word	sPokemonJumpGfx
.Lfe145:
	.size	 StartMonHitShake,.Lfe145-StartMonHitShake
	.align	2, 0
	.type	 StartMonHitFlash,function
	.thumb_func
StartMonHitFlash:
	push	{lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L1250
	ldr	r0, [r0]
	bl	Gfx_StartMonHitFlash
	pop	{r0}
	bx	r0
.L1251:
	.align	2, 0
.L1250:
	.word	sPokemonJumpGfx
.Lfe146:
	.size	 StartMonHitFlash,.Lfe146-StartMonHitFlash
	.align	2, 0
	.type	 IsMonHitShakeActive,function
	.thumb_func
IsMonHitShakeActive:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L1253
	ldr	r0, [r0]
	bl	Gfx_IsMonHitShakeActive
	pop	{r1}
	bx	r1
.L1254:
	.align	2, 0
.L1253:
	.word	sPokemonJumpGfx
.Lfe147:
	.size	 IsMonHitShakeActive,.Lfe147-IsMonHitShakeActive
	.align	2, 0
	.type	 StopMonHitFlash,function
	.thumb_func
StopMonHitFlash:
	push	{lr}
	ldr	r0, .L1256
	ldr	r0, [r0]
	bl	Gfx_StopMonHitFlash
	pop	{r0}
	bx	r0
.L1257:
	.align	2, 0
.L1256:
	.word	sPokemonJumpGfx
.Lfe148:
	.size	 StopMonHitFlash,.Lfe148-StopMonHitFlash
	.align	2, 0
	.type	 ResetMonSpriteSubpriorities,function
	.thumb_func
ResetMonSpriteSubpriorities:
	push	{lr}
	ldr	r0, .L1259
	ldr	r0, [r0]
	bl	Gfx_ResetMonSpriteSubpriorities
	pop	{r0}
	bx	r0
.L1260:
	.align	2, 0
.L1259:
	.word	sPokemonJumpGfx
.Lfe149:
	.size	 ResetMonSpriteSubpriorities,.Lfe149-ResetMonSpriteSubpriorities
	.align	2, 0
	.type	 StartMonIntroBounce,function
	.thumb_func
StartMonIntroBounce:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L1262
	ldr	r0, [r0]
	bl	Gfx_StartMonIntroBounce
	pop	{r0}
	bx	r0
.L1263:
	.align	2, 0
.L1262:
	.word	sPokemonJumpGfx
.Lfe150:
	.size	 StartMonIntroBounce,.Lfe150-StartMonIntroBounce
	.align	2, 0
	.type	 IsMonIntroBounceActive,function
	.thumb_func
IsMonIntroBounceActive:
	push	{lr}
	ldr	r0, .L1265
	ldr	r0, [r0]
	bl	Gfx_IsMonIntroBounceActive
	pop	{r1}
	bx	r1
.L1266:
	.align	2, 0
.L1265:
	.word	sPokemonJumpGfx
.Lfe151:
	.size	 IsMonIntroBounceActive,.Lfe151-IsMonIntroBounceActive
	.align	2, 0
	.type	 AddPlayerNameWindows,function
	.thumb_func
AddPlayerNameWindows:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	bl	GetNumPokeJumpPlayers
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	ldr	r1, .L1273
	sub	r0, r7, #0x2
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r4, [r0]
	ldr	r2, .L1273+0x4
	ldr	r0, [sp]
	and	r0, r0, r2
	ldr	r1, .L1273+0x8
	and	r0, r0, r1
	mov	r1, #0x80
	lsl	r1, r1, #0x14
	orr	r0, r0, r1
	str	r0, [sp]
	ldr	r0, [sp, #0x4]
	and	r0, r0, r2
	mov	r1, #0x2
	orr	r0, r0, r1
	ldr	r1, .L1273+0xc
	and	r0, r0, r1
	mov	r1, #0x80
	lsl	r1, r1, #0x2
	orr	r0, r0, r1
	ldr	r1, .L1273+0x10
	and	r0, r0, r1
	mov	r1, #0xac
	lsl	r1, r1, #0xe
	orr	r0, r0, r1
	str	r0, [sp, #0x4]
	mov	r5, #0x0
	cmp	r5, r7
	bge	.L1269	@cond_branch
	mov	r6, sp
.L1271:
	ldrb	r0, [r4]
	lsl	r0, r0, #0x8
	ldr	r2, .L1273+0xc
	ldr	r1, [sp]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp]
	ldrb	r2, [r4, #0x2]
	lsl	r2, r2, #0x10
	ldr	r0, .L1273+0x14
	and	r0, r0, r1
	orr	r0, r0, r2
	str	r0, [sp]
	mov	r0, sp
	bl	AddWindow
	ldr	r1, .L1273+0x18
	ldr	r1, [r1]
	lsl	r2, r5, #0x1
	add	r1, r1, #0x1c
	add	r1, r1, r2
	strh	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ClearWindowTilemap
	ldrh	r0, [r6, #0x6]
	add	r0, r0, #0x10
	strh	r0, [r6, #0x6]
	add	r4, r4, #0x4
	add	r5, r5, #0x1
	cmp	r5, r7
	blt	.L1271	@cond_branch
.L1269:
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1274:
	.align	2, 0
.L1273:
	.word	sPlayerNameWindowCoords
	.word	-0x100
	.word	0xffffff
	.word	-0xff01
	.word	0xffff
	.word	-0xff0001
	.word	sPokemonJumpGfx
.Lfe152:
	.size	 AddPlayerNameWindows,.Lfe152-AddPlayerNameWindows
	.align	2, 0
	.type	 PrintPokeJumpPlayerName,function
	.thumb_func
PrintPokeJumpPlayerName:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0x10
	add	r5, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, sp, #0xc
	strb	r1, [r0]
	strb	r2, [r0, #0x1]
	strb	r3, [r0, #0x2]
	ldr	r6, .L1276
	ldr	r0, [r6]
	lsl	r1, r5, #0x1
	mov	r8, r1
	add	r0, r0, #0x1c
	add	r0, r0, r8
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	add	r0, r5, #0
	bl	GetPokeJumpPlayerName
	add	r1, r0, #0
	mov	r2, #0x1
	neg	r2, r2
	mov	r9, r2
	mov	r0, #0x0
	bl	GetStringWidth
	mov	r4, #0x40
	sub	r4, r4, r0
	lsr	r4, r4, #0x1
	add	r0, r5, #0
	bl	GetPokeJumpPlayerName
	add	r1, r0, #0
	ldr	r0, [r6]
	add	r0, r0, #0x1c
	add	r0, r0, r8
	ldrb	r0, [r0]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r2, sp, #0xc
	str	r2, [sp]
	mov	r2, r9
	str	r2, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r1, #0x0
	add	r2, r4, #0
	mov	r3, #0x2
	bl	AddTextPrinterParameterized3
	ldr	r0, [r6]
	add	r0, r0, #0x1c
	add	r0, r0, r8
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0x10
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1277:
	.align	2, 0
.L1276:
	.word	sPokemonJumpGfx
.Lfe153:
	.size	 PrintPokeJumpPlayerName,.Lfe153-PrintPokeJumpPlayerName
	.align	2, 0
	.type	 PrintPokeJumpPlayerNames,function
	.thumb_func
PrintPokeJumpPlayerNames:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	bl	GetNumPokeJumpPlayers
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r4, #0
	bne	.L1279	@cond_branch
	mov	r4, #0x0
	cmp	r4, r5
	bge	.L1285	@cond_branch
.L1283:
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x3
	bl	PrintPokeJumpPlayerName
	add	r4, r4, #0x1
	cmp	r4, r5
	blt	.L1283	@cond_branch
	b	.L1285
.L1279:
	bl	GetPokeJumpMultiplayerId
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	mov	r4, #0x0
	cmp	r4, r5
	bge	.L1285	@cond_branch
.L1289:
	cmp	r6, r4
	beq	.L1290	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x2
	mov	r3, #0x3
	bl	PrintPokeJumpPlayerName
	b	.L1288
.L1290:
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x4
	mov	r3, #0x5
	bl	PrintPokeJumpPlayerName
.L1288:
	add	r4, r4, #0x1
	cmp	r4, r5
	blt	.L1289	@cond_branch
.L1285:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe154:
	.size	 PrintPokeJumpPlayerNames,.Lfe154-PrintPokeJumpPlayerNames
	.align	2, 0
	.type	 DrawPlayerNameWindows,function
	.thumb_func
DrawPlayerNameWindows:
	push	{r4, r5, lr}
	bl	GetNumPokeJumpPlayers
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	mov	r4, #0x0
	cmp	r4, r5
	bge	.L1295	@cond_branch
.L1297:
	ldr	r0, .L1299
	ldr	r0, [r0]
	lsl	r1, r4, #0x1
	add	r0, r0, #0x1c
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	add	r4, r4, #0x1
	cmp	r4, r5
	blt	.L1297	@cond_branch
.L1295:
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1300:
	.align	2, 0
.L1299:
	.word	sPokemonJumpGfx
.Lfe155:
	.size	 DrawPlayerNameWindows,.Lfe155-DrawPlayerNameWindows
	.align	2, 0
	.type	 ShowBonus,function
	.thumb_func
ShowBonus:
	push	{r4, lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	ldr	r0, .L1302
	ldr	r2, [r0]
	mov	r0, #0x0
	str	r0, [r2, #0x18]
	lsr	r1, r1, #0x19
	lsl	r1, r1, #0x10
	mov	r0, #0x1
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	and	r4, r4, r0
	lsl	r4, r4, #0x8
	sub	r4, r4, #0x28
	lsl	r4, r4, #0x8
	add	r1, r4, #0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	bl	ShowBg
	ldr	r0, .L1302+0x4
	mov	r1, #0x4
	bl	CreateTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L1303:
	.align	2, 0
.L1302:
	.word	sPokemonJumpGfx
	.word	Task_UpdateBonus
.Lfe156:
	.size	 ShowBonus,.Lfe156-ShowBonus
	.align	2, 0
	.type	 UpdateBonus,function
	.thumb_func
UpdateBonus:
	push	{r4, lr}
	ldr	r4, .L1309
	ldr	r0, [r4]
	ldr	r0, [r0, #0x18]
	cmp	r0, #0x1f
	bls	.L1305	@cond_branch
	mov	r0, #0x0
	b	.L1308
.L1310:
	.align	2, 0
.L1309:
	.word	sPokemonJumpGfx
.L1305:
	mov	r0, #0x1
	mov	r1, #0x80
	mov	r2, #0x1
	bl	ChangeBgY
	ldr	r1, [r4]
	ldr	r0, [r1, #0x18]
	add	r0, r0, #0x1
	str	r0, [r1, #0x18]
	cmp	r0, #0x1f
	bls	.L1307	@cond_branch
	mov	r0, #0x1
	bl	HideBg
.L1307:
	mov	r0, #0x1
.L1308:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe157:
	.size	 UpdateBonus,.Lfe157-UpdateBonus
	.align	2, 0
	.type	 Task_UpdateBonus,function
	.thumb_func
Task_UpdateBonus:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	UpdateBonus
	cmp	r0, #0
	bne	.L1312	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
.L1312:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe158:
	.size	 Task_UpdateBonus,.Lfe158-Task_UpdateBonus
	.section .rodata
	.align	1, 0
	.type	 sPokeJumpPal1,object
sPokeJumpPal1:
	.short	0x6273
	.short	0x2648
	.short	0x26ca
	.short	0x272d
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x298c
	.short	0x2af9
	.short	0x2bdf
	.short	0x7fff
	.short	0x42bd
	.short	0x439d
	.size	 sPokeJumpPal1,32
	.align	1, 0
	.type	 sPokeJumpPal2,object
sPokeJumpPal2:
	.short	0x0
	.short	0x1de6
	.short	0x1e28
	.short	0x1e8a
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sPokeJumpPal2,32
	.align	2, 0
	.type	 sVine1_Gfx,object
sVine1_Gfx:
	.word	0x60010
	.word	-0xfffffcb
	.word	0x1001c001
	.word	0x110300
	.word	0x3409b06
	.word	0x6001111
	.word	0x10010310
	.word	-0x32d10ff6
	.word	0x33402f20
	.word	0x2a901100
	.word	0x40010320
	.word	0x300ff18
	.word	0x2a100a00
	.word	0x21505770
	.word	0x3303010
	.word	-0xf00dcc0
	.word	-0x4f928fff
	.word	0x1003a03a
	.word	-0xffe0f7b
	.word	-0x3fe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x3b811381
	.word	0x17f1111
	.word	0x5f810640
	.word	0x74163c1
	.word	0x2d103391
	.word	-0xf00f01f
	.word	-0xf000f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0x134fe88f
	.word	0x2003801
	.word	0x110140ff
	.word	0x6193f20d
	.word	0x5141000b
	.word	-0xffe0fc5
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x6c109e90
	.word	-0x70cf7ce0
	.word	-0xf0064e0
	.word	0x21ec2101
	.word	-0x1fbf0c01
	.word	-0xfdcdfd5
	.word	-0xfe0fd9
	.word	0x1f001f0
	.word	-0x3c0ffe10
	.word	0x350c320
	.word	-0x5f0f810d
	.word	0x40a712ff
	.word	0x10f360ef
	.word	0x107de203
	.word	0x61fb304c
	.word	0x5ff0ff26
	.word	0x4b915ff0
	.word	0x1f0d1f2
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xf000f01
	.word	-0x3e00afff
	.word	-0x1ef85efd
	.word	-0xf89efd
	.word	-0x280fa2d0
	.word	0x52a25ea0
	.word	0x5f803422
	.word	0x1f037f0
	.word	-0x7ffe0f40
	.word	0x1
	.size	 sVine1_Gfx,288
	.align	2, 0
	.type	 sVine2_Gfx,object
sVine2_Gfx:
	.word	0xc0010
	.word	-0xfffffc2
	.word	-0xffe0fff
	.word	-0x1ffe0fff
	.word	0xb31001
	.word	0xf801102
	.word	0x11110b00
	.word	0x1100200
	.word	0x200015f
	.word	-0xffe0000
	.word	-0x3ffe0fcb
	.word	-0x40b8efad
	.word	0x30105700
	.word	0x3053504b
	.word	0x1053000e
	.word	-0xdbffef
	.word	0x62f05a50
	.word	0x5be001f0
	.word	0x50404510
	.word	-0x54cffa00
	.word	0x1510ff
	.word	-0xfa46fb4
	.word	-0xffe0fff
	.word	-0x6f8b3fff
	.word	0x5ff0ffb7
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x5c116f92
	.word	0x2b22e3e1
	.word	0x34f08342
	.word	-0xd542d01
	.word	0x11bb72bb
	.word	0x301230a7
	.word	-0xeb10fb5
	.word	0x68e0ffcb
	.word	0x1ef05f92
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x32f13df3
	.word	-0x1e0ea55f
	.word	0x1f701b90
	.word	0x200e60ff
	.word	-0x5f686bee
	.word	-0x2fb20fe7
	.word	0x111ff048
	.word	0x16f0ffe0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x3b3101f0
	.word	0x1f038f1
	.word	0x1f001f0
	.word	-0x401efe10
	.word	-0xfeceb01
	.word	0x6293451d
	.word	-0x2ddc0fe8
	.word	0x331df023
	.word	0x23f0ffd7
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0x78aa640f
	.word	0x24e351ff
	.word	-0xff0e7a9
	.word	0x41ab252b
	.word	-0x7da00939
	.word	0x2730ff13
	.word	0x4fb019f0
	.word	0x26f001f0
	.word	0x7bb212f0
	.word	-0x1f0068be
	.word	-0xf640d51
	.word	-0xffe0fb5
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x532701f0
	.word	0x3f217323
	.word	0x1f001f4
	.word	-0xffe0f01
	.word	0x7901f001
	.word	-0xe38ae81
	.word	0x401ff21b
	.word	0x77f6ff2b
	.word	0x1ff21ff2
	.word	-0x44be684f
	.word	0x1f01af0
	.word	-0x2507fe10
	.word	-0x6dfe0f49
	.word	0x6087f01f
	.word	0x1
	.size	 sVine2_Gfx,468
	.align	2, 0
	.type	 sVine3_Gfx,object
sVine3_Gfx:
	.word	0x60010
	.word	-0xfffffc8
	.word	-0xffe0fff
	.word	0x10000001
	.word	0x10001106
	.word	0x14d02221
	.word	0x211600
	.word	0x22222111
	.word	0x11112222
	.word	-0x7feeedd8
	.word	0x17001117
	.word	0x3233332
	.word	0x11111222
	.word	0x4ce00111
	.word	0x11292900
	.word	0x12020022
	.word	0x21010200
	.word	0x10eb2000
	.word	0x261023
	.word	0x4b00114b
	.word	-0xfb4f000
	.word	0x13f0ff36
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0x2f4ffe10
	.word	0x17111d5
	.word	0x11111bf0
	.word	0x337f3322
	.word	-0x16ffc85f
	.word	0x1fc10400
	.word	0x4f012820
	.word	0x20ff38f1
	.word	-0x5fe50fe3
	.word	-0xfe40fff
	.word	0x119af001
	.word	-0x413eee54
	.word	0x1010bff0
	.word	-0xf21cee5
	.word	-0x1fe30fe4
	.word	0xff3257
	.word	-0xfe26f0d
	.word	-0xffe0f66
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xe8c0e05
	.word	-0xffa2dc7
	.word	0x11f601f
	.word	-0x6cfcf6be
	.word	-0xf64fc01
	.word	-0xf800ede
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	-0x40ffe10
	.word	0xb340600
	.word	-0x7ffe10
	.word	-0xf0cdd00
	.word	-0xfdc0e21
	.word	0x231f2001
	.word	-0xf000fce
	.word	-0x640d00ff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0x10fb6c10
	.word	-0xf0048af
	.word	0x404654fb
	.word	-0xfdcff06
	.word	-0xe000e45
	.word	0x1423501f
	.word	0x10333232
	.word	0x6b503223
	.size	 sVine3_Gfx,304
	.align	2, 0
	.type	 sVine4_Gfx,object
sVine4_Gfx:
	.word	0x60010
	.word	-0xfffffca
	.word	0x10018001
	.word	0x15012f0
	.word	0x11110711
	.word	-0xfcccdef
	.word	0x351017
	.word	0x3321011a
	.word	0x11233333
	.word	-0x25e30fef
	.word	0x1d003930
	.word	0x71033
	.word	0x2b00212b
	.word	0x2b10c123
	.word	0x2df0
	.word	0x123333
	.word	-0xffe80e9
	.word	-0xfb49fe8
	.word	-0xffe0fe5
	.word	-0xffe0fff
	.word	-0x5cef005d
	.word	-0x6afe610
	.word	0x1df09930
	.word	0x1ef0dfc0
	.word	-0xf00e060
	.word	-0xfd43fdd
	.word	-0xffe0fee
	.word	-0xffe0fff
	.word	-0x940fff
	.word	-0xc0f4810
	.word	0x3bf01cf0
	.word	0x1ff01ef0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1ef023f1
	.word	0x13bf1f50
	.word	0x1af22129
	.word	0x1df043f0
	.word	0x1f01ff0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x39bd001
	.word	-0x9fed11
	.word	0x42146802
	.word	-0x400fde10
	.word	0x1ff01ff0
	.word	0x1ff01ff0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x60bf0061
	.word	-0x12eb801b
	.word	-0x3c0fddbf
	.word	0x1ff043f0
	.word	0x1fc0
	.size	 sVine4_Gfx,252
	.align	2, 0
	.type	 sStar_Gfx,object
sStar_Gfx:
	.word	0x20010
	.word	0x0
	.word	-0x2fffff23
	.word	0x30080ad
	.word	-0x42ffff36
	.word	0xddd0cb
	.word	-0x55223353
	.word	-0x33523346
	.word	-0x523333fe
	.word	0xcccccb
	.word	-0x25fbffe4
	.word	-0x53fffff3
	.word	-0x2443fd00
	.word	-0x34000000
	.word	-0x33f22226
	.word	-0x2255df55
	.word	-0x3325e200
	.word	0x5dabccc
	.word	-0x33334530
	.word	0x280000
	.word	0x10803000
	.word	-0x33442ffd
	.word	-0x43352f44
	.word	-0x552f5600
	.word	-0x22ff2256
	.word	-0x33fff823
	.word	0xdabcc
	.word	0x30070026
	.word	-0x3334fffd
	.word	-0x3455f245
	.word	-0x22f1f254
	.word	0x100daaaa
	.word	0x77001f
	.word	-0x55fa22fc
	.word	-0x43530000
	.word	0xcc0300
	.word	-0x2f33fc76
	.word	-0x22334543
	.word	-0x7cefa900
	.word	0x2000a0
	.word	-0x25f2d800
	.word	0x4daabdd
	.word	-0x25345555
	.word	-0x3388bf44
	.word	0xdac3fcc
	.word	0x23105b10
	.word	0x33102b10
	.word	0x43203b10
	.word	0x104b20dd
	.word	-0x58ff2fad
	.word	0x2b207f00
	.word	-0xc4df44
	.word	0x4b104310
	.word	0x5b105310
	.word	-0x54ef7cf0
	.word	-0x44ff4ce0
	.word	0x10c750ff
	.word	0xdb20d3
	.word	0x10ab101f
	.word	0x50bb10b3
	.word	-0x2ccf0039
	.word	0x23017f00
	.word	0x33018320
	.word	0x43113b11
	.word	0x11bf4b31
	.word	0x7f000053
	.word	-0x4cff54f0
	.word	0x3b013311
	.word	0x11f84311
	.word	0x1053114b
	.word	0x10110fd
	.word	-0x45522fff
	.word	-0x525222fe
	.word	0xbaaabc
	.word	0x109ecb4b
	.word	0xcad053
	.word	0x107f0003
	.word	0x4901a5
	.word	0x11dacb30
	.word	0xd03107b
	.word	0x7dabcc00
	.word	0x21fb10db
	.word	0x10231083
	.word	-0x3478bfd5
	.word	0xff4320
	.word	0x1053104b
	.word	0xa7315b
	.word	0x1033102b
	.word	-0x1fbcffc5
	.word	0x53104b10
	.word	0x5b10
	.size	 sStar_Gfx,364
	.align	2, 0
	.type	 sCompressedSpriteSheets,object
sCompressedSpriteSheets:
	.word	sVine1_Gfx
	.short	0x600
	.short	0x5
	.word	sVine2_Gfx
	.short	0xc00
	.short	0x6
	.word	sVine3_Gfx
	.short	0x600
	.short	0x7
	.word	sVine4_Gfx
	.short	0x600
	.short	0x8
	.word	sStar_Gfx
	.short	0x200
	.short	0xa
	.size	 sCompressedSpriteSheets,40
	.align	2, 0
	.type	 sSpritePalettes,object
sSpritePalettes:
	.word	sPokeJumpPal1
	.short	0x5
	.space	2
	.word	sPokeJumpPal2
	.short	0x6
	.space	2
	.size	 sSpritePalettes,16
	.align	2, 0
	.type	 sSpriteTemplate_JumpMon,object
	.size	 sSpriteTemplate_JumpMon,24
sSpriteTemplate_JumpMon:
	.short	0x0
	.short	0x0
	.word	sOamData_JumpMon
	.word	gDummySpriteAnimTable
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	1, 0
	.type	 sVineYCoords,object
	.size	 sVineYCoords,80
sVineYCoords:
	.short	0x60
	.short	0x60
	.short	0x60
	.short	0x72
	.short	0x78
	.short	0x78
	.short	0x78
	.short	0x72
	.short	0x60
	.short	0x60
	.short	0x46
	.short	0x50
	.short	0x60
	.short	0x72
	.short	0x78
	.short	0x80
	.short	0x78
	.short	0x72
	.short	0x60
	.short	0x50
	.short	0x32
	.short	0x48
	.short	0x60
	.short	0x72
	.short	0x80
	.short	0x88
	.short	0x80
	.short	0x72
	.short	0x60
	.short	0x48
	.short	0x2a
	.short	0x48
	.short	0x60
	.short	0x72
	.short	0x80
	.short	0x88
	.short	0x80
	.short	0x72
	.short	0x60
	.short	0x48
	.align	1, 0
	.type	 sVineXCoords,object
	.size	 sVineXCoords,16
sVineXCoords:
	.short	0x10
	.short	0x28
	.short	0x48
	.short	0x68
	.short	0x88
	.short	0xa8
	.short	0xc8
	.short	0xe0
	.align	2, 0
	.type	 sSpriteTemplates_Vine,object
	.size	 sSpriteTemplates_Vine,16
sSpriteTemplates_Vine:
	.word	sSpriteTemplate_Vine1
	.word	sSpriteTemplate_Vine2
	.word	sSpriteTemplate_Vine3
	.word	sSpriteTemplate_Vine4
	.align	2, 0
	.type	 sOamData_JumpMon,object
	.size	 sOamData_JumpMon,8
sOamData_JumpMon:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x8
	.short	0x0
	.align	2, 0
	.type	 sOamData_Vine16x32,object
	.size	 sOamData_Vine16x32,8
sOamData_Vine16x32:
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.short	0x0
	.align	2, 0
	.type	 sOamData_Vine32x32,object
	.size	 sOamData_Vine32x32,8
sOamData_Vine32x32:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.short	0x0
	.align	2, 0
	.type	 sOamData_Vine32x16,object
	.size	 sOamData_Vine32x16,8
sOamData_Vine32x16:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x8
	.short	0x0
	.align	2, 0
	.type	 sAnims_Vine_Highest,object
sAnims_Vine_Highest:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnims_Vine_Highest,8
	.align	2, 0
	.type	 sAnims_Vine_Higher,object
sAnims_Vine_Higher:
	.short	0x8
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnims_Vine_Higher,8
	.align	2, 0
	.type	 sAnims_Vine_High,object
sAnims_Vine_High:
	.short	0x10
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnims_Vine_High,8
	.align	2, 0
	.type	 sAnims_Vine_Low,object
sAnims_Vine_Low:
	.short	0x18
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnims_Vine_Low,8
	.align	2, 0
	.type	 sAnims_Vine_Lower,object
sAnims_Vine_Lower:
	.short	0x20
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnims_Vine_Lower,8
	.align	2, 0
	.type	 sAnims_Vine_Lowest,object
sAnims_Vine_Lowest:
	.short	0x28
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnims_Vine_Lowest,8
	.align	2, 0
	.type	 sAnims_VineTall_Highest,object
sAnims_VineTall_Highest:
	.short	0x0
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnims_VineTall_Highest,8
	.align	2, 0
	.type	 sAnims_VineTall_Higher,object
sAnims_VineTall_Higher:
	.short	0x10
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnims_VineTall_Higher,8
	.align	2, 0
	.type	 sAnims_VineTall_High,object
sAnims_VineTall_High:
	.short	0x20
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnims_VineTall_High,8
	.align	2, 0
	.type	 sAnims_VineTall_Low,object
sAnims_VineTall_Low:
	.short	0x30
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnims_VineTall_Low,8
	.align	2, 0
	.type	 sAnims_VineTall_Lower,object
sAnims_VineTall_Lower:
	.short	0x40
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnims_VineTall_Lower,8
	.align	2, 0
	.type	 sAnims_VineTall_Lowest,object
sAnims_VineTall_Lowest:
	.short	0x50
	.byte	0x1
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnims_VineTall_Lowest,8
	.align	2, 0
	.type	 sAnims_Vine,object
sAnims_Vine:
	.word	sAnims_Vine_Highest
	.word	sAnims_Vine_Higher
	.word	sAnims_Vine_High
	.word	sAnims_Vine_Low
	.word	sAnims_Vine_Lower
	.word	sAnims_Vine_Lowest
	.size	 sAnims_Vine,24
	.align	2, 0
	.type	 sAnims_VineTall,object
sAnims_VineTall:
	.word	sAnims_VineTall_Highest
	.word	sAnims_VineTall_Higher
	.word	sAnims_VineTall_High
	.word	sAnims_VineTall_Low
	.word	sAnims_VineTall_Lower
	.word	sAnims_VineTall_Lowest
	.size	 sAnims_VineTall,24
	.align	2, 0
	.type	 sSpriteTemplate_Vine1,object
	.size	 sSpriteTemplate_Vine1,24
sSpriteTemplate_Vine1:
	.short	0x5
	.short	0x5
	.word	sOamData_Vine16x32
	.word	sAnims_Vine
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_Vine2,object
	.size	 sSpriteTemplate_Vine2,24
sSpriteTemplate_Vine2:
	.short	0x6
	.short	0x5
	.word	sOamData_Vine32x32
	.word	sAnims_VineTall
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_Vine3,object
	.size	 sSpriteTemplate_Vine3,24
sSpriteTemplate_Vine3:
	.short	0x7
	.short	0x5
	.word	sOamData_Vine32x16
	.word	sAnims_Vine
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_Vine4,object
	.size	 sSpriteTemplate_Vine4,24
sSpriteTemplate_Vine4:
	.short	0x8
	.short	0x5
	.word	sOamData_Vine32x16
	.word	sAnims_Vine
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sOamData_Star,object
	.size	 sOamData_Star,8
sOamData_Star:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sAnim_Star_Still,object
sAnim_Star_Still:
	.short	0x0
	.byte	0x0
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Star_Still,8
	.align	2, 0
	.type	 sAnim_Star_Spinning,object
sAnim_Star_Spinning:
	.short	0x0
	.byte	0x4
	.space	1
	.short	0x4
	.byte	0x4
	.space	1
	.short	0x8
	.byte	0x4
	.space	1
	.short	0xc
	.byte	0x4
	.space	1
	.short	-0x3
	.byte	0x1
	.space	1
	.short	0x0
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Star_Spinning,28
	.align	2, 0
	.type	 sAnims_Star,object
sAnims_Star:
	.word	sAnim_Star_Still
	.word	sAnim_Star_Spinning
	.size	 sAnims_Star,8
	.align	2, 0
	.type	 sSpriteTemplate_Star,object
	.size	 sSpriteTemplate_Star,24
sSpriteTemplate_Star:
	.short	0xa
	.short	0x5
	.word	sOamData_Star
	.word	sAnims_Star
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
.text
	.align	2, 0
	.type	 LoadSpriteSheetsAndPalettes,function
	.thumb_func
LoadSpriteSheetsAndPalettes:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r4, #0x0
	ldr	r5, .L1324
.L1317:
	add	r0, r5, #0
	bl	LoadCompressedSpriteSheet
	add	r5, r5, #0x8
	add	r4, r4, #0x1
	cmp	r4, #0x4
	bls	.L1317	@cond_branch
	mov	r4, #0x0
	ldr	r5, .L1324+0x4
.L1322:
	add	r0, r5, #0
	bl	LoadSpritePalette
	add	r5, r5, #0x8
	add	r4, r4, #0x1
	cmp	r4, #0x1
	bls	.L1322	@cond_branch
	mov	r0, #0x5
	bl	IndexOfSpritePaletteTag
	strb	r0, [r6, #0xe]
	mov	r0, #0x6
	bl	IndexOfSpritePaletteTag
	strb	r0, [r6, #0xf]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1325:
	.align	2, 0
.L1324:
	.word	sCompressedSpriteSheets
	.word	sSpritePalettes
.Lfe159:
	.size	 LoadSpriteSheetsAndPalettes,.Lfe159-LoadSpriteSheetsAndPalettes
	.align	2, 0
	.type	 ResetPokeJumpSpriteData,function
	.thumb_func
ResetPokeJumpSpriteData:
	push	{lr}
	mov	r2, #0x0
	mov	r1, #0x7
	add	r0, r0, #0x3c
.L1330:
	strh	r2, [r0]
	sub	r0, r0, #0x2
	sub	r1, r1, #0x1
	cmp	r1, #0
	bge	.L1330	@cond_branch
	pop	{r0}
	bx	r0
.Lfe160:
	.size	 ResetPokeJumpSpriteData,.Lfe160-ResetPokeJumpSpriteData
	.align	2, 0
	.type	 CreateJumpMonSprite,function
	.thumb_func
CreateJumpMonSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x34
	mov	r9, r0
	add	r7, r1, #0
	ldr	r0, [sp, #0x54]
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	str	r2, [sp, #0x28]
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	str	r3, [sp, #0x2c]
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r1, sp
	ldr	r0, .L1338
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	mov	r0, #0x80
	lsl	r0, r0, #0x6
	bl	Alloc
	mov	r8, r0
	mov	r0, #0x80
	lsl	r0, r0, #0x4
	bl	Alloc
	mov	sl, r0
	bl	GetPokeJumpMultiplayerId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r6, r0
	bne	.L1333	@cond_branch
	mov	r0, #0x3
	b	.L1337
.L1339:
	.align	2, 0
.L1338:
	.word	sSpriteTemplate_JumpMon
.L1333:
	add	r0, r6, #0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
.L1337:
	str	r0, [sp, #0x30]
	mov	r1, r8
	cmp	r1, #0
	beq	.L1335	@cond_branch
	mov	r2, sl
	cmp	r2, #0
	beq	.L1335	@cond_branch
	ldrh	r2, [r7]
	lsl	r0, r2, #0x3
	ldr	r1, .L1340
	add	r0, r0, r1
	ldr	r3, [r7, #0x8]
	mov	r1, r8
	bl	HandleLoadSpecialPokePic
	mov	r3, r8
	str	r3, [sp, #0x18]
	add	r4, r6, #0
	add	r0, sp, #0x18
	ldr	r5, .L1340+0x4
	lsl	r1, r4, #0x10
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	orr	r1, r1, r2
	str	r1, [r0, #0x4]
	bl	LoadSpriteSheet
	ldrh	r0, [r7]
	ldr	r1, [r7, #0x4]
	ldr	r2, [r7, #0x8]
	bl	GetMonSpritePalFromSpeciesAndPersonality
	str	r0, [sp, #0x20]
	add	r0, sp, #0x20
	ldr	r1, [r0, #0x4]
	and	r1, r1, r5
	orr	r1, r1, r4
	str	r1, [r0, #0x4]
	bl	LoadCompressedSpritePalette
	mov	r0, r8
	bl	Free
	mov	r0, sl
	bl	Free
	mov	r1, sp
	mov	r0, sp
	ldrh	r0, [r0]
	add	r0, r0, r6
	strh	r0, [r1]
	mov	r0, sp
	ldrh	r0, [r0, #0x2]
	add	r0, r0, r6
	strh	r0, [r1, #0x2]
	ldr	r4, [sp, #0x28]
	lsl	r1, r4, #0x10
	asr	r1, r1, #0x10
	ldr	r0, [sp, #0x2c]
	lsl	r2, r0, #0x10
	asr	r2, r2, #0x10
	mov	r0, sp
	ldr	r3, [sp, #0x30]
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L1335	@cond_branch
	lsl	r0, r6, #0x2
	ldr	r2, .L1340+0x8
	add	r2, r2, r9
	add	r2, r2, r0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1340+0xc
	add	r0, r0, r1
	str	r0, [r2]
	ldr	r0, .L1340+0x10
	add	r0, r0, r9
	add	r0, r0, r6
	add	r1, sp, #0x30
	ldrb	r1, [r1]
	strb	r1, [r0]
	b	.L1332
.L1341:
	.align	2, 0
.L1340:
	.word	gMonFrontPicTable
	.word	-0x10000
	.word	0x81a8
	.word	gSprites
	.word	0x81fc
.L1335:
	lsl	r0, r6, #0x2
	ldr	r1, .L1342
	add	r1, r1, r9
	add	r1, r1, r0
	mov	r0, #0x0
	str	r0, [r1]
.L1332:
	add	sp, sp, #0x34
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1343:
	.align	2, 0
.L1342:
	.word	0x81a8
.Lfe161:
	.size	 CreateJumpMonSprite,.Lfe161-CreateJumpMonSprite
	.align	2, 0
	.type	 DoStarAnim,function
	.thumb_func
DoStarAnim:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r6, r1, #0x2
	ldr	r0, .L1345
	add	r5, r4, r0
	add	r5, r5, r6
	ldr	r0, [r5]
	bl	ResetPokeJumpSpriteData
	ldr	r2, [r5]
	ldr	r0, .L1345+0x4
	add	r4, r4, r0
	add	r4, r4, r6
	ldr	r1, [r4]
	ldr	r0, .L1345+0x8
	sub	r1, r1, r0
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	lsl	r1, r0, #0x8
	add	r0, r0, r1
	lsl	r1, r0, #0x10
	add	r0, r0, r1
	neg	r0, r0
	asr	r0, r0, #0x2
	strh	r0, [r2, #0x3c]
	ldr	r1, [r5]
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r1, [r5]
	mov	r0, #0x60
	strh	r0, [r1, #0x22]
	ldr	r0, [r5]
	ldr	r1, .L1345+0xc
	str	r1, [r0, #0x1c]
	mov	r1, #0x1
	bl	StartSpriteAnim
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1346:
	.align	2, 0
.L1345:
	.word	0x81bc
	.word	0x81a8
	.word	gSprites
	.word	SpriteCB_Star
.Lfe162:
	.size	 DoStarAnim,.Lfe162-DoStarAnim
	.align	2, 0
	.type	 SpriteCB_Star,function
	.thumb_func
SpriteCB_Star:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r2, r1]
	cmp	r0, #0x1
	beq	.L1351	@cond_branch
	cmp	r0, #0x1
	bgt	.L1357	@cond_branch
	cmp	r0, #0
	beq	.L1349	@cond_branch
	b	.L1348
.L1357:
	cmp	r0, #0x2
	beq	.L1353	@cond_branch
	b	.L1348
.L1349:
	add	r0, r2, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1348	@cond_branch
	b	.L1358
.L1351:
	ldrh	r1, [r2, #0x22]
	sub	r1, r1, #0x1
	strh	r1, [r2, #0x22]
	ldrh	r0, [r2, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x30]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x48
	bgt	.L1348	@cond_branch
	mov	r0, #0x48
	strh	r0, [r2, #0x22]
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
	b	.L1348
.L1353:
	ldrh	r0, [r2, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2f
	ble	.L1348	@cond_branch
.L1358:
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r3]
	ldr	r0, .L1359
	str	r0, [r2, #0x1c]
.L1348:
	pop	{r0}
	bx	r0
.L1360:
	.align	2, 0
.L1359:
	.word	SpriteCallbackDummy
.Lfe163:
	.size	 SpriteCB_Star,.Lfe163-SpriteCB_Star
	.align	2, 0
	.type	 Gfx_StartMonHitShake,function
	.thumb_func
Gfx_StartMonHitShake:
	push	{lr}
	lsl	r1, r1, #0x2
	ldr	r2, .L1362
	add	r0, r0, r2
	add	r0, r0, r1
	ldr	r2, [r0]
	ldr	r1, .L1362+0x4
	str	r1, [r2, #0x1c]
	mov	r1, #0x0
	strh	r1, [r2, #0x26]
	ldr	r0, [r0]
	bl	ResetPokeJumpSpriteData
	pop	{r0}
	bx	r0
.L1363:
	.align	2, 0
.L1362:
	.word	0x81a8
	.word	SpriteCB_MonHitShake
.Lfe164:
	.size	 Gfx_StartMonHitShake,.Lfe164-Gfx_StartMonHitShake
	.align	2, 0
	.type	 Gfx_IsMonHitShakeActive,function
	.thumb_func
Gfx_IsMonHitShakeActive:
	push	{lr}
	mov	r2, #0x0
	lsl	r1, r1, #0x2
	ldr	r3, .L1366
	add	r0, r0, r3
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r1, [r0, #0x1c]
	ldr	r0, .L1366+0x4
	cmp	r1, r0
	bne	.L1365	@cond_branch
	mov	r2, #0x1
.L1365:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.L1367:
	.align	2, 0
.L1366:
	.word	0x81a8
	.word	SpriteCB_MonHitShake
.Lfe165:
	.size	 Gfx_IsMonHitShakeActive,.Lfe165-Gfx_IsMonHitShakeActive
	.align	2, 0
	.type	 SpriteCB_MonHitShake,function
	.thumb_func
SpriteCB_MonHitShake:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1
	ble	.L1369	@cond_branch
	ldrh	r0, [r2, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x32]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1370	@cond_branch
	mov	r0, #0x2
	b	.L1373
.L1370:
	ldr	r0, .L1374
.L1373:
	strh	r0, [r2, #0x26]
	mov	r0, #0x0
	strh	r0, [r2, #0x30]
.L1369:
	mov	r1, #0x32
	ldrsh	r0, [r2, r1]
	cmp	r0, #0xc
	ble	.L1372	@cond_branch
	mov	r0, #0x0
	strh	r0, [r2, #0x26]
	ldr	r0, .L1374+0x4
	str	r0, [r2, #0x1c]
.L1372:
	pop	{r0}
	bx	r0
.L1375:
	.align	2, 0
.L1374:
	.word	0xfffe
	.word	SpriteCallbackDummy
.Lfe166:
	.size	 SpriteCB_MonHitShake,.Lfe166-SpriteCB_MonHitShake
	.align	2, 0
	.type	 Gfx_StartMonHitFlash,function
	.thumb_func
Gfx_StartMonHitFlash:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x2
	ldr	r0, .L1377
	add	r4, r4, r0
	add	r4, r4, r1
	ldr	r0, [r4]
	bl	ResetPokeJumpSpriteData
	ldr	r1, [r4]
	ldr	r0, .L1377+0x4
	str	r0, [r1, #0x1c]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1378:
	.align	2, 0
.L1377:
	.word	0x81a8
	.word	SpriteCB_MonHitFlash
.Lfe167:
	.size	 Gfx_StartMonHitFlash,.Lfe167-Gfx_StartMonHitFlash
	.align	2, 0
	.type	 Gfx_StopMonHitFlash,function
	.thumb_func
Gfx_StopMonHitFlash:
	push	{r4, r5, r6, r7, lr}
	add	r4, r0, #0
	bl	GetNumPokeJumpPlayers
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	beq	.L1381	@cond_branch
	mov	r1, #0x5
	neg	r1, r1
	mov	ip, r1
	ldr	r1, .L1386
	add	r3, r4, r1
	ldr	r7, .L1386+0x4
	ldr	r6, .L1386+0x8
	mov	r5, #0xa
	add	r4, r0, #0
.L1383:
	ldr	r2, [r3]
	ldr	r0, [r2, #0x1c]
	cmp	r0, r7
	bne	.L1382	@cond_branch
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, ip
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r0, [r3]
	str	r6, [r0, #0x1c]
	add	r0, r0, #0x43
	strb	r5, [r0]
.L1382:
	add	r3, r3, #0x4
	sub	r4, r4, #0x1
	cmp	r4, #0
	bne	.L1383	@cond_branch
.L1381:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1387:
	.align	2, 0
.L1386:
	.word	0x81a8
	.word	SpriteCB_MonHitFlash
	.word	SpriteCallbackDummy
.Lfe168:
	.size	 Gfx_StopMonHitFlash,.Lfe168-Gfx_StopMonHitFlash
	.align	2, 0
	.type	 SpriteCB_MonHitFlash,function
	.thumb_func
SpriteCB_MonHitFlash:
	push	{lr}
	add	r3, r0, #0
	ldrh	r0, [r3, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r3, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	ble	.L1389	@cond_branch
	mov	r0, #0x0
	strh	r0, [r3, #0x2e]
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
.L1389:
	pop	{r0}
	bx	r0
.Lfe169:
	.size	 SpriteCB_MonHitFlash,.Lfe169-SpriteCB_MonHitFlash
	.align	2, 0
	.type	 Gfx_ResetMonSpriteSubpriorities,function
	.thumb_func
Gfx_ResetMonSpriteSubpriorities:
	push	{r4, r5, lr}
	add	r4, r0, #0
	bl	GetNumPokeJumpPlayers
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	mov	r2, #0x0
	cmp	r2, r3
	bge	.L1392	@cond_branch
	ldr	r0, .L1396
	add	r5, r4, r0
	sub	r0, r0, #0x54
	add	r4, r4, r0
.L1394:
	ldmia	r4!, {r0}
	add	r1, r5, r2
	ldrb	r1, [r1]
	add	r0, r0, #0x43
	strb	r1, [r0]
	add	r2, r2, #0x1
	cmp	r2, r3
	blt	.L1394	@cond_branch
.L1392:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1397:
	.align	2, 0
.L1396:
	.word	0x81fc
.Lfe170:
	.size	 Gfx_ResetMonSpriteSubpriorities,.Lfe170-Gfx_ResetMonSpriteSubpriorities
	.align	2, 0
	.type	 Gfx_StartMonIntroBounce,function
	.thumb_func
Gfx_StartMonIntroBounce:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x2
	ldr	r0, .L1399
	add	r4, r4, r0
	add	r4, r4, r1
	ldr	r0, [r4]
	bl	ResetPokeJumpSpriteData
	ldr	r1, [r4]
	ldr	r0, .L1399+0x4
	str	r0, [r1, #0x1c]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1400:
	.align	2, 0
.L1399:
	.word	0x81a8
	.word	SpriteCB_MonIntroBounce
.Lfe171:
	.size	 Gfx_StartMonIntroBounce,.Lfe171-Gfx_StartMonIntroBounce
	.align	2, 0
	.type	 Gfx_IsMonIntroBounceActive,function
	.thumb_func
Gfx_IsMonIntroBounceActive:
	push	{r4, r5, lr}
	add	r4, r0, #0
	bl	GetNumPokeJumpPlayers
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	mov	r2, #0x0
	cmp	r2, r3
	bge	.L1403	@cond_branch
	ldr	r5, .L1409
	ldr	r0, .L1409+0x4
	add	r1, r4, r0
.L1405:
	ldr	r0, [r1]
	ldr	r0, [r0, #0x1c]
	cmp	r0, r5
	bne	.L1404	@cond_branch
	mov	r0, #0x1
	b	.L1408
.L1410:
	.align	2, 0
.L1409:
	.word	SpriteCB_MonIntroBounce
	.word	0x81a8
.L1404:
	add	r1, r1, #0x4
	add	r2, r2, #0x1
	cmp	r2, r3
	blt	.L1405	@cond_branch
.L1403:
	mov	r0, #0x0
.L1408:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe172:
	.size	 Gfx_IsMonIntroBounceActive,.Lfe172-Gfx_IsMonIntroBounceActive
	.align	2, 0
	.type	 SpriteCB_MonIntroBounce,function
	.thumb_func
SpriteCB_MonIntroBounce:
	push	{r4, r5, lr}
	add	r5, r0, #0
	mov	r0, #0x2e
	ldrsh	r4, [r5, r0]
	cmp	r4, #0
	beq	.L1413	@cond_branch
	cmp	r4, #0x1
	beq	.L1414	@cond_branch
	b	.L1412
.L1413:
	mov	r0, #0x1c
	bl	PlaySE
	strh	r4, [r5, #0x30]
	ldrh	r0, [r5, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2e]
.L1414:
	ldrh	r0, [r5, #0x30]
	add	r0, r0, #0x4
	strh	r0, [r5, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7f
	ble	.L1415	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5, #0x30]
.L1415:
	ldr	r1, .L1421
	mov	r2, #0x30
	ldrsh	r0, [r5, r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x13
	neg	r0, r0
	strh	r0, [r5, #0x26]
	mov	r0, #0x30
	ldrsh	r1, [r5, r0]
	cmp	r1, #0
	bne	.L1412	@cond_branch
	ldrh	r0, [r5, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x32]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1
	bgt	.L1417	@cond_branch
	strh	r1, [r5, #0x2e]
	b	.L1412
.L1422:
	.align	2, 0
.L1421:
	.word	gSineTable
.L1417:
	ldr	r0, .L1423
	str	r0, [r5, #0x1c]
.L1412:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1424:
	.align	2, 0
.L1423:
	.word	SpriteCallbackDummy
.Lfe173:
	.size	 SpriteCB_MonIntroBounce,.Lfe173-SpriteCB_MonIntroBounce
	.align	2, 0
	.type	 CreateStarSprite,function
	.thumb_func
CreateStarSprite:
	push	{r4, r5, lr}
	add	r5, r0, #0
	lsl	r3, r3, #0x18
	lsr	r4, r3, #0x18
	ldr	r0, .L1427
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x40
	beq	.L1426	@cond_branch
	ldr	r0, .L1427+0x4
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r3]
	lsl	r2, r4, #0x2
	ldr	r3, .L1427+0x8
	add	r0, r5, r3
	add	r0, r0, r2
	str	r1, [r0]
.L1426:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1428:
	.align	2, 0
.L1427:
	.word	sSpriteTemplate_Star
	.word	gSprites
	.word	0x81bc
.Lfe174:
	.size	 CreateStarSprite,.Lfe174-CreateStarSprite
	.align	2, 0
	.type	 CreateVineSprites,function
	.thumb_func
CreateVineSprites:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	mov	r5, #0x0
	mov	r4, #0x0
	ldr	r6, .L1440
.L1433:
	ldr	r1, .L1440+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r2, .L1440+0x8
	lsl	r1, r5, #0x1
	add	r1, r1, r2
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	mov	r3, #0x0
	ldrsh	r2, [r6, r3]
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r5, #0x2
	ldr	r3, .L1440+0xc
	add	r2, r7, r3
	add	r2, r2, r0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1440+0x10
	add	r0, r0, r1
	str	r0, [r2]
	add	r5, r5, #0x1
	add	r6, r6, #0x14
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L1433	@cond_branch
	mov	r4, #0x3
	mov	r6, #0x3c
.L1438:
	ldr	r1, .L1440+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	ldr	r2, .L1440+0x8
	lsl	r1, r5, #0x1
	add	r1, r1, r2
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	ldr	r2, .L1440
	add	r2, r6, r2
	mov	r3, #0x0
	ldrsh	r2, [r2, r3]
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	lsl	r0, r5, #0x2
	ldr	r3, .L1440+0xc
	add	r2, r7, r3
	add	r2, r2, r0
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1440+0x10
	add	r0, r0, r1
	str	r0, [r2]
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r2, #0x1
	orr	r1, r1, r2
	strb	r1, [r0]
	add	r5, r5, #0x1
	sub	r6, r6, #0x14
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L1438	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1441:
	.align	2, 0
.L1440:
	.word	sVineYCoords
	.word	sSpriteTemplates_Vine
	.word	sVineXCoords
	.word	0x81d0
	.word	gSprites
.Lfe175:
	.size	 CreateVineSprites,.Lfe175-CreateVineSprites
	.align	2, 0
	.type	 UpdateVineAnim,function
	.thumb_func
UpdateVineAnim:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	str	r0, [sp, #0x8]
	cmp	r1, #0x5
	ble	.L1443	@cond_branch
	mov	r0, #0xa
	sub	r1, r0, r1
	mov	r0, #0x3
	str	r0, [sp]
	ldr	r2, [sp, #0x8]
	ldrb	r0, [r2, #0xf]
	b	.L1444
.L1443:
	mov	r3, #0x2
	str	r3, [sp]
	ldr	r7, [sp, #0x8]
	ldrb	r0, [r7, #0xe]
.L1444:
	mov	r6, #0x0
	lsl	r2, r1, #0x1
	str	r2, [sp, #0x4]
	lsl	r0, r0, #0x4
	mov	r9, r0
	lsl	r1, r1, #0x18
	mov	r8, r1
	ldr	r0, .L1455
	add	r4, r2, r0
	ldr	r3, [sp]
	lsl	r3, r3, #0x2
	mov	sl, r3
	mov	r5, #0x3
.L1448:
	lsl	r0, r6, #0x2
	ldr	r7, [sp, #0x8]
	ldr	r1, .L1455+0x4
	add	r2, r7, r1
	add	r2, r2, r0
	ldr	r1, [r2]
	ldrh	r0, [r4]
	strh	r0, [r1, #0x22]
	ldr	r3, [r2]
	ldrb	r0, [r3, #0x5]
	mov	r7, #0xd
	neg	r7, r7
	add	r1, r7, #0
	and	r0, r0, r1
	mov	r1, sl
	orr	r0, r0, r1
	strb	r0, [r3, #0x5]
	ldr	r3, [r2]
	ldrb	r1, [r3, #0x5]
	mov	r0, #0xf
	and	r0, r0, r1
	mov	r7, r9
	orr	r0, r0, r7
	strb	r0, [r3, #0x5]
	ldr	r0, [r2]
	mov	r2, r8
	lsr	r1, r2, #0x18
	bl	StartSpriteAnim
	add	r6, r6, #0x1
	add	r4, r4, #0x14
	sub	r5, r5, #0x1
	cmp	r5, #0
	bge	.L1448	@cond_branch
	mov	r5, #0x3
	ldr	r0, .L1455
	ldr	r3, [sp, #0x4]
	add	r0, r3, r0
	add	r4, r0, #0
	add	r4, r4, #0x3c
	ldr	r7, [sp]
	lsl	r7, r7, #0x2
	mov	sl, r7
.L1453:
	lsl	r0, r6, #0x2
	ldr	r1, [sp, #0x8]
	ldr	r3, .L1455+0x4
	add	r2, r1, r3
	add	r2, r2, r0
	ldr	r1, [r2]
	ldrh	r0, [r4]
	strh	r0, [r1, #0x22]
	ldr	r3, [r2]
	ldrb	r0, [r3, #0x5]
	mov	r7, #0xd
	neg	r7, r7
	add	r1, r7, #0
	and	r0, r0, r1
	mov	r1, sl
	orr	r0, r0, r1
	strb	r0, [r3, #0x5]
	ldr	r3, [r2]
	ldrb	r1, [r3, #0x5]
	mov	r0, #0xf
	and	r0, r0, r1
	mov	r7, r9
	orr	r0, r0, r7
	strb	r0, [r3, #0x5]
	ldr	r0, [r2]
	mov	r2, r8
	lsr	r1, r2, #0x18
	bl	StartSpriteAnim
	add	r6, r6, #0x1
	sub	r4, r4, #0x14
	sub	r5, r5, #0x1
	cmp	r5, #0
	bge	.L1453	@cond_branch
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1456:
	.align	2, 0
.L1455:
	.word	sVineYCoords
	.word	0x81d0
.Lfe176:
	.size	 UpdateVineAnim,.Lfe176-UpdateVineAnim
	.align	2, 0
	.type	 StartPokeJumpCountdown,function
	.thumb_func
StartPokeJumpCountdown:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x9
	mov	r1, #0x7
	mov	r2, #0x78
	mov	r3, #0x50
	bl	StartMinigameCountdown
	add	r0, r4, #0
	bl	Gfx_ResetMonSpriteSubpriorities
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe177:
	.size	 StartPokeJumpCountdown,.Lfe177-StartPokeJumpCountdown
	.align	2, 0
	.type	 IsPokeJumpCountdownRunning,function
	.thumb_func
IsPokeJumpCountdownRunning:
	push	{lr}
	bl	IsMinigameCountdownRunning
	pop	{r1}
	bx	r1
.Lfe178:
	.size	 IsPokeJumpCountdownRunning,.Lfe178-IsPokeJumpCountdownRunning
	.align	2, 0
	.type	 GetPokeJumpRecords,function
	.thumb_func
GetPokeJumpRecords:
	ldr	r0, .L1460
	ldr	r0, [r0]
	mov	r1, #0xb0
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	bx	lr
.L1461:
	.align	2, 0
.L1460:
	.word	gSaveBlock2Ptr
.Lfe179:
	.size	 GetPokeJumpRecords,.Lfe179-GetPokeJumpRecords
	.align	2, 0
	.globl	ResetPokemonJumpRecords
	.type	 ResetPokemonJumpRecords,function
	.thumb_func
ResetPokemonJumpRecords:
	push	{lr}
	bl	GetPokeJumpRecords
	mov	r1, #0x0
	strh	r1, [r0]
	str	r1, [r0, #0xc]
	strh	r1, [r0, #0x4]
	strh	r1, [r0, #0x6]
	str	r1, [r0, #0x8]
	strh	r1, [r0, #0x2]
	pop	{r0}
	bx	r0
.Lfe180:
	.size	 ResetPokemonJumpRecords,.Lfe180-ResetPokemonJumpRecords
	.align	2, 0
	.type	 TryUpdateRecords,function
	.thumb_func
TryUpdateRecords:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r6, r2, #0x10
	bl	GetPokeJumpRecords
	add	r1, r0, #0
	mov	r2, #0x0
	ldr	r0, [r1, #0xc]
	cmp	r0, r4
	bcs	.L1464	@cond_branch
	ldr	r0, .L1467
	cmp	r4, r0
	bhi	.L1464	@cond_branch
	str	r4, [r1, #0xc]
	mov	r2, #0x1
.L1464:
	ldrh	r0, [r1]
	cmp	r0, r5
	bcs	.L1465	@cond_branch
	ldr	r0, .L1467+0x4
	cmp	r5, r0
	bhi	.L1465	@cond_branch
	strh	r5, [r1]
	mov	r2, #0x1
.L1465:
	ldrh	r0, [r1, #0x4]
	cmp	r0, r6
	bcs	.L1466	@cond_branch
	ldr	r0, .L1467+0x4
	cmp	r6, r0
	bhi	.L1466	@cond_branch
	strh	r6, [r1, #0x4]
	mov	r2, #0x1
.L1466:
	add	r0, r2, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L1468:
	.align	2, 0
.L1467:
	.word	0x18696
	.word	0x270f
.Lfe181:
	.size	 TryUpdateRecords,.Lfe181-TryUpdateRecords
	.align	2, 0
	.type	 IncrementGamesWithMaxPlayers,function
	.thumb_func
IncrementGamesWithMaxPlayers:
	push	{lr}
	bl	GetPokeJumpRecords
	add	r2, r0, #0
	ldrh	r1, [r2, #0x6]
	ldr	r0, .L1471
	cmp	r1, r0
	bhi	.L1470	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r2, #0x6]
.L1470:
	pop	{r0}
	bx	r0
.L1472:
	.align	2, 0
.L1471:
	.word	0x270e
.Lfe182:
	.size	 IncrementGamesWithMaxPlayers,.Lfe182-IncrementGamesWithMaxPlayers
	.align	2, 0
	.globl	ShowPokemonJumpRecords
	.type	 ShowPokemonJumpRecords,function
	.thumb_func
ShowPokemonJumpRecords:
	push	{r4, lr}
	ldr	r4, .L1474
	add	r0, r4, #0
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	pop	{r4}
	pop	{r0}
	bx	r0
.L1475:
	.align	2, 0
.L1474:
	.word	Task_ShowPokemonJumpRecords
.Lfe183:
	.size	 ShowPokemonJumpRecords,.Lfe183-ShowPokemonJumpRecords
	.section .rodata
	.align	2, 0
	.type	 sWindowTemplate_Records,object
	.size	 sWindowTemplate_Records,8
sWindowTemplate_Records:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1c
	.byte	0x9
	.byte	0xf
	.short	0x1
	.align	2, 0
	.type	 sRecordsTexts,object
sRecordsTexts:
	.word	gText_JumpsInARow
	.word	gText_BestScore2
	.word	gText_ExcellentsInARow
	.size	 sRecordsTexts,12
.text
	.align	2, 0
	.type	 Task_ShowPokemonJumpRecords,function
	.thumb_func
Task_ShowPokemonJumpRecords:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L1490
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L1479	@cond_branch
	cmp	r0, #0x1
	bgt	.L1487	@cond_branch
	cmp	r0, #0
	beq	.L1478	@cond_branch
	b	.L1477
.L1491:
	.align	2, 0
.L1490:
	.word	gTasks+0x8
.L1487:
	cmp	r0, #0x2
	beq	.L1481	@cond_branch
	cmp	r0, #0x3
	beq	.L1483	@cond_branch
	b	.L1477
.L1478:
	ldr	r0, .L1492
	bl	AddWindow
	strh	r0, [r4, #0x2]
	ldrh	r0, [r4, #0x2]
	bl	PrintRecordsText
	ldrb	r0, [r4, #0x2]
	mov	r1, #0x3
	b	.L1488
.L1493:
	.align	2, 0
.L1492:
	.word	sWindowTemplate_Records
.L1479:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1477	@cond_branch
	b	.L1489
.L1481:
	ldr	r0, .L1494
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1477	@cond_branch
	ldrb	r0, [r4, #0x2]
	bl	rbox_fill_rectangle
	ldrb	r0, [r4, #0x2]
	mov	r1, #0x1
.L1488:
	bl	CopyWindowToVram
.L1489:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L1477
.L1495:
	.align	2, 0
.L1494:
	.word	gMain
.L1483:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1477	@cond_branch
	ldrb	r0, [r4, #0x2]
	bl	RemoveWindow
	add	r0, r5, #0
	bl	DestroyTask
	bl	ScriptContext_Enable
.L1477:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe184:
	.size	 Task_ShowPokemonJumpRecords,.Lfe184-Task_ShowPokemonJumpRecords
	.align	2, 0
	.type	 PrintRecordsText,function
	.thumb_func
PrintRecordsText:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x30
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x28]
	bl	GetPokeJumpRecords
	ldrh	r1, [r0]
	str	r1, [sp, #0x14]
	ldr	r1, [r0, #0xc]
	str	r1, [sp, #0x18]
	ldrh	r0, [r0, #0x4]
	str	r0, [sp, #0x1c]
	ldr	r0, [sp, #0x28]
	lsl	r4, r0, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L1502
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0xd0
	bl	LoadStdWindowGfx
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0xd
	bl	DrawTextBorderOuter
	add	r0, r4, #0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r2, .L1502+0x4
	mov	r1, #0x0
	str	r1, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	mov	r0, #0x1
	str	r0, [sp, #0xc]
	str	r1, [sp, #0x10]
	add	r0, r4, #0
	mov	r1, #0x2
	mov	r3, #0x0
	bl	AddTextPrinterParameterized5
	mov	r7, #0x0
	mov	r8, r4
	mov	r1, #0xff
	mov	sl, r1
	mov	r6, #0x0
	mov	r0, sp
	add	r0, r0, #0x14
	str	r0, [sp, #0x2c]
	mov	r1, #0xa0
	lsl	r1, r1, #0x15
	mov	r9, r1
	add	r5, sp, #0x20
.L1500:
	ldr	r1, .L1502+0x8
	lsl	r0, r7, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	mov	r0, r9
	lsr	r4, r0, #0x18
	str	r4, [sp]
	mov	r1, sl
	str	r1, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r0, #0x1
	str	r0, [sp, #0xc]
	str	r6, [sp, #0x10]
	mov	r0, r8
	mov	r1, #0x2
	mov	r3, #0x0
	bl	AddTextPrinterParameterized5
	ldr	r0, [sp, #0x2c]
	ldmia	r0!, {r1}
	str	r0, [sp, #0x2c]
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	add	r0, r5, #0
	bl	TruncateToFirstWordOnly
	mov	r0, #0x2
	add	r1, r5, #0
	mov	r2, #0x0
	bl	GetStringWidth
	mov	r3, #0xde
	sub	r3, r3, r0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r4, [sp]
	mov	r1, sl
	str	r1, [sp, #0x4]
	str	r6, [sp, #0x8]
	str	r6, [sp, #0xc]
	str	r6, [sp, #0x10]
	mov	r0, r8
	mov	r1, #0x2
	add	r2, r5, #0
	bl	AddTextPrinterParameterized5
	mov	r0, #0xe0
	lsl	r0, r0, #0x14
	add	r9, r9, r0
	add	r7, r7, #0x1
	ldr	r1, [sp, #0x28]
	lsl	r0, r1, #0x18
	cmp	r7, #0x2
	bls	.L1500	@cond_branch
	lsr	r0, r0, #0x18
	bl	PutWindowTilemap
	add	sp, sp, #0x30
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1503:
	.align	2, 0
.L1502:
	.word	0x21d
	.word	gText_PkmnJumpRecords
	.word	sRecordsTexts
.Lfe185:
	.size	 PrintRecordsText,.Lfe185-PrintRecordsText
	.align	2, 0
	.type	 TruncateToFirstWordOnly,function
	.thumb_func
TruncateToFirstWordOnly:
	push	{lr}
	add	r1, r0, #0
	b	.L1511
.L1507:
	add	r1, r1, #0x1
.L1511:
	ldrb	r0, [r1]
	cmp	r0, #0xff
	beq	.L1506	@cond_branch
	cmp	r0, #0
	bne	.L1507	@cond_branch
	mov	r0, #0xff
	strb	r0, [r1]
.L1506:
	pop	{r0}
	bx	r0
.Lfe186:
	.size	 TruncateToFirstWordOnly,.Lfe186-TruncateToFirstWordOnly
.text
	.align	2, 0 @ Don't pad with nop

