@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	BackupPokemonStorage
	.type	 BackupPokemonStorage,function
	.thumb_func
BackupPokemonStorage:
	push	{lr}
	ldr	r1, .L5
	ldr	r1, [r1]
	ldr	r2, .L5+0x4
	bl	memcpy
	pop	{r0}
	bx	r0
.L6:
	.align	2, 0
.L5:
	.word	gPokemonStoragePtr
	.word	0x83d0
.Lfe1:
	.size	 BackupPokemonStorage,.Lfe1-BackupPokemonStorage
	.align	2, 0
	.globl	RestorePokemonStorage
	.type	 RestorePokemonStorage,function
	.thumb_func
RestorePokemonStorage:
	push	{lr}
	add	r1, r0, #0
	ldr	r0, .L8
	ldr	r0, [r0]
	ldr	r2, .L8+0x4
	bl	memcpy
	pop	{r0}
	bx	r0
.L9:
	.align	2, 0
.L8:
	.word	gPokemonStoragePtr
	.word	0x83d0
.Lfe2:
	.size	 RestorePokemonStorage,.Lfe2-RestorePokemonStorage
	.align	2, 0
	.globl	StorageGetCurrentBox
	.type	 StorageGetCurrentBox,function
	.thumb_func
StorageGetCurrentBox:
	ldr	r0, .L11
	ldr	r0, [r0]
	ldrb	r0, [r0]
	bx	lr
.L12:
	.align	2, 0
.L11:
	.word	gPokemonStoragePtr
.Lfe3:
	.size	 StorageGetCurrentBox,.Lfe3-StorageGetCurrentBox
	.align	2, 0
	.globl	SetCurrentBox
	.type	 SetCurrentBox,function
	.thumb_func
SetCurrentBox:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xd
	bhi	.L14	@cond_branch
	ldr	r0, .L15
	ldr	r0, [r0]
	strb	r1, [r0]
.L14:
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	gPokemonStoragePtr
.Lfe4:
	.size	 SetCurrentBox,.Lfe4-SetCurrentBox
	.align	2, 0
	.globl	GetBoxMonDataAt
	.type	 GetBoxMonDataAt,function
	.thumb_func
GetBoxMonDataAt:
	push	{r4, r5, lr}
	add	r5, r2, #0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	cmp	r3, #0xd
	bhi	.L18	@cond_branch
	cmp	r4, #0x1d
	bhi	.L18	@cond_branch
	ldr	r2, .L21
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r1, r1, #0x4
	ldr	r0, [r2]
	add	r0, r0, r1
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	add	r1, r5, #0
	bl	GetBoxMonData
	b	.L20
.L22:
	.align	2, 0
.L21:
	.word	gPokemonStoragePtr
.L18:
	mov	r0, #0x0
.L20:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 GetBoxMonDataAt,.Lfe5-GetBoxMonDataAt
	.align	2, 0
	.globl	SetBoxMonDataAt
	.type	 SetBoxMonDataAt,function
	.thumb_func
SetBoxMonDataAt:
	push	{r4, r5, r6, lr}
	add	r5, r2, #0
	add	r6, r3, #0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	cmp	r3, #0xd
	bhi	.L24	@cond_branch
	cmp	r4, #0x1d
	bhi	.L24	@cond_branch
	ldr	r2, .L25
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r1, r1, #0x4
	ldr	r0, [r2]
	add	r0, r0, r1
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	add	r1, r5, #0
	add	r2, r6, #0
	bl	SetBoxMonData
.L24:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L26:
	.align	2, 0
.L25:
	.word	gPokemonStoragePtr
.Lfe6:
	.size	 SetBoxMonDataAt,.Lfe6-SetBoxMonDataAt
	.align	2, 0
	.globl	GetCurrentBoxMonData
	.type	 GetCurrentBoxMonData,function
	.thumb_func
GetCurrentBoxMonData:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldr	r0, .L28
	ldr	r0, [r0]
	ldrb	r0, [r0]
	add	r1, r3, #0
	bl	GetBoxMonDataAt
	pop	{r1}
	bx	r1
.L29:
	.align	2, 0
.L28:
	.word	gPokemonStoragePtr
.Lfe7:
	.size	 GetCurrentBoxMonData,.Lfe7-GetCurrentBoxMonData
	.align	2, 0
	.globl	SetCurrentBoxMonData
	.type	 SetCurrentBoxMonData,function
	.thumb_func
SetCurrentBoxMonData:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r3, r2, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L31
	ldr	r0, [r0]
	ldrb	r0, [r0]
	add	r1, r4, #0
	add	r2, r5, #0
	bl	SetBoxMonDataAt
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L32:
	.align	2, 0
.L31:
	.word	gPokemonStoragePtr
.Lfe8:
	.size	 SetCurrentBoxMonData,.Lfe8-SetCurrentBoxMonData
	.align	2, 0
	.globl	GetBoxMonNickAt
	.type	 GetBoxMonNickAt,function
	.thumb_func
GetBoxMonNickAt:
	push	{r4, r5, lr}
	add	r5, r2, #0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	cmp	r3, #0xd
	bhi	.L34	@cond_branch
	cmp	r4, #0x1d
	bhi	.L34	@cond_branch
	ldr	r2, .L36
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r1, r1, #0x4
	ldr	r0, [r2]
	add	r0, r0, r1
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	mov	r1, #0x2
	add	r2, r5, #0
	bl	GetBoxMonData
	b	.L35
.L37:
	.align	2, 0
.L36:
	.word	gPokemonStoragePtr
.L34:
	mov	r0, #0xff
	strb	r0, [r5]
.L35:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe9:
	.size	 GetBoxMonNickAt,.Lfe9-GetBoxMonNickAt
	.align	2, 0
	.globl	SetBoxMonNickAt
	.type	 SetBoxMonNickAt,function
	.thumb_func
SetBoxMonNickAt:
	push	{r4, r5, lr}
	add	r5, r2, #0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	cmp	r3, #0xd
	bhi	.L39	@cond_branch
	cmp	r4, #0x1d
	bhi	.L39	@cond_branch
	ldr	r2, .L40
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r1, r1, #0x4
	ldr	r0, [r2]
	add	r0, r0, r1
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	mov	r1, #0x2
	add	r2, r5, #0
	bl	SetBoxMonData
.L39:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	gPokemonStoragePtr
.Lfe10:
	.size	 SetBoxMonNickAt,.Lfe10-SetBoxMonNickAt
	.align	2, 0
	.globl	GetAndCopyBoxMonDataAt
	.type	 GetAndCopyBoxMonDataAt,function
	.thumb_func
GetAndCopyBoxMonDataAt:
	push	{r4, r5, r6, lr}
	add	r5, r2, #0
	add	r6, r3, #0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	cmp	r3, #0xd
	bhi	.L43	@cond_branch
	cmp	r4, #0x1d
	bhi	.L43	@cond_branch
	ldr	r2, .L46
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r1, r1, #0x4
	ldr	r0, [r2]
	add	r0, r0, r1
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	add	r1, r5, #0
	add	r2, r6, #0
	bl	GetBoxMonData
	b	.L45
.L47:
	.align	2, 0
.L46:
	.word	gPokemonStoragePtr
.L43:
	mov	r0, #0x0
.L45:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 GetAndCopyBoxMonDataAt,.Lfe11-GetAndCopyBoxMonDataAt
	.align	2, 0
	.globl	SetBoxMonAt
	.type	 SetBoxMonAt,function
	.thumb_func
SetBoxMonAt:
	push	{r4, r5, lr}
	add	r5, r2, #0
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r4, #0xd
	bhi	.L49	@cond_branch
	cmp	r1, #0x1d
	bhi	.L49	@cond_branch
	ldr	r0, .L50
	ldr	r0, [r0]
	lsl	r3, r1, #0x2
	add	r3, r3, r1
	lsl	r3, r3, #0x4
	lsl	r2, r4, #0x2
	add	r2, r2, r4
	lsl	r1, r2, #0x4
	sub	r1, r1, r2
	lsl	r1, r1, #0x5
	add	r3, r3, r1
	add	r0, r0, r3
	add	r0, r0, #0x4
	add	r1, r5, #0
	mov	r2, #0x50
	bl	memcpy
.L49:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L51:
	.align	2, 0
.L50:
	.word	gPokemonStoragePtr
.Lfe12:
	.size	 SetBoxMonAt,.Lfe12-SetBoxMonAt
	.align	2, 0
	.globl	CopyBoxMonAt
	.type	 CopyBoxMonAt,function
	.thumb_func
CopyBoxMonAt:
	push	{r4, r5, lr}
	add	r5, r2, #0
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	cmp	r4, #0xd
	bhi	.L53	@cond_branch
	cmp	r2, #0x1d
	bhi	.L53	@cond_branch
	ldr	r0, .L54
	ldr	r1, [r0]
	lsl	r3, r2, #0x2
	add	r3, r3, r2
	lsl	r3, r3, #0x4
	lsl	r2, r4, #0x2
	add	r2, r2, r4
	lsl	r0, r2, #0x4
	sub	r0, r0, r2
	lsl	r0, r0, #0x5
	add	r3, r3, r0
	add	r1, r1, r3
	add	r1, r1, #0x4
	add	r0, r5, #0
	mov	r2, #0x50
	bl	memcpy
.L53:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L55:
	.align	2, 0
.L54:
	.word	gPokemonStoragePtr
.Lfe13:
	.size	 CopyBoxMonAt,.Lfe13-CopyBoxMonAt
	.align	2, 0
	.globl	CreateBoxMonAt
	.type	 CreateBoxMonAt,function
	.thumb_func
CreateBoxMonAt:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x14
	ldr	r4, [sp, #0x30]
	ldr	r5, [sp, #0x34]
	ldr	r6, [sp, #0x3c]
	mov	ip, r6
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	r9, r2
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r8, r3
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	mov	r0, ip
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r7, #0xd
	bhi	.L57	@cond_branch
	cmp	r6, #0x1d
	bhi	.L57	@cond_branch
	ldr	r2, .L58
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r1, r1, #0x4
	ldr	r0, [r2]
	add	r0, r0, r1
	lsl	r1, r6, #0x2
	add	r1, r1, r6
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	str	r5, [sp]
	ldr	r1, [sp, #0x38]
	str	r1, [sp, #0x4]
	str	r3, [sp, #0x8]
	ldr	r1, [sp, #0x40]
	str	r1, [sp, #0xc]
	mov	r1, r9
	mov	r2, r8
	add	r3, r4, #0
	bl	CreateBoxMon
.L57:
	add	sp, sp, #0x14
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L59:
	.align	2, 0
.L58:
	.word	gPokemonStoragePtr
.Lfe14:
	.size	 CreateBoxMonAt,.Lfe14-CreateBoxMonAt
	.align	2, 0
	.globl	ZeroBoxMonAt
	.type	 ZeroBoxMonAt,function
	.thumb_func
ZeroBoxMonAt:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	cmp	r3, #0xd
	bhi	.L61	@cond_branch
	cmp	r4, #0x1d
	bhi	.L61	@cond_branch
	ldr	r2, .L62
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r1, r1, #0x4
	ldr	r0, [r2]
	add	r0, r0, r1
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	bl	ZeroBoxMonData
.L61:
	pop	{r4}
	pop	{r0}
	bx	r0
.L63:
	.align	2, 0
.L62:
	.word	gPokemonStoragePtr
.Lfe15:
	.size	 ZeroBoxMonAt,.Lfe15-ZeroBoxMonAt
	.align	2, 0
	.globl	BoxMonAtToMon
	.type	 BoxMonAtToMon,function
	.thumb_func
BoxMonAtToMon:
	push	{r4, r5, lr}
	add	r5, r2, #0
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	cmp	r3, #0xd
	bhi	.L65	@cond_branch
	cmp	r4, #0x1d
	bhi	.L65	@cond_branch
	ldr	r2, .L66
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r1, r1, #0x4
	ldr	r0, [r2]
	add	r0, r0, r1
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	add	r1, r5, #0
	bl	BoxMonToMon
.L65:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L67:
	.align	2, 0
.L66:
	.word	gPokemonStoragePtr
.Lfe16:
	.size	 BoxMonAtToMon,.Lfe16-BoxMonAtToMon
	.align	2, 0
	.globl	GetBoxedMonPtr
	.type	 GetBoxedMonPtr,function
	.thumb_func
GetBoxedMonPtr:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	cmp	r3, #0xd
	bhi	.L69	@cond_branch
	cmp	r4, #0x1d
	bhi	.L69	@cond_branch
	ldr	r2, .L72
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r1, r0, #0x4
	sub	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r1, r1, #0x4
	ldr	r0, [r2]
	add	r0, r0, r1
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	b	.L71
.L73:
	.align	2, 0
.L72:
	.word	gPokemonStoragePtr
.L69:
	mov	r0, #0x0
.L71:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 GetBoxedMonPtr,.Lfe17-GetBoxedMonPtr
	.align	2, 0
	.globl	GetBoxNamePtr
	.type	 GetBoxNamePtr,function
	.thumb_func
GetBoxNamePtr:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0xd
	bls	.L75	@cond_branch
	mov	r0, #0x0
	b	.L77
.L75:
	ldr	r0, .L78
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	ldr	r2, .L78+0x4
	add	r1, r1, r2
	ldr	r0, [r0]
	add	r0, r0, r1
.L77:
	pop	{r1}
	bx	r1
.L79:
	.align	2, 0
.L78:
	.word	gPokemonStoragePtr
	.word	0x8344
.Lfe18:
	.size	 GetBoxNamePtr,.Lfe18-GetBoxNamePtr
	.align	2, 0
	.globl	GetBoxWallpaper
	.type	 GetBoxWallpaper,function
	.thumb_func
GetBoxWallpaper:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xd
	bls	.L81	@cond_branch
	mov	r0, #0x0
	b	.L83
.L81:
	ldr	r0, .L84
	ldr	r0, [r0]
	ldr	r2, .L84+0x4
	add	r0, r0, r2
	add	r0, r0, r1
	ldrb	r0, [r0]
.L83:
	pop	{r1}
	bx	r1
.L85:
	.align	2, 0
.L84:
	.word	gPokemonStoragePtr
	.word	0x83c2
.Lfe19:
	.size	 GetBoxWallpaper,.Lfe19-GetBoxWallpaper
	.align	2, 0
	.globl	SetBoxWallpaper
	.type	 SetBoxWallpaper,function
	.thumb_func
SetBoxWallpaper:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r2, #0xd
	bhi	.L87	@cond_branch
	cmp	r1, #0xf
	bhi	.L87	@cond_branch
	ldr	r0, .L88
	ldr	r0, [r0]
	ldr	r3, .L88+0x4
	add	r0, r0, r3
	add	r0, r0, r2
	strb	r1, [r0]
.L87:
	pop	{r0}
	bx	r0
.L89:
	.align	2, 0
.L88:
	.word	gPokemonStoragePtr
	.word	0x83c2
.Lfe20:
	.size	 SetBoxWallpaper,.Lfe20-SetBoxWallpaper
	.align	2, 0
	.globl	SeekToNextMonInBox
	.type	 SeekToNextMonInBox,function
	.thumb_func
SeekToNextMonInBox:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r0
	lsl	r1, r1, #0x18
	lsr	r0, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r7, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r4, r3, #0
	ldr	r2, .L115
	cmp	r3, #0x1
	bhi	.L112	@cond_branch
	mov	r2, #0x1
	cmp	r3, #0x1
	beq	.L94	@cond_branch
.L112:
	cmp	r4, #0x3
	bne	.L93	@cond_branch
.L94:
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	lsl	r2, r2, #0x10
	asr	r1, r2, #0x10
	add	r1, r1, r0
	lsl	r0, r1, #0x10
	asr	r1, r0, #0x10
	add	r6, r2, #0
	cmp	r1, #0
	blt	.L102	@cond_branch
	cmp	r1, r7
	bgt	.L102	@cond_branch
.L98:
	asr	r4, r0, #0x10
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x4
	add	r0, r0, r8
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	bne	.L113	@cond_branch
	asr	r0, r6, #0x10
	add	r0, r4, r0
	lsl	r0, r0, #0x10
	asr	r2, r0, #0x10
	cmp	r2, #0
	blt	.L102	@cond_branch
	cmp	r2, r7
	ble	.L98	@cond_branch
	b	.L102
.L116:
	.align	2, 0
.L115:
	.word	0xffff
.L113:
	add	r0, r4, #0
	b	.L110
.L114:
	add	r0, r5, #0
	b	.L110
.L93:
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	lsl	r2, r2, #0x10
	asr	r1, r2, #0x10
	add	r1, r1, r0
	lsl	r0, r1, #0x10
	asr	r1, r0, #0x10
	add	r6, r2, #0
	cmp	r1, #0
	blt	.L102	@cond_branch
	cmp	r1, r7
	bgt	.L102	@cond_branch
.L106:
	asr	r5, r0, #0x10
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x4
	mov	r1, r8
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetBoxMonData
	cmp	r0, #0
	beq	.L105	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetBoxMonData
	cmp	r0, #0
	beq	.L114	@cond_branch
.L105:
	asr	r0, r6, #0x10
	add	r0, r5, r0
	lsl	r0, r0, #0x10
	asr	r2, r0, #0x10
	cmp	r2, #0
	blt	.L102	@cond_branch
	cmp	r2, r7
	ble	.L106	@cond_branch
.L102:
	mov	r0, #0x1
	neg	r0, r0
.L110:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 SeekToNextMonInBox,.Lfe21-SeekToNextMonInBox
.text
	.align	2, 0 @ Don't pad with nop

