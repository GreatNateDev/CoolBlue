@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sMonSummaryScreen,object
	.size	 sMonSummaryScreen,4
sMonSummaryScreen:
	.word	0x0
	.align	2, 0
	.type	 sMonSkillsPrinterXpos,object
	.size	 sMonSkillsPrinterXpos,4
sMonSkillsPrinterXpos:
	.word	0x0
	.align	2, 0
	.type	 sMoveSelectionCursorObjs,object
	.size	 sMoveSelectionCursorObjs,16
sMoveSelectionCursorObjs:
	.space	16
	.align	2, 0
	.type	 sStatusIcon,object
	.size	 sStatusIcon,4
sStatusIcon:
	.word	0x0
	.align	2, 0
	.type	 sHpBarObjs,object
	.size	 sHpBarObjs,4
sHpBarObjs:
	.word	0x0
	.align	2, 0
	.type	 sExpBarObjs,object
	.size	 sExpBarObjs,4
sExpBarObjs:
	.word	0x0
	.align	2, 0
	.type	 sPokerusIconObj,object
	.size	 sPokerusIconObj,4
sPokerusIconObj:
	.word	0x0
	.align	2, 0
	.type	 sShinyStarObjData,object
	.size	 sShinyStarObjData,4
sShinyStarObjData:
	.word	0x0
	.type	 sLastViewedMonIndex,object
	.size	 sLastViewedMonIndex,1
sLastViewedMonIndex:
	.byte	0x0
	.type	 sMoveSelectionCursorPos,object
	.size	 sMoveSelectionCursorPos,1
sMoveSelectionCursorPos:
	.byte	0x0
	.type	 sMoveSwapCursorPos,object
	.size	 sMoveSwapCursorPos,1
sMoveSwapCursorPos:
	.byte	0x0
	.align	2, 0
	.type	 sMonPicBounceState,object
	.size	 sMonPicBounceState,4
sMonPicBounceState:
	.word	0x0
	.section .rodata
	.align	2, 0
	.type	 sTextHeaderPalette,object
sTextHeaderPalette:
	.word	0x7fff7fff
	.word	0x675a318c
	.word	0x3aff043c
	.word	0x4bd20664
	.word	0x7b146546
	.word	0x47df037d
	.word	0x0
	.word	0x71c20000
	.size	 sTextHeaderPalette,32
	.align	1, 0
	.type	 sMonMarkingSpritePalette,object
sMonMarkingSpritePalette:
	.short	0x0
	.short	0x6f7b
	.short	0x779d
	.short	0x63f
	.short	0x3efe
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sMonMarkingSpritePalette,32
	.align	2, 0
	.type	 sTextMovesPalette,object
sTextMovesPalette:
	.word	0x37d0000
	.word	0x25f47df
	.word	0x1d3bbf
	.word	0x10844f7e
	.word	0x6f7b
	.word	0x0
	.word	0x0
	.word	0x0
	.size	 sTextMovesPalette,32
	.align	1, 0
	.type	 sMoveSelectionCursorPals,object
sMoveSelectionCursorPals:
	.short	0x0
	.short	0xfc
	.short	0x6960
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.size	 sMoveSelectionCursorPals,32
	.align	2, 0
	.type	 sMoveSelectionCursorTiles_Left,object
sMoveSelectionCursorTiles_Left:
	.word	0x80010
	.word	0x11110004
	.word	0x3001011
	.word	0xf0111
	.word	-0xfffef00
	.word	0x101a1003
	.word	-0xf5ffff
	.word	0x1ff001f0
	.word	0x1ff01ff0
	.word	0x1ff01ff0
	.word	0x1af01ff0
	.word	-0xfe00f01
	.word	-0x2fe00fff
	.word	-0x5ffc0fe1
	.word	-0xffe0ffd
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffc0f01
	.word	-0xffe0f01
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0xfff0ff
	.word	0x13ff0203
	.word	-0xfcfedf9
	.word	-0xfb40ddb
	.word	0x1ff0ff01
	.word	0x1ff01ff0
	.word	0x1ff01ff0
	.word	0x1f01ff0
	.word	-0xf1ee010
	.word	0x1ff001
	.word	0x22222201
	.word	0x3f030020
	.word	0xa000222
	.word	0x3d00e10
	.word	0x1001b10
	.word	0x60ff4df0
	.word	-0xfe00fc2
	.word	-0xfe00fe1
	.word	-0xffe0fe1
	.word	-0xe00fe1
	.word	0x1ff01ff0
	.word	0x1f701ff0
	.word	0x3a003f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	-0xffe10
	.word	-0xffc10
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x300fff0
	.word	0x713ff02
	.word	0x25f03012
	.word	0x1f04bf2
	.word	-0xfe00f01
	.word	-0xfe00fe1
	.word	-0xfe00fe1
	.word	-0xffe0fe1
	.word	0x1f0c01f
	.word	0x1ff0
	.size	 sMoveSelectionCursorTiles_Left,300
	.align	2, 0
	.type	 sMoveSelectionCursorTiles_Right,object
sMoveSelectionCursorTiles_Right:
	.word	0x80010
	.word	0x30111127
	.word	-0xfffffff
	.word	-0xffeefff
	.word	0x1ff0ff1f
	.word	0x1ff01ff0
	.word	0x1ff019f0
	.word	0x1ff001f0
	.word	0x11431ff0
	.word	0x10310
	.word	0x23101000
	.word	-0xf00fc10
	.word	-0xffe0fce
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x3f00281
	.word	0x1f0fff0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	-0xf1010
	.word	0x1f001f0
	.word	-0xf00940e
	.word	-0xfe00fff
	.word	-0xfe00fe1
	.word	-0xfe60fe1
	.word	-0x28fe0fe1
	.word	-0x4fe010
	.word	0x11a1010
	.word	0x1f01ef0
	.word	0x223f0190
	.word	-0xffecfde
	.word	-0xfe00fe7
	.word	-0xfe00fff
	.word	0x1ff0fe1f
	.word	0x1ff01ff0
	.word	0x1f01ff0
	.word	0x3101f40
	.word	0x1f02
	.word	-0xfdcefe0
	.word	-0xfcd0ffd
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0x7efe0f01
	.word	-0xffc0ffe
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xf000f11
	.word	-0xdfe0fff
	.word	-0xffe0f95
	.word	-0x1e00fe1
	.word	0x1ff01ff0
	.word	0x1ff019f0
	.word	0x1ff001f0
	.word	-0x47df0050
	.word	-0xffde5f0
	.word	-0x6ffe0fe2
	.word	0x1
	.size	 sMoveSelectionCursorTiles_Right,288
	.align	2, 0
	.type	 sMoveSelectionCursorOamData,object
	.size	 sMoveSelectionCursorOamData,8
sMoveSelectionCursorOamData:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0xc0
	.byte	0x0
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 sMoveSelectionCursorOamAnim_Red,object
sMoveSelectionCursorOamAnim_Red:
	.short	0x0
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sMoveSelectionCursorOamAnim_Red,8
	.align	2, 0
	.type	 sMoveSelectionCursorOamAnim_Blue,object
sMoveSelectionCursorOamAnim_Blue:
	.short	0x20
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sMoveSelectionCursorOamAnim_Blue,8
	.align	2, 0
	.type	 sMoveSelectionCursorOamAnimTable,object
sMoveSelectionCursorOamAnimTable:
	.word	sMoveSelectionCursorOamAnim_Red
	.word	sMoveSelectionCursorOamAnim_Blue
	.size	 sMoveSelectionCursorOamAnimTable,8
	.align	2, 0
	.type	 sStatusAilmentIconOamData,object
	.size	 sStatusAilmentIconOamData,8
sStatusAilmentIconOamData:
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x40
	.byte	0x0
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 sStatusAilmentIconAnim_PSN,object
sStatusAilmentIconAnim_PSN:
	.short	0x0
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sStatusAilmentIconAnim_PSN,8
	.align	2, 0
	.type	 sStatusAilmentIconAnim_PRZ,object
sStatusAilmentIconAnim_PRZ:
	.short	0x4
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sStatusAilmentIconAnim_PRZ,8
	.align	2, 0
	.type	 sStatusAilmentIconAnim_SLP,object
sStatusAilmentIconAnim_SLP:
	.short	0x8
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sStatusAilmentIconAnim_SLP,8
	.align	2, 0
	.type	 sStatusAilmentIconAnim_FRZ,object
sStatusAilmentIconAnim_FRZ:
	.short	0xc
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sStatusAilmentIconAnim_FRZ,8
	.align	2, 0
	.type	 sStatusAilmentIconAnim_BRN,object
sStatusAilmentIconAnim_BRN:
	.short	0x10
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sStatusAilmentIconAnim_BRN,8
	.align	2, 0
	.type	 sStatusAilmentIconAnim_PKRS,object
sStatusAilmentIconAnim_PKRS:
	.short	0x14
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sStatusAilmentIconAnim_PKRS,8
	.align	2, 0
	.type	 sStatusAilmentIconAnim_FNT,object
sStatusAilmentIconAnim_FNT:
	.short	0x18
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sStatusAilmentIconAnim_FNT,8
	.align	2, 0
	.type	 sStatusAilmentIconAnim_Blank,object
sStatusAilmentIconAnim_Blank:
	.short	0x1c
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sStatusAilmentIconAnim_Blank,8
	.align	2, 0
	.type	 sStatusAilmentIconAnimTable,object
sStatusAilmentIconAnimTable:
	.word	sStatusAilmentIconAnim_PSN
	.word	sStatusAilmentIconAnim_PRZ
	.word	sStatusAilmentIconAnim_SLP
	.word	sStatusAilmentIconAnim_FRZ
	.word	sStatusAilmentIconAnim_BRN
	.word	sStatusAilmentIconAnim_PKRS
	.word	sStatusAilmentIconAnim_FNT
	.word	sStatusAilmentIconAnim_Blank
	.size	 sStatusAilmentIconAnimTable,32
	.align	2, 0
	.type	 sHpOrExpBarOamData,object
	.size	 sHpOrExpBarOamData,8
sHpOrExpBarOamData:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 sHpOrExpAnim_0,object
sHpOrExpAnim_0:
	.short	0x0
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sHpOrExpAnim_0,8
	.align	2, 0
	.type	 sHpOrExpAnim_1,object
sHpOrExpAnim_1:
	.short	0x1
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sHpOrExpAnim_1,8
	.align	2, 0
	.type	 sHpOrExpAnim_2,object
sHpOrExpAnim_2:
	.short	0x2
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sHpOrExpAnim_2,8
	.align	2, 0
	.type	 sHpOrExpAnim_3,object
sHpOrExpAnim_3:
	.short	0x3
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sHpOrExpAnim_3,8
	.align	2, 0
	.type	 sHpOrExpAnim_4,object
sHpOrExpAnim_4:
	.short	0x4
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sHpOrExpAnim_4,8
	.align	2, 0
	.type	 sHpOrExpAnim_5,object
sHpOrExpAnim_5:
	.short	0x5
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sHpOrExpAnim_5,8
	.align	2, 0
	.type	 sHpOrExpAnim_6,object
sHpOrExpAnim_6:
	.short	0x6
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sHpOrExpAnim_6,8
	.align	2, 0
	.type	 sHpOrExpAnim_7,object
sHpOrExpAnim_7:
	.short	0x7
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sHpOrExpAnim_7,8
	.align	2, 0
	.type	 sHpOrExpAnim_8,object
sHpOrExpAnim_8:
	.short	0x8
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sHpOrExpAnim_8,8
	.align	2, 0
	.type	 sHpOrExpAnim_9,object
sHpOrExpAnim_9:
	.short	0x9
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sHpOrExpAnim_9,8
	.align	2, 0
	.type	 sHpOrExpAnim_10,object
sHpOrExpAnim_10:
	.short	0xa
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sHpOrExpAnim_10,8
	.align	2, 0
	.type	 sHpOrExpAnim_11,object
sHpOrExpAnim_11:
	.short	0xb
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sHpOrExpAnim_11,8
	.align	2, 0
	.type	 sHpOrExpBarAnimTable,object
sHpOrExpBarAnimTable:
	.word	sHpOrExpAnim_0
	.word	sHpOrExpAnim_1
	.word	sHpOrExpAnim_2
	.word	sHpOrExpAnim_3
	.word	sHpOrExpAnim_4
	.word	sHpOrExpAnim_5
	.word	sHpOrExpAnim_6
	.word	sHpOrExpAnim_7
	.word	sHpOrExpAnim_8
	.word	sHpOrExpAnim_9
	.word	sHpOrExpAnim_10
	.word	sHpOrExpAnim_11
	.size	 sHpOrExpBarAnimTable,48
	.align	1, 0
	.type	 sPokeSummary_HpBarPalYellow,object
sPokeSummary_HpBarPalYellow:
	.short	0x4af7
	.short	0x1f9f
	.short	0x6b9
	.short	0x4a0f
	.short	0x3dac
	.short	0x2b5f
	.short	0x22df
	.short	0x7f31
	.short	0x768a
	.short	0x0
	.short	0x0
	.short	0x46b6
	.short	0x3a53
	.short	0x4e30
	.short	0x3dac
	.short	0x7fff
	.size	 sPokeSummary_HpBarPalYellow,32
	.align	1, 0
	.type	 sPokeSummary_HpBarPalRed,object
sPokeSummary_HpBarPalRed:
	.short	0x4af7
	.short	0x1d7f
	.short	0x2515
	.short	0x4a0f
	.short	0x3dac
	.short	0x2b5f
	.short	0x22df
	.short	0x7f31
	.short	0x768a
	.short	0x0
	.short	0x0
	.short	0x46b6
	.short	0x3a53
	.short	0x4e30
	.short	0x3dac
	.short	0x7fff
	.size	 sPokeSummary_HpBarPalRed,32
	.align	2, 0
	.type	 sPokerusIconObjOamData,object
	.size	 sPokerusIconObjOamData,8
sPokerusIconObjOamData:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 sPokerusIconObjAnim0,object
sPokerusIconObjAnim0:
	.short	0x0
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sPokerusIconObjAnim0,8
	.align	2, 0
	.type	 sPokerusIconObjAnimTable,object
sPokerusIconObjAnimTable:
	.word	sPokerusIconObjAnim0
	.size	 sPokerusIconObjAnimTable,4
	.align	1, 0
	.type	 sPokerusIconObjPal,object
sPokerusIconObjPal:
	.short	0x5280
	.short	0x35ad
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sPokerusIconObjPal,32
	.align	2, 0
	.type	 sPokerusIconObjTiles,object
sPokerusIconObjTiles:
	.word	0x2010
	.word	-0x7fffffda
	.word	0x30022001
	.word	0x18003
	.size	 sPokerusIconObjTiles,16
	.align	2, 0
	.type	 sStarObjOamData,object
	.size	 sStarObjOamData,8
sStarObjOamData:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 sStarObjAnim0,object
sStarObjAnim0:
	.short	0x1
	.byte	0x14
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sStarObjAnim0,8
	.align	2, 0
	.type	 sStarObjAnimTable,object
sStarObjAnimTable:
	.word	sStarObjAnim0
	.size	 sStarObjAnimTable,4
	.align	1, 0
	.type	 sStarObjPal,object
sStarObjPal:
	.short	0x0
	.short	0x2b5f
	.short	0xa57
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sStarObjPal,32
	.align	2, 0
	.type	 sStarObjTiles,object
sStarObjTiles:
	.word	0x4010
	.word	-0xfffffcc
	.word	0x1001a001
	.word	0x11110330
	.word	0x10011104
	.word	0x8001111
	.word	0x10180001
	.word	0x12001101
	.word	0x1810
	.size	 sStarObjTiles,36
	.align	2, 0
	.type	 sBgTilemap_MovesInfoPage,object
sBgTilemap_MovesInfoPage:
	.word	0x50010
	.word	-0xffea5d0
	.word	0x6a013001
	.word	0x11016901
	.word	0x6d016b
	.word	0x5b016e03
	.word	0x8101f0
	.word	0x1
	.word	-0xffe9400
	.word	0x1308001
	.word	0x179017a
	.word	-0x4e82fe85
	.word	-0xf81fd00
	.word	-0x56c09fc5
	.word	0x1f0aa01
	.word	-0x54febf7d
	.word	0x5c01ac01
	.word	0x16001f0
	.word	-0x46c0ef74
	.word	0x1f0ba01
	.word	0x1bb0140
	.word	0x5d01bc1c
	.word	0x16001f0
	.word	0x118d3f10
	.word	0x1f08e66
	.word	0x118f0140
	.word	0x3fd03ff0
	.word	-0x61eec963
	.word	0x14001f0
	.word	-0x1fc00f61
	.word	0x1137ad3f
	.word	0x4001f0ae
	.word	0x3ff0af01
	.word	0x37f03ff0
	.word	-0xfc00f01
	.word	-0xfc00fff
	.word	-0xfc00fff
	.word	-0xfc00fc1
	.word	0x1f0fc3f
	.word	0x1f03ff0
	.word	0x3ff03ff0
	.word	0x11bd3f00
	.word	0x1f0be6c
	.word	-0xf40fec0
	.word	-0x32c01fc1
	.word	-0xf309cef
	.word	-0x31febfff
	.word	0x35f0cc11
	.word	-0xf00c040
	.word	-0xffe0feb
	.word	-0xfc00fff
	.word	-0xffe0fff
	.word	-0xc00fc1
	.word	0x1f001f0
	.word	0x1f03ff0
	.word	0x1f001f0
	.word	0x1f03ff0
	.word	-0xffe0f01
	.word	-0xffe0fc1
	.word	-0xffe0fff
	.word	-0xffe0fc1
	.word	0x3fd08001
	.size	 sBgTilemap_MovesInfoPage,248
	.align	2, 0
	.type	 sBgTilemap_MovesPage,object
sBgTilemap_MovesPage:
	.word	0x80010
	.word	-0xffea5d0
	.word	0x6a013001
	.word	0x11016901
	.word	0x6d016b
	.word	0x5b016e03
	.word	0x8101f0
	.word	0x1
	.word	-0xffe9400
	.word	0x1308001
	.word	0x179017a
	.word	-0x4e82fe85
	.word	-0xf81fd00
	.word	-0x56c09fc5
	.word	0x1f0aa01
	.word	-0x54febf7d
	.word	0x5c01ac01
	.word	0x16001f0
	.word	-0x46c0ef74
	.word	0x1f0ba01
	.word	0x1bb0140
	.word	0x5d01bc1f
	.word	0x16001f0
	.word	0x3ff03ff0
	.word	-0xf07ca10
	.word	-0xffe0fc1
	.word	0x3001f03f
	.word	-0x25fe26c1
	.word	0x4001f0c7
	.word	-0x23fe24ff
	.word	0x3fc035f0
	.word	-0xf00ea10
	.word	-0xffe0fff
	.word	-0xffe0fc1
	.word	-0xfc00fff
	.word	-0xfe0fc1
	.word	0x3ff001f0
	.word	0x1f001f0
	.word	0x3ff001f0
	.word	0x1f001f0
	.word	-0xfc00f01
	.word	-0xffe0fff
	.word	-0xfc00fff
	.word	-0xffe0fff
	.word	0x1f0ff3f
	.word	0x1f001f0
	.word	0x1f03ff0
	.word	0x3ff001f0
	.word	-0xf00ea10
	.word	-0xffe0fff
	.word	-0xffe0fc1
	.word	-0xfc00fff
	.word	-0xfe0fc1
	.word	0x3ff001f0
	.word	0x1f001f0
	.word	0x3f1001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1908001
	.size	 sBgTilemap_MovesPage,316
	.type	 sHardyNatureName,object
sHardyNatureName:
	.byte	0xc2
	.byte	0xbb
	.byte	0xcc
	.byte	0xbe
	.byte	0xd3
	.byte	0xff
	.size	 sHardyNatureName,6
	.type	 sLonelyNatureName,object
sLonelyNatureName:
	.byte	0xc6
	.byte	0xc9
	.byte	0xc8
	.byte	0xbf
	.byte	0xc6
	.byte	0xd3
	.byte	0xff
	.size	 sLonelyNatureName,7
	.type	 sBraveNatureName,object
sBraveNatureName:
	.byte	0xbc
	.byte	0xcc
	.byte	0xbb
	.byte	0xd0
	.byte	0xbf
	.byte	0xff
	.size	 sBraveNatureName,6
	.type	 sAdamantNatureName,object
sAdamantNatureName:
	.byte	0xbb
	.byte	0xbe
	.byte	0xbb
	.byte	0xc7
	.byte	0xbb
	.byte	0xc8
	.byte	0xce
	.byte	0xff
	.size	 sAdamantNatureName,8
	.type	 sNaughtyNatureName,object
sNaughtyNatureName:
	.byte	0xc8
	.byte	0xbb
	.byte	0xcf
	.byte	0xc1
	.byte	0xc2
	.byte	0xce
	.byte	0xd3
	.byte	0xff
	.size	 sNaughtyNatureName,8
	.type	 sBoldNatureName,object
sBoldNatureName:
	.byte	0xbc
	.byte	0xc9
	.byte	0xc6
	.byte	0xbe
	.byte	0xff
	.size	 sBoldNatureName,5
	.type	 sDocileNatureName,object
sDocileNatureName:
	.byte	0xbe
	.byte	0xc9
	.byte	0xbd
	.byte	0xc3
	.byte	0xc6
	.byte	0xbf
	.byte	0xff
	.size	 sDocileNatureName,7
	.type	 sRelaxedNatureName,object
sRelaxedNatureName:
	.byte	0xcc
	.byte	0xbf
	.byte	0xc6
	.byte	0xbb
	.byte	0xd2
	.byte	0xbf
	.byte	0xbe
	.byte	0xff
	.size	 sRelaxedNatureName,8
	.type	 sImpishNatureName,object
sImpishNatureName:
	.byte	0xc3
	.byte	0xc7
	.byte	0xca
	.byte	0xc3
	.byte	0xcd
	.byte	0xc2
	.byte	0xff
	.size	 sImpishNatureName,7
	.type	 sLaxNatureName,object
sLaxNatureName:
	.byte	0xc6
	.byte	0xbb
	.byte	0xd2
	.byte	0xff
	.size	 sLaxNatureName,4
	.type	 sTimidNatureName,object
sTimidNatureName:
	.byte	0xce
	.byte	0xc3
	.byte	0xc7
	.byte	0xc3
	.byte	0xbe
	.byte	0xff
	.size	 sTimidNatureName,6
	.type	 sHastyNatureName,object
sHastyNatureName:
	.byte	0xc2
	.byte	0xbb
	.byte	0xcd
	.byte	0xce
	.byte	0xd3
	.byte	0xff
	.size	 sHastyNatureName,6
	.type	 sSeriousNatureName,object
sSeriousNatureName:
	.byte	0xcd
	.byte	0xbf
	.byte	0xcc
	.byte	0xc3
	.byte	0xc9
	.byte	0xcf
	.byte	0xcd
	.byte	0xff
	.size	 sSeriousNatureName,8
	.type	 sJollyNatureName,object
sJollyNatureName:
	.byte	0xc4
	.byte	0xc9
	.byte	0xc6
	.byte	0xc6
	.byte	0xd3
	.byte	0xff
	.size	 sJollyNatureName,6
	.type	 sNaiveNatureName,object
sNaiveNatureName:
	.byte	0xc8
	.byte	0xbb
	.byte	0xc3
	.byte	0xd0
	.byte	0xbf
	.byte	0xff
	.size	 sNaiveNatureName,6
	.type	 sModestNatureName,object
sModestNatureName:
	.byte	0xc7
	.byte	0xc9
	.byte	0xbe
	.byte	0xbf
	.byte	0xcd
	.byte	0xce
	.byte	0xff
	.size	 sModestNatureName,7
	.type	 sMildNatureName,object
sMildNatureName:
	.byte	0xc7
	.byte	0xc3
	.byte	0xc6
	.byte	0xbe
	.byte	0xff
	.size	 sMildNatureName,5
	.type	 sQuietNatureName,object
sQuietNatureName:
	.byte	0xcb
	.byte	0xcf
	.byte	0xc3
	.byte	0xbf
	.byte	0xce
	.byte	0xff
	.size	 sQuietNatureName,6
	.type	 sBashfulNatureName,object
sBashfulNatureName:
	.byte	0xbc
	.byte	0xbb
	.byte	0xcd
	.byte	0xc2
	.byte	0xc0
	.byte	0xcf
	.byte	0xc6
	.byte	0xff
	.size	 sBashfulNatureName,8
	.type	 sRashNatureName,object
sRashNatureName:
	.byte	0xcc
	.byte	0xbb
	.byte	0xcd
	.byte	0xc2
	.byte	0xff
	.size	 sRashNatureName,5
	.type	 sCalmNatureName,object
sCalmNatureName:
	.byte	0xbd
	.byte	0xbb
	.byte	0xc6
	.byte	0xc7
	.byte	0xff
	.size	 sCalmNatureName,5
	.type	 sGentleNatureName,object
sGentleNatureName:
	.byte	0xc1
	.byte	0xbf
	.byte	0xc8
	.byte	0xce
	.byte	0xc6
	.byte	0xbf
	.byte	0xff
	.size	 sGentleNatureName,7
	.type	 sSassyNatureName,object
sSassyNatureName:
	.byte	0xcd
	.byte	0xbb
	.byte	0xcd
	.byte	0xcd
	.byte	0xd3
	.byte	0xff
	.size	 sSassyNatureName,6
	.type	 sCarefulNatureName,object
sCarefulNatureName:
	.byte	0xbd
	.byte	0xbb
	.byte	0xcc
	.byte	0xbf
	.byte	0xc0
	.byte	0xcf
	.byte	0xc6
	.byte	0xff
	.size	 sCarefulNatureName,8
	.type	 sQuirkyNatureName,object
sQuirkyNatureName:
	.byte	0xcb
	.byte	0xcf
	.byte	0xc3
	.byte	0xcc
	.byte	0xc5
	.byte	0xd3
	.byte	0xff
	.size	 sQuirkyNatureName,7
	.globl	gNatureNamePointers
	.align	2, 0
	.type	 gNatureNamePointers,object
	.size	 gNatureNamePointers,100
gNatureNamePointers:
	.word	sHardyNatureName
	.word	sLonelyNatureName
	.word	sBraveNatureName
	.word	sAdamantNatureName
	.word	sNaughtyNatureName
	.word	sBoldNatureName
	.word	sDocileNatureName
	.word	sRelaxedNatureName
	.word	sImpishNatureName
	.word	sLaxNatureName
	.word	sTimidNatureName
	.word	sHastyNatureName
	.word	sSeriousNatureName
	.word	sJollyNatureName
	.word	sNaiveNatureName
	.word	sModestNatureName
	.word	sMildNatureName
	.word	sQuietNatureName
	.word	sBashfulNatureName
	.word	sRashNatureName
	.word	sCalmNatureName
	.word	sGentleNatureName
	.word	sSassyNatureName
	.word	sCarefulNatureName
	.word	sQuirkyNatureName
	.align	2, 0
	.type	 sEggHatchTimeTexts,object
sEggHatchTimeTexts:
	.word	gText_PokeSum_EggHatch_LongTime
	.word	gText_PokeSum_EggHatch_SomeTime
	.word	gText_PokeSum_EggHatch_Soon
	.word	gText_PokeSum_EggHatch_AlmostReady
	.size	 sEggHatchTimeTexts,16
	.align	2, 0
	.type	 sEggOriginTexts,object
sEggOriginTexts:
	.word	gText_PokeSum_EggOrigin_DayCare
	.word	gText_PokeSum_EggOrigin_Trade
	.word	gText_PokeSum_EggOrigin_TravelingMan
	.word	gText_PokeSum_EggOrigin_Trade
	.word	gText_PokeSum_EggOrigin_NicePlace
	.word	gText_PokeSum_EggOrigin_Spa
	.word	gText_PokeSum_EggOrigin_Trade
	.size	 sEggOriginTexts,28
	.type	 sPrintMoveTextColors,object
sPrintMoveTextColors:
	.byte	0x0
	.byte	0x7
	.byte	0x8
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x0
	.byte	0x3
	.byte	0x4
	.byte	0x0
	.byte	0x5
	.byte	0x6
	.size	 sPrintMoveTextColors,12
	.align	2, 0
	.type	 sBgTempaltes,object
	.size	 sBgTempaltes,16
sBgTempaltes:
	.byte	0xe0
	.byte	0x2
	.byte	0x0
	.space	1
	.byte	0xaa
	.byte	0x12
	.byte	0x0
	.space	1
	.byte	0x9b
	.byte	0x30
	.byte	0x0
	.space	1
	.byte	0xc9
	.byte	0x22
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sWindowTemplates_Permanent_Bg1,object
sWindowTemplates_Permanent_Bg1:
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0xd
	.byte	0x2
	.byte	0x7
	.short	0x258
	.byte	0x1
	.byte	0x13
	.byte	0x0
	.byte	0xb
	.byte	0x2
	.byte	0x7
	.short	0x272
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0xf
	.byte	0x2
	.byte	0x7
	.short	0x288
	.size	 sWindowTemplates_Permanent_Bg1,24
	.align	2, 0
	.type	 sWindowTemplates_Permanent_Bg2,object
sWindowTemplates_Permanent_Bg2:
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0xd
	.byte	0x2
	.byte	0x7
	.short	0x258
	.byte	0x2
	.byte	0x13
	.byte	0x0
	.byte	0xb
	.byte	0x2
	.byte	0x7
	.short	0x272
	.byte	0x2
	.byte	0x0
	.byte	0x2
	.byte	0xf
	.byte	0x2
	.byte	0x7
	.short	0x288
	.size	 sWindowTemplates_Permanent_Bg2,24
	.align	2, 0
	.type	 sWindowTemplates_Info,object
sWindowTemplates_Info:
	.byte	0x0
	.byte	0xf
	.byte	0x2
	.byte	0xf
	.byte	0xc
	.byte	0x6
	.short	0x1
	.byte	0x0
	.byte	0x1
	.byte	0xe
	.byte	0x1c
	.byte	0x6
	.byte	0x6
	.short	0xb5
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates_Info,32
	.align	2, 0
	.type	 sWindowTemplates_Skills,object
sWindowTemplates_Skills:
	.byte	0x0
	.byte	0x14
	.byte	0x2
	.byte	0xa
	.byte	0xe
	.byte	0x6
	.short	0x1
	.byte	0x0
	.byte	0x6
	.byte	0xc
	.byte	0xe
	.byte	0x4
	.byte	0x6
	.short	0x8d
	.byte	0x0
	.byte	0x1
	.byte	0x10
	.byte	0x1d
	.byte	0x4
	.byte	0x6
	.short	0xc5
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates_Skills,32
	.align	2, 0
	.type	 sWindowTemplates_Moves,object
sWindowTemplates_Moves:
	.byte	0x0
	.byte	0x14
	.byte	0x2
	.byte	0xa
	.byte	0x12
	.byte	0x8
	.short	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0xf
	.byte	0xd
	.byte	0x6
	.short	0xb5
	.byte	0x0
	.byte	0xf
	.byte	0x2
	.byte	0x5
	.byte	0x12
	.byte	0x6
	.short	0x178
	.byte	0x0
	.byte	0x6
	.byte	0x4
	.byte	0x9
	.byte	0x2
	.byte	0x6
	.short	0x1d2
	.size	 sWindowTemplates_Moves,32
	.align	2, 0
	.type	 sWindowTemplates_Dummy,object
sWindowTemplates_Dummy:
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates_Dummy,8
	.type	 sLevelNickTextColors,object
sLevelNickTextColors:
	.byte	0x0
	.byte	0xe
	.byte	0xa
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x0
	.byte	0x9
	.byte	0x8
	.byte	0x0
	.byte	0x5
	.byte	0x4
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.byte	0x0
	.byte	0xb
	.byte	0xa
	.size	 sLevelNickTextColors,18
	.align	2, 0
	.type	 sMultiBattlePartyOrder,object
sMultiBattlePartyOrder:
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.byte	0x1
	.byte	0x4
	.byte	0x5
	.size	 sMultiBattlePartyOrder,6
	.type	 sMonPicBounceYDelta_Under60,object
sMonPicBounceYDelta_Under60:
	.byte	-0x1
	.byte	0x0
	.byte	0x1
	.size	 sMonPicBounceYDelta_Under60,3
	.type	 sMonPicBounceYDelta_60to80,object
sMonPicBounceYDelta_60to80:
	.byte	-0x2
	.byte	-0x1
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.size	 sMonPicBounceYDelta_60to80,5
	.type	 sMonPicBounceYDelta_80to99,object
sMonPicBounceYDelta_80to99:
	.byte	-0x3
	.byte	-0x2
	.byte	-0x1
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.size	 sMonPicBounceYDelta_80to99,7
	.type	 sMonPicBounceYDelta_Full,object
sMonPicBounceYDelta_Full:
	.byte	-0x5
	.byte	-0x3
	.byte	-0x1
	.byte	0x0
	.byte	0x1
	.byte	0x3
	.byte	0x5
	.size	 sMonPicBounceYDelta_Full,7
	.type	 sEggPicShakeXDelta_ItWillTakeSomeTime,object
sEggPicShakeXDelta_ItWillTakeSomeTime:
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.size	 sEggPicShakeXDelta_ItWillTakeSomeTime,11
	.type	 sEggPicShakeXDelta_OccasionallyMoves,object
sEggPicShakeXDelta_OccasionallyMoves:
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	-0x1
	.byte	-0x2
	.byte	0x0
	.byte	-0x2
	.byte	-0x1
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.size	 sEggPicShakeXDelta_OccasionallyMoves,11
	.type	 sEggPicShakeXDelta_AlmostReadyToHatch,object
sEggPicShakeXDelta_AlmostReadyToHatch:
	.byte	0x2
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.byte	-0x2
	.byte	0x0
	.byte	-0x2
	.byte	-0x1
	.byte	-0x1
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.size	 sEggPicShakeXDelta_AlmostReadyToHatch,15
	.align	2, 0
	.type	 sHpBarPals,object
sHpBarPals:
	.word	gSummaryScreen_HpExpBar_Pal
	.word	sPokeSummary_HpBarPalYellow
	.word	sPokeSummary_HpBarPalRed
	.size	 sHpBarPals,12
.text
	.align	2, 0
	.globl	ShowPokemonSummaryScreen
	.type	 ShowPokemonSummaryScreen,function
	.thumb_func
ShowPokemonSummaryScreen:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r8, r0
	add	r7, r3, #0
	ldr	r0, [sp, #0x20]
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r9, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	ldr	r5, .L19
	ldr	r0, .L19+0x4
	bl	AllocZeroed
	str	r0, [r5]
	ldr	r4, .L19+0x8
	mov	r0, #0x28
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r5, [r5]
	cmp	r5, #0
	bne	.L5	@cond_branch
	add	r0, r7, #0
	bl	SetMainCallback2
	b	.L4
.L20:
	.align	2, 0
.L19:
	.word	sMonSummaryScreen
	.word	0x3308
	.word	sMonSkillsPrinterXpos
.L5:
	ldr	r0, .L21
	strb	r6, [r0]
	ldr	r0, .L21+0x4
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L21+0x8
	strb	r1, [r0]
	ldr	r1, .L21+0xc
	add	r0, r5, r1
	str	r7, [r0]
	ldr	r2, .L21+0x10
	add	r0, r5, r2
	mov	r3, r8
	str	r3, [r0]
	ldr	r0, .L21+0x14
	cmp	r8, r0
	bne	.L6	@cond_branch
	ldr	r0, .L21+0x18
	add	r1, r5, r0
	mov	r0, #0x1
	b	.L17
.L22:
	.align	2, 0
.L21:
	.word	sLastViewedMonIndex
	.word	sMoveSelectionCursorPos
	.word	sMoveSwapCursorPos
	.word	0x32f8
	.word	0x32f4
	.word	gEnemyParty
	.word	0x3024
.L6:
	ldr	r2, .L23
	add	r1, r5, r2
	mov	r0, #0x0
.L17:
	str	r0, [r1]
	ldr	r4, .L23+0x4
	ldr	r0, [r4]
	ldr	r3, .L23+0x8
	add	r0, r0, r3
	mov	r5, #0x0
	mov	r1, r9
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r1, .L23+0xc
	add	r0, r0, r1
	mov	r2, sl
	strb	r2, [r0]
	ldr	r0, [r4]
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bgt	.L15	@cond_branch
	cmp	r0, #0x2
	bge	.L13	@cond_branch
	b	.L10
.L24:
	.align	2, 0
.L23:
	.word	0x3024
	.word	sMonSummaryScreen
	.word	0x3210
	.word	0x3208
.L15:
	cmp	r0, #0x5
	beq	.L11	@cond_branch
.L10:
	mov	r0, #0x6
	bl	SetHelpContext
	ldr	r2, .L25
	ldr	r0, [r2]
	ldr	r3, .L25+0x4
	add	r0, r0, r3
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r3, r3, #0x8
	add	r0, r0, r3
	strb	r1, [r0]
	ldr	r0, [r2]
	ldr	r2, .L25+0x8
	add	r0, r0, r2
	b	.L18
.L26:
	.align	2, 0
.L25:
	.word	sMonSummaryScreen
	.word	0x3214
	.word	0x3234
.L11:
	mov	r0, #0x6
	bl	SetHelpContext
	ldr	r0, [r4]
	ldr	r3, .L27
	add	r0, r0, r3
	strb	r5, [r0]
	ldr	r0, [r4]
	ldr	r1, .L27+0x4
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r2, .L27+0x8
	add	r0, r0, r2
	strb	r5, [r0]
	b	.L8
.L28:
	.align	2, 0
.L27:
	.word	0x3214
	.word	0x321c
	.word	0x3234
.L13:
	mov	r0, #0x8
	bl	SetHelpContext
	ldr	r0, [r4]
	ldr	r3, .L29
	add	r0, r0, r3
	mov	r1, #0x3
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r1, .L29+0x4
	add	r0, r0, r1
	strb	r5, [r0]
	ldr	r0, [r4]
	ldr	r2, .L29+0x8
	add	r0, r0, r2
	mov	r1, #0x1
.L18:
	strb	r1, [r0]
.L8:
	ldr	r5, .L29+0xc
	ldr	r0, [r5]
	ldr	r3, .L29+0x10
	add	r0, r0, r3
	mov	r2, #0x0
	strb	r2, [r0]
	ldr	r0, [r5]
	ldr	r1, .L29+0x14
	add	r0, r0, r1
	strb	r2, [r0]
	ldr	r0, [r5]
	add	r3, r3, #0x8
	add	r0, r0, r3
	strb	r2, [r0]
	ldr	r0, [r5]
	add	r1, r1, #0x8
	add	r0, r0, r1
	strb	r2, [r0]
	ldr	r0, [r5]
	sub	r3, r3, #0x40
	add	r0, r0, r3
	strb	r2, [r0]
	ldr	r0, [r5]
	sub	r1, r1, #0x40
	add	r0, r0, r1
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r3, r3, #0x8
	add	r0, r0, r3
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r5]
	add	r3, r3, #0x4
	add	r0, r0, r3
	strb	r2, [r0]
	ldr	r0, [r5]
	sub	r3, r3, #0x1c
	add	r0, r0, r3
	strb	r2, [r0]
	ldr	r0, [r5]
	ldr	r2, .L29+0x18
	add	r0, r0, r2
	strb	r1, [r0]
	ldr	r0, [r5]
	ldr	r4, .L29+0x1c
	add	r0, r0, r4
	bl	BufferSelectedMonData
	ldr	r0, [r5]
	add	r0, r0, r4
	mov	r1, #0x2d
	bl	GetMonData
	ldr	r1, [r5]
	mov	r3, #0xc8
	lsl	r3, r3, #0x6
	add	r1, r1, r3
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, r4
	mov	r1, #0x4
	bl	GetMonData
	ldr	r1, [r5]
	ldr	r2, .L29+0x20
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r2, r0, r2
	ldrb	r1, [r2]
	cmp	r1, #0x1
	bne	.L16	@cond_branch
	mov	r2, #0xc8
	lsl	r2, r2, #0x6
	add	r0, r0, r2
	strb	r1, [r0]
.L16:
	ldr	r0, [r5]
	mov	r3, #0xcc
	lsl	r3, r3, #0x6
	add	r0, r0, r3
	mov	r1, #0xff
	strb	r1, [r0]
	ldr	r0, .L29+0x24
	bl	SetMainCallback2
.L4:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L30:
	.align	2, 0
.L29:
	.word	0x3214
	.word	0x321c
	.word	0x3234
	.word	sMonSummaryScreen
	.word	0x3270
	.word	0x3274
	.word	0x322c
	.word	0x3290
	.word	0x3204
	.word	CB2_SetUpPSS
.Lfe1:
	.size	 ShowPokemonSummaryScreen,.Lfe1-ShowPokemonSummaryScreen
	.align	2, 0
	.globl	ShowSelectMovePokemonSummaryScreen
	.type	 ShowSelectMovePokemonSummaryScreen,function
	.thumb_func
ShowSelectMovePokemonSummaryScreen:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, [sp, #0x10]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	mov	r4, #0x2
	str	r4, [sp]
	bl	ShowPokemonSummaryScreen
	ldr	r0, .L32
	ldr	r0, [r0]
	ldr	r1, .L32+0x4
	add	r0, r0, r1
	strh	r5, [r0]
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L33:
	.align	2, 0
.L32:
	.word	sMonSummaryScreen
	.word	0x3260
.Lfe2:
	.size	 ShowSelectMovePokemonSummaryScreen,.Lfe2-ShowSelectMovePokemonSummaryScreen
	.align	2, 0
	.type	 PageFlipInputIsDisabled,function
	.thumb_func
PageFlipInputIsDisabled:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L37
	ldr	r1, [r0]
	ldr	r3, .L37+0x4
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L35	@cond_branch
	ldr	r3, .L37+0x8
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, r2
	beq	.L35	@cond_branch
	mov	r0, #0x1
	b	.L36
.L38:
	.align	2, 0
.L37:
	.word	sMonSummaryScreen
	.word	0x301c
	.word	0x3224
.L35:
	mov	r0, #0x0
.L36:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 PageFlipInputIsDisabled,.Lfe3-PageFlipInputIsDisabled
	.align	2, 0
	.globl	IsPageFlipInput
	.type	 IsPageFlipInput,function
	.thumb_func
IsPageFlipInput:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L56
	ldr	r1, [r0]
	mov	r2, #0xc8
	lsl	r2, r2, #0x6
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L43	@cond_branch
	mov	r0, #0xcc
	lsl	r0, r0, #0x6
	add	r2, r1, r0
	ldrb	r1, [r2]
	add	r0, r1, #0
	cmp	r0, #0xff
	beq	.L41	@cond_branch
	cmp	r0, r4
	bne	.L41	@cond_branch
	mov	r0, #0xff
	strb	r0, [r2]
.L55:
	mov	r0, #0x1
	b	.L52
.L57:
	.align	2, 0
.L56:
	.word	sMonSummaryScreen
.L41:
	add	r0, r4, #0
	bl	PageFlipInputIsDisabled
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L43	@cond_branch
	cmp	r4, #0
	beq	.L47	@cond_branch
	cmp	r4, #0x1
	bne	.L43	@cond_branch
	ldr	r0, .L58
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L55	@cond_branch
	ldr	r0, .L58+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x13]
	cmp	r0, #0x1
	bne	.L43	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	b	.L54
.L59:
	.align	2, 0
.L58:
	.word	gMain
	.word	gSaveBlock2Ptr
.L47:
	ldr	r0, .L60
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L55	@cond_branch
	ldr	r0, .L60+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x13]
	cmp	r0, #0x1
	bne	.L43	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x2
.L54:
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L55	@cond_branch
.L43:
	mov	r0, #0x0
.L52:
	pop	{r4}
	pop	{r1}
	bx	r1
.L61:
	.align	2, 0
.L60:
	.word	gMain
	.word	gSaveBlock2Ptr
.Lfe4:
	.size	 IsPageFlipInput,.Lfe4-IsPageFlipInput
	.align	2, 0
	.type	 Task_InputHandler_Info,function
	.thumb_func
Task_InputHandler_Info:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r1, .L111
	ldr	r0, [r1]
	ldr	r2, .L111+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0x5
	bls	.LCB586
	b	.L103	@long jump
.LCB586:
	lsl	r0, r0, #0x2
	ldr	r1, .L111+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L112:
	.align	2, 0
.L111:
	.word	sMonSummaryScreen
	.word	0x3270
	.word	.L105
	.align	2, 0
	.align	2, 0
.L105:
	.word	.L64
	.word	.L65
	.word	.L67
	.word	.L95
	.word	.L98
	.word	.L99
.L64:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L113
	ldr	r0, [r0]
	b	.L106
.L114:
	.align	2, 0
.L113:
	.word	sMonSummaryScreen
.L65:
	ldr	r0, .L115
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L66	@cond_branch
	bl	PokeSum_TryPlayMonCry
	ldr	r0, .L115+0x4
	ldr	r0, [r0]
	ldr	r2, .L115+0x8
	add	r0, r0, r2
	b	.L107
.L116:
	.align	2, 0
.L115:
	.word	gPaletteFade
	.word	sMonSummaryScreen
	.word	0x3270
.L66:
	ldr	r0, [r4]
.L106:
	ldr	r1, .L117
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L62
.L118:
	.align	2, 0
.L117:
	.word	0x3270
.L67:
	bl	IsActiveOverworldLinkBusy
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB676
	b	.L62	@long jump
.LCB676:
	bl	IsLinkRecvQueueAtOverworldMax
	cmp	r0, #0x1
	bne	.LCB680
	b	.L62	@long jump
.LCB680:
	ldr	r0, .L119
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0
	beq	.LCB688
	b	.L62	@long jump
.LCB688:
	ldr	r5, .L119+0x4
	ldr	r0, [r5]
	ldr	r6, .L119+0x8
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r0, #0x3
	beq	.L73	@cond_branch
	mov	r0, #0x1
	bl	IsPageFlipInput
	add	r4, r0, #0
	cmp	r4, #0x1
	bne	.L74	@cond_branch
	ldr	r0, .L119+0xc
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L75	@cond_branch
	ldr	r0, [r5]
	mov	r2, #0xcc
	lsl	r2, r2, #0x6
	add	r0, r0, r2
	strb	r4, [r0]
	b	.L62
.L120:
	.align	2, 0
.L119:
	.word	Task_PokeSum_SwitchDisplayedPokemon
	.word	sMonSummaryScreen
	.word	0x3214
	.word	Task_PokeSum_FlipPages
.L75:
	ldr	r0, [r5]
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bls	.LCB738
	b	.L62	@long jump
.LCB738:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	bl	HideBg
	ldr	r0, [r5]
	ldr	r1, .L121
	add	r0, r0, r1
	strb	r4, [r0]
	ldr	r0, [r5]
	add	r0, r0, r6
	ldrb	r0, [r0]
	bl	PokeSum_RemoveWindows
	ldr	r1, [r5]
	add	r1, r1, r6
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r5]
	b	.L108
.L122:
	.align	2, 0
.L121:
	.word	0x3224
.L74:
	mov	r0, #0x0
	bl	IsPageFlipInput
	cmp	r0, #0x1
	bne	.L73	@cond_branch
	ldr	r0, .L123
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	beq	.L80	@cond_branch
	ldr	r0, [r5]
	mov	r1, #0xcc
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	strb	r7, [r0]
	b	.L62
.L124:
	.align	2, 0
.L123:
	.word	Task_PokeSum_FlipPages
.L80:
	ldr	r0, [r5]
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB806
	b	.L62	@long jump
.LCB806:
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	bl	HideBg
	ldr	r0, [r5]
	ldr	r2, .L125
	add	r0, r0, r2
	strb	r4, [r0]
	ldr	r0, [r5]
	add	r0, r0, r6
	ldrb	r0, [r0]
	bl	PokeSum_RemoveWindows
	ldr	r1, [r5]
	add	r1, r1, r6
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r5]
	ldr	r1, .L125+0x4
	add	r0, r0, r1
	b	.L109
.L126:
	.align	2, 0
.L125:
	.word	0x3224
	.word	0x3270
.L73:
	ldr	r0, .L127
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L84	@cond_branch
	ldr	r0, .L127+0x4
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB856
	b	.L62	@long jump
.LCB856:
.L84:
	ldr	r0, .L127+0x8
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L85	@cond_branch
	mov	r1, #0x1
	neg	r1, r1
	mov	r0, r8
	bl	PokeSum_SeekToNextMon
	b	.L62
.L128:
	.align	2, 0
.L127:
	.word	Task_PokeSum_FlipPages
	.word	Task_PokeSum_SwitchDisplayedPokemon
	.word	gMain
.L85:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L87	@cond_branch
	mov	r0, r8
	mov	r1, #0x1
	bl	PokeSum_SeekToNextMon
	b	.L62
.L87:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L89	@cond_branch
	ldr	r4, .L129
	ldr	r0, [r4]
	ldr	r5, .L129+0x4
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L90	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, [r4]
	ldr	r2, .L129+0x8
	add	r0, r0, r2
	b	.L110
.L130:
	.align	2, 0
.L129:
	.word	sMonSummaryScreen
	.word	0x3214
	.word	0x3270
.L90:
	cmp	r0, #0x2
	beq	.LCB942
	b	.L62	@long jump
.LCB942:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, [r4]
	ldr	r1, .L131
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, r5
	ldrb	r0, [r0]
	bl	PokeSum_RemoveWindows
	ldr	r1, [r4]
	add	r1, r1, r5
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r4]
.L108:
	ldr	r2, .L131+0x4
	add	r0, r0, r2
.L109:
	mov	r1, #0x3
	strb	r1, [r0]
	b	.L62
.L132:
	.align	2, 0
.L131:
	.word	0x3224
	.word	0x3270
.L89:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L62	@cond_branch
	ldr	r0, .L133
	ldr	r0, [r0]
	ldr	r1, .L133+0x4
	add	r0, r0, r1
.L110:
	mov	r1, #0x4
	strb	r1, [r0]
	b	.L62
.L134:
	.align	2, 0
.L133:
	.word	sMonSummaryScreen
	.word	0x3270
.L95:
	ldr	r3, [r4]
	ldr	r2, .L135
	add	r0, r3, r2
	ldrb	r0, [r0]
	cmp	r0, #0x3
	beq	.L96	@cond_branch
	ldr	r0, .L135+0x4
	mov	r1, #0x0
	bl	CreateTask
	ldr	r0, [r4]
	ldr	r1, .L135+0x8
	add	r0, r0, r1
.L107:
	mov	r1, #0x2
	strb	r1, [r0]
	b	.L62
.L136:
	.align	2, 0
.L135:
	.word	0x3214
	.word	Task_PokeSum_FlipPages
	.word	0x3270
.L96:
	ldr	r2, .L137
	ldr	r1, .L137+0x4
	add	r0, r3, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldr	r1, .L137+0x8
	str	r1, [r0]
	ldr	r2, .L137+0xc
	add	r1, r3, r2
	mov	r0, #0x2
	strb	r0, [r1]
	b	.L62
.L138:
	.align	2, 0
.L137:
	.word	gTasks
	.word	0x3018
	.word	Task_FlipPages_FromInfo
	.word	0x3270
.L98:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L139
	ldr	r0, [r0]
	ldr	r1, .L139+0x4
	add	r0, r0, r1
	mov	r1, #0x5
	strb	r1, [r0]
	b	.L62
.L140:
	.align	2, 0
.L139:
	.word	sMonSummaryScreen
	.word	0x3270
.L99:
	bl	Overworld_LinkRecvQueueLengthMoreThan2
	cmp	r0, #0x1
	beq	.L62	@cond_branch
	bl	IsLinkRecvQueueAtOverworldMax
	cmp	r0, #0x1
	beq	.L62	@cond_branch
	ldr	r0, .L141
	ldr	r0, [r0]
	ldr	r2, .L141+0x4
	add	r0, r0, r2
	mov	r1, #0x6
	strb	r1, [r0]
	b	.L62
.L142:
	.align	2, 0
.L141:
	.word	sMonSummaryScreen
	.word	0x3270
.L103:
	ldr	r0, .L143
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L62	@cond_branch
	mov	r0, r8
	bl	Task_DestroyResourcesOnExit
.L62:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L144:
	.align	2, 0
.L143:
	.word	gPaletteFade
.Lfe5:
	.size	 Task_InputHandler_Info,.Lfe5-Task_InputHandler_Info
	.align	2, 0
	.type	 Task_PokeSum_FlipPages,function
	.thumb_func
Task_PokeSum_FlipPages:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r4, r0, #0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r6, .L170
	add	r7, r0, r6
	mov	r1, #0x0
	ldrsh	r0, [r7, r1]
	cmp	r0, #0x9
	bls	.LCB1164
	b	.L166	@long jump
.LCB1164:
	lsl	r0, r0, #0x2
	ldr	r1, .L170+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L171:
	.align	2, 0
.L170:
	.word	gTasks+0x8
	.word	.L168
	.align	2, 0
	.align	2, 0
.L168:
	.word	.L147
	.word	.L148
	.word	.L152
	.word	.L153
	.word	.L154
	.word	.L157
	.word	.L158
	.word	.L160
	.word	.L162
	.word	.L163
.L147:
	bl	PokeSum_HideSpritesBeforePageFlip
	bl	PokeSum_ShowSpritesBeforePageFlip
	ldr	r4, .L172
	ldr	r0, [r4]
	ldr	r2, .L172+0x4
	add	r0, r0, r2
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r3, .L172+0x8
	add	r0, r0, r3
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r5, .L172+0xc
	add	r0, r0, r5
	ldrb	r0, [r0]
	bl	PokeSum_UpdateWin1ActiveFlag
	ldr	r0, [r4]
	add	r0, r0, r5
	ldrb	r0, [r0]
	bl	PokeSum_AddWindows
	b	.L146
.L173:
	.align	2, 0
.L172:
	.word	sMonSummaryScreen
	.word	0x3234
	.word	0x301c
	.word	0x3214
.L148:
	ldr	r0, .L174
	ldr	r1, [r0]
	ldr	r2, .L174+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x3
	beq	.L149	@cond_branch
	cmp	r0, #0x2
	bne	.L151	@cond_branch
	ldr	r3, .L174+0x8
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L149	@cond_branch
.L151:
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L149:
	mov	r4, #0x1e
	str	r4, [sp]
	mov	r5, #0x2
	str	r5, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r6, #0xf
	str	r6, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r6, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	FillBgTilemapBufferRect_Palette0
	b	.L146
.L175:
	.align	2, 0
.L174:
	.word	sMonSummaryScreen
	.word	0x3214
	.word	0x3224
.L152:
	bl	PokeSum_CopyNewBgTilemapBeforePageFlip_2
	bl	PokeSum_CopyNewBgTilemapBeforePageFlip
	bl	PokeSum_DrawPageProgressTiles
	ldr	r0, .L176
	ldr	r0, [r0]
	ldr	r1, .L176+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PokeSum_PrintPageHeaderText
	b	.L146
.L177:
	.align	2, 0
.L176:
	.word	sMonSummaryScreen
	.word	0x3214
.L153:
	ldr	r4, .L178
	ldr	r0, [r4]
	mov	r2, #0xc0
	lsl	r2, r2, #0x6
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r3, .L178+0x4
	add	r0, r0, r3
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r1, .L178+0x8
	add	r0, r0, r1
	b	.L169
.L179:
	.align	2, 0
.L178:
	.word	sMonSummaryScreen
	.word	0x3001
	.word	0x3002
.L154:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1359
	b	.L145	@long jump
.LCB1359:
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	b	.L146
.L157:
	bl	PokeSum_InitBgCoordsBeforePageFlips
	ldr	r0, .L180
	ldr	r0, [r0]
	ldr	r2, .L180+0x4
	add	r0, r0, r2
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L146
.L181:
	.align	2, 0
.L180:
	.word	sMonSummaryScreen
	.word	0x3244
.L158:
	ldr	r0, .L182
	ldr	r0, [r0]
	ldr	r3, .L182+0x4
	add	r0, r0, r3
	ldrb	r0, [r0]
	bl	PokeSum_IsPageFlipFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1400
	b	.L145	@long jump
.LCB1400:
	b	.L146
.L183:
	.align	2, 0
.L182:
	.word	sMonSummaryScreen
	.word	0x3224
.L160:
	bl	PokeSum_PrintRightPaneText
	ldr	r0, .L184
	ldr	r0, [r0]
	ldr	r1, .L184+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x3
	beq	.L161	@cond_branch
	bl	PokeSum_PrintBottomPaneText
.L161:
	bl	PokeSum_PrintAbilityDataOrMoveTypes
	bl	PokeSum_PrintMonTypeIcons
	b	.L146
.L185:
	.align	2, 0
.L184:
	.word	sMonSummaryScreen
	.word	0x3214
.L162:
	ldr	r4, .L186
	ldr	r0, [r4]
	ldr	r2, .L186+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r3, .L186+0x8
	add	r0, r0, r3
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r1, .L186+0xc
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r2, .L186+0x10
	add	r0, r0, r2
.L169:
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L146
.L187:
	.align	2, 0
.L186:
	.word	sMonSummaryScreen
	.word	0x3003
	.word	0x3004
	.word	0x3005
	.word	0x3006
.L163:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L145	@cond_branch
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x0
	bl	ShowBg
	b	.L146
.L166:
	bl	PokeSum_SetHelpContext
	ldr	r5, .L188
	ldr	r1, [r5]
	ldr	r3, .L188+0x4
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L167	@cond_branch
	add	r2, r6, #0
	sub	r2, r2, #0x8
	ldr	r3, .L188+0x8
	add	r0, r1, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldr	r1, .L188+0xc
	str	r1, [r0]
.L167:
	add	r0, r4, #0
	bl	DestroyTask
	mov	r0, #0x0
	strh	r0, [r7]
	ldr	r1, [r5]
	ldr	r2, .L188+0x10
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r1, [r5]
	ldr	r3, .L188+0x14
	add	r1, r1, r3
	strb	r0, [r1]
	b	.L145
.L189:
	.align	2, 0
.L188:
	.word	sMonSummaryScreen
	.word	0x3214
	.word	0x3018
	.word	Task_HandleInput_SelectMove
	.word	0x3234
	.word	0x301c
.L146:
	ldrh	r0, [r7]
	add	r0, r0, #0x1
	strh	r0, [r7]
.L145:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 Task_PokeSum_FlipPages,.Lfe6-Task_PokeSum_FlipPages
	.align	2, 0
	.type	 Task_FlipPages_FromInfo,function
	.thumb_func
Task_FlipPages_FromInfo:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	ldr	r4, .L219
	ldr	r0, [r4]
	ldr	r1, .L219+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	add	r5, r4, #0
	cmp	r0, #0xb
	bls	.LCB1575
	b	.L216	@long jump
.LCB1575:
	lsl	r0, r0, #0x2
	ldr	r1, .L219+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L220:
	.align	2, 0
.L219:
	.word	sMonSummaryScreen
	.word	0x3284
	.word	.L217
	.align	2, 0
	.align	2, 0
.L217:
	.word	.L192
	.word	.L193
	.word	.L197
	.word	.L198
	.word	.L201
	.word	.L202
	.word	.L205
	.word	.L206
	.word	.L209
	.word	.L211
	.word	.L212
	.word	.L213
.L192:
	ldr	r1, .L221
	ldr	r0, [r1]
	ldr	r2, .L221+0x4
	add	r0, r0, r2
	mov	r2, #0x1
	strb	r2, [r0]
	ldr	r0, [r1]
	ldr	r3, .L221+0x8
	add	r0, r0, r3
	strb	r2, [r0]
	ldr	r0, [r1]
	ldr	r1, .L221+0xc
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PokeSum_AddWindows
	b	.L191
.L222:
	.align	2, 0
.L221:
	.word	sMonSummaryScreen
	.word	0x3234
	.word	0x301c
	.word	0x3214
.L193:
	ldr	r0, .L223
	ldr	r1, [r0]
	ldr	r2, .L223+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x3
	beq	.L194	@cond_branch
	cmp	r0, #0x2
	bne	.L196	@cond_branch
	ldr	r3, .L223+0x8
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L194	@cond_branch
.L196:
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L194:
	mov	r4, #0x1e
	str	r4, [sp]
	mov	r5, #0x2
	str	r5, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r6, #0xf
	str	r6, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r6, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	FillBgTilemapBufferRect_Palette0
	b	.L191
.L224:
	.align	2, 0
.L223:
	.word	sMonSummaryScreen
	.word	0x3214
	.word	0x3224
.L197:
	bl	PokeSum_HideSpritesBeforePageFlip
	ldr	r0, .L225
	ldr	r0, [r0]
	ldr	r1, .L225+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PokeSum_UpdateWin1ActiveFlag
	bl	PokeSum_CopyNewBgTilemapBeforePageFlip
	bl	PokeSum_DrawPageProgressTiles
	bl	PokeSum_CopyNewBgTilemapBeforePageFlip_2
	b	.L191
.L226:
	.align	2, 0
.L225:
	.word	sMonSummaryScreen
	.word	0x3214
.L198:
	ldr	r0, .L227
	bl	PokeSum_PrintPageName
	ldr	r0, .L227+0x4
	ldr	r2, .L227+0x8
	add	r0, r0, r2
	ldrb	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L199	@cond_branch
	ldr	r0, .L227+0xc
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L199	@cond_branch
	ldr	r0, .L227+0x10
	bl	PokeSum_PrintControlsString
	b	.L191
.L228:
	.align	2, 0
.L227:
	.word	gText_PokeSum_PageName_KnownMoves
	.word	gMain
	.word	0x439
	.word	gReceivedRemoteLinkPlayers
	.word	gText_PokeSum_Controls_PickSwitch
.L199:
	ldr	r0, .L229
	bl	PokeSum_PrintControlsString
	b	.L191
.L230:
	.align	2, 0
.L229:
	.word	gText_PokeSum_Controls_Pick
.L201:
	ldr	r4, .L231
	ldr	r0, [r4]
	mov	r3, #0xc0
	lsl	r3, r3, #0x6
	add	r0, r0, r3
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r1, .L231+0x4
	add	r0, r0, r1
	b	.L218
.L232:
	.align	2, 0
.L231:
	.word	sMonSummaryScreen
	.word	0x3001
.L202:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1805
	b	.L190	@long jump
.LCB1805:
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	b	.L191
.L205:
	bl	PokeSum_PrintRightPaneText
	bl	PokeSum_PrintAbilityDataOrMoveTypes
	ldr	r4, .L233
	ldr	r0, [r4]
	ldr	r2, .L233+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r3, .L233+0x8
	add	r0, r0, r3
	b	.L218
.L234:
	.align	2, 0
.L233:
	.word	sMonSummaryScreen
	.word	0x3003
	.word	0x3005
.L206:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1848
	b	.L190	@long jump
.LCB1848:
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	bl	PokeSum_InitBgCoordsBeforePageFlips
	ldr	r0, .L235
	ldr	r0, [r0]
	ldr	r1, .L235+0x4
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L191
.L236:
	.align	2, 0
.L235:
	.word	sMonSummaryScreen
	.word	0x3244
.L209:
	ldr	r0, [r5]
	ldr	r2, .L237
	add	r0, r0, r2
	ldrb	r0, [r0]
	bl	PokeSum_IsPageFlipFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L190	@cond_branch
	bl	PokeSum_PrintBottomPaneText
	ldr	r0, [r5]
	ldr	r3, .L237+0x4
	add	r0, r0, r3
	b	.L218
.L238:
	.align	2, 0
.L237:
	.word	0x3224
	.word	0x3004
.L211:
	bl	PokeSum_PrintMonTypeIcons
	ldr	r0, .L239
	bl	PrintMonLevelNickOnWindow2
	b	.L191
.L240:
	.align	2, 0
.L239:
	.word	gText_PokeSum_NoData
.L212:
	bl	PokeSum_ShowSpritesBeforePageFlip
	ldr	r4, .L241
	ldr	r0, [r4]
	ldr	r1, .L241+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r2, .L241+0x8
	add	r0, r0, r2
.L218:
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L191
.L242:
	.align	2, 0
.L241:
	.word	sMonSummaryScreen
	.word	0x3006
	.word	0x3002
.L213:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L190	@cond_branch
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	b	.L191
.L216:
	bl	PokeSum_SetHelpContext
	ldr	r3, .L243
	ldr	r2, [r4]
	ldr	r1, .L243+0x4
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	ldr	r1, .L243+0x8
	str	r1, [r0]
	ldr	r3, .L243+0xc
	add	r2, r2, r3
	mov	r1, #0x0
	strb	r1, [r2]
	ldr	r0, [r4]
	ldr	r2, .L243+0x10
	add	r0, r0, r2
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r3, .L243+0x14
	add	r0, r0, r3
	strb	r1, [r0]
	b	.L190
.L244:
	.align	2, 0
.L243:
	.word	gTasks
	.word	0x3018
	.word	Task_HandleInput_SelectMove
	.word	0x3284
	.word	0x3234
	.word	0x301c
.L191:
	ldr	r0, .L245
	ldr	r1, [r0]
	ldr	r0, .L245+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L190:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L246:
	.align	2, 0
.L245:
	.word	sMonSummaryScreen
	.word	0x3284
.Lfe7:
	.size	 Task_FlipPages_FromInfo,.Lfe7-Task_FlipPages_FromInfo
	.align	2, 0
	.type	 Task_BackOutOfSelectMove,function
	.thumb_func
Task_BackOutOfSelectMove:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	ldr	r4, .L267
	ldr	r0, [r4]
	ldr	r1, .L267+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	add	r2, r4, #0
	cmp	r0, #0xa
	bls	.LCB2035
	b	.L264	@long jump
.LCB2035:
	lsl	r0, r0, #0x2
	ldr	r1, .L267+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L268:
	.align	2, 0
.L267:
	.word	sMonSummaryScreen
	.word	0x3284
	.word	.L265
	.align	2, 0
	.align	2, 0
.L265:
	.word	.L249
	.word	.L250
	.word	.L254
	.word	.L255
	.word	.L256
	.word	.L257
	.word	.L258
	.word	.L248
	.word	.L260
	.word	.L262
	.word	.L263
.L249:
	ldr	r1, .L269
	ldr	r0, [r1]
	ldr	r2, .L269+0x4
	add	r0, r0, r2
	mov	r2, #0x1
	strb	r2, [r0]
	ldr	r0, [r1]
	ldr	r3, .L269+0x8
	add	r0, r0, r3
	strb	r2, [r0]
	ldr	r0, [r1]
	ldr	r1, .L269+0xc
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PokeSum_AddWindows
	b	.L248
.L270:
	.align	2, 0
.L269:
	.word	sMonSummaryScreen
	.word	0x3234
	.word	0x301c
	.word	0x3214
.L250:
	ldr	r0, .L271
	ldr	r1, [r0]
	ldr	r2, .L271+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x3
	beq	.L251	@cond_branch
	cmp	r0, #0x2
	bne	.L253	@cond_branch
	ldr	r3, .L271+0x8
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L251	@cond_branch
.L253:
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L251:
	mov	r4, #0x1e
	str	r4, [sp]
	mov	r5, #0x2
	str	r5, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r6, #0xf
	str	r6, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r6, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	FillBgTilemapBufferRect_Palette0
	b	.L248
.L272:
	.align	2, 0
.L271:
	.word	sMonSummaryScreen
	.word	0x3214
	.word	0x3224
.L254:
	bl	PokeSum_CopyNewBgTilemapBeforePageFlip_2
	b	.L248
.L255:
	bl	PokeSum_PrintRightPaneText
	bl	PokeSum_PrintBottomPaneText
	bl	PokeSum_PrintAbilityDataOrMoveTypes
	ldr	r4, .L273
	ldr	r0, [r4]
	ldr	r1, .L273+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r2, .L273+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r3, .L273+0xc
	add	r0, r0, r3
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	b	.L248
.L274:
	.align	2, 0
.L273:
	.word	sMonSummaryScreen
	.word	0x3003
	.word	0x3004
	.word	0x3005
.L256:
	ldr	r0, .L275
	bl	PokeSum_PrintPageName
	ldr	r0, .L275+0x4
	bl	PokeSum_PrintControlsString
	b	.L248
.L276:
	.align	2, 0
.L275:
	.word	gText_PokeSum_PageName_KnownMoves
	.word	gText_PokeSum_Controls_PageDetail
.L257:
	ldr	r4, .L277
	ldr	r0, [r4]
	mov	r1, #0xc0
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r2, .L277+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L266
.L278:
	.align	2, 0
.L277:
	.word	sMonSummaryScreen
	.word	0x3001
.L258:
	bl	PokeSum_InitBgCoordsBeforePageFlips
	ldr	r4, .L279
	ldr	r0, [r4]
	ldr	r3, .L279+0x4
	add	r0, r0, r3
	mov	r1, #0x1
	strb	r1, [r0]
	bl	PokeSum_HideSpritesBeforePageFlip
	ldr	r0, [r4]
	ldr	r1, .L279+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PokeSum_UpdateWin1ActiveFlag
	bl	PokeSum_PrintMonTypeIcons
	b	.L248
.L280:
	.align	2, 0
.L279:
	.word	sMonSummaryScreen
	.word	0x3244
	.word	0x3214
.L260:
	ldr	r0, [r2]
	ldr	r2, .L281
	add	r0, r0, r2
	ldrb	r0, [r0]
	bl	PokeSum_IsPageFlipFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L247	@cond_branch
	ldr	r0, .L281+0x4
	bl	PrintMonLevelNickOnWindow2
	b	.L248
.L282:
	.align	2, 0
.L281:
	.word	0x3224
	.word	gText_PokeSum_NoData
.L262:
	ldr	r4, .L283
	ldr	r0, [r4]
	ldr	r3, .L283+0x4
	add	r0, r0, r3
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r1, .L283+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L266:
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	b	.L248
.L284:
	.align	2, 0
.L283:
	.word	sMonSummaryScreen
	.word	0x3006
	.word	0x3002
.L263:
	bl	PokeSum_CopyNewBgTilemapBeforePageFlip
	bl	PokeSum_DrawPageProgressTiles
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	bl	PokeSum_ShowSpritesBeforePageFlip
	b	.L248
.L264:
	bl	PokeSum_SetHelpContext
	ldr	r3, .L285
	ldr	r2, [r4]
	ldr	r1, .L285+0x4
	add	r0, r2, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	ldr	r1, .L285+0x8
	str	r1, [r0]
	ldr	r3, .L285+0xc
	add	r2, r2, r3
	mov	r1, #0x0
	strb	r1, [r2]
	ldr	r0, [r4]
	ldr	r2, .L285+0x10
	add	r0, r0, r2
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r3, .L285+0x14
	add	r0, r0, r3
	strb	r1, [r0]
	b	.L247
.L286:
	.align	2, 0
.L285:
	.word	gTasks
	.word	0x3018
	.word	Task_InputHandler_Info
	.word	0x3284
	.word	0x3234
	.word	0x301c
.L248:
	ldr	r0, .L287
	ldr	r1, [r0]
	ldr	r0, .L287+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L247:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L288:
	.align	2, 0
.L287:
	.word	sMonSummaryScreen
	.word	0x3284
.Lfe8:
	.size	 Task_BackOutOfSelectMove,.Lfe8-Task_BackOutOfSelectMove
	.align	2, 0
	.type	 PokeSum_SetHpExpBarCoordsFullRight,function
	.thumb_func
PokeSum_SetHpExpBarCoordsFullRight:
	push	{r4, r5, r6, lr}
	mov	r4, #0x0
	ldr	r6, .L296
.L293:
	ldr	r1, [r6]
	lsl	r5, r4, #0x1
	add	r0, r1, #0
	add	r0, r0, #0x2c
	add	r0, r0, r5
	lsl	r2, r4, #0x3
	mov	ip, r2
	mov	r2, #0xc6
	lsl	r2, r2, #0x1
	add	r2, r2, ip
	strh	r2, [r0]
	lsl	r3, r4, #0x2
	add	r1, r1, r3
	ldr	r0, [r1]
	strh	r2, [r0, #0x20]
	cmp	r4, #0x8
	bhi	.L292	@cond_branch
	ldr	r0, .L296+0x4
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x28
	add	r0, r0, r5
	mov	r2, #0xce
	lsl	r2, r2, #0x1
	add	r2, r2, ip
	strh	r2, [r0]
	add	r1, r1, r3
	ldr	r0, [r1]
	strh	r2, [r0, #0x20]
.L292:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xa
	bls	.L293	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L297:
	.align	2, 0
.L296:
	.word	sExpBarObjs
	.word	sHpBarObjs
.Lfe9:
	.size	 PokeSum_SetHpExpBarCoordsFullRight,.Lfe9-PokeSum_SetHpExpBarCoordsFullRight
	.align	2, 0
	.type	 PokeSum_SetHpExpBarCoordsFullLeft,function
	.thumb_func
PokeSum_SetHpExpBarCoordsFullLeft:
	push	{r4, r5, r6, r7, lr}
	mov	r5, #0x0
	ldr	r7, .L305
.L302:
	ldr	r1, [r7]
	lsl	r6, r5, #0x1
	add	r0, r1, #0
	add	r0, r0, #0x2c
	add	r0, r0, r6
	lsl	r4, r5, #0x3
	add	r2, r4, #0
	add	r2, r2, #0x9c
	strh	r2, [r0]
	lsl	r3, r5, #0x2
	add	r1, r1, r3
	ldr	r0, [r1]
	strh	r2, [r0, #0x20]
	cmp	r5, #0x8
	bhi	.L301	@cond_branch
	ldr	r0, .L305+0x4
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x28
	add	r0, r0, r6
	add	r2, r2, #0x10
	strh	r2, [r0]
	add	r1, r1, r3
	ldr	r0, [r1]
	strh	r2, [r0, #0x20]
.L301:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0xa
	bls	.L302	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L306:
	.align	2, 0
.L305:
	.word	sExpBarObjs
	.word	sHpBarObjs
.Lfe10:
	.size	 PokeSum_SetHpExpBarCoordsFullLeft,.Lfe10-PokeSum_SetHpExpBarCoordsFullLeft
	.align	2, 0
	.type	 PokeSum_InitBgCoordsBeforePageFlips,function
	.thumb_func
PokeSum_InitBgCoordsBeforePageFlips:
	push	{r4, r5, r6, lr}
	mov	r4, #0x1
	ldr	r6, .L320
	ldr	r1, [r6]
	ldr	r2, .L320+0x4
	add	r0, r1, r2
	ldrb	r3, [r0]
	cmp	r3, #0x1
	bne	.L308	@cond_branch
	mov	r4, #0xff
.L308:
	ldr	r0, .L320+0x8
	add	r2, r1, r0
	ldrb	r0, [r2]
	cmp	r0, #0x3
	bne	.L309	@cond_branch
	ldr	r2, .L320+0xc
	add	r1, r1, r2
	mov	r0, #0xf0
	strh	r0, [r1]
	b	.L307
.L321:
	.align	2, 0
.L320:
	.word	sMonSummaryScreen
	.word	0x3224
	.word	0x3214
	.word	0x324c
.L309:
	lsl	r0, r4, #0x18
	asr	r0, r0, #0x18
	ldrb	r2, [r2]
	add	r0, r0, r2
	cmp	r0, #0x3
	bne	.L310	@cond_branch
	mov	r0, #0x0
	mov	r1, #0x0
	bl	PokeSum_UpdateBgPriorityForPageFlip
	ldr	r0, [r6]
	ldr	r1, .L322
	add	r0, r0, r1
	mov	r1, #0x0
	strh	r1, [r0]
	mov	r0, #0x14
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	b	.L307
.L323:
	.align	2, 0
.L322:
	.word	0x324c
.L310:
	cmp	r3, #0x1
	bne	.L311	@cond_branch
	ldr	r2, .L324
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1
	mov	r1, #0x1
	bl	PokeSum_UpdateBgPriorityForPageFlip
	b	.L312
.L325:
	.align	2, 0
.L324:
	.word	0x324c
.L311:
	mov	r0, #0xa
	bl	GetGpuReg
	mov	r4, #0x3
	add	r5, r4, #0
	and	r5, r5, r0
	mov	r0, #0xc
	bl	GetGpuReg
	and	r4, r4, r0
	ldr	r0, [r6]
	ldr	r1, .L326
	add	r0, r0, r1
	mov	r1, #0xf0
	strh	r1, [r0]
	cmp	r5, r4
	bls	.L313	@cond_branch
	mov	r0, #0x14
	bl	SetGpuReg
	b	.L314
.L327:
	.align	2, 0
.L326:
	.word	0x324c
.L313:
	mov	r0, #0x18
	mov	r1, #0xf0
	bl	SetGpuReg
.L314:
	mov	r0, #0x10
	mov	r1, #0xf0
	bl	SetGpuReg
	mov	r0, #0x1
	mov	r1, #0x0
	bl	PokeSum_UpdateBgPriorityForPageFlip
.L312:
	ldr	r0, .L328
	ldr	r1, [r0]
	ldr	r2, .L328+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L315	@cond_branch
	add	r2, r2, #0x10
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L316	@cond_branch
	bl	PokeSum_SetHpExpBarCoordsFullLeft
	b	.L307
.L329:
	.align	2, 0
.L328:
	.word	sMonSummaryScreen
	.word	0x3214
.L316:
	bl	PokeSum_SetHpExpBarCoordsFullRight
	b	.L307
.L315:
	cmp	r0, #0x2
	bne	.L307	@cond_branch
	bl	PokeSum_SetHpExpBarCoordsFullLeft
.L307:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe11:
	.size	 PokeSum_InitBgCoordsBeforePageFlips,.Lfe11-PokeSum_InitBgCoordsBeforePageFlips
	.align	2, 0
	.type	 PokeSum_HideSpritesBeforePageFlip,function
	.thumb_func
PokeSum_HideSpritesBeforePageFlip:
	push	{lr}
	ldr	r0, .L343
	ldr	r2, [r0]
	ldr	r3, .L343+0x4
	add	r1, r2, r3
	ldrb	r1, [r1]
	add	r3, r0, #0
	cmp	r1, #0x1
	bne	.L331	@cond_branch
	ldr	r1, .L343+0x8
	add	r0, r2, r1
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	b	.L342
.L344:
	.align	2, 0
.L343:
	.word	sMonSummaryScreen
	.word	0x3224
	.word	0x3214
.L331:
	ldr	r1, .L345
	add	r0, r2, r1
	ldrb	r0, [r0]
	add	r0, r0, #0x1
.L342:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L335	@cond_branch
	cmp	r0, #0x1
	ble	.L333	@cond_branch
	cmp	r0, #0x2
	beq	.L336	@cond_branch
	cmp	r0, #0x3
	beq	.L338	@cond_branch
	b	.L333
.L346:
	.align	2, 0
.L345:
	.word	0x3214
.L335:
	mov	r0, #0x1
	bl	ShowOrHideHpBarObjs
	mov	r0, #0x1
	bl	ShowOrHideExpBarObjs
	b	.L333
.L336:
	ldr	r0, [r3]
	ldr	r3, .L347
	add	r0, r0, r3
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L333	@cond_branch
	mov	r0, #0x1
	bl	PokeSum_ShowOrHideMonPicSprite
	mov	r0, #0x1
	bl	PokeSum_ShowOrHideMonMarkingsSprite
	mov	r0, #0x1
	bl	ShowOrHideBallIconObj
	mov	r0, #0x1
	bl	ShowOrHideStatusIcon
	mov	r0, #0x1
	bl	HideShowPokerusIcon
	mov	r0, #0x1
	bl	HideShowShinyStar
	b	.L333
.L348:
	.align	2, 0
.L347:
	.word	0x3224
.L338:
	mov	r0, #0x1
	bl	ShoworHideMoveSelectionCursor
	mov	r0, #0x1
	bl	PokeSum_ShowOrHideMonIconSprite
	mov	r0, #0x1
	bl	ShowOrHideStatusIcon
	mov	r0, #0x1
	bl	HideShowPokerusIcon
	mov	r0, #0x1
	bl	HideShowShinyStar
.L333:
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 PokeSum_HideSpritesBeforePageFlip,.Lfe12-PokeSum_HideSpritesBeforePageFlip
	.align	2, 0
	.type	 PokeSum_ShowSpritesBeforePageFlip,function
	.thumb_func
PokeSum_ShowSpritesBeforePageFlip:
	push	{lr}
	ldr	r0, .L364
	ldr	r2, [r0]
	ldr	r3, .L364+0x4
	add	r1, r2, r3
	ldrb	r1, [r1]
	add	r3, r0, #0
	cmp	r1, #0x1
	bne	.L350	@cond_branch
	ldr	r1, .L364+0x8
	add	r0, r2, r1
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	b	.L362
.L365:
	.align	2, 0
.L364:
	.word	sMonSummaryScreen
	.word	0x3224
	.word	0x3214
.L350:
	ldr	r1, .L366
	add	r0, r2, r1
	ldrb	r0, [r0]
	add	r0, r0, #0x1
.L362:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L352	@cond_branch
	cmp	r0, #0x1
	bgt	.L361	@cond_branch
	cmp	r0, #0
	beq	.L363	@cond_branch
	b	.L352
.L367:
	.align	2, 0
.L366:
	.word	0x3214
.L361:
	cmp	r0, #0x2
	beq	.L355	@cond_branch
	cmp	r0, #0x3
	beq	.L358	@cond_branch
	b	.L352
.L355:
	ldr	r0, [r3]
	ldr	r3, .L368
	add	r0, r0, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L356	@cond_branch
.L363:
	mov	r0, #0x0
	bl	ShowOrHideHpBarObjs
	mov	r0, #0x0
	bl	ShowOrHideExpBarObjs
	b	.L352
.L369:
	.align	2, 0
.L368:
	.word	0x3224
.L356:
	mov	r0, #0x0
	bl	ShoworHideMoveSelectionCursor
	mov	r0, #0x0
	bl	HideShowPokerusIcon
	mov	r0, #0x0
	bl	PokeSum_ShowOrHideMonIconSprite
	mov	r0, #0x0
	bl	HideShowShinyStar
	b	.L352
.L358:
	mov	r0, #0x0
	bl	PokeSum_ShowOrHideMonPicSprite
	mov	r0, #0x0
	bl	PokeSum_ShowOrHideMonMarkingsSprite
	mov	r0, #0x0
	bl	ShowOrHideStatusIcon
	mov	r0, #0x0
	bl	ShowOrHideBallIconObj
	mov	r0, #0x0
	bl	HideShowPokerusIcon
	mov	r0, #0x0
	bl	HideShowShinyStar
.L352:
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 PokeSum_ShowSpritesBeforePageFlip,.Lfe13-PokeSum_ShowSpritesBeforePageFlip
	.align	2, 0
	.type	 PokeSum_IsPageFlipFinished,function
	.thumb_func
PokeSum_IsPageFlipFinished:
	push	{r4, r5, r6, lr}
	mov	r3, #0x1
	ldr	r0, .L382
	ldr	r2, [r0]
	ldr	r4, .L382+0x4
	add	r1, r2, r4
	ldrb	r1, [r1]
	add	r5, r0, #0
	cmp	r1, #0x1
	bne	.L371	@cond_branch
	mov	r3, #0xff
.L371:
	ldr	r1, .L382+0x8
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L372	@cond_branch
	ldr	r4, .L382+0xc
	add	r1, r2, r4
	mov	r4, #0x0
	ldrsh	r0, [r1, r4]
	cmp	r0, #0
	bgt	.L372	@cond_branch
	mov	r4, #0x0
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L382+0x10
	add	r2, r2, r0
	ldrb	r0, [r2]
	mov	r1, #0x1
	eor	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	PokeSum_UpdateBgPriorityForPageFlip
	ldr	r0, [r5]
	b	.L381
.L383:
	.align	2, 0
.L382:
	.word	sMonSummaryScreen
	.word	0x3224
	.word	0x3214
	.word	0x324c
	.word	0x3238
.L372:
	ldr	r2, [r5]
	ldr	r4, .L384
	add	r1, r2, r4
	lsl	r0, r3, #0x18
	asr	r0, r0, #0x18
	ldrb	r1, [r1]
	add	r0, r0, r1
	cmp	r0, #0x3
	bne	.L374	@cond_branch
	ldr	r0, .L384+0x4
	add	r1, r2, r0
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0xef
	ble	.L374	@cond_branch
	mov	r3, #0x0
	mov	r0, #0xf0
	strh	r0, [r1]
	add	r4, r4, #0x24
	add	r2, r2, r4
	ldrb	r0, [r2]
	mov	r1, #0x1
	eor	r0, r0, r1
	strb	r0, [r2]
	ldr	r0, [r5]
	ldr	r1, .L384+0x8
	add	r0, r0, r1
	strb	r3, [r0]
	mov	r0, #0x1
	b	.L380
.L385:
	.align	2, 0
.L384:
	.word	0x3214
	.word	0x324c
	.word	0x3244
.L374:
	add	r6, r5, #0
	ldr	r2, [r6]
	ldr	r3, .L386
	add	r0, r2, r3
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L376	@cond_branch
	ldr	r4, .L386+0x4
	add	r1, r2, r4
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	cmp	r0, #0xef
	ble	.L378	@cond_branch
	mov	r4, #0x0
	mov	r0, #0xf0
	strh	r0, [r1]
	ldr	r0, .L386+0x8
	add	r2, r2, r0
	ldrb	r0, [r2]
	mov	r1, #0x1
	eor	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	PokeSum_UpdateBgPriorityForPageFlip
	ldr	r0, [r6]
.L381:
	ldr	r1, .L386+0xc
	add	r0, r0, r1
	strb	r4, [r0]
	mov	r0, #0x1
	b	.L380
.L387:
	.align	2, 0
.L386:
	.word	0x3224
	.word	0x324c
	.word	0x3238
	.word	0x3244
.L376:
	ldr	r3, .L388
	add	r0, r2, r3
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp	r0, #0
	bgt	.L378	@cond_branch
	ldr	r0, .L388+0x4
	add	r2, r2, r0
	ldrb	r0, [r2]
	mov	r1, #0x1
	eor	r0, r0, r1
	mov	r3, #0x0
	strb	r0, [r2]
	ldr	r0, [r5]
	ldr	r2, .L388
	add	r1, r0, r2
	mov	r2, #0x0
	strh	r3, [r1]
	ldr	r3, .L388+0x8
	add	r0, r0, r3
	strb	r2, [r0]
	mov	r0, #0x1
	b	.L380
.L389:
	.align	2, 0
.L388:
	.word	0x324c
	.word	0x3238
	.word	0x3244
.L378:
	mov	r0, #0x0
.L380:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 PokeSum_IsPageFlipFinished,.Lfe14-PokeSum_IsPageFlipFinished
	.align	2, 0
	.type	 PokeSum_UpdateBgPriorityForPageFlip,function
	.thumb_func
PokeSum_UpdateBgPriorityForPageFlip:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r9, r1
	mov	r0, #0x8
	bl	GetGpuReg
	mov	r4, #0x3
	mov	r8, r4
	mov	r1, r8
	and	r1, r1, r0
	mov	r8, r1
	mov	r0, #0xa
	bl	GetGpuReg
	add	r5, r4, #0
	and	r5, r5, r0
	mov	r0, #0xc
	bl	GetGpuReg
	add	r6, r4, #0
	and	r6, r6, r0
	ldr	r0, .L423
	ldr	r0, [r0]
	ldr	r2, .L423+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L391	@cond_branch
	cmp	r7, #0
	bne	.L392	@cond_branch
	mov	r0, #0x0
	mov	r8, r0
	mov	r1, r9
	cmp	r1, #0
	bne	.L393	@cond_branch
	cmp	r5, r6
	bhi	.L397	@cond_branch
	b	.L419
.L424:
	.align	2, 0
.L423:
	.word	sMonSummaryScreen
	.word	0x3224
.L393:
	cmp	r5, r6
	bls	.L397	@cond_branch
.L419:
	mov	r5, #0x2
	mov	r6, #0x1
	b	.L392
.L397:
	mov	r5, #0x1
	mov	r6, #0x2
.L392:
	cmp	r7, #0x1
	bne	.L391	@cond_branch
	mov	r2, #0x1
	mov	r8, r2
	mov	r0, r9
	cmp	r0, #0
	bne	.L400	@cond_branch
	cmp	r5, r6
	bhi	.L404	@cond_branch
	b	.L420
.L400:
	cmp	r5, r6
	bls	.L404	@cond_branch
.L420:
	mov	r5, #0x2
	mov	r6, #0x0
	b	.L391
.L404:
	mov	r5, #0x0
	mov	r6, #0x2
.L391:
	ldr	r0, .L425
	ldr	r0, [r0]
	ldr	r1, .L425+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L406	@cond_branch
	mov	r2, #0x0
	mov	r8, r2
	cmp	r5, r6
	bls	.L407	@cond_branch
	mov	r5, #0x1
	mov	r6, #0x2
	b	.L406
.L426:
	.align	2, 0
.L425:
	.word	sMonSummaryScreen
	.word	0x3224
.L407:
	mov	r5, #0x2
	mov	r6, #0x1
.L406:
	mov	r4, #0x0
	mov	r0, r8
	lsl	r0, r0, #0x2
	mov	r9, r0
	mov	r7, #0xd
	neg	r7, r7
	lsl	r1, r5, #0x2
	mov	ip, r1
	ldr	r2, .L427
	mov	sl, r2
.L412:
	ldr	r0, .L427+0x4
	ldr	r1, [r0]
	ldr	r2, .L427+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L413	@cond_branch
	add	r2, r2, #0x10
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L413	@cond_branch
	mov	r1, sl
	ldr	r0, [r1]
	lsl	r3, r4, #0x2
	add	r0, r0, r3
	ldr	r2, [r0]
	ldrb	r1, [r2, #0x5]
	add	r0, r7, #0
	and	r0, r0, r1
	mov	r1, r9
	b	.L421
.L428:
	.align	2, 0
.L427:
	.word	sExpBarObjs
	.word	sMonSummaryScreen
	.word	0x3214
.L413:
	mov	r2, sl
	ldr	r0, [r2]
	lsl	r3, r4, #0x2
	add	r0, r0, r3
	ldr	r2, [r0]
	ldrb	r1, [r2, #0x5]
	add	r0, r7, #0
	and	r0, r0, r1
	mov	r1, ip
.L421:
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	cmp	r4, #0x8
	bhi	.L411	@cond_branch
	ldr	r2, .L429
	ldr	r1, [r2]
	ldr	r2, .L429+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L416	@cond_branch
	add	r2, r2, #0x10
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L416	@cond_branch
	ldr	r0, .L429+0x8
	ldr	r0, [r0]
	add	r0, r0, r3
	ldr	r2, [r0]
	ldrb	r1, [r2, #0x5]
	add	r0, r7, #0
	and	r0, r0, r1
	mov	r1, r9
	b	.L422
.L430:
	.align	2, 0
.L429:
	.word	sMonSummaryScreen
	.word	0x3214
	.word	sHpBarObjs
.L416:
	ldr	r0, .L431
	ldr	r0, [r0]
	add	r0, r0, r3
	ldr	r2, [r0]
	ldrb	r1, [r2, #0x5]
	add	r0, r7, #0
	and	r0, r0, r1
	mov	r1, ip
.L422:
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
.L411:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xa
	bls	.L412	@cond_branch
	mov	r0, #0x8
	bl	GetGpuReg
	ldr	r4, .L431+0x4
	add	r1, r4, #0
	and	r1, r1, r0
	mov	r2, r8
	orr	r1, r1, r2
	mov	r0, #0x8
	bl	SetGpuReg
	mov	r0, #0xa
	bl	GetGpuReg
	add	r1, r4, #0
	and	r1, r1, r0
	orr	r1, r1, r5
	mov	r0, #0xa
	bl	SetGpuReg
	mov	r0, #0xc
	bl	GetGpuReg
	and	r4, r4, r0
	orr	r4, r4, r6
	mov	r0, #0xc
	add	r1, r4, #0
	bl	SetGpuReg
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L432:
	.align	2, 0
.L431:
	.word	sHpBarObjs
	.word	0xfffc
.Lfe15:
	.size	 PokeSum_UpdateBgPriorityForPageFlip,.Lfe15-PokeSum_UpdateBgPriorityForPageFlip
	.align	2, 0
	.type	 PokeSum_CopyNewBgTilemapBeforePageFlip_2,function
	.thumb_func
PokeSum_CopyNewBgTilemapBeforePageFlip_2:
	push	{lr}
	ldr	r0, .L451
	ldr	r2, [r0]
	ldr	r3, .L451+0x4
	add	r1, r2, r3
	ldrb	r1, [r1]
	add	r3, r0, #0
	cmp	r1, #0x1
	bne	.L434	@cond_branch
	ldr	r1, .L451+0x8
	add	r0, r2, r1
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	b	.L448
.L452:
	.align	2, 0
.L451:
	.word	sMonSummaryScreen
	.word	0x3224
	.word	0x3214
.L434:
	ldr	r1, .L453
	add	r0, r2, r1
	ldrb	r0, [r0]
	add	r0, r0, #0x1
.L448:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L438	@cond_branch
	cmp	r0, #0x1
	bgt	.L447	@cond_branch
	cmp	r0, #0
	beq	.L437	@cond_branch
	b	.L436
.L454:
	.align	2, 0
.L453:
	.word	0x3214
.L447:
	cmp	r0, #0x2
	beq	.L441	@cond_branch
	cmp	r0, #0x3
	beq	.L444	@cond_branch
	b	.L436
.L437:
	ldr	r0, [r3]
	mov	r2, #0xc9
	lsl	r2, r2, #0x6
	add	r0, r0, r2
	b	.L449
.L438:
	ldr	r1, [r3]
	ldr	r3, .L455
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L439	@cond_branch
	ldr	r2, .L455+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	ldr	r1, .L455+0x8
	b	.L450
.L456:
	.align	2, 0
.L455:
	.word	0x3224
	.word	0x323c
	.word	gSummaryScreen_PageMoves_Tilemap
.L439:
	ldr	r3, .L457
	add	r0, r1, r3
	ldrb	r0, [r0]
	ldr	r1, .L457+0x4
	b	.L450
.L458:
	.align	2, 0
.L457:
	.word	0x323c
	.word	gSummaryScreen_PageInfo_Tilemap
.L441:
	ldr	r1, [r3]
	ldr	r2, .L459
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L442	@cond_branch
	mov	r3, #0xc9
	lsl	r3, r3, #0x6
	add	r0, r1, r3
	ldrb	r0, [r0]
	ldr	r1, .L459+0x4
	b	.L450
.L460:
	.align	2, 0
.L459:
	.word	0x3224
	.word	gSummaryScreen_PageMovesInfo_Tilemap
.L442:
	mov	r2, #0xc9
	lsl	r2, r2, #0x6
	add	r0, r1, r2
.L449:
	ldrb	r0, [r0]
	ldr	r1, .L461
.L450:
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	b	.L436
.L462:
	.align	2, 0
.L461:
	.word	gSummaryScreen_PageSkills_Tilemap
.L444:
	ldr	r0, [r3]
	ldr	r3, .L463
	add	r0, r0, r3
	ldrb	r0, [r0]
	ldr	r1, .L463+0x4
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
.L436:
	pop	{r0}
	bx	r0
.L464:
	.align	2, 0
.L463:
	.word	0x323c
	.word	gSummaryScreen_PageMoves_Tilemap
.Lfe16:
	.size	 PokeSum_CopyNewBgTilemapBeforePageFlip_2,.Lfe16-PokeSum_CopyNewBgTilemapBeforePageFlip_2
	.align	2, 0
	.type	 PokeSum_CopyNewBgTilemapBeforePageFlip,function
	.thumb_func
PokeSum_CopyNewBgTilemapBeforePageFlip:
	push	{lr}
	ldr	r0, .L481
	ldr	r2, [r0]
	ldr	r3, .L481+0x4
	add	r1, r2, r3
	ldrb	r1, [r1]
	add	r3, r0, #0
	cmp	r1, #0x1
	bne	.L466	@cond_branch
	ldr	r1, .L481+0x8
	add	r0, r2, r1
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	b	.L478
.L482:
	.align	2, 0
.L481:
	.word	sMonSummaryScreen
	.word	0x3224
	.word	0x3214
.L466:
	ldr	r1, .L483
	add	r0, r2, r1
	ldrb	r0, [r0]
	add	r0, r0, #0x1
.L478:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L468	@cond_branch
	cmp	r0, #0x1
	bgt	.L477	@cond_branch
	cmp	r0, #0
	beq	.L469	@cond_branch
	b	.L468
.L484:
	.align	2, 0
.L483:
	.word	0x3214
.L477:
	cmp	r0, #0x2
	beq	.L471	@cond_branch
	cmp	r0, #0x3
	beq	.L474	@cond_branch
	b	.L468
.L469:
	ldr	r0, [r3]
	mov	r3, #0xc9
	lsl	r3, r3, #0x6
	add	r0, r0, r3
	ldrb	r0, [r0]
	ldr	r1, .L485
	b	.L479
.L486:
	.align	2, 0
.L485:
	.word	gSummaryScreen_PageSkills_Tilemap
.L471:
	ldr	r0, [r3]
	ldr	r1, .L487
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L472	@cond_branch
	ldr	r1, .L487+0x4
	b	.L480
.L488:
	.align	2, 0
.L487:
	.word	0x3224
	.word	sBgTilemap_MovesPage
.L472:
	ldr	r1, .L489
.L480:
	mov	r0, #0x3
.L479:
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	b	.L468
.L490:
	.align	2, 0
.L489:
	.word	sBgTilemap_MovesInfoPage
.L474:
	ldr	r1, .L491
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
.L468:
	pop	{r0}
	bx	r0
.L492:
	.align	2, 0
.L491:
	.word	sBgTilemap_MovesInfoPage
.Lfe17:
	.size	 PokeSum_CopyNewBgTilemapBeforePageFlip,.Lfe17-PokeSum_CopyNewBgTilemapBeforePageFlip
	.align	2, 0
	.type	 CB2_SetUpPSS,function
	.thumb_func
CB2_SetUpPSS:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L526
	ldr	r0, [r0]
	ldr	r1, .L526+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0xf
	bls	.LCB3854
	b	.L522	@long jump
.LCB3854:
	lsl	r0, r0, #0x2
	ldr	r1, .L526+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L527:
	.align	2, 0
.L526:
	.word	sMonSummaryScreen
	.word	0x3274
	.word	.L523
	.align	2, 0
	.align	2, 0
.L523:
	.word	.L495
	.word	.L496
	.word	.L497
	.word	.L498
	.word	.L500
	.word	.L502
	.word	.L503
	.word	.L505
	.word	.L506
	.word	.L507
	.word	.L508
	.word	.L511
	.word	.L516
	.word	.L517
	.word	.L518
	.word	.L519
.L495:
	bl	PokeSum_Setup_ResetCallbacks
	b	.L494
.L496:
	bl	PokeSum_Setup_InitGpu
	b	.L494
.L497:
	bl	PokeSum_Setup_SpritesReset
	b	.L494
.L498:
	bl	PokeSum_HandleLoadBgGfx
	b	.L524
.L500:
	bl	PokeSum_HandleCreateSprites
	b	.L524
.L502:
	bl	PokeSum_CreateWindows
	b	.L494
.L503:
	bl	PokeSum_Setup_BufferStrings
.L524:
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB3909
	b	.L493	@long jump
.LCB3909:
	b	.L494
.L505:
	bl	PokeSum_PrintRightPaneText
	b	.L494
.L506:
	bl	PokeSum_PrintBottomPaneText
	b	.L494
.L507:
	bl	PokeSum_PrintAbilityDataOrMoveTypes
	bl	PokeSum_PrintMonTypeIcons
	b	.L494
.L508:
	ldr	r0, .L528
	ldr	r0, [r0]
	ldr	r2, .L528+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L509	@cond_branch
	ldr	r1, .L528+0x8
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	b	.L510
.L529:
	.align	2, 0
.L528:
	.word	sMonSummaryScreen
	.word	0x3208
	.word	sBgTilemap_MovesPage
.L509:
	ldr	r1, .L530
	mov	r0, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
.L510:
	bl	PokeSum_DrawPageProgressTiles
	b	.L494
.L531:
	.align	2, 0
.L530:
	.word	sBgTilemap_MovesInfoPage
.L511:
	ldr	r4, .L532
	ldr	r1, [r4]
	mov	r2, #0xc8
	lsl	r2, r2, #0x6
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L512	@cond_branch
	add	r2, r2, #0x3c
	add	r0, r1, r2
	ldrb	r0, [r0]
	ldr	r1, .L532+0x4
	b	.L525
.L533:
	.align	2, 0
.L532:
	.word	sMonSummaryScreen
	.word	gSummaryScreen_PageEgg_Tilemap
.L512:
	ldr	r2, .L534
	add	r0, r1, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L514	@cond_branch
	add	r2, r2, #0x34
	add	r0, r1, r2
	ldrb	r0, [r0]
	ldr	r1, .L534+0x4
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	ldr	r0, [r4]
	mov	r1, #0xc9
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	ldrb	r0, [r0]
	ldr	r1, .L534+0x8
	b	.L525
.L535:
	.align	2, 0
.L534:
	.word	0x3208
	.word	gSummaryScreen_PageMoves_Tilemap
	.word	gSummaryScreen_PageMovesInfo_Tilemap
.L514:
	ldr	r2, .L536
	add	r0, r1, r2
	ldrb	r0, [r0]
	ldr	r1, .L536+0x4
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	ldr	r0, [r4]
	mov	r1, #0xc9
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	ldrb	r0, [r0]
	ldr	r1, .L536+0x8
.L525:
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	b	.L494
.L537:
	.align	2, 0
.L536:
	.word	0x323c
	.word	gSummaryScreen_PageInfo_Tilemap
	.word	gSummaryScreen_PageSkills_Tilemap
.L516:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	ldr	r0, .L538
	ldr	r0, [r0]
	ldr	r2, .L538+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	bl	PokeSum_PrintPageHeaderText
	bl	CommitStaticWindowTilemaps
	b	.L494
.L539:
	.align	2, 0
.L538:
	.word	sMonSummaryScreen
	.word	0x3214
.L517:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r4, .L540
	ldr	r0, [r4]
	mov	r1, #0xc0
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r2, .L540+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r1, .L540+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r2, .L540+0xc
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r1, .L540+0x10
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r2, .L540+0x14
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r1, .L540+0x18
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L494
.L541:
	.align	2, 0
.L540:
	.word	sMonSummaryScreen
	.word	0x3001
	.word	0x3002
	.word	0x3006
	.word	0x3003
	.word	0x3004
	.word	0x3005
.L518:
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	b	.L494
.L519:
	ldr	r0, .L542
	ldr	r0, [r0]
	ldr	r2, .L542+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L520	@cond_branch
	mov	r0, #0x0
	bl	PokeSum_ShowOrHideMonIconSprite
	mov	r0, #0x0
	bl	ShoworHideMoveSelectionCursor
	b	.L521
.L543:
	.align	2, 0
.L542:
	.word	sMonSummaryScreen
	.word	0x3208
.L520:
	mov	r0, #0x0
	bl	PokeSum_ShowOrHideMonPicSprite
	mov	r0, #0x0
	bl	PokeSum_ShowOrHideMonMarkingsSprite
	mov	r0, #0x0
	bl	ShowOrHideBallIconObj
	mov	r0, #0x0
	bl	ShowOrHideHpBarObjs
	mov	r0, #0x0
	bl	ShowOrHideExpBarObjs
.L521:
	mov	r0, #0x0
	bl	ShowOrHideStatusIcon
	mov	r0, #0x0
	bl	HideShowPokerusIcon
	mov	r0, #0x0
	bl	HideShowShinyStar
	b	.L494
.L522:
	bl	PokeSum_Setup_SetVBlankCallback
	bl	PokeSum_FinishSetup
	b	.L493
.L494:
	ldr	r0, .L544
	ldr	r1, [r0]
	ldr	r0, .L544+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L493:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L545:
	.align	2, 0
.L544:
	.word	sMonSummaryScreen
	.word	0x3274
.Lfe18:
	.size	 CB2_SetUpPSS,.Lfe18-CB2_SetUpPSS
	.align	2, 0
	.type	 PokeSum_HandleLoadBgGfx,function
	.thumb_func
PokeSum_HandleLoadBgGfx:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L563
	ldr	r0, [r0]
	ldr	r1, .L563+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x6
	bhi	.L558	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L563+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L564:
	.align	2, 0
.L563:
	.word	sMonSummaryScreen
	.word	0x3278
	.word	.L559
	.align	2, 0
	.align	2, 0
.L559:
	.word	.L548
	.word	.L551
	.word	.L552
	.word	.L553
	.word	.L554
	.word	.L547
	.word	.L547
.L548:
	ldr	r4, .L565
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0xa0
	bl	LoadPalette
	ldr	r5, .L565+0x4
	ldr	r0, [r5]
	ldr	r1, .L565+0x8
	add	r0, r0, r1
	bl	IsMonShiny
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L549	@cond_branch
	ldr	r0, [r5]
	mov	r1, #0xc8
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L549	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0xc0
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	add	r0, r4, #0
	add	r0, r0, #0xa0
	mov	r1, #0x10
	b	.L561
.L566:
	.align	2, 0
.L565:
	.word	gSummaryScreen_Bg_Pal
	.word	sMonSummaryScreen
	.word	0x3290
.L549:
	ldr	r4, .L567
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	add	r4, r4, #0x20
	add	r0, r4, #0
	mov	r1, #0x10
	b	.L561
.L568:
	.align	2, 0
.L567:
	.word	gSummaryScreen_Bg_Pal
.L551:
	mov	r0, #0x60
	mov	r1, #0x1
	bl	ListMenuLoadStdPalAt
	ldr	r0, .L569
	mov	r1, #0x70
.L561:
	mov	r2, #0x20
	bl	LoadPalette
	b	.L547
.L570:
	.align	2, 0
.L569:
	.word	sTextHeaderPalette
.L552:
	bl	ResetTempTileDataBuffers
	b	.L547
.L553:
	ldr	r1, .L571
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	b	.L547
.L572:
	.align	2, 0
.L571:
	.word	gSummaryScreen_Bg_Gfx
.L554:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L547	@cond_branch
	b	.L562
.L558:
	ldr	r0, .L573
	mov	r1, #0x80
	mov	r2, #0x20
	bl	LoadPalette
	mov	r0, #0x1
	b	.L560
.L574:
	.align	2, 0
.L573:
	.word	sTextMovesPalette
.L547:
	ldr	r0, .L575
	ldr	r1, [r0]
	ldr	r0, .L575+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L562:
	mov	r0, #0x0
.L560:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L576:
	.align	2, 0
.L575:
	.word	sMonSummaryScreen
	.word	0x3278
.Lfe19:
	.size	 PokeSum_HandleLoadBgGfx,.Lfe19-PokeSum_HandleLoadBgGfx
	.align	2, 0
	.type	 PokeSum_Setup_BufferStrings,function
	.thumb_func
PokeSum_Setup_BufferStrings:
	push	{r4, r5, r6, lr}
	ldr	r1, .L589
	ldr	r2, [r1]
	mov	r6, #0xca
	lsl	r6, r6, #0x6
	add	r0, r2, r6
	ldrb	r4, [r0]
	add	r5, r1, #0
	cmp	r4, #0x1
	beq	.L581	@cond_branch
	cmp	r4, #0x1
	bgt	.L587	@cond_branch
	cmp	r4, #0
	beq	.L579	@cond_branch
	b	.L585
.L590:
	.align	2, 0
.L589:
	.word	sMonSummaryScreen
.L587:
	cmp	r4, #0x2
	beq	.L583	@cond_branch
	b	.L585
.L579:
	bl	BufferMonInfo
	ldr	r1, [r5]
	mov	r2, #0xc8
	lsl	r2, r2, #0x6
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L578	@cond_branch
	add	r0, r1, r6
	strb	r4, [r0]
	mov	r0, #0x1
	b	.L588
.L581:
	mov	r1, #0xc8
	lsl	r1, r1, #0x6
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L578	@cond_branch
	bl	BufferMonSkills
	b	.L578
.L583:
	mov	r1, #0xc8
	lsl	r1, r1, #0x6
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L578	@cond_branch
	bl	BufferMonMoves
	b	.L578
.L585:
	ldr	r0, [r5]
	mov	r2, #0xca
	lsl	r2, r2, #0x6
	add	r0, r0, r2
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r0, #0x1
	b	.L588
.L578:
	ldr	r0, .L591
	ldr	r1, [r0]
	mov	r0, #0xca
	lsl	r0, r0, #0x6
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
.L588:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L592:
	.align	2, 0
.L591:
	.word	sMonSummaryScreen
.Lfe20:
	.size	 PokeSum_Setup_BufferStrings,.Lfe20-PokeSum_Setup_BufferStrings
	.align	2, 0
	.type	 BufferMonInfo,function
	.thumb_func
BufferMonInfo:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	ldr	r5, .L607
	ldr	r0, [r5]
	ldr	r1, .L607+0x4
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	SpeciesToPokedexNum
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, .L607+0x8
	cmp	r4, r0
	bne	.L594	@cond_branch
	ldr	r0, [r5]
	ldr	r2, .L607+0xc
	add	r0, r0, r2
	ldr	r1, .L607+0x10
	bl	StringCopy
	b	.L595
.L608:
	.align	2, 0
.L607:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0xffff
	.word	0x3064
	.word	gText_PokeSum_DexNoUnknown
.L594:
	ldr	r0, [r5]
	ldr	r3, .L609
	add	r0, r0, r3
	add	r1, r4, #0
	mov	r2, #0x2
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
.L595:
	ldr	r0, .L609+0x4
	ldr	r1, [r0]
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r6, .L609+0x8
	ldr	r2, [r6]
	mov	r1, #0xc8
	lsl	r1, r1, #0x6
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L596	@cond_branch
	ldr	r3, .L609+0xc
	add	r0, r2, r3
	ldr	r1, .L609+0x10
	add	r2, r2, r1
	mov	r1, #0x2
	bl	GetMonData
	b	.L593
.L610:
	.align	2, 0
.L609:
	.word	0x3064
	.word	sMonSkillsPrinterXpos
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x3028
.L596:
	ldr	r5, .L611
	add	r0, r2, r5
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldr	r0, [r6]
	ldr	r2, .L611+0x4
	add	r0, r0, r2
	add	r1, r4, #0
	bl	GetSpeciesName
	ldr	r1, [r6]
	ldr	r2, .L611+0x8
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r2, [r0, #0x6]
	ldr	r3, .L611+0xc
	add	r1, r1, r3
	strb	r2, [r1]
	ldr	r1, [r6]
	ldrb	r0, [r0, #0x7]
	ldr	r2, .L611+0x10
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, r5
	mov	r1, #0x2
	mov	r2, sp
	bl	GetMonData
	ldr	r0, [r6]
	ldr	r4, .L611+0x14
	add	r0, r0, r4
	mov	r1, sp
	mov	r2, #0xa
	bl	StringCopyN_Multibyte
	ldr	r0, [r6]
	add	r0, r0, r4
	bl	StringGet_Nickname
	ldr	r0, [r6]
	add	r0, r0, r5
	bl	GetMonGender
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, [r6]
	add	r0, r0, r5
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r7, #0xfe
	bne	.L598	@cond_branch
	ldr	r0, [r6]
	ldr	r3, .L611+0x18
	add	r0, r0, r3
	ldr	r1, .L611+0x1c
	bl	StringCopy
	b	.L599
.L612:
	.align	2, 0
.L611:
	.word	0x3290
	.word	0x3028
	.word	gSpeciesInfo
	.word	0x3220
	.word	0x3221
	.word	0x3034
	.word	0x3084
	.word	gText_FemaleSymbol
.L598:
	cmp	r7, #0
	bne	.L600	@cond_branch
	ldr	r0, [r6]
	ldr	r1, .L613
	add	r0, r0, r1
	ldr	r1, .L613+0x4
	bl	StringCopy
	b	.L599
.L614:
	.align	2, 0
.L613:
	.word	0x3084
	.word	gText_MaleSymbol
.L600:
	ldr	r0, [r6]
	ldr	r2, .L615
	add	r0, r0, r2
	ldr	r1, .L615+0x4
	bl	StringCopy
.L599:
	cmp	r4, #0x20
	beq	.L603	@cond_branch
	cmp	r4, #0x1d
	bne	.L602	@cond_branch
.L603:
	ldr	r5, .L615+0x8
	ldr	r0, [r5]
	ldr	r3, .L615+0xc
	add	r0, r0, r3
	mov	r1, #0xb
	mul	r1, r1, r4
	ldr	r2, .L615+0x10
	add	r1, r1, r2
	bl	StringCompare
	cmp	r0, #0
	bne	.L602	@cond_branch
	ldr	r0, [r5]
	ldr	r1, .L615
	add	r0, r0, r1
	ldr	r1, .L615+0x4
	bl	StringCopy
.L602:
	ldr	r6, .L615+0x8
	ldr	r0, [r6]
	ldr	r5, .L615+0x14
	add	r0, r0, r5
	mov	r1, #0x7
	mov	r2, sp
	bl	GetMonData
	ldr	r0, [r6]
	mov	r4, #0xc1
	lsl	r4, r4, #0x6
	add	r0, r0, r4
	mov	r1, sp
	mov	r2, #0x7
	bl	StringCopyN_Multibyte
	ldr	r0, [r6]
	add	r4, r0, r4
	add	r0, r0, r5
	mov	r1, #0x3
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r0, [r6]
	add	r0, r0, r5
	mov	r1, #0x1
	bl	GetMonData
	ldr	r1, .L615+0x18
	and	r1, r1, r0
	ldr	r0, [r6]
	ldr	r2, .L615+0x1c
	add	r0, r0, r2
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, r5
	mov	r1, #0x38
	bl	GetMonData
	add	r1, r0, #0
	mov	r0, sp
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	ldr	r4, .L615+0x20
	add	r0, r0, r4
	ldr	r1, .L615+0x24
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, r4
	mov	r1, sp
	mov	r2, #0x4
	bl	StringAppendN
	ldr	r0, [r6]
	add	r0, r0, r5
	mov	r1, #0xc
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	bne	.L605	@cond_branch
	ldr	r0, [r6]
	ldr	r3, .L615+0x28
	add	r0, r0, r3
	ldr	r1, .L615+0x2c
	bl	StringCopy
	b	.L593
.L616:
	.align	2, 0
.L615:
	.word	0x3084
	.word	gString_Dummy
	.word	sMonSummaryScreen
	.word	0x3034
	.word	gSpeciesNames
	.word	0x3290
	.word	0xffff
	.word	0x306c
	.word	0x3088
	.word	gText_Lv
	.word	0x3074
	.word	gText_PokeSum_Item_None
.L605:
	ldr	r1, [r6]
	ldr	r2, .L617
	add	r1, r1, r2
	bl	CopyItemName
.L593:
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L618:
	.align	2, 0
.L617:
	.word	0x3074
.Lfe21:
	.size	 BufferMonInfo,.Lfe21-BufferMonInfo
	.align	2, 0
	.type	 BufferMonSkills,function
	.thumb_func
BufferMonSkills:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	ldr	r6, .L625
	ldr	r0, [r6]
	ldr	r7, .L625+0x4
	add	r0, r0, r7
	mov	r1, #0x39
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, [r6]
	ldr	r4, .L625+0x8
	add	r0, r0, r4
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, r4
	ldr	r1, .L625+0xc
	bl	StringAppend
	ldr	r0, [r6]
	add	r0, r0, r7
	mov	r1, #0x3a
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, sp
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, r4
	mov	r1, sp
	bl	StringAppend
	ldr	r0, [r6]
	add	r0, r0, r4
	bl	StringLength
	ldr	r1, .L625+0x10
	mov	r8, r1
	ldr	r2, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r0, #0x3f
	sub	r0, r0, r1
	strh	r0, [r2, #0x2]
	ldr	r2, [r6]
	ldr	r1, .L625+0x14
	add	r0, r2, r1
	ldr	r1, [r0]
	ldr	r0, .L625+0x18
	cmp	r1, r0
	beq	.LCB5021
	b	.L620	@long jump
.LCB5021:
	ldr	r1, .L625+0x1c
	add	r0, r2, r1
	ldr	r0, [r0]
	cmp	r0, #0x1
	beq	.LCB5027
	b	.L620	@long jump
.LCB5027:
	add	r0, r2, r7
	mov	r1, #0x54
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r6]
	add	r4, r4, #0xc
	add	r0, r0, r4
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, r4
	bl	StringLength
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r5, #0x1b
	sub	r1, r5, r1
	strh	r1, [r2, #0x4]
	ldr	r0, [r6]
	add	r0, r0, r7
	mov	r1, #0x55
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r6]
	add	r4, r4, #0x5
	add	r0, r0, r4
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, r4
	bl	StringLength
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	sub	r1, r5, r1
	strh	r1, [r2, #0x6]
	ldr	r0, [r6]
	add	r0, r0, r7
	mov	r1, #0x57
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r6]
	add	r4, r4, #0x5
	add	r0, r0, r4
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, r4
	bl	StringLength
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	sub	r1, r5, r1
	strh	r1, [r2, #0x8]
	ldr	r0, [r6]
	add	r0, r0, r7
	mov	r1, #0x58
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r6]
	add	r4, r4, #0x5
	add	r0, r0, r4
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, r4
	bl	StringLength
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	sub	r1, r5, r1
	strh	r1, [r2, #0xa]
	ldr	r0, [r6]
	add	r0, r0, r7
	mov	r1, #0x56
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r6]
	add	r4, r4, #0x5
	add	r0, r0, r4
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, r4
	bl	StringLength
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	sub	r5, r5, r1
	strh	r5, [r2, #0xc]
	b	.L621
.L626:
	.align	2, 0
.L625:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x3090
	.word	gText_Slash
	.word	sMonSkillsPrinterXpos
	.word	0x32f8
	.word	CB2_ReturnToTradeMenuFromSummary
	.word	0x3024
.L620:
	ldr	r4, .L627
	ldr	r0, [r4]
	ldr	r2, .L627+0x4
	mov	r9, r2
	add	r0, r0, r9
	mov	r1, #0x3b
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r4]
	ldr	r5, .L627+0x8
	add	r0, r0, r5
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r4]
	add	r0, r0, r5
	bl	StringLength
	ldr	r1, .L627+0xc
	mov	r8, r1
	ldr	r2, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r6, #0x1b
	sub	r1, r6, r1
	strh	r1, [r2, #0x4]
	ldr	r0, [r4]
	add	r0, r0, r9
	mov	r1, #0x3c
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r4]
	add	r5, r5, #0x5
	add	r0, r0, r5
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r4]
	add	r0, r0, r5
	bl	StringLength
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	sub	r1, r6, r1
	strh	r1, [r2, #0x6]
	ldr	r0, [r4]
	add	r0, r0, r9
	mov	r1, #0x3e
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r4]
	add	r5, r5, #0x5
	add	r0, r0, r5
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r4]
	add	r0, r0, r5
	bl	StringLength
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	sub	r1, r6, r1
	strh	r1, [r2, #0x8]
	ldr	r0, [r4]
	add	r0, r0, r9
	mov	r1, #0x3f
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r4]
	add	r5, r5, #0x5
	add	r0, r0, r5
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r4]
	add	r0, r0, r5
	bl	StringLength
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	sub	r1, r6, r1
	strh	r1, [r2, #0xa]
	ldr	r0, [r4]
	add	r0, r0, r9
	mov	r1, #0x3d
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	ldr	r0, [r4]
	add	r5, r5, #0x5
	add	r0, r0, r5
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r4]
	add	r0, r0, r5
	bl	StringLength
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	sub	r6, r6, r1
	strh	r6, [r2, #0xc]
.L621:
	ldr	r6, .L627
	ldr	r0, [r6]
	ldr	r2, .L627+0x4
	mov	r8, r2
	add	r0, r0, r8
	mov	r1, #0x19
	bl	GetMonData
	add	r7, r0, #0
	ldr	r0, [r6]
	ldr	r4, .L627+0x10
	add	r0, r0, r4
	add	r1, r7, #0
	mov	r2, #0x0
	mov	r3, #0x7
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, r4
	bl	StringLength
	ldr	r1, .L627+0xc
	mov	sl, r1
	ldr	r2, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r0, #0x3f
	mov	r9, r0
	mov	r0, r9
	sub	r1, r0, r1
	strh	r1, [r2, #0xe]
	ldr	r0, [r6]
	add	r0, r0, r8
	mov	r1, #0x38
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r1, #0x0
	cmp	r5, #0x63
	bhi	.L622	@cond_branch
	ldr	r0, [r6]
	ldr	r1, .L627+0x4
	add	r0, r0, r1
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, .L627+0x14
	add	r2, r5, #0x1
	lsl	r2, r2, #0x2
	ldr	r3, .L627+0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r1, [r1, #0x13]
	mov	r0, #0xca
	lsl	r0, r0, #0x1
	mul	r0, r0, r1
	add	r2, r2, r0
	add	r2, r2, r4
	ldr	r0, [r2]
	sub	r1, r0, r7
.L622:
	ldr	r0, [r6]
	ldr	r4, .L627+0x1c
	add	r0, r0, r4
	mov	r2, #0x0
	mov	r3, #0x7
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r6]
	add	r0, r0, r4
	bl	StringLength
	mov	r1, sl
	ldr	r2, [r1]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r0, r9
	sub	r1, r0, r1
	strh	r1, [r2, #0x10]
	ldr	r0, [r6]
	add	r0, r0, r8
	mov	r1, #0xb
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, [r6]
	add	r0, r0, r8
	mov	r1, #0x2e
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	GetAbilityBySpecies
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, [r6]
	ldr	r1, .L627+0x20
	add	r0, r0, r1
	mov	r1, #0xd
	mul	r1, r1, r4
	ldr	r2, .L627+0x24
	add	r1, r1, r2
	bl	StringCopy
	ldr	r0, [r6]
	ldr	r2, .L627+0x28
	add	r0, r0, r2
	ldr	r1, .L627+0x2c
	lsl	r4, r4, #0x2
	add	r4, r4, r1
	ldr	r1, [r4]
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, r8
	mov	r1, #0x37
	bl	GetMonData
	bl	StatusToAilment
	ldr	r1, [r6]
	ldr	r4, .L627+0x30
	add	r1, r1, r4
	strb	r0, [r1]
	ldr	r1, [r6]
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L623	@cond_branch
	mov	r2, r8
	add	r0, r1, r2
	mov	r1, #0x0
	bl	CheckPartyPokerus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L623	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, r4
	mov	r1, #0x6
	strb	r1, [r0]
.L623:
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L628:
	.align	2, 0
.L627:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x309c
	.word	sMonSkillsPrinterXpos
	.word	0x31a4
	.word	gExperienceTables
	.word	gSpeciesInfo
	.word	0x31b0
	.word	0x31bc
	.word	gAbilityNames
	.word	0x31cc
	.word	gAbilityDescriptionPointers
	.word	0x326c
.Lfe22:
	.size	 BufferMonSkills,.Lfe22-BufferMonSkills
	.align	2, 0
	.type	 BufferMonMoves,function
	.thumb_func
BufferMonMoves:
	push	{r4, lr}
	mov	r4, #0x0
.L633:
	add	r0, r4, #0
	bl	BufferMonMoveI
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L633	@cond_branch
	ldr	r0, .L636
	ldr	r0, [r0]
	ldr	r1, .L636+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L635	@cond_branch
	mov	r0, #0x4
	bl	BufferMonMoveI
.L635:
	pop	{r4}
	pop	{r0}
	bx	r0
.L637:
	.align	2, 0
.L636:
	.word	sMonSummaryScreen
	.word	0x3208
.Lfe23:
	.size	 BufferMonMoves,.Lfe23-BufferMonMoves
	.align	2, 0
	.type	 BufferMonMoveI,function
	.thumb_func
BufferMonMoveI:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x3
	bhi	.L639	@cond_branch
	ldr	r4, .L647
	ldr	r0, [r4]
	ldr	r1, .L647+0x4
	add	r0, r0, r1
	add	r1, r7, #0
	bl	GetMonMoveBySlotId
	ldr	r1, [r4]
	lsl	r2, r7, #0x1
	ldr	r3, .L647+0x8
	add	r1, r1, r3
	add	r1, r1, r2
	strh	r0, [r1]
.L639:
	ldr	r6, .L647
	ldr	r2, [r6]
	lsl	r0, r7, #0x1
	ldr	r4, .L647+0x8
	mov	r8, r4
	add	r1, r2, r4
	add	r1, r1, r0
	ldrh	r1, [r1]
	mov	r9, r0
	cmp	r1, #0
	bne	.L640	@cond_branch
	mov	r0, #0xd
	mul	r0, r0, r7
	ldr	r1, .L647+0xc
	add	r0, r0, r1
	add	r0, r2, r0
	ldr	r1, .L647+0x10
	bl	StringCopy
	mov	r0, #0xb
	mov	r1, r7
	mul	r1, r1, r0
	ldr	r2, .L647+0x14
	add	r1, r1, r2
	ldr	r0, [r6]
	add	r0, r0, r1
	ldr	r1, .L647+0x18
	bl	StringCopy
	lsl	r4, r7, #0x2
	add	r4, r4, r7
	ldr	r3, .L647+0x1c
	add	r1, r4, r3
	ldr	r0, [r6]
	add	r0, r0, r1
	ldr	r5, .L647+0x20
	add	r1, r5, #0
	bl	StringCopy
	ldr	r0, .L647+0x24
	add	r4, r4, r0
	ldr	r0, [r6]
	add	r0, r0, r4
	add	r1, r5, #0
	bl	StringCopy
	ldr	r0, .L647+0x28
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x12
	add	r0, r0, r9
	mov	r2, #0xff
	strh	r2, [r0]
	add	r1, r1, #0x1c
	add	r1, r1, r9
	strh	r2, [r1]
	b	.L638
.L648:
	.align	2, 0
.L647:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x3258
	.word	0x3128
	.word	gText_PokeSum_OneHyphen
	.word	0x30b8
	.word	gText_PokeSum_TwoHyphens
	.word	0x316c
	.word	gText_ThreeHyphens
	.word	0x3188
	.word	sMonSkillsPrinterXpos
.L640:
	ldr	r3, .L649
	add	r1, r2, r3
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r6]
	ldr	r1, .L649+0x4
	add	r4, r0, r1
	add	r4, r4, r9
	ldr	r5, .L649+0x8
	ldr	r2, .L649+0xc
	add	r3, r0, r2
	add	r3, r3, r9
	ldrh	r2, [r3]
	lsl	r1, r2, #0x1
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldrb	r1, [r1, #0x2]
	strh	r1, [r4]
	mov	r2, #0xd
	mov	r1, r7
	mul	r1, r1, r2
	ldr	r4, .L649+0x10
	add	r1, r1, r4
	add	r0, r0, r1
	ldrh	r1, [r3]
	mul	r1, r1, r2
	ldr	r2, .L649+0x14
	add	r1, r1, r2
	bl	StringCopy
	cmp	r7, #0x3
	bls	.L641	@cond_branch
	ldr	r1, [r6]
	ldr	r2, .L649+0x18
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L641	@cond_branch
	mov	r0, #0xb
	mov	r4, r7
	mul	r4, r4, r0
	ldr	r3, .L649+0x1c
	add	r0, r4, r3
	add	r0, r1, r0
	add	r1, r1, r8
	add	r1, r1, r9
	ldrh	r2, [r1]
	lsl	r1, r2, #0x1
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldrb	r1, [r1, #0x4]
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L649+0x20
	add	r4, r4, r0
	ldr	r0, [r6]
	add	r4, r0, r4
	add	r0, r0, r8
	add	r0, r0, r9
	ldrh	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r1, [r0, #0x4]
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	b	.L642
.L650:
	.align	2, 0
.L649:
	.word	0x3264
	.word	0x324e
	.word	gBattleMoves
	.word	0x3258
	.word	0x3128
	.word	gMoveNames
	.word	0x3208
	.word	0x30b8
	.word	0x30f0
.L641:
	ldr	r1, .L651
	mov	r8, r1
	mov	r0, #0xb
	mov	r5, r7
	mul	r5, r5, r0
	ldr	r2, .L651+0x4
	add	r4, r5, r2
	ldr	r0, [r1]
	add	r4, r0, r4
	ldr	r6, .L651+0x8
	add	r0, r0, r6
	add	r1, r7, #0
	bl	GetMonPpByMoveSlot
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r3, .L651+0xc
	add	r5, r5, r3
	mov	r4, r8
	ldr	r0, [r4]
	add	r5, r0, r5
	ldr	r2, .L651+0x10
	add	r1, r0, r2
	add	r1, r1, r9
	ldrh	r4, [r1]
	add	r0, r0, r6
	mov	r1, #0x15
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	add	r2, r7, #0
	bl	CalculatePPWithBonus
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
.L642:
	ldr	r6, .L651
	mov	r0, #0xb
	mov	r5, r7
	mul	r5, r5, r0
	ldr	r3, .L651+0x4
	add	r1, r5, r3
	ldr	r0, [r6]
	add	r0, r0, r1
	bl	StringLength
	ldr	r4, .L651+0x14
	mov	r8, r4
	ldr	r2, [r4]
	add	r2, r2, #0x12
	add	r2, r2, r9
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r4, #0xc
	sub	r1, r4, r1
	strh	r1, [r2]
	ldr	r0, .L651+0xc
	add	r5, r5, r0
	ldr	r0, [r6]
	add	r0, r0, r5
	bl	StringLength
	mov	r1, r8
	ldr	r2, [r1]
	add	r2, r2, #0x1c
	add	r2, r2, r9
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	sub	r4, r4, r1
	strh	r4, [r2]
	ldr	r2, .L651+0x18
	ldr	r6, [r6]
	ldr	r3, .L651+0x10
	add	r0, r6, r3
	add	r0, r0, r9
	ldrh	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0x1
	bhi	.L643	@cond_branch
	lsl	r4, r7, #0x2
	add	r0, r4, r7
	ldr	r1, .L651+0x1c
	add	r0, r0, r1
	add	r0, r6, r0
	ldr	r1, .L651+0x20
	bl	StringCopy
	b	.L644
.L652:
	.align	2, 0
.L651:
	.word	sMonSummaryScreen
	.word	0x30b8
	.word	0x3290
	.word	0x30f0
	.word	0x3258
	.word	sMonSkillsPrinterXpos
	.word	gBattleMoves
	.word	0x316c
	.word	gText_ThreeHyphens
.L643:
	lsl	r4, r7, #0x2
	add	r0, r4, r7
	ldr	r2, .L653
	add	r0, r0, r2
	add	r0, r6, r0
	ldrb	r1, [r1, #0x1]
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
.L644:
	ldr	r2, .L653+0x4
	ldr	r0, .L653+0x8
	ldr	r3, [r0]
	ldr	r1, .L653+0xc
	add	r0, r3, r1
	add	r0, r0, r9
	ldrh	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	ldrb	r0, [r1, #0x3]
	cmp	r0, #0
	bne	.L645	@cond_branch
	add	r0, r4, r7
	ldr	r2, .L653+0x10
	add	r0, r0, r2
	add	r0, r3, r0
	ldr	r1, .L653+0x14
	bl	StringCopy
	b	.L638
.L654:
	.align	2, 0
.L653:
	.word	0x316c
	.word	gBattleMoves
	.word	sMonSummaryScreen
	.word	0x3258
	.word	0x3188
	.word	gText_ThreeHyphens
.L645:
	add	r0, r4, r7
	ldr	r4, .L655
	add	r0, r0, r4
	add	r0, r3, r0
	ldrb	r1, [r1, #0x3]
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
.L638:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L656:
	.align	2, 0
.L655:
	.word	0x3188
.Lfe24:
	.size	 BufferMonMoveI,.Lfe24-BufferMonMoveI
	.align	2, 0
	.type	 PokeSum_HandleCreateSprites,function
	.thumb_func
PokeSum_HandleCreateSprites:
	push	{lr}
	ldr	r0, .L671
	ldr	r0, [r0]
	ldr	r1, .L671+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x8
	bhi	.L668	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L671+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L672:
	.align	2, 0
.L671:
	.word	sMonSummaryScreen
	.word	0x327c
	.word	.L669
	.align	2, 0
	.align	2, 0
.L669:
	.word	.L659
	.word	.L660
	.word	.L661
	.word	.L662
	.word	.L663
	.word	.L664
	.word	.L665
	.word	.L666
	.word	.L667
.L659:
	mov	r0, #0xa0
	mov	r1, #0xa0
	bl	CreateShinyStarObj
	b	.L658
.L660:
	mov	r0, #0x96
	mov	r1, #0x96
	bl	CreatePokerusIconObj
	b	.L658
.L661:
	bl	PokeSum_CreateMonMarkingsSprite
	b	.L658
.L662:
	mov	r0, #0x64
	mov	r1, #0x64
	bl	CreateMoveSelectionCursorObjs
	b	.L658
.L663:
	mov	r0, #0x6e
	mov	r1, #0x6e
	bl	CreateMonStatusIconObj
	b	.L658
.L664:
	mov	r0, #0x78
	mov	r1, #0x78
	bl	CreateHpBarObjs
	b	.L658
.L665:
	mov	r0, #0x82
	mov	r1, #0x82
	bl	CreateExpBarObjs
	b	.L658
.L666:
	bl	CreateBallIconObj
	b	.L658
.L667:
	bl	PokeSum_CreateMonIconSprite
	b	.L658
.L668:
	bl	PokeSum_CreateMonPicSprite
	mov	r0, #0x1
	b	.L670
.L658:
	ldr	r0, .L673
	ldr	r1, [r0]
	ldr	r0, .L673+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
.L670:
	pop	{r1}
	bx	r1
.L674:
	.align	2, 0
.L673:
	.word	sMonSummaryScreen
	.word	0x327c
.Lfe25:
	.size	 PokeSum_HandleCreateSprites,.Lfe25-PokeSum_HandleCreateSprites
	.align	2, 0
	.type	 PokeSum_Setup_SpritesReset,function
	.thumb_func
PokeSum_Setup_SpritesReset:
	push	{lr}
	bl	ResetSpriteData
	bl	ResetPaletteFade
	bl	FreeAllSpritePalettes
	bl	ScanlineEffect_Stop
	pop	{r0}
	bx	r0
.Lfe26:
	.size	 PokeSum_Setup_SpritesReset,.Lfe26-PokeSum_Setup_SpritesReset
	.align	2, 0
	.type	 PokeSum_Setup_InitGpu,function
	.thumb_func
PokeSum_Setup_InitGpu:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	mov	r3, #0xc0
	lsl	r3, r3, #0x13
	mov	r4, #0xc0
	lsl	r4, r4, #0x9
	add	r0, sp, #0x4
	mov	r8, r0
	mov	r2, sp
	mov	r6, #0x0
	ldr	r1, .L682
	mov	r5, #0x80
	lsl	r5, r5, #0x5
	ldr	r7, .L682+0x4
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	mov	ip, r0
.L679:
	strh	r6, [r2]
	mov	r0, sp
	str	r0, [r1]
	str	r3, [r1, #0x4]
	str	r7, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	add	r3, r3, r5
	sub	r4, r4, r5
	cmp	r4, r5
	bhi	.L679	@cond_branch
	strh	r6, [r2]
	mov	r2, sp
	str	r2, [r1]
	str	r3, [r1, #0x4]
	lsr	r0, r4, #0x1
	mov	r2, ip
	orr	r0, r0, r2
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
	mov	r0, #0xe0
	lsl	r0, r0, #0x13
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	mov	r4, #0x0
	str	r4, [sp, #0x4]
	ldr	r2, .L682
	mov	r1, r8
	str	r1, [r2]
	str	r0, [r2, #0x4]
	lsr	r0, r3, #0x2
	mov	r1, #0x85
	lsl	r1, r1, #0x18
	orr	r0, r0, r1
	str	r0, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	mov	r0, sp
	strh	r4, [r0]
	str	r0, [r2]
	str	r1, [r2, #0x4]
	lsr	r3, r3, #0x1
	mov	r0, #0x81
	lsl	r0, r0, #0x18
	orr	r3, r3, r0
	str	r3, [r2, #0x8]
	ldr	r0, [r2, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L682+0x8
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	bl	DeactivateAllTextPrinters
	ldr	r1, .L682+0xc
	mov	r0, #0x0
	bl	SetGpuReg
	ldr	r4, .L682+0x10
	ldr	r0, [r4]
	ldr	r2, .L682+0x14
	add	r0, r0, r2
	ldrb	r0, [r0]
	bl	PokeSum_UpdateWin1ActiveFlag
	mov	r1, #0xf8
	lsl	r1, r1, #0x5
	mov	r0, #0x48
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0xf
	bl	SetGpuReg
	ldr	r1, .L682+0x18
	mov	r0, #0x46
	bl	SetGpuReg
	mov	r1, #0xbc
	lsl	r1, r1, #0x2
	mov	r0, #0x42
	bl	SetGpuReg
	ldr	r1, [r4]
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	mov	r0, #0x80
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	mov	r2, #0x80
	lsl	r2, r2, #0x6
	add	r1, r1, r2
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L683:
	.align	2, 0
.L682:
	.word	0x40000d4
	.word	-0x7efff800
	.word	sBgTempaltes
	.word	0x5040
	.word	sMonSummaryScreen
	.word	0x3214
	.word	0x2087
.Lfe27:
	.size	 PokeSum_Setup_InitGpu,.Lfe27-PokeSum_Setup_InitGpu
	.align	2, 0
	.type	 PokeSum_FinishSetup,function
	.thumb_func
PokeSum_FinishSetup:
	push	{r4, lr}
	ldr	r4, .L688
	ldr	r0, [r4]
	ldr	r1, .L688+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L685	@cond_branch
	ldr	r0, .L688+0x8
	b	.L687
.L689:
	.align	2, 0
.L688:
	.word	sMonSummaryScreen
	.word	0x3208
	.word	Task_InputHandler_SelectOrForgetMove
.L685:
	ldr	r0, .L690
.L687:
	mov	r1, #0x0
	bl	CreateTask
	ldr	r1, [r4]
	ldr	r2, .L690+0x4
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r0, .L690+0x8
	bl	SetMainCallback2
	pop	{r4}
	pop	{r0}
	bx	r0
.L691:
	.align	2, 0
.L690:
	.word	Task_InputHandler_Info
	.word	0x3018
	.word	CB2_RunPokemonSummaryScreen
.Lfe28:
	.size	 PokeSum_FinishSetup,.Lfe28-PokeSum_FinishSetup
	.align	2, 0
	.type	 PokeSum_PrintPageName,function
	.thumb_func
PokeSum_PrintPageName:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r6, r0, #0
	ldr	r5, .L693
	ldr	r0, [r5]
	mov	r4, #0xc0
	lsl	r4, r4, #0x6
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	ldr	r1, .L693+0x4
	str	r1, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	str	r6, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x4
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L694:
	.align	2, 0
.L693:
	.word	sMonSummaryScreen
	.word	sLevelNickTextColors+0x3
.Lfe29:
	.size	 PokeSum_PrintPageName,.Lfe29-PokeSum_PrintPageName
	.align	2, 0
	.type	 PokeSum_PrintControlsString,function
	.thumb_func
PokeSum_PrintControlsString:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r6, r0, #0
	ldr	r5, .L696
	ldr	r0, [r5]
	ldr	r4, .L696+0x4
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x0
	add	r1, r6, #0
	mov	r2, #0x0
	bl	GetStringWidth
	ldr	r1, [r5]
	add	r1, r1, r4
	ldrb	r1, [r1]
	mov	r2, #0x54
	sub	r2, r2, r0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L696+0x8
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r6, [sp, #0x8]
	add	r0, r1, #0
	mov	r1, #0x0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized3
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L697:
	.align	2, 0
.L696:
	.word	sMonSummaryScreen
	.word	0x3001
	.word	sLevelNickTextColors+0x3
.Lfe30:
	.size	 PokeSum_PrintControlsString,.Lfe30-PokeSum_PrintControlsString
	.align	2, 0
	.type	 PrintMonLevelNickOnWindow2,function
	.thumb_func
PrintMonLevelNickOnWindow2:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	ldr	r6, .L703
	ldr	r0, [r6]
	ldr	r7, .L703+0x4
	add	r0, r0, r7
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r2, [r6]
	mov	r1, #0xc8
	lsl	r1, r1, #0x6
	add	r0, r2, r1
	ldrb	r5, [r0]
	cmp	r5, #0
	bne	.L699	@cond_branch
	ldr	r3, .L703+0x8
	add	r0, r2, r3
	ldrb	r0, [r0]
	cmp	r0, #0x3
	beq	.L700	@cond_branch
	add	r0, r2, r7
	ldrb	r0, [r0]
	ldr	r1, .L703+0xc
	str	r1, [sp]
	mov	r1, #0x1
	neg	r1, r1
	str	r1, [sp, #0x4]
	ldr	r3, .L703+0x10
	add	r1, r2, r3
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x4
	mov	r3, #0x2
	bl	AddTextPrinterParameterized3
.L700:
	ldr	r2, [r6]
	add	r0, r2, r7
	ldrb	r0, [r0]
	ldr	r4, .L703+0xc
	str	r4, [sp]
	mov	r1, #0x1
	neg	r1, r1
	str	r1, [sp, #0x4]
	ldr	r1, .L703+0x14
	add	r2, r2, r1
	str	r2, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x28
	mov	r3, #0x2
	bl	AddTextPrinterParameterized3
	ldr	r0, [r6]
	ldr	r3, .L703+0x18
	add	r0, r0, r3
	bl	GetMonGender
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xfe
	bne	.L701	@cond_branch
	ldr	r2, [r6]
	add	r0, r2, r7
	ldrb	r0, [r0]
	add	r1, r4, #0x6
	str	r1, [sp]
	str	r5, [sp, #0x4]
	ldr	r1, .L703+0x1c
	add	r2, r2, r1
	str	r2, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x69
	mov	r3, #0x2
	bl	AddTextPrinterParameterized3
	b	.L699
.L704:
	.align	2, 0
.L703:
	.word	sMonSummaryScreen
	.word	0x3002
	.word	0x3214
	.word	sLevelNickTextColors+0x3
	.word	0x3088
	.word	0x3034
	.word	0x3290
	.word	0x3084
.L701:
	ldr	r2, [r6]
	add	r0, r2, r7
	ldrb	r0, [r0]
	add	r1, r4, #0x3
	str	r1, [sp]
	str	r5, [sp, #0x4]
	ldr	r3, .L705
	add	r2, r2, r3
	str	r2, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x69
	mov	r3, #0x2
	bl	AddTextPrinterParameterized3
.L699:
	ldr	r0, .L705+0x4
	ldr	r0, [r0]
	ldr	r1, .L705+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L706:
	.align	2, 0
.L705:
	.word	0x3084
	.word	sMonSummaryScreen
	.word	0x3002
.Lfe31:
	.size	 PrintMonLevelNickOnWindow2,.Lfe31-PrintMonLevelNickOnWindow2
	.align	2, 0
	.type	 PokeSum_PrintRightPaneText,function
	.thumb_func
PokeSum_PrintRightPaneText:
	push	{r4, lr}
	ldr	r4, .L718
	ldr	r0, [r4]
	ldr	r1, .L718+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r0, [r4]
	ldr	r1, .L718+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L710	@cond_branch
	cmp	r0, #0x1
	bgt	.L715	@cond_branch
	cmp	r0, #0
	beq	.L709	@cond_branch
	b	.L708
.L719:
	.align	2, 0
.L718:
	.word	sMonSummaryScreen
	.word	0x3003
	.word	0x3214
.L715:
	cmp	r0, #0x3
	bgt	.L708	@cond_branch
	bl	PrintMovesPage
	b	.L708
.L709:
	bl	PrintInfoPage
	b	.L708
.L710:
	bl	PrintSkillsPage
.L708:
	ldr	r0, .L720
	ldr	r0, [r0]
	ldr	r1, .L720+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	pop	{r4}
	pop	{r0}
	bx	r0
.L721:
	.align	2, 0
.L720:
	.word	sMonSummaryScreen
	.word	0x3003
.Lfe32:
	.size	 PokeSum_PrintRightPaneText,.Lfe32-PokeSum_PrintRightPaneText
	.align	2, 0
	.type	 PrintInfoPage,function
	.thumb_func
PrintInfoPage:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	ldr	r6, .L732
	ldr	r1, [r6]
	ldr	r2, .L732+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	ldr	r5, .L732+0x8
	str	r5, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r7, .L732+0xc
	add	r1, r1, r7
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x2f
	mov	r3, #0x13
	bl	AddTextPrinterParameterized3
	ldr	r3, [r6]
	mov	r1, #0xc8
	lsl	r1, r1, #0x6
	add	r0, r3, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L723	@cond_branch
	ldr	r2, .L732+0x4
	add	r0, r3, r2
	ldrb	r0, [r0]
	ldr	r1, .L732+0x10
	ldr	r1, [r1]
	ldrb	r2, [r1]
	add	r2, r2, #0x2f
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r7, r7, #0x3c
	add	r1, r3, r7
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x5
	bl	AddTextPrinterParameterized3
	ldr	r1, [r6]
	ldr	r2, .L732+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	str	r5, [sp]
	str	r4, [sp, #0x4]
	sub	r7, r7, #0x24
	add	r1, r1, r7
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x2f
	mov	r3, #0x31
	bl	AddTextPrinterParameterized3
	ldr	r1, [r6]
	ldr	r2, .L732+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r7, r7, #0x2c
	add	r1, r1, r7
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x2f
	mov	r3, #0x40
	bl	AddTextPrinterParameterized3
	ldr	r1, [r6]
	ldr	r2, .L732+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r7, r7, #0x8
	add	r1, r1, r7
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x2f
	mov	r3, #0x4f
	bl	AddTextPrinterParameterized3
	b	.L724
.L733:
	.align	2, 0
.L732:
	.word	sMonSummaryScreen
	.word	0x3003
	.word	sLevelNickTextColors
	.word	0x3028
	.word	sMonSkillsPrinterXpos
.L723:
	ldr	r1, .L734
	add	r0, r3, r1
	mov	r1, #0x20
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r3, #0x3
	cmp	r0, #0x5
	bls	.L726	@cond_branch
	mov	r3, #0x2
	cmp	r0, #0xa
	bls	.L726	@cond_branch
	mov	r3, #0x0
	cmp	r0, #0x28
	bhi	.L726	@cond_branch
	mov	r3, #0x1
.L726:
	ldr	r0, .L734+0x4
	ldr	r1, [r0]
	ldr	r2, .L734+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L731	@cond_branch
	mov	r3, #0x0
.L731:
	ldr	r7, .L734+0xc
	add	r0, r1, r7
	ldrb	r0, [r0]
	ldr	r1, .L734+0x10
	str	r1, [sp]
	mov	r1, #0x1
	neg	r1, r1
	str	r1, [sp, #0x4]
	ldr	r2, .L734+0x14
	lsl	r1, r3, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x7
	mov	r3, #0x2d
	bl	AddTextPrinterParameterized3
.L724:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L735:
	.align	2, 0
.L734:
	.word	0x3290
	.word	sMonSummaryScreen
	.word	0x3204
	.word	0x3003
	.word	sLevelNickTextColors
	.word	sEggHatchTimeTexts
.Lfe33:
	.size	 PrintInfoPage,.Lfe33-PrintInfoPage
	.align	2, 0
	.type	 PrintSkillsPage,function
	.thumb_func
PrintSkillsPage:
	push	{r4, r5, r6, lr}
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6}
	add	sp, sp, #-0xc
	ldr	r0, .L737
	mov	r9, r0
	ldr	r3, [r0]
	ldr	r4, .L737+0x4
	add	r0, r3, r4
	ldrb	r0, [r0]
	ldr	r1, .L737+0x8
	mov	r8, r1
	ldr	r1, [r1]
	ldrb	r2, [r1, #0x2]
	add	r2, r2, #0xe
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r6, .L737+0xc
	str	r6, [sp]
	mov	r5, #0x1
	neg	r5, r5
	str	r5, [sp, #0x4]
	ldr	r1, .L737+0x10
	add	r3, r3, r1
	str	r3, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x4
	bl	AddTextPrinterParameterized3
	mov	r2, r9
	ldr	r3, [r2]
	add	r0, r3, r4
	ldrb	r0, [r0]
	mov	r2, r8
	ldr	r1, [r2]
	ldrb	r2, [r1, #0x4]
	add	r2, r2, #0x32
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	str	r5, [sp, #0x4]
	ldr	r1, .L737+0x14
	add	r3, r3, r1
	str	r3, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x16
	bl	AddTextPrinterParameterized3
	mov	r2, r9
	ldr	r3, [r2]
	add	r0, r3, r4
	ldrb	r0, [r0]
	mov	r2, r8
	ldr	r1, [r2]
	ldrb	r2, [r1, #0x6]
	add	r2, r2, #0x32
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	str	r5, [sp, #0x4]
	ldr	r1, .L737+0x18
	add	r3, r3, r1
	str	r3, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x23
	bl	AddTextPrinterParameterized3
	mov	r2, r9
	ldr	r3, [r2]
	add	r0, r3, r4
	ldrb	r0, [r0]
	mov	r2, r8
	ldr	r1, [r2]
	ldrb	r2, [r1, #0x8]
	add	r2, r2, #0x32
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	str	r5, [sp, #0x4]
	ldr	r1, .L737+0x1c
	add	r3, r3, r1
	str	r3, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x30
	bl	AddTextPrinterParameterized3
	mov	r2, r9
	ldr	r3, [r2]
	add	r0, r3, r4
	ldrb	r0, [r0]
	mov	r2, r8
	ldr	r1, [r2]
	ldrb	r2, [r1, #0xa]
	add	r2, r2, #0x32
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	str	r5, [sp, #0x4]
	ldr	r1, .L737+0x20
	add	r3, r3, r1
	str	r3, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x3d
	bl	AddTextPrinterParameterized3
	mov	r2, r9
	ldr	r3, [r2]
	add	r0, r3, r4
	ldrb	r0, [r0]
	mov	r2, r8
	ldr	r1, [r2]
	ldrb	r2, [r1, #0xc]
	add	r2, r2, #0x32
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	str	r5, [sp, #0x4]
	ldr	r1, .L737+0x24
	add	r3, r3, r1
	str	r3, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x4a
	bl	AddTextPrinterParameterized3
	mov	r2, r9
	ldr	r3, [r2]
	add	r0, r3, r4
	ldrb	r0, [r0]
	mov	r2, r8
	ldr	r1, [r2]
	ldrb	r2, [r1, #0xe]
	add	r2, r2, #0xf
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	str	r5, [sp, #0x4]
	ldr	r1, .L737+0x28
	add	r3, r3, r1
	str	r3, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x57
	bl	AddTextPrinterParameterized3
	mov	r2, r9
	ldr	r3, [r2]
	add	r4, r3, r4
	ldrb	r0, [r4]
	mov	r2, r8
	ldr	r1, [r2]
	ldrb	r2, [r1, #0x10]
	add	r2, r2, #0xf
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	str	r5, [sp, #0x4]
	ldr	r1, .L737+0x2c
	add	r3, r3, r1
	str	r3, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x64
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L738:
	.align	2, 0
.L737:
	.word	sMonSummaryScreen
	.word	0x3003
	.word	sMonSkillsPrinterXpos
	.word	sLevelNickTextColors
	.word	0x3090
	.word	0x309c
	.word	0x30a1
	.word	0x30a6
	.word	0x30ab
	.word	0x30b0
	.word	0x31a4
	.word	0x31b0
.Lfe34:
	.size	 PrintSkillsPage,.Lfe34-PrintSkillsPage
	.align	2, 0
	.type	 PrintMovesPage,function
	.thumb_func
PrintMovesPage:
	push	{r4, lr}
	add	sp, sp, #-0xc
	mov	r4, #0x0
.L743:
	add	r0, r4, #0
	bl	PokeSum_PrintMoveName
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L743	@cond_branch
	ldr	r0, .L748
	ldr	r1, [r0]
	ldr	r2, .L748+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L745	@cond_branch
	sub	r2, r2, #0xc
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L746	@cond_branch
	mov	r0, #0x4
	bl	PokeSum_PrintMoveName
	b	.L745
.L749:
	.align	2, 0
.L748:
	.word	sMonSummaryScreen
	.word	0x3214
.L746:
	ldr	r2, .L750
	add	r0, r1, r2
	ldrb	r0, [r0]
	ldr	r1, .L750+0x4
	str	r1, [sp]
	mov	r1, #0x1
	neg	r1, r1
	str	r1, [sp, #0x4]
	ldr	r1, .L750+0x8
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x3
	mov	r3, #0x75
	bl	AddTextPrinterParameterized3
.L745:
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L751:
	.align	2, 0
.L750:
	.word	0x3003
	.word	sPrintMoveTextColors
	.word	gFameCheckerText_Cancel
.Lfe35:
	.size	 PrintMovesPage,.Lfe35-PrintMovesPage
	.align	2, 0
	.type	 PokeSum_PrintMoveName,function
	.thumb_func
PokeSum_PrintMoveName:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r0, #0x0
	mov	r9, r0
	ldr	r1, .L773
	mov	sl, r1
	ldr	r0, [r1]
	ldr	r5, .L773+0x4
	add	r0, r0, r5
	add	r1, r7, #0
	bl	GetMonPpByMoveSlot
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r2, sl
	ldr	r0, [r2]
	lsl	r3, r7, #0x1
	str	r3, [sp, #0xc]
	ldr	r2, .L773+0x8
	add	r1, r0, r2
	add	r1, r1, r3
	ldrh	r4, [r1]
	add	r0, r0, r5
	mov	r1, #0x15
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	add	r2, r7, #0
	bl	CalculatePPWithBonus
	lsl	r0, r0, #0x18
	mov	r8, r0
	lsr	r5, r0, #0x18
	cmp	r7, #0x4
	bne	.L753	@cond_branch
	add	r6, r5, #0
.L753:
	mov	r3, sl
	ldr	r2, [r3]
	ldr	r1, .L773+0xc
	add	r0, r2, r1
	ldrb	r0, [r0]
	lsl	r4, r7, #0x3
	sub	r3, r4, r7
	lsl	r3, r3, #0x1a
	mov	r1, #0xa0
	lsl	r1, r1, #0x13
	add	r3, r3, r1
	lsr	r3, r3, #0x18
	mov	ip, r3
	ldr	r1, .L773+0x10
	str	r1, [sp]
	mov	r1, #0x1
	neg	r1, r1
	str	r1, [sp, #0x4]
	mov	r1, #0xd
	mul	r1, r1, r7
	ldr	r3, .L773+0x14
	add	r1, r1, r3
	add	r2, r2, r1
	str	r2, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x3
	mov	r3, ip
	bl	AddTextPrinterParameterized3
	mov	r1, sl
	ldr	r0, [r1]
	ldr	r2, .L773+0x8
	add	r0, r0, r2
	ldr	r3, [sp, #0xc]
	add	r0, r0, r3
	ldrh	r0, [r0]
	add	r1, r4, #0
	cmp	r0, #0
	beq	.L756	@cond_branch
	cmp	r6, r5
	beq	.L756	@cond_branch
	cmp	r6, #0
	bne	.L757	@cond_branch
	mov	r5, #0x3
	mov	r9, r5
	b	.L756
.L774:
	.align	2, 0
.L773:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x3258
	.word	0x3003
	.word	sPrintMoveTextColors
	.word	0x3128
.L757:
	cmp	r5, #0x3
	bne	.L759	@cond_branch
	cmp	r6, #0x2
	beq	.L771	@cond_branch
	cmp	r6, #0x1
	bne	.L756	@cond_branch
	mov	r2, #0x1
	mov	r9, r2
	b	.L756
.L759:
	cmp	r5, #0x2
	bne	.L764	@cond_branch
	cmp	r6, #0x1
	bne	.L756	@cond_branch
	b	.L772
.L764:
	mov	r5, r8
	lsr	r0, r5, #0x1a
	cmp	r6, r0
	bhi	.L767	@cond_branch
.L771:
	mov	r0, #0x2
	mov	r9, r0
	b	.L756
.L767:
	mov	r2, r8
	lsr	r0, r2, #0x19
	cmp	r6, r0
	bhi	.L756	@cond_branch
.L772:
	mov	r3, #0x1
	mov	r9, r3
.L756:
	ldr	r5, .L775
	mov	sl, r5
	ldr	r0, [r5]
	ldr	r4, .L775+0x4
	add	r0, r0, r4
	ldrb	r0, [r0]
	sub	r1, r1, r7
	lsl	r1, r1, #0x1a
	mov	r2, #0x80
	lsl	r2, r2, #0x15
	add	r1, r1, r2
	lsr	r1, r1, #0x18
	mov	r8, r1
	mov	r3, r9
	lsl	r1, r3, #0x1
	add	r1, r1, r9
	ldr	r2, .L775+0x8
	add	r6, r1, r2
	str	r6, [sp]
	mov	r5, #0x1
	neg	r5, r5
	mov	r9, r5
	str	r5, [sp, #0x4]
	ldr	r1, .L775+0xc
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x24
	mov	r3, r8
	bl	AddTextPrinterParameterized3
	mov	r0, sl
	ldr	r3, [r0]
	add	r4, r3, r4
	ldrb	r0, [r4]
	ldr	r2, .L775+0x10
	ldr	r1, [r2]
	lsl	r5, r7, #0x1
	add	r1, r1, #0x12
	add	r1, r1, r5
	ldrb	r2, [r1]
	add	r2, r2, #0x2e
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	mov	r1, r9
	str	r1, [sp, #0x4]
	mov	r1, #0xb
	mov	r4, r7
	mul	r4, r4, r1
	ldr	r7, .L775+0x14
	add	r1, r4, r7
	add	r3, r3, r1
	str	r3, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, r8
	bl	AddTextPrinterParameterized3
	mov	r0, sl
	ldr	r1, [r0]
	ldr	r2, .L775+0x18
	add	r0, r1, r2
	add	r0, r0, r5
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L770	@cond_branch
	ldr	r3, .L775+0x4
	add	r0, r1, r3
	ldrb	r0, [r0]
	str	r6, [sp]
	mov	r7, r9
	str	r7, [sp, #0x4]
	ldr	r1, .L775+0x1c
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x3a
	mov	r3, r8
	bl	AddTextPrinterParameterized3
	mov	r0, sl
	ldr	r3, [r0]
	ldr	r1, .L775+0x4
	add	r0, r3, r1
	ldrb	r0, [r0]
	ldr	r2, .L775+0x10
	ldr	r1, [r2]
	add	r1, r1, #0x1c
	add	r1, r1, r5
	ldrb	r2, [r1]
	add	r2, r2, #0x40
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r6, [sp]
	str	r7, [sp, #0x4]
	ldr	r5, .L775+0x20
	add	r1, r4, r5
	add	r3, r3, r1
	str	r3, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, r8
	bl	AddTextPrinterParameterized3
.L770:
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L776:
	.align	2, 0
.L775:
	.word	sMonSummaryScreen
	.word	0x3003
	.word	sPrintMoveTextColors
	.word	gText_PokeSum_PP
	.word	sMonSkillsPrinterXpos
	.word	0x30b8
	.word	0x3258
	.word	gText_Slash
	.word	0x30f0
.Lfe36:
	.size	 PokeSum_PrintMoveName,.Lfe36-PokeSum_PrintMoveName
	.align	2, 0
	.type	 PokeSum_PrintBottomPaneText,function
	.thumb_func
PokeSum_PrintBottomPaneText:
	push	{r4, lr}
	ldr	r4, .L786
	ldr	r0, [r4]
	ldr	r1, .L786+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r0, [r4]
	ldr	r1, .L786+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L780	@cond_branch
	cmp	r0, #0x1
	bgt	.L785	@cond_branch
	cmp	r0, #0
	beq	.L779	@cond_branch
	b	.L778
.L787:
	.align	2, 0
.L786:
	.word	sMonSummaryScreen
	.word	0x3004
	.word	0x3214
.L785:
	cmp	r0, #0x2
	beq	.L778	@cond_branch
	cmp	r0, #0x3
	beq	.L781	@cond_branch
	b	.L778
.L779:
	bl	PokeSum_PrintTrainerMemo
	b	.L778
.L780:
	bl	PokeSum_PrintExpPoints_NextLv
	b	.L778
.L781:
	bl	PokeSum_PrintSelectedMoveStats
.L778:
	ldr	r0, .L788
	ldr	r0, [r0]
	ldr	r1, .L788+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	pop	{r4}
	pop	{r0}
	bx	r0
.L789:
	.align	2, 0
.L788:
	.word	sMonSummaryScreen
	.word	0x3004
.Lfe37:
	.size	 PokeSum_PrintBottomPaneText,.Lfe37-PokeSum_PrintBottomPaneText
	.align	2, 0
	.type	 PokeSum_PrintTrainerMemo,function
	.thumb_func
PokeSum_PrintTrainerMemo:
	push	{lr}
	ldr	r0, .L793
	ldr	r0, [r0]
	mov	r1, #0xc8
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L791	@cond_branch
	bl	PokeSum_PrintTrainerMemo_Mon
	b	.L792
.L794:
	.align	2, 0
.L793:
	.word	sMonSummaryScreen
.L791:
	bl	PokeSum_PrintTrainerMemo_Egg
.L792:
	pop	{r0}
	bx	r0
.Lfe38:
	.size	 PokeSum_PrintTrainerMemo,.Lfe38-PokeSum_PrintTrainerMemo
	.align	2, 0
	.type	 PokeSum_PrintTrainerMemo_Mon_HeldByOT,function
	.thumb_func
PokeSum_PrintTrainerMemo_Mon_HeldByOT:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xd4
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r7, .L818
	ldr	r0, [r7]
	ldr	r4, .L818+0x4
	add	r0, r0, r4
	bl	GetNature
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L818+0x8
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, [r7]
	add	r0, r0, r4
	mov	r1, #0x24
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L796	@cond_branch
	mov	r1, #0x5
.L796:
	add	r0, sp, #0x14
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x1
	add	r1, sp, #0x14
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, [r7]
	add	r0, r0, r4
	mov	r1, #0x23
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r5, #0
	bl	MapSecIsInKantoOrSevii
	cmp	r0, #0x1
	bne	.L797	@cond_branch
	add	r4, sp, #0x1c
	add	r0, r4, #0
	add	r1, r5, #0
	bl	GetMapNameGeneric_
	b	.L816
.L819:
	.align	2, 0
.L818:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	gNatureNamePointers
.L797:
	ldr	r0, [r7]
	ldr	r1, .L820
	add	r0, r0, r1
	ldr	r0, [r0]
	cmp	r0, #0x1
	beq	.L800	@cond_branch
	bl	IsMultiBattlePartner
	cmp	r0, #0x1
	bne	.L799	@cond_branch
.L800:
	add	r4, sp, #0x1c
	ldr	r1, .L820+0x4
	add	r0, r4, #0
	bl	StringCopy
	b	.L816
.L821:
	.align	2, 0
.L820:
	.word	0x3024
	.word	gText_Somewhere
.L799:
	add	r4, sp, #0x1c
	ldr	r1, .L822
	add	r0, r4, #0
	bl	StringCopy
.L816:
	add	r1, r4, #0
	mov	r0, #0x2
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r4, .L822+0x4
	ldr	r0, [r4]
	ldr	r1, .L822+0x8
	add	r0, r0, r1
	mov	r1, #0x24
	bl	GetMonData
	cmp	r0, #0
	bne	.L802	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L822+0x8
	add	r0, r0, r1
	mov	r1, #0x50
	bl	GetMonData
	cmp	r0, #0x1
	bne	.L803	@cond_branch
	add	r0, r6, #0
	bl	PokeSum_IsMonBoldOrGentle
	cmp	r0, #0
	beq	.L804	@cond_branch
	add	r4, sp, #0x3c
	ldr	r1, .L822+0xc
	b	.L817
.L823:
	.align	2, 0
.L822:
	.word	gText_PokeSum_ATrade
	.word	sMonSummaryScreen
	.word	0x3290
	.word	gText_PokeSum_FatefulEncounterHatched_BoldGentleGrammar
.L804:
	add	r4, sp, #0x3c
	ldr	r1, .L824
	b	.L817
.L825:
	.align	2, 0
.L824:
	.word	gText_PokeSum_FatefulEncounterHatched
.L803:
	add	r0, r6, #0
	bl	PokeSum_IsMonBoldOrGentle
	cmp	r0, #0
	beq	.L807	@cond_branch
	add	r4, sp, #0x3c
	ldr	r1, .L826
	b	.L817
.L827:
	.align	2, 0
.L826:
	.word	gText_PokeSum_Hatched_BoldGentleGrammar
.L807:
	add	r4, sp, #0x3c
	ldr	r1, .L828
	b	.L817
.L829:
	.align	2, 0
.L828:
	.word	gText_PokeSum_Hatched
.L802:
	cmp	r5, #0xff
	bne	.L810	@cond_branch
	add	r0, r6, #0
	bl	PokeSum_IsMonBoldOrGentle
	cmp	r0, #0
	beq	.L811	@cond_branch
	add	r4, sp, #0x3c
	ldr	r1, .L830
	b	.L817
.L831:
	.align	2, 0
.L830:
	.word	gText_PokeSum_FatefulEncounterMet_BoldGentleGrammar
.L811:
	add	r4, sp, #0x3c
	ldr	r1, .L832
	b	.L817
.L833:
	.align	2, 0
.L832:
	.word	gText_PokeSum_FatefulEncounterMet
.L810:
	add	r0, r6, #0
	bl	PokeSum_IsMonBoldOrGentle
	cmp	r0, #0
	beq	.L814	@cond_branch
	add	r4, sp, #0x3c
	ldr	r1, .L834
.L817:
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L809
.L835:
	.align	2, 0
.L834:
	.word	gText_PokeSum_Met_BoldGentleGrammar
.L814:
	add	r4, sp, #0x3c
	ldr	r1, .L836
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
.L809:
	ldr	r0, .L836+0x4
	ldr	r0, [r0]
	ldr	r1, .L836+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	str	r1, [sp]
	str	r1, [sp, #0x4]
	ldr	r1, .L836+0xc
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	neg	r1, r1
	str	r1, [sp, #0xc]
	str	r4, [sp, #0x10]
	mov	r1, #0x2
	mov	r2, #0x0
	mov	r3, #0x3
	bl	AddTextPrinterParameterized4
	add	sp, sp, #0xd4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L837:
	.align	2, 0
.L836:
	.word	gText_PokeSum_Met
	.word	sMonSummaryScreen
	.word	0x3004
	.word	sLevelNickTextColors
.Lfe39:
	.size	 PokeSum_PrintTrainerMemo_Mon_HeldByOT,.Lfe39-PokeSum_PrintTrainerMemo_Mon_HeldByOT
	.align	2, 0
	.type	 PokeSum_PrintTrainerMemo_Mon_NotHeldByOT,function
	.thumb_func
PokeSum_PrintTrainerMemo_Mon_NotHeldByOT:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xd4
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r5, .L869
	ldr	r0, [r5]
	ldr	r4, .L869+0x4
	add	r0, r0, r4
	bl	GetNature
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r1, .L869+0x8
	lsl	r0, r6, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, [r5]
	add	r0, r0, r4
	mov	r1, #0x24
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	bne	.L839	@cond_branch
	mov	r1, #0x5
.L839:
	add	r0, sp, #0x14
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x1
	add	r1, sp, #0x14
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, [r5]
	add	r0, r0, r4
	mov	r1, #0x23
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r5, #0
	bl	MapSecIsInKantoOrSevii
	cmp	r0, #0
	beq	.L841	@cond_branch
	bl	CurrentMonIsFromGBA
	cmp	r0, #0
	bne	.L840	@cond_branch
.L841:
	bl	IsMultiBattlePartner
	cmp	r0, #0x1
	bne	.L842	@cond_branch
	bl	PokeSum_PrintTrainerMemo_Mon_HeldByOT
	b	.L838
.L870:
	.align	2, 0
.L869:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	gNatureNamePointers
.L842:
	cmp	r5, #0xff
	bne	.L843	@cond_branch
	add	r0, r6, #0
	bl	PokeSum_IsMonBoldOrGentle
	cmp	r0, #0
	beq	.L844	@cond_branch
	add	r4, sp, #0x3c
	ldr	r1, .L871
	b	.L865
.L872:
	.align	2, 0
.L871:
	.word	gText_PokeSum_FatefulEncounterMet_BoldGentleGrammar
.L844:
	add	r4, sp, #0x3c
	ldr	r1, .L873
	b	.L865
.L874:
	.align	2, 0
.L873:
	.word	gText_PokeSum_FatefulEncounterMet
.L843:
	add	r0, r6, #0
	bl	PokeSum_IsMonBoldOrGentle
	cmp	r0, #0
	beq	.L847	@cond_branch
	add	r4, sp, #0x3c
	ldr	r1, .L875
.L865:
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L846
.L876:
	.align	2, 0
.L875:
	.word	gText_PokeSum_MetInATrade_BoldGentleGrammar
.L847:
	add	r4, sp, #0x3c
	ldr	r1, .L877
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
.L846:
	ldr	r0, .L877+0x4
	ldr	r0, [r0]
	ldr	r1, .L877+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	str	r1, [sp]
	str	r1, [sp, #0x4]
	ldr	r1, .L877+0xc
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	neg	r1, r1
	str	r1, [sp, #0xc]
	str	r4, [sp, #0x10]
	mov	r1, #0x2
	mov	r2, #0x0
	mov	r3, #0x3
	bl	AddTextPrinterParameterized4
	b	.L838
.L878:
	.align	2, 0
.L877:
	.word	gText_PokeSum_MetInATrade
	.word	sMonSummaryScreen
	.word	0x3004
	.word	sLevelNickTextColors
.L840:
	add	r0, r5, #0
	bl	MapSecIsInKantoOrSevii
	cmp	r0, #0x1
	bne	.L849	@cond_branch
	add	r4, sp, #0x1c
	add	r0, r4, #0
	add	r1, r5, #0
	bl	GetMapNameGeneric_
	b	.L866
.L849:
	add	r4, sp, #0x1c
	ldr	r1, .L879
	add	r0, r4, #0
	bl	StringCopy
.L866:
	add	r1, r4, #0
	mov	r0, #0x2
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r4, .L879+0x4
	ldr	r0, [r4]
	ldr	r1, .L879+0x8
	add	r0, r0, r1
	mov	r1, #0x24
	bl	GetMonData
	cmp	r0, #0
	bne	.L851	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L879+0x8
	add	r0, r0, r1
	mov	r1, #0x50
	bl	GetMonData
	cmp	r0, #0x1
	bne	.L852	@cond_branch
	add	r0, r6, #0
	bl	PokeSum_IsMonBoldOrGentle
	cmp	r0, #0
	beq	.L853	@cond_branch
	add	r4, sp, #0x3c
	ldr	r1, .L879+0xc
	b	.L867
.L880:
	.align	2, 0
.L879:
	.word	gText_PokeSum_ATrade
	.word	sMonSummaryScreen
	.word	0x3290
	.word	gText_PokeSum_ApparentlyFatefulEncounterHatched_BoldGentleGrammar
.L853:
	add	r4, sp, #0x3c
	ldr	r1, .L881
	b	.L867
.L882:
	.align	2, 0
.L881:
	.word	gText_PokeSum_ApparentlyFatefulEncounterHatched
.L852:
	add	r0, r6, #0
	bl	PokeSum_IsMonBoldOrGentle
	cmp	r0, #0
	bne	.L868	@cond_branch
	add	r4, sp, #0x3c
	ldr	r1, .L883
	b	.L867
.L884:
	.align	2, 0
.L883:
	.word	gText_PokeSum_ApparentlyMet
.L851:
	cmp	r5, #0xff
	bne	.L859	@cond_branch
	add	r0, r6, #0
	bl	PokeSum_IsMonBoldOrGentle
	cmp	r0, #0
	beq	.L860	@cond_branch
	add	r4, sp, #0x3c
	ldr	r1, .L885
	b	.L867
.L886:
	.align	2, 0
.L885:
	.word	gText_PokeSum_FatefulEncounterMet_BoldGentleGrammar
.L860:
	add	r4, sp, #0x3c
	ldr	r1, .L887
	b	.L867
.L888:
	.align	2, 0
.L887:
	.word	gText_PokeSum_FatefulEncounterMet
.L859:
	add	r0, r6, #0
	bl	PokeSum_IsMonBoldOrGentle
	cmp	r0, #0
	beq	.L863	@cond_branch
.L868:
	add	r4, sp, #0x3c
	ldr	r1, .L889
.L867:
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L858
.L890:
	.align	2, 0
.L889:
	.word	gText_PokeSum_ApparentlyMet_BoldGentleGrammar
.L863:
	add	r4, sp, #0x3c
	ldr	r1, .L891
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
.L858:
	ldr	r0, .L891+0x4
	ldr	r0, [r0]
	ldr	r1, .L891+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	str	r1, [sp]
	str	r1, [sp, #0x4]
	ldr	r1, .L891+0xc
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	neg	r1, r1
	str	r1, [sp, #0xc]
	str	r4, [sp, #0x10]
	mov	r1, #0x2
	mov	r2, #0x0
	mov	r3, #0x3
	bl	AddTextPrinterParameterized4
.L838:
	add	sp, sp, #0xd4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L892:
	.align	2, 0
.L891:
	.word	gText_PokeSum_ApparentlyMet
	.word	sMonSummaryScreen
	.word	0x3004
	.word	sLevelNickTextColors
.Lfe40:
	.size	 PokeSum_PrintTrainerMemo_Mon_NotHeldByOT,.Lfe40-PokeSum_PrintTrainerMemo_Mon_NotHeldByOT
	.align	2, 0
	.type	 PokeSum_PrintTrainerMemo_Mon,function
	.thumb_func
PokeSum_PrintTrainerMemo_Mon:
	push	{lr}
	ldr	r0, .L896
	ldr	r0, [r0]
	ldr	r1, .L896+0x4
	add	r0, r0, r1
	bl	PokeSum_BufferOtName_IsEqualToCurrentOwner
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L894	@cond_branch
	bl	PokeSum_PrintTrainerMemo_Mon_HeldByOT
	b	.L895
.L897:
	.align	2, 0
.L896:
	.word	sMonSummaryScreen
	.word	0x3290
.L894:
	bl	PokeSum_PrintTrainerMemo_Mon_NotHeldByOT
.L895:
	pop	{r0}
	bx	r0
.Lfe41:
	.size	 PokeSum_PrintTrainerMemo_Mon,.Lfe41-PokeSum_PrintTrainerMemo_Mon
	.align	2, 0
	.type	 PokeSum_PrintTrainerMemo_Egg,function
	.thumb_func
PokeSum_PrintTrainerMemo_Egg:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	mov	r5, #0x0
	ldr	r7, .L920
	ldr	r0, [r7]
	ldr	r6, .L920+0x4
	add	r0, r0, r6
	mov	r1, #0x23
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r2, [r7]
	ldr	r1, .L920+0x8
	add	r0, r2, r1
	ldr	r1, [r0]
	ldr	r0, .L920+0xc
	cmp	r1, r0
	beq	.L899	@cond_branch
	cmp	r4, #0xff
	beq	.L911	@cond_branch
	add	r0, r2, r6
	mov	r1, #0x50
	bl	GetMonData
	cmp	r0, #0x1
	beq	.L911	@cond_branch
	ldr	r0, [r7]
	add	r0, r0, r6
	mov	r1, #0x25
	bl	GetMonData
	lsl	r0, r0, #0x18
	mov	r2, #0xfc
	lsl	r2, r2, #0x18
	add	r0, r0, r2
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L903	@cond_branch
	mov	r5, #0x1
	b	.L919
.L921:
	.align	2, 0
.L920:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x32f4
	.word	gEnemyParty
.L903:
	cmp	r4, #0xfd
	bne	.L904	@cond_branch
	mov	r5, #0x2
.L904:
	cmp	r5, #0
	beq	.L915	@cond_branch
.L919:
	cmp	r5, #0x2
	bne	.L909	@cond_branch
	b	.L915
.L899:
	cmp	r4, #0xff
	beq	.L911	@cond_branch
	add	r0, r2, r6
	mov	r1, #0x50
	bl	GetMonData
	cmp	r0, #0x1
	bne	.L910	@cond_branch
.L911:
	mov	r5, #0x4
	b	.L909
.L910:
	ldr	r0, [r7]
	add	r0, r0, r6
	mov	r1, #0x25
	bl	GetMonData
	lsl	r0, r0, #0x18
	mov	r2, #0xfc
	lsl	r2, r2, #0x18
	add	r0, r0, r2
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L913	@cond_branch
	cmp	r4, #0xfd
	bne	.L915	@cond_branch
	mov	r5, #0x5
	b	.L915
.L913:
	cmp	r4, #0xfd
	bne	.L915	@cond_branch
	mov	r5, #0x2
.L915:
	ldr	r0, .L922
	ldr	r0, [r0]
	ldr	r1, .L922+0x4
	add	r0, r0, r1
	bl	PokeSum_BufferOtName_IsEqualToCurrentOwner
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L909	@cond_branch
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L909:
	ldr	r0, .L922
	ldr	r1, [r0]
	ldr	r2, .L922+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L918	@cond_branch
	mov	r5, #0x0
.L918:
	ldr	r2, .L922+0xc
	add	r0, r1, r2
	ldrb	r0, [r0]
	mov	r1, #0x0
	str	r1, [sp]
	str	r1, [sp, #0x4]
	ldr	r1, .L922+0x10
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	neg	r1, r1
	str	r1, [sp, #0xc]
	ldr	r2, .L922+0x14
	lsl	r1, r5, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	str	r1, [sp, #0x10]
	mov	r1, #0x2
	mov	r2, #0x0
	mov	r3, #0x3
	bl	AddTextPrinterParameterized4
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L923:
	.align	2, 0
.L922:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x3204
	.word	0x3004
	.word	sLevelNickTextColors
	.word	sEggOriginTexts
.Lfe42:
	.size	 PokeSum_PrintTrainerMemo_Egg,.Lfe42-PokeSum_PrintTrainerMemo_Egg
	.align	2, 0
	.type	 PokeSum_PrintExpPoints_NextLv,function
	.thumb_func
PokeSum_PrintExpPoints_NextLv:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0xc
	ldr	r0, .L925
	mov	r8, r0
	ldr	r0, [r0]
	ldr	r6, .L925+0x4
	add	r0, r0, r6
	ldrb	r0, [r0]
	ldr	r5, .L925+0x8
	str	r5, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r1, .L925+0xc
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x1a
	mov	r3, #0x7
	bl	AddTextPrinterParameterized3
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, r6
	ldrb	r0, [r0]
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r1, .L925+0x10
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x1a
	mov	r3, #0x14
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L926:
	.align	2, 0
.L925:
	.word	sMonSummaryScreen
	.word	0x3004
	.word	sLevelNickTextColors
	.word	gText_PokeSum_ExpPoints
	.word	gText_PokeSum_NextLv
.Lfe43:
	.size	 PokeSum_PrintExpPoints_NextLv,.Lfe43-PokeSum_PrintExpPoints_NextLv
	.align	2, 0
	.type	 PokeSum_PrintSelectedMoveStats,function
	.thumb_func
PokeSum_PrintSelectedMoveStats:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x14
	ldr	r0, .L930
	mov	r8, r0
	ldrb	r1, [r0]
	cmp	r1, #0x4
	bhi	.L927	@cond_branch
	ldr	r7, .L930+0x4
	ldr	r3, [r7]
	ldr	r2, .L930+0x8
	add	r0, r3, r2
	ldrb	r0, [r0]
	cmp	r0, #0x2
	beq	.L929	@cond_branch
	cmp	r1, #0x4
	beq	.L927	@cond_branch
.L929:
	ldr	r4, .L930+0xc
	add	r0, r3, r4
	ldrb	r0, [r0]
	ldr	r6, .L930+0x10
	str	r6, [sp]
	mov	r5, #0x1
	neg	r5, r5
	str	r5, [sp, #0x4]
	mov	r1, r8
	ldrb	r2, [r1]
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	ldr	r2, .L930+0x14
	add	r1, r1, r2
	add	r1, r3, r1
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x39
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	ldr	r3, [r7]
	add	r0, r3, r4
	ldrb	r0, [r0]
	str	r6, [sp]
	str	r5, [sp, #0x4]
	mov	r1, r8
	ldrb	r2, [r1]
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	ldr	r2, .L930+0x18
	add	r1, r1, r2
	add	r3, r3, r1
	str	r3, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x39
	mov	r3, #0xf
	bl	AddTextPrinterParameterized3
	ldr	r2, [r7]
	add	r4, r2, r4
	ldrb	r0, [r4]
	mov	r1, #0x0
	str	r1, [sp]
	str	r1, [sp, #0x4]
	str	r6, [sp, #0x8]
	str	r5, [sp, #0xc]
	ldr	r3, .L930+0x1c
	mov	r4, r8
	ldrb	r1, [r4]
	lsl	r1, r1, #0x1
	ldr	r4, .L930+0x20
	add	r2, r2, r4
	add	r2, r2, r1
	ldrh	r1, [r2]
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldr	r1, [r1]
	str	r1, [sp, #0x10]
	mov	r1, #0x2
	mov	r2, #0x7
	mov	r3, #0x2a
	bl	AddTextPrinterParameterized4
.L927:
	add	sp, sp, #0x14
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L931:
	.align	2, 0
.L930:
	.word	sMoveSelectionCursorPos
	.word	sMonSummaryScreen
	.word	0x3208
	.word	0x3004
	.word	sLevelNickTextColors
	.word	0x316c
	.word	0x3188
	.word	gMoveDescriptionPointers
	.word	0x3258
.Lfe44:
	.size	 PokeSum_PrintSelectedMoveStats,.Lfe44-PokeSum_PrintSelectedMoveStats
	.align	2, 0
	.type	 PokeSum_PrintAbilityDataOrMoveTypes,function
	.thumb_func
PokeSum_PrintAbilityDataOrMoveTypes:
	push	{lr}
	ldr	r0, .L941
	ldr	r0, [r0]
	ldr	r1, .L941+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L935	@cond_branch
	bl	PokeSum_PrintAbilityNameAndDesc
	b	.L933
.L942:
	.align	2, 0
.L941:
	.word	sMonSummaryScreen
	.word	0x3214
.L935:
	cmp	r0, #0x1
	ble	.L933	@cond_branch
	cmp	r0, #0x3
	bgt	.L933	@cond_branch
	bl	PokeSum_DrawMoveTypeIcons
.L933:
	ldr	r0, .L943
	ldr	r0, [r0]
	ldr	r1, .L943+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	pop	{r0}
	bx	r0
.L944:
	.align	2, 0
.L943:
	.word	sMonSummaryScreen
	.word	0x3005
.Lfe45:
	.size	 PokeSum_PrintAbilityDataOrMoveTypes,.Lfe45-PokeSum_PrintAbilityDataOrMoveTypes
	.align	2, 0
	.type	 PokeSum_PrintAbilityNameAndDesc,function
	.thumb_func
PokeSum_PrintAbilityNameAndDesc:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0xc
	ldr	r5, .L946
	ldr	r0, [r5]
	ldr	r4, .L946+0x4
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r1, [r5]
	add	r0, r1, r4
	ldrb	r0, [r0]
	ldr	r2, .L946+0x8
	mov	r8, r2
	str	r2, [sp]
	mov	r6, #0x1
	neg	r6, r6
	str	r6, [sp, #0x4]
	ldr	r2, .L946+0xc
	add	r1, r1, r2
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x42
	mov	r3, #0x1
	bl	AddTextPrinterParameterized3
	ldr	r1, [r5]
	add	r4, r1, r4
	ldrb	r0, [r4]
	mov	r2, r8
	str	r2, [sp]
	str	r6, [sp, #0x4]
	ldr	r2, .L946+0x10
	add	r1, r1, r2
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x2
	mov	r3, #0xf
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L947:
	.align	2, 0
.L946:
	.word	sMonSummaryScreen
	.word	0x3005
	.word	sLevelNickTextColors
	.word	0x31bc
	.word	0x31cc
.Lfe46:
	.size	 PokeSum_PrintAbilityNameAndDesc,.Lfe46-PokeSum_PrintAbilityNameAndDesc
	.align	2, 0
	.type	 PokeSum_DrawMoveTypeIcons,function
	.thumb_func
PokeSum_DrawMoveTypeIcons:
	push	{r4, r5, lr}
	ldr	r0, .L956
	ldr	r0, [r0]
	ldr	r1, .L956+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r4, #0x0
.L952:
	ldr	r5, .L956
	ldr	r1, [r5]
	lsl	r2, r4, #0x1
	ldr	r3, .L956+0x8
	add	r0, r1, r3
	add	r0, r0, r2
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L951	@cond_branch
	ldr	r3, .L956+0x4
	add	r0, r1, r3
	ldrb	r0, [r0]
	ldr	r3, .L956+0xc
	add	r1, r1, r3
	add	r1, r1, r2
	ldrb	r1, [r1]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r3, r4, #0x3
	sub	r3, r3, r4
	lsl	r3, r3, #0x12
	mov	r2, #0xa0
	lsl	r2, r2, #0xb
	add	r3, r3, r2
	lsr	r3, r3, #0x10
	mov	r2, #0x3
	bl	BlitMenuInfoIcon
.L951:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L952	@cond_branch
	ldr	r1, [r5]
	ldr	r3, .L956+0x10
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L955	@cond_branch
	ldr	r2, .L956+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r3, r3, #0x4e
	add	r1, r1, r3
	ldrb	r1, [r1]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r2, #0x3
	mov	r3, #0x75
	bl	BlitMenuInfoIcon
.L955:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L957:
	.align	2, 0
.L956:
	.word	sMonSummaryScreen
	.word	0x3005
	.word	0x3258
	.word	0x324e
	.word	0x3208
.Lfe47:
	.size	 PokeSum_DrawMoveTypeIcons,.Lfe47-PokeSum_DrawMoveTypeIcons
	.align	2, 0
	.type	 PokeSum_PrintPageHeaderText,function
	.thumb_func
PokeSum_PrintPageHeaderText:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	bhi	.L959	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L973
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L974:
	.align	2, 0
.L973:
	.word	.L970
	.align	2, 0
	.align	2, 0
.L970:
	.word	.L960
	.word	.L963
	.word	.L964
	.word	.L965
	.word	.L959
	.word	.L968
.L960:
	ldr	r0, .L975
	bl	PokeSum_PrintPageName
	ldr	r0, .L975+0x4
	ldr	r0, [r0]
	mov	r1, #0xc8
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L961	@cond_branch
	ldr	r0, .L975+0x8
	bl	PokeSum_PrintControlsString
	b	.L967
.L976:
	.align	2, 0
.L975:
	.word	gText_PokeSum_PageName_PokemonInfo
	.word	sMonSummaryScreen
	.word	gText_PokeSum_Controls_PageCancel
.L961:
	ldr	r0, .L977
	b	.L972
.L978:
	.align	2, 0
.L977:
	.word	gText_PokeSum_Controls_Cancel
.L963:
	ldr	r0, .L979
	bl	PokeSum_PrintPageName
	ldr	r0, .L979+0x4
	bl	PokeSum_PrintControlsString
	b	.L967
.L980:
	.align	2, 0
.L979:
	.word	gText_PokeSum_PageName_PokemonSkills
	.word	gText_PokeSum_Controls_Page
.L964:
	ldr	r0, .L981
	bl	PokeSum_PrintPageName
	ldr	r0, .L981+0x4
	bl	PokeSum_PrintControlsString
	b	.L967
.L982:
	.align	2, 0
.L981:
	.word	gText_PokeSum_PageName_KnownMoves
	.word	gText_PokeSum_Controls_PageDetail
.L965:
	ldr	r0, .L983
	bl	PokeSum_PrintPageName
	ldr	r0, .L983+0x4
	ldr	r1, .L983+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L966	@cond_branch
	ldr	r0, .L983+0xc
	bl	PokeSum_PrintControlsString
	b	.L967
.L984:
	.align	2, 0
.L983:
	.word	gText_PokeSum_PageName_KnownMoves
	.word	gMain
	.word	0x439
	.word	gText_PokeSum_Controls_PickSwitch
.L966:
	ldr	r0, .L985
.L972:
	bl	PokeSum_PrintControlsString
.L967:
	ldr	r0, .L985+0x4
	bl	PrintMonLevelNickOnWindow2
	b	.L959
.L986:
	.align	2, 0
.L985:
	.word	gText_PokeSum_Controls_Pick
	.word	gText_PokeSum_NoData
.L968:
	ldr	r0, .L987
	bl	PokeSum_PrintPageName
	ldr	r0, .L987+0x4
	bl	PokeSum_PrintControlsString
	ldr	r0, .L987+0x8
	bl	PrintMonLevelNickOnWindow2
.L959:
	pop	{r0}
	bx	r0
.L988:
	.align	2, 0
.L987:
	.word	gText_PokeSum_PageName_KnownMoves
	.word	gText_PokeSum_Controls_PickDelete
	.word	gText_PokeSum_NoData
.Lfe48:
	.size	 PokeSum_PrintPageHeaderText,.Lfe48-PokeSum_PrintPageHeaderText
	.align	2, 0
	.type	 CommitStaticWindowTilemaps,function
	.thumb_func
CommitStaticWindowTilemaps:
	push	{r4, lr}
	ldr	r4, .L990
	ldr	r0, [r4]
	mov	r1, #0xc0
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	ldr	r0, [r4]
	ldr	r1, .L990+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	ldr	r0, [r4]
	ldr	r1, .L990+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PutWindowTilemap
	pop	{r4}
	pop	{r0}
	bx	r0
.L991:
	.align	2, 0
.L990:
	.word	sMonSummaryScreen
	.word	0x3001
	.word	0x3002
.Lfe49:
	.size	 CommitStaticWindowTilemaps,.Lfe49-CommitStaticWindowTilemaps
	.align	2, 0
	.type	 Task_DestroyResourcesOnExit,function
	.thumb_func
Task_DestroyResourcesOnExit:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	bl	PokeSum_DestroySprites
	bl	FreeAllSpritePalettes
	bl	IsCryPlayingOrClearCrySongs
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L993	@cond_branch
	bl	StopCryAndClearCrySongs
.L993:
	ldr	r4, .L996
	ldr	r0, [r4]
	ldr	r1, .L996+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PokeSum_RemoveWindows
	bl	FreeAllWindowBuffers
	add	r0, r5, #0
	bl	DestroyTask
	ldr	r0, [r4]
	ldr	r1, .L996+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	SetMainCallback2
	bl	GetLastViewedMonIndex
	ldr	r1, .L996+0xc
	strb	r0, [r1]
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L994	@cond_branch
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L994:
	ldr	r4, .L996+0x10
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L995	@cond_branch
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L995:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L997:
	.align	2, 0
.L996:
	.word	sMonSummaryScreen
	.word	0x3214
	.word	0x32f8
	.word	sLastViewedMonIndex
	.word	sMonSkillsPrinterXpos
.Lfe50:
	.size	 Task_DestroyResourcesOnExit,.Lfe50-Task_DestroyResourcesOnExit
	.align	2, 0
	.type	 CB2_RunPokemonSummaryScreen,function
	.thumb_func
CB2_RunPokemonSummaryScreen:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe51:
	.size	 CB2_RunPokemonSummaryScreen,.Lfe51-CB2_RunPokemonSummaryScreen
	.align	2, 0
	.type	 PokeSum_FlipPages_SlideHpExpBarsOut,function
	.thumb_func
PokeSum_FlipPages_SlideHpExpBarsOut:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r6, .L1008
.L1003:
	ldr	r3, [r6]
	lsl	r4, r5, #0x1
	add	r0, r3, #0
	add	r0, r0, #0x2c
	add	r1, r0, r4
	ldrh	r2, [r1]
	cmp	r2, #0xef
	bhi	.L1004	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x3c
	strh	r0, [r1]
	lsl	r0, r5, #0x2
	add	r0, r3, r0
	ldr	r1, [r0]
	add	r0, r2, #0
	add	r0, r0, #0x78
	strh	r0, [r1, #0x20]
.L1004:
	cmp	r5, #0x8
	bhi	.L1002	@cond_branch
	ldr	r0, .L1008+0x4
	ldr	r3, [r0]
	add	r0, r3, #0
	add	r0, r0, #0x28
	add	r1, r0, r4
	ldrh	r2, [r1]
	cmp	r2, #0xef
	bhi	.L1002	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x3c
	strh	r0, [r1]
	lsl	r0, r5, #0x2
	add	r0, r3, r0
	ldr	r1, [r0]
	add	r0, r2, #0
	add	r0, r0, #0x78
	strh	r0, [r1, #0x20]
.L1002:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0xa
	bls	.L1003	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1009:
	.align	2, 0
.L1008:
	.word	sExpBarObjs
	.word	sHpBarObjs
.Lfe52:
	.size	 PokeSum_FlipPages_SlideHpExpBarsOut,.Lfe52-PokeSum_FlipPages_SlideHpExpBarsOut
	.align	2, 0
	.type	 PokeSum_FlipPages_SlideHpExpBarsIn,function
	.thumb_func
PokeSum_FlipPages_SlideHpExpBarsIn:
	push	{r4, r5, r6, r7, lr}
	mov	r5, #0x0
	ldr	r0, .L1021
	mov	ip, r0
.L1014:
	mov	r1, ip
	ldr	r0, [r1]
	lsl	r1, r5, #0x1
	add	r0, r0, #0x2c
	add	r3, r0, r1
	ldrh	r4, [r3]
	lsl	r0, r5, #0x3
	add	r2, r0, #0
	add	r2, r2, #0x9c
	add	r6, r1, #0
	add	r7, r0, #0
	cmp	r4, r2
	ble	.L1015	@cond_branch
	add	r0, r4, #0
	sub	r0, r0, #0x3c
	strh	r0, [r3]
	ldrh	r0, [r3]
	cmp	r0, r2
	bge	.L1016	@cond_branch
	strh	r2, [r3]
.L1016:
	mov	r0, ip
	ldr	r1, [r0]
	lsl	r0, r5, #0x2
	add	r0, r1, r0
	ldr	r2, [r0]
	add	r1, r1, #0x2c
	add	r1, r1, r6
	ldrh	r0, [r1]
	strh	r0, [r2, #0x20]
.L1015:
	cmp	r5, #0x8
	bhi	.L1013	@cond_branch
	ldr	r1, .L1021+0x4
	ldr	r0, [r1]
	add	r0, r0, #0x28
	add	r2, r0, r6
	ldrh	r0, [r2]
	add	r3, r7, #0
	add	r3, r3, #0xac
	cmp	r0, r3
	ble	.L1013	@cond_branch
	sub	r0, r0, #0x3c
	strh	r0, [r2]
	ldrh	r0, [r2]
	cmp	r0, r3
	bge	.L1019	@cond_branch
	strh	r3, [r2]
.L1019:
	ldr	r1, [r1]
	lsl	r0, r5, #0x2
	add	r0, r1, r0
	ldr	r2, [r0]
	add	r1, r1, #0x28
	add	r1, r1, r6
	ldrh	r0, [r1]
	strh	r0, [r2, #0x20]
.L1013:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0xa
	bls	.L1014	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1022:
	.align	2, 0
.L1021:
	.word	sExpBarObjs
	.word	sHpBarObjs
.Lfe53:
	.size	 PokeSum_FlipPages_SlideHpExpBarsIn,.Lfe53-PokeSum_FlipPages_SlideHpExpBarsIn
	.align	2, 0
	.type	 PokeSum_FlipPages_SlideLayerLeft,function
	.thumb_func
PokeSum_FlipPages_SlideLayerLeft:
	push	{r4, r5, lr}
	ldr	r4, .L1028
	ldr	r0, [r4]
	ldr	r3, .L1028+0x4
	add	r1, r0, r3
	ldrh	r2, [r1]
	mov	r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp	r0, #0xef
	bgt	.L1024	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x3c
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xf0
	ble	.L1025	@cond_branch
	mov	r0, #0xf0
	strh	r0, [r1]
.L1025:
	ldr	r1, [r4]
	ldr	r2, .L1028+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1026	@cond_branch
	add	r0, r1, r3
	ldrh	r1, [r0]
	neg	r1, r1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x18
	bl	SetGpuReg
	b	.L1024
.L1029:
	.align	2, 0
.L1028:
	.word	sMonSummaryScreen
	.word	0x324c
	.word	0x3238
.L1026:
	add	r0, r1, r3
	ldrh	r1, [r0]
	neg	r1, r1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x14
	bl	SetGpuReg
.L1024:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 PokeSum_FlipPages_SlideLayerLeft,.Lfe54-PokeSum_FlipPages_SlideLayerLeft
	.align	2, 0
	.type	 PokeSum_FlipPages_SlideLayeRight,function
	.thumb_func
PokeSum_FlipPages_SlideLayeRight:
	push	{r4, r5, lr}
	ldr	r4, .L1036
	ldr	r0, [r4]
	ldr	r3, .L1036+0x4
	add	r1, r0, r3
	ldrh	r2, [r1]
	mov	r5, #0x0
	ldrsh	r0, [r1, r5]
	cmp	r0, #0x3b
	ble	.L1031	@cond_branch
	add	r0, r2, #0
	sub	r0, r0, #0x3c
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L1032	@cond_branch
	mov	r0, #0x0
	strh	r0, [r1]
.L1032:
	ldr	r1, [r4]
	ldr	r2, .L1036+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1033	@cond_branch
	add	r0, r1, r3
	ldrh	r1, [r0]
	neg	r1, r1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x14
	bl	SetGpuReg
	b	.L1034
.L1037:
	.align	2, 0
.L1036:
	.word	sMonSummaryScreen
	.word	0x324c
	.word	0x3238
.L1033:
	add	r0, r1, r3
	ldrh	r1, [r0]
	neg	r1, r1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x18
	bl	SetGpuReg
.L1034:
	ldr	r0, .L1038
	ldr	r1, [r0]
	ldr	r5, .L1038+0x4
	add	r0, r1, r5
	ldrb	r0, [r0]
	cmp	r0, #0x3
	beq	.L1031	@cond_branch
	ldr	r2, .L1038+0x8
	add	r0, r1, r2
	ldrh	r1, [r0]
	neg	r1, r1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x10
	bl	SetGpuReg
.L1031:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1039:
	.align	2, 0
.L1038:
	.word	sMonSummaryScreen
	.word	0x3214
	.word	0x324c
.Lfe55:
	.size	 PokeSum_FlipPages_SlideLayeRight,.Lfe55-PokeSum_FlipPages_SlideLayeRight
	.align	2, 0
	.type	 PokeSum_FlipPages_HandleBgHofs,function
	.thumb_func
PokeSum_FlipPages_HandleBgHofs:
	push	{lr}
	ldr	r0, .L1048
	ldr	r1, [r0]
	ldr	r2, .L1048+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1041	@cond_branch
	sub	r2, r2, #0x10
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x3
	beq	.L1047	@cond_branch
	bl	PokeSum_FlipPages_SlideLayerLeft
	b	.L1044
.L1049:
	.align	2, 0
.L1048:
	.word	sMonSummaryScreen
	.word	0x3224
.L1041:
	ldr	r2, .L1050
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x2
	beq	.L1045	@cond_branch
.L1047:
	bl	PokeSum_FlipPages_SlideLayeRight
	b	.L1044
.L1051:
	.align	2, 0
.L1050:
	.word	0x3214
.L1045:
	bl	PokeSum_FlipPages_SlideLayerLeft
.L1044:
	pop	{r0}
	bx	r0
.Lfe56:
	.size	 PokeSum_FlipPages_HandleBgHofs,.Lfe56-PokeSum_FlipPages_HandleBgHofs
	.align	2, 0
	.type	 PokeSum_FlipPages_HandleHpExpBarSprites,function
	.thumb_func
PokeSum_FlipPages_HandleHpExpBarSprites:
	push	{lr}
	ldr	r0, .L1055
	ldr	r1, [r0]
	ldr	r2, .L1055+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1053	@cond_branch
	add	r2, r2, #0x10
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1053	@cond_branch
	bl	PokeSum_FlipPages_SlideHpExpBarsIn
.L1053:
	ldr	r0, .L1055
	ldr	r1, [r0]
	ldr	r2, .L1055+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L1054	@cond_branch
	add	r2, r2, #0x10
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1054	@cond_branch
	bl	PokeSum_FlipPages_SlideHpExpBarsOut
.L1054:
	pop	{r0}
	bx	r0
.L1056:
	.align	2, 0
.L1055:
	.word	sMonSummaryScreen
	.word	0x3214
.Lfe57:
	.size	 PokeSum_FlipPages_HandleHpExpBarSprites,.Lfe57-PokeSum_FlipPages_HandleHpExpBarSprites
	.align	2, 0
	.type	 VBlankCB_PokemonSummaryScreen,function
	.thumb_func
VBlankCB_PokemonSummaryScreen:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	ldr	r0, .L1059
	ldr	r0, [r0]
	ldr	r1, .L1059+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1057	@cond_branch
	bl	PokeSum_FlipPages_HandleBgHofs
	bl	PokeSum_FlipPages_HandleHpExpBarSprites
.L1057:
	pop	{r0}
	bx	r0
.L1060:
	.align	2, 0
.L1059:
	.word	sMonSummaryScreen
	.word	0x3244
.Lfe58:
	.size	 VBlankCB_PokemonSummaryScreen,.Lfe58-VBlankCB_PokemonSummaryScreen
	.align	2, 0
	.type	 PokeSum_Setup_ResetCallbacks,function
	.thumb_func
PokeSum_Setup_ResetCallbacks:
	push	{lr}
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	SetHBlankCallback
	pop	{r0}
	bx	r0
.Lfe59:
	.size	 PokeSum_Setup_ResetCallbacks,.Lfe59-PokeSum_Setup_ResetCallbacks
	.align	2, 0
	.type	 PokeSum_Setup_SetVBlankCallback,function
	.thumb_func
PokeSum_Setup_SetVBlankCallback:
	push	{lr}
	ldr	r0, .L1063
	bl	SetVBlankCallback
	pop	{r0}
	bx	r0
.L1064:
	.align	2, 0
.L1063:
	.word	VBlankCB_PokemonSummaryScreen
.Lfe60:
	.size	 PokeSum_Setup_SetVBlankCallback,.Lfe60-PokeSum_Setup_SetVBlankCallback
	.align	2, 0
	.type	 PokeSum_CreateWindows,function
	.thumb_func
PokeSum_CreateWindows:
	push	{r4, r5, lr}
	ldr	r0, .L1086
	bl	InitWindows
	mov	r4, #0x0
.L1069:
	lsl	r0, r4, #0x3
	ldr	r1, .L1086+0x4
	add	r0, r0, r1
	bl	AddWindow
	ldr	r2, .L1086+0x8
	ldr	r1, [r2]
	mov	r3, #0xc0
	lsl	r3, r3, #0x6
	add	r1, r1, r3
	add	r1, r1, r4
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L1069	@cond_branch
	mov	r4, #0x0
	add	r5, r2, #0
.L1074:
	ldr	r0, [r5]
	ldr	r1, .L1086+0xc
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L1077	@cond_branch
	cmp	r0, #0x1
	bgt	.L1082	@cond_branch
	cmp	r0, #0
	beq	.L1076	@cond_branch
	b	.L1073
.L1087:
	.align	2, 0
.L1086:
	.word	sWindowTemplates_Dummy
	.word	sWindowTemplates_Permanent_Bg1
	.word	sMonSummaryScreen
	.word	0x3214
.L1082:
	cmp	r0, #0x3
	bgt	.L1073	@cond_branch
	lsl	r0, r4, #0x3
	ldr	r1, .L1088
	b	.L1084
.L1089:
	.align	2, 0
.L1088:
	.word	sWindowTemplates_Moves
.L1076:
	lsl	r0, r4, #0x3
	ldr	r1, .L1090
	add	r0, r0, r1
	bl	AddWindow
	ldr	r1, [r5]
	add	r1, r1, r4
	ldr	r3, .L1090+0x4
	add	r1, r1, r3
	b	.L1085
.L1091:
	.align	2, 0
.L1090:
	.word	sWindowTemplates_Info
	.word	0x3003
.L1077:
	lsl	r0, r4, #0x3
	ldr	r1, .L1092
.L1084:
	add	r0, r0, r1
	bl	AddWindow
	ldr	r1, [r5]
	add	r1, r1, r4
	ldr	r2, .L1092+0x4
	add	r1, r1, r2
.L1085:
	strb	r0, [r1]
.L1073:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L1074	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1093:
	.align	2, 0
.L1092:
	.word	sWindowTemplates_Skills
	.word	0x3003
.Lfe61:
	.size	 PokeSum_CreateWindows,.Lfe61-PokeSum_CreateWindows
	.align	2, 0
	.type	 PokeSum_AddWindows,function
	.thumb_func
PokeSum_AddWindows:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r0, #0xa
	bl	GetGpuReg
	mov	r4, #0x3
	add	r5, r4, #0
	and	r5, r5, r0
	mov	r0, #0xc
	bl	GetGpuReg
	add	r3, r4, #0
	and	r3, r3, r0
	mov	r4, #0x0
	ldr	r2, .L1142
	mov	r0, #0xc0
	lsl	r0, r0, #0x6
	mov	ip, r0
	mov	r7, #0xff
	mov	r8, r2
.L1098:
	ldr	r0, [r2]
	add	r0, r0, ip
	add	r0, r0, r4
	ldrb	r1, [r0]
	orr	r1, r1, r7
	strb	r1, [r0]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x6
	bls	.L1098	@cond_branch
	mov	r2, r8
	ldr	r1, [r2]
	ldr	r4, .L1142+0x4
	add	r0, r1, r4
	ldrb	r2, [r0]
	cmp	r2, #0x1
	bne	.L1102	@cond_branch
	sub	r4, r4, #0x10
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L1101	@cond_branch
.L1102:
	cmp	r2, #0
	bne	.L1100	@cond_branch
	ldr	r2, .L1142+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L1100	@cond_branch
.L1101:
	cmp	r3, r5
	bls	.L1103	@cond_branch
	mov	r4, #0x0
.L1107:
	lsl	r0, r4, #0x3
	ldr	r1, .L1142+0xc
	add	r0, r0, r1
	bl	AddWindow
	ldr	r1, .L1142
	ldr	r1, [r1]
	mov	r2, #0xc0
	lsl	r2, r2, #0x6
	add	r1, r1, r2
	add	r1, r1, r4
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L1107	@cond_branch
	b	.L1115
.L1143:
	.align	2, 0
.L1142:
	.word	sMonSummaryScreen
	.word	0x3224
	.word	0x3214
	.word	sWindowTemplates_Permanent_Bg2
.L1103:
	mov	r4, #0x0
.L1113:
	lsl	r0, r4, #0x3
	ldr	r1, .L1144
	add	r0, r0, r1
	bl	AddWindow
	ldr	r1, .L1144+0x4
	ldr	r1, [r1]
	mov	r2, #0xc0
	lsl	r2, r2, #0x6
	add	r1, r1, r2
	add	r1, r1, r4
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L1113	@cond_branch
	b	.L1115
.L1145:
	.align	2, 0
.L1144:
	.word	sWindowTemplates_Permanent_Bg1
	.word	sMonSummaryScreen
.L1100:
	cmp	r3, r5
	bls	.L1116	@cond_branch
	mov	r4, #0x0
.L1120:
	lsl	r0, r4, #0x3
	ldr	r1, .L1146
	add	r0, r0, r1
	bl	AddWindow
	ldr	r1, .L1146+0x4
	ldr	r1, [r1]
	mov	r2, #0xc0
	lsl	r2, r2, #0x6
	add	r1, r1, r2
	add	r1, r1, r4
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L1120	@cond_branch
	b	.L1115
.L1147:
	.align	2, 0
.L1146:
	.word	sWindowTemplates_Permanent_Bg1
	.word	sMonSummaryScreen
.L1116:
	mov	r4, #0x0
.L1126:
	lsl	r0, r4, #0x3
	ldr	r1, .L1148
	add	r0, r0, r1
	bl	AddWindow
	ldr	r1, .L1148+0x4
	ldr	r1, [r1]
	mov	r2, #0xc0
	lsl	r2, r2, #0x6
	add	r1, r1, r2
	add	r1, r1, r4
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L1126	@cond_branch
.L1115:
	mov	r4, #0x0
	ldr	r5, .L1148+0x4
.L1131:
	cmp	r6, #0x1
	beq	.L1135	@cond_branch
	cmp	r6, #0x1
	bgt	.L1139	@cond_branch
	cmp	r6, #0
	beq	.L1133	@cond_branch
	b	.L1135
.L1149:
	.align	2, 0
.L1148:
	.word	sWindowTemplates_Permanent_Bg2
	.word	sMonSummaryScreen
.L1139:
	cmp	r6, #0x3
	bgt	.L1135	@cond_branch
	lsl	r0, r4, #0x3
	ldr	r1, .L1150
	b	.L1141
.L1151:
	.align	2, 0
.L1150:
	.word	sWindowTemplates_Moves
.L1133:
	lsl	r0, r4, #0x3
	ldr	r1, .L1152
	b	.L1141
.L1153:
	.align	2, 0
.L1152:
	.word	sWindowTemplates_Info
.L1135:
	lsl	r0, r4, #0x3
	ldr	r1, .L1154
.L1141:
	add	r0, r0, r1
	bl	AddWindow
	ldr	r1, [r5]
	add	r1, r1, r4
	ldr	r2, .L1154+0x4
	add	r1, r1, r2
	strb	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L1131	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1155:
	.align	2, 0
.L1154:
	.word	sWindowTemplates_Skills
	.word	0x3003
.Lfe62:
	.size	 PokeSum_AddWindows,.Lfe62-PokeSum_AddWindows
	.align	2, 0
	.type	 PokeSum_RemoveWindows,function
	.thumb_func
PokeSum_RemoveWindows:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r5, .L1162
.L1160:
	ldr	r0, [r5]
	mov	r1, #0xc0
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	RemoveWindow
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x6
	bls	.L1160	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1163:
	.align	2, 0
.L1162:
	.word	sMonSummaryScreen
.Lfe63:
	.size	 PokeSum_RemoveWindows,.Lfe63-PokeSum_RemoveWindows
	.align	2, 0
	.type	 PokeSum_SetHelpContext,function
	.thumb_func
PokeSum_SetHelpContext:
	push	{lr}
	ldr	r0, .L1176
	ldr	r0, [r0]
	ldr	r1, .L1176+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L1167	@cond_branch
	cmp	r0, #0x1
	bgt	.L1172	@cond_branch
	cmp	r0, #0
	beq	.L1166	@cond_branch
	b	.L1165
.L1177:
	.align	2, 0
.L1176:
	.word	sMonSummaryScreen
	.word	0x3214
.L1172:
	cmp	r0, #0x3
	bgt	.L1165	@cond_branch
	mov	r0, #0x8
	b	.L1175
.L1166:
	mov	r0, #0x6
	b	.L1175
.L1167:
	mov	r0, #0x7
.L1175:
	bl	SetHelpContext
.L1165:
	pop	{r0}
	bx	r0
.Lfe64:
	.size	 PokeSum_SetHelpContext,.Lfe64-PokeSum_SetHelpContext
	.align	2, 0
	.type	 PokeSum_BufferOtName_IsEqualToCurrentOwner,function
	.thumb_func
PokeSum_BufferOtName_IsEqualToCurrentOwner:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	ldr	r5, .L1186
	ldr	r0, [r5]
	ldr	r1, .L1186+0x4
	add	r0, r0, r1
	ldr	r1, [r0]
	ldr	r0, .L1186+0x8
	cmp	r1, r0
	bne	.L1179	@cond_branch
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1186+0xc
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r0, r2, #0x4
	add	r0, r1, r0
	ldrh	r4, [r0]
	ldr	r0, [r5]
	ldr	r3, .L1186+0x10
	add	r0, r0, r3
	add	r2, r2, #0x8
	add	r1, r1, r2
	bl	StringCopy
	b	.L1180
.L1187:
	.align	2, 0
.L1186:
	.word	sMonSummaryScreen
	.word	0x32f4
	.word	gEnemyParty
	.word	gLinkPlayers
	.word	0x304c
.L1179:
	bl	GetPlayerTrainerId
	add	r4, r0, #0
	ldr	r0, .L1188
	and	r4, r4, r0
	ldr	r0, [r5]
	ldr	r1, .L1188+0x4
	add	r0, r0, r1
	ldr	r1, .L1188+0x8
	ldr	r1, [r1]
	bl	StringCopy
.L1180:
	add	r0, r6, #0
	mov	r1, #0x1
	bl	GetMonData
	ldr	r1, .L1188
	and	r1, r1, r0
	cmp	r4, r1
	bne	.L1185	@cond_branch
	ldr	r4, .L1188+0xc
	ldr	r2, [r4]
	ldr	r5, .L1188+0x10
	add	r2, r2, r5
	add	r0, r6, #0
	mov	r1, #0x7
	bl	GetMonData
	ldr	r1, [r4]
	ldr	r2, .L1188+0x4
	add	r0, r1, r2
	add	r1, r1, r5
	bl	StringCompareWithoutExtCtrlCodes
	cmp	r0, #0
	beq	.L1182	@cond_branch
.L1185:
	mov	r0, #0x0
	b	.L1184
.L1189:
	.align	2, 0
.L1188:
	.word	0xffff
	.word	0x304c
	.word	gSaveBlock2Ptr
	.word	sMonSummaryScreen
	.word	0x3058
.L1182:
	mov	r0, #0x1
.L1184:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe65:
	.size	 PokeSum_BufferOtName_IsEqualToCurrentOwner,.Lfe65-PokeSum_BufferOtName_IsEqualToCurrentOwner
	.align	2, 0
	.type	 PokeSum_DrawPageProgressTiles,function
	.thumb_func
PokeSum_DrawPageProgressTiles:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	ldr	r0, .L1204
	ldr	r1, [r0]
	ldr	r2, .L1204+0x4
	add	r0, r1, r2
	ldrb	r7, [r0]
	cmp	r7, #0x1
	bne	.LCB10451
	b	.L1195	@long jump
.LCB10451:
	cmp	r7, #0x1
	bgt	.L1202	@cond_branch
	cmp	r7, #0
	beq	.L1192	@cond_branch
	b	.L1191
.L1205:
	.align	2, 0
.L1204:
	.word	sMonSummaryScreen
	.word	0x3214
.L1202:
	cmp	r7, #0x2
	bne	.LCB10467
	b	.L1196	@long jump
.LCB10467:
	cmp	r7, #0x3
	bne	.LCB10469
	b	.L1197	@long jump
.LCB10469:
	b	.L1191
.L1192:
	mov	r2, #0xc8
	lsl	r2, r2, #0x6
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1193	@cond_branch
	mov	r1, #0xb5
	lsl	r1, r1, #0x1
	mov	r4, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xd
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r1, #0xbd
	lsl	r1, r1, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xd
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1206
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xe
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1206+0x4
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xe
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	ldr	r6, .L1206+0x8
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	add	r1, r6, #0
	mov	r2, #0xf
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r5, .L1206+0xc
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	add	r1, r5, #0
	mov	r2, #0xf
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1206+0x10
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x10
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1206+0x14
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x10
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	add	r1, r6, #0
	mov	r2, #0x11
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	add	r1, r5, #0
	mov	r2, #0x11
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	mov	r1, #0xb7
	lsl	r1, r1, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x12
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r1, #0xbf
	lsl	r1, r1, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	b	.L1203
.L1207:
	.align	2, 0
.L1206:
	.word	0x169
	.word	0x179
	.word	0x16b
	.word	0x17b
	.word	0x16d
	.word	0x17d
.L1193:
	mov	r1, #0xb5
	lsl	r1, r1, #0x1
	mov	r4, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xd
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r1, #0xbd
	lsl	r1, r1, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xd
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1208
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xe
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1208+0x4
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xe
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1208+0x8
	mov	r0, #0x4
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	str	r7, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xf
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	b	.L1191
.L1209:
	.align	2, 0
.L1208:
	.word	0x189
	.word	0x199
	.word	0x15b
.L1195:
	mov	r1, #0xc5
	lsl	r1, r1, #0x1
	str	r7, [sp]
	str	r7, [sp, #0x4]
	mov	r4, #0x0
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xd
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r1, #0xcd
	lsl	r1, r1, #0x1
	str	r7, [sp]
	str	r7, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xd
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	mov	r1, #0xad
	lsl	r1, r1, #0x1
	str	r7, [sp]
	str	r7, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xe
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r1, #0xb6
	lsl	r1, r1, #0x1
	str	r7, [sp]
	str	r7, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xe
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	mov	r1, #0xb5
	lsl	r1, r1, #0x1
	str	r7, [sp]
	str	r7, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xf
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r1, #0xbd
	lsl	r1, r1, #0x1
	str	r7, [sp]
	str	r7, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xf
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1210
	str	r7, [sp]
	str	r7, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x10
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1210+0x4
	str	r7, [sp]
	str	r7, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x10
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1210+0x8
	str	r7, [sp]
	str	r7, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x11
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1210+0xc
	str	r7, [sp]
	str	r7, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x11
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	mov	r1, #0xb7
	lsl	r1, r1, #0x1
	str	r7, [sp]
	str	r7, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x12
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r1, #0xbf
	lsl	r1, r1, #0x1
	str	r7, [sp]
	str	r7, [sp, #0x4]
	str	r4, [sp, #0x8]
	b	.L1203
.L1211:
	.align	2, 0
.L1210:
	.word	0x169
	.word	0x179
	.word	0x16b
	.word	0x17b
.L1196:
	mov	r0, #0xc5
	lsl	r0, r0, #0x1
	mov	sl, r0
	mov	r4, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r5, #0x0
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, sl
	mov	r2, #0xd
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r2, #0xcd
	lsl	r2, r2, #0x1
	mov	r9, r2
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, r9
	mov	r2, #0xd
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	mov	r0, #0xad
	lsl	r0, r0, #0x1
	mov	r8, r0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, r8
	mov	r2, #0xe
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r6, #0xb6
	lsl	r6, r6, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	add	r1, r6, #0
	mov	r2, #0xe
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, sl
	mov	r2, #0xf
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, r9
	mov	r2, #0xf
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, r8
	mov	r2, #0x10
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	add	r1, r6, #0
	mov	r2, #0x10
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	mov	r1, #0xb5
	lsl	r1, r1, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x11
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r1, #0xbd
	lsl	r1, r1, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x11
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1212
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x12
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1212+0x4
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
.L1203:
	mov	r0, #0x3
	mov	r2, #0x12
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	b	.L1191
.L1213:
	.align	2, 0
.L1212:
	.word	0x189
	.word	0x199
.L1197:
	ldr	r2, .L1214
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L1198	@cond_branch
	mov	r1, #0xad
	lsl	r1, r1, #0x1
	mov	r6, #0x4
	str	r6, [sp]
	mov	r5, #0x1
	str	r5, [sp, #0x4]
	mov	r4, #0x0
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xd
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r1, #0xb6
	lsl	r1, r1, #0x1
	str	r6, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0xd
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	b	.L1199
.L1215:
	.align	2, 0
.L1214:
	.word	0x3208
.L1198:
	mov	r0, #0xc5
	lsl	r0, r0, #0x1
	mov	sl, r0
	mov	r4, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r5, #0x0
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, sl
	mov	r2, #0xd
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r2, #0xcd
	lsl	r2, r2, #0x1
	mov	r9, r2
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, r9
	mov	r2, #0xd
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	mov	r0, #0xad
	lsl	r0, r0, #0x1
	mov	r8, r0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, r8
	mov	r2, #0xe
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r6, #0xb6
	lsl	r6, r6, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	add	r1, r6, #0
	mov	r2, #0xe
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, sl
	mov	r2, #0xf
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, r9
	mov	r2, #0xf
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, r8
	mov	r2, #0x10
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	add	r1, r6, #0
	mov	r2, #0x10
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
.L1199:
	ldr	r1, .L1216
	mov	r4, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r5, #0x0
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x11
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1216+0x4
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x11
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1216+0x8
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x12
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	ldr	r1, .L1216+0xc
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r0, #0x3
	mov	r2, #0x12
	mov	r3, #0x1
	bl	FillBgTilemapBufferRect
.L1191:
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1217:
	.align	2, 0
.L1216:
	.word	0x18b
	.word	0x19b
	.word	0x189
	.word	0x199
.Lfe66:
	.size	 PokeSum_DrawPageProgressTiles,.Lfe66-PokeSum_DrawPageProgressTiles
	.align	2, 0
	.type	 PokeSum_PrintMonTypeIcons,function
	.thumb_func
PokeSum_PrintMonTypeIcons:
	push	{r4, r5, r6, lr}
	ldr	r6, .L1230
	ldr	r1, [r6]
	ldr	r2, .L1230+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bgt	.L1229	@cond_branch
	cmp	r0, #0x1
	bge	.L1219	@cond_branch
	cmp	r0, #0
	beq	.L1220	@cond_branch
	b	.L1219
.L1231:
	.align	2, 0
.L1230:
	.word	sMonSummaryScreen
	.word	0x3214
.L1229:
	cmp	r0, #0x3
	beq	.L1225	@cond_branch
	b	.L1219
.L1220:
	mov	r3, #0xc8
	lsl	r3, r3, #0x6
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1219	@cond_branch
	ldr	r2, .L1232
	add	r0, r1, r2
	ldrb	r0, [r0]
	ldr	r4, .L1232+0x4
	add	r1, r1, r4
	ldrb	r1, [r1]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r2, #0x2f
	mov	r3, #0x23
	bl	BlitMenuInfoIcon
	ldr	r1, [r6]
	add	r4, r1, r4
	ldr	r3, .L1232+0x8
	add	r0, r1, r3
	ldrb	r2, [r0]
	ldrb	r0, [r4]
	cmp	r0, r2
	beq	.L1219	@cond_branch
	ldr	r3, .L1232
	add	r0, r1, r3
	ldrb	r0, [r0]
	add	r1, r2, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r2, #0x53
	mov	r3, #0x23
	bl	BlitMenuInfoIcon
	b	.L1219
.L1233:
	.align	2, 0
.L1232:
	.word	0x3003
	.word	0x3220
	.word	0x3221
.L1225:
	ldr	r5, .L1234
	add	r0, r1, r5
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r1, [r6]
	add	r0, r1, r5
	ldrb	r0, [r0]
	ldr	r4, .L1234+0x4
	add	r1, r1, r4
	ldrb	r1, [r1]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r2, #0x0
	mov	r3, #0x3
	bl	BlitMenuInfoIcon
	ldr	r2, [r6]
	add	r4, r2, r4
	ldr	r1, .L1234+0x8
	add	r0, r2, r1
	ldrb	r1, [r0]
	ldrb	r0, [r4]
	cmp	r0, r1
	beq	.L1226	@cond_branch
	add	r0, r2, r5
	ldrb	r0, [r0]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r2, #0x24
	mov	r3, #0x3
	bl	BlitMenuInfoIcon
.L1226:
	ldr	r0, [r6]
	add	r0, r0, r5
	ldrb	r0, [r0]
	bl	PutWindowTilemap
.L1219:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1235:
	.align	2, 0
.L1234:
	.word	0x3006
	.word	0x3220
	.word	0x3221
.Lfe67:
	.size	 PokeSum_PrintMonTypeIcons,.Lfe67-PokeSum_PrintMonTypeIcons
	.align	2, 0
	.globl	GetLastViewedMonIndex
	.type	 GetLastViewedMonIndex,function
	.thumb_func
GetLastViewedMonIndex:
	ldr	r0, .L1237
	ldrb	r0, [r0]
	bx	lr
.L1238:
	.align	2, 0
.L1237:
	.word	sLastViewedMonIndex
.Lfe68:
	.size	 GetLastViewedMonIndex,.Lfe68-GetLastViewedMonIndex
	.align	2, 0
	.globl	GetMoveSlotToReplace
	.type	 GetMoveSlotToReplace,function
	.thumb_func
GetMoveSlotToReplace:
	ldr	r0, .L1240
	ldrb	r0, [r0]
	bx	lr
.L1241:
	.align	2, 0
.L1240:
	.word	sMoveSwapCursorPos
.Lfe69:
	.size	 GetMoveSlotToReplace,.Lfe69-GetMoveSlotToReplace
	.align	2, 0
	.globl	SetPokemonSummaryScreenMode
	.type	 SetPokemonSummaryScreenMode,function
	.thumb_func
SetPokemonSummaryScreenMode:
	ldr	r1, .L1243
	ldr	r1, [r1]
	ldr	r2, .L1243+0x4
	add	r1, r1, r2
	strb	r0, [r1]
	bx	lr
.L1244:
	.align	2, 0
.L1243:
	.word	sMonSummaryScreen
	.word	0x3208
.Lfe70:
	.size	 SetPokemonSummaryScreenMode,.Lfe70-SetPokemonSummaryScreenMode
	.align	2, 0
	.type	 IsMultiBattlePartner,function
	.thumb_func
IsMultiBattlePartner:
	push	{lr}
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0
	bne	.L1246	@cond_branch
	bl	IsMultiBattle
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1246	@cond_branch
	ldr	r0, .L1249
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1246	@cond_branch
	ldr	r0, .L1249+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bhi	.L1247	@cond_branch
	cmp	r0, #0x1
	bne	.L1246	@cond_branch
.L1247:
	mov	r0, #0x1
	b	.L1248
.L1250:
	.align	2, 0
.L1249:
	.word	gReceivedRemoteLinkPlayers
	.word	sLastViewedMonIndex
.L1246:
	mov	r0, #0x0
.L1248:
	pop	{r1}
	bx	r1
.Lfe71:
	.size	 IsMultiBattlePartner,.Lfe71-IsMultiBattlePartner
	.align	2, 0
	.type	 BufferSelectedMonData,function
	.thumb_func
BufferSelectedMonData:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L1254
	ldr	r1, [r0]
	ldr	r2, .L1254+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1252	@cond_branch
	add	r2, r2, #0xd8
	add	r0, r1, r2
	ldr	r4, [r0]
	bl	GetLastViewedMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r1, r1, r0
	add	r1, r1, r4
	add	r0, r5, #0
	mov	r2, #0x64
	bl	memcpy
	b	.L1253
.L1255:
	.align	2, 0
.L1254:
	.word	sMonSummaryScreen
	.word	0x321c
.L1252:
	ldr	r2, .L1256
	add	r0, r1, r2
	ldr	r4, [r0]
	bl	GetLastViewedMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x4
	add	r4, r4, r1
	add	r0, r4, #0
	add	r1, r5, #0
	bl	BoxMonToMon
.L1253:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1257:
	.align	2, 0
.L1256:
	.word	0x32f4
.Lfe72:
	.size	 BufferSelectedMonData,.Lfe72-BufferSelectedMonData
	.align	2, 0
	.type	 GetMonMoveBySlotId,function
	.thumb_func
GetMonMoveBySlotId:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r1, #0
	cmp	r1, #0x1
	beq	.L1261	@cond_branch
	cmp	r1, #0x1
	bgt	.L1265	@cond_branch
	cmp	r1, #0
	beq	.L1260	@cond_branch
	b	.L1263
.L1265:
	cmp	r2, #0x2
	beq	.L1262	@cond_branch
	b	.L1263
.L1260:
	mov	r1, #0xd
	b	.L1266
.L1261:
	mov	r1, #0xe
	b	.L1266
.L1262:
	mov	r1, #0xf
	b	.L1266
.L1263:
	mov	r1, #0x10
.L1266:
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.Lfe73:
	.size	 GetMonMoveBySlotId,.Lfe73-GetMonMoveBySlotId
	.align	2, 0
	.type	 GetMonPpByMoveSlot,function
	.thumb_func
GetMonPpByMoveSlot:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r1, #0
	cmp	r1, #0x1
	beq	.L1270	@cond_branch
	cmp	r1, #0x1
	bgt	.L1274	@cond_branch
	cmp	r1, #0
	beq	.L1269	@cond_branch
	b	.L1272
.L1274:
	cmp	r2, #0x2
	beq	.L1271	@cond_branch
	b	.L1272
.L1269:
	mov	r1, #0x11
	b	.L1275
.L1270:
	mov	r1, #0x12
	b	.L1275
.L1271:
	mov	r1, #0x13
	b	.L1275
.L1272:
	mov	r1, #0x14
.L1275:
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.Lfe74:
	.size	 GetMonPpByMoveSlot,.Lfe74-GetMonPpByMoveSlot
	.align	2, 0
	.type	 StatusToAilment,function
	.thumb_func
StatusToAilment:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	ldr	r6, .L1285
	ldr	r0, [r6]
	ldr	r5, .L1285+0x4
	add	r0, r0, r5
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.L1277	@cond_branch
	mov	r0, #0x7
	b	.L1284
.L1286:
	.align	2, 0
.L1285:
	.word	sMonSummaryScreen
	.word	0x3290
.L1277:
	mov	r0, #0x88
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L1278	@cond_branch
	mov	r0, #0x1
	b	.L1284
.L1278:
	mov	r0, #0x40
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L1279	@cond_branch
	mov	r0, #0x2
	b	.L1284
.L1279:
	mov	r0, #0x7
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L1280	@cond_branch
	mov	r0, #0x3
	b	.L1284
.L1280:
	mov	r0, #0x20
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L1281	@cond_branch
	mov	r0, #0x4
	b	.L1284
.L1281:
	mov	r0, #0x10
	and	r0, r0, r4
	cmp	r0, #0
	beq	.L1282	@cond_branch
	mov	r0, #0x5
	b	.L1284
.L1282:
	ldr	r0, [r6]
	add	r0, r0, r5
	mov	r1, #0x0
	bl	CheckPartyPokerus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1283	@cond_branch
	mov	r0, #0x0
	b	.L1284
.L1283:
	mov	r0, #0x6
.L1284:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe75:
	.size	 StatusToAilment,.Lfe75-StatusToAilment
	.align	2, 0
	.type	 Task_HandleInput_SelectMove,function
	.thumb_func
Task_HandleInput_SelectMove:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r6, .L1350
	ldr	r0, [r6]
	ldr	r7, .L1350+0x4
	add	r3, r0, r7
	ldrb	r1, [r3]
	cmp	r1, #0x1
	bne	.LCB11658
	b	.L1336	@long jump
.LCB11658:
	cmp	r1, #0x1
	bgt	.L1343	@cond_branch
	cmp	r1, #0
	beq	.L1289	@cond_branch
	b	.L1287
.L1351:
	.align	2, 0
.L1350:
	.word	sMonSummaryScreen
	.word	0x3288
.L1343:
	cmp	r1, #0x2
	bne	.LCB11674
	b	.L1337	@long jump
.LCB11674:
	cmp	r1, #0x3
	bne	.LCB11676
	b	.L1338	@long jump
.LCB11676:
	b	.L1287
.L1289:
	bl	IsActiveOverworldLinkBusy
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB11687
	b	.L1287	@long jump
.LCB11687:
	bl	IsLinkRecvQueueAtOverworldMax
	cmp	r0, #0x1
	bne	.LCB11691
	b	.L1287	@long jump
.LCB11691:
	ldr	r0, .L1352
	mov	r9, r0
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0
	beq	.L1292	@cond_branch
	ldr	r4, .L1352+0x4
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L1293	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, r7
	mov	r1, #0x2
	strb	r1, [r0]
	mov	r0, #0x5
	bl	PlaySE
	ldrb	r4, [r4]
	cmp	r4, #0
	bne	.LCB11720
	b	.L1287	@long jump
.LCB11720:
	ldr	r0, [r6]
	ldr	r2, .L1352+0x8
	add	r1, r0, r2
.L1297:
	sub	r4, r4, #0x1
	lsl	r0, r4, #0x1
	add	r0, r1, r0
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.LCB11735
	b	.L1346	@long jump
.LCB11735:
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L1297	@cond_branch
	b	.L1287
.L1353:
	.align	2, 0
.L1352:
	.word	gMain
	.word	sMoveSelectionCursorPos
	.word	0x3258
.L1293:
	mov	r0, #0x4
	strb	r0, [r4]
	ldr	r0, [r6]
	add	r0, r0, r7
	mov	r1, #0x2
	strb	r1, [r0]
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, [r6]
	ldr	r3, .L1354
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.LCB11771
	b	.L1287	@long jump
.LCB11771:
	ldrb	r4, [r4]
	cmp	r4, #0
	bne	.LCB11774
	b	.L1287	@long jump
.LCB11774:
	ldr	r6, .L1354+0x4
	add	r1, r1, r6
.L1305:
	sub	r4, r4, #0x1
	lsl	r0, r4, #0x1
	add	r0, r1, r0
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.LCB11789
	b	.L1345	@long jump
.LCB11789:
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L1305	@cond_branch
	b	.L1287
.L1355:
	.align	2, 0
.L1354:
	.word	0x3268
	.word	0x3258
.L1292:
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0
	beq	.L1309	@cond_branch
	ldr	r3, .L1356
	ldrb	r0, [r3]
	mov	ip, r3
	cmp	r0, #0x3
	bhi	.L1310	@cond_branch
	mov	r5, #0x4
	ldr	r0, [r6]
	add	r0, r0, r7
	mov	r4, #0x2
	strb	r4, [r0]
	ldr	r1, [r6]
	ldr	r6, .L1356+0x4
	add	r0, r1, r6
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1311	@cond_branch
	ldrb	r0, [r3]
	cmp	r0, #0x3
	bne	.L1312	@cond_branch
	strb	r2, [r3]
	add	r0, r1, r7
	strb	r4, [r0]
	b	.L1347
.L1357:
	.align	2, 0
.L1356:
	.word	sMoveSelectionCursorPos
	.word	0x3268
.L1312:
	mov	r5, #0x3
.L1311:
	mov	r0, ip
	ldrb	r4, [r0]
	ldr	r2, .L1358
	cmp	r4, r5
	bcs	.L1314	@cond_branch
	ldr	r0, [r2]
	ldr	r3, .L1358+0x4
	add	r1, r0, r3
.L1316:
	add	r4, r4, #0x1
	lsl	r0, r4, #0x1
	add	r0, r1, r0
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.LCB11881
	b	.L1346	@long jump
.LCB11881:
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r5
	bcc	.L1316	@cond_branch
.L1314:
	ldr	r0, [r2]
	ldr	r6, .L1358+0x8
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB11899
	b	.L1346	@long jump
.LCB11899:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r1, .L1358+0xc
	mov	r0, #0x0
	strb	r0, [r1]
	b	.L1287
.L1359:
	.align	2, 0
.L1358:
	.word	sMonSummaryScreen
	.word	0x3258
	.word	0x3268
	.word	sMoveSelectionCursorPos
.L1310:
	cmp	r0, #0x4
	beq	.LCB11921
	b	.L1287	@long jump
.LCB11921:
	strb	r2, [r3]
	ldr	r0, [r6]
	add	r0, r0, r7
	mov	r1, #0x2
	strb	r1, [r0]
.L1347:
	mov	r0, #0x5
	bl	PlaySE
	b	.L1287
.L1309:
	mov	r0, #0x1
	mov	r8, r0
	mov	r5, #0x1
	and	r5, r5, r1
	cmp	r5, #0
	beq	.L1324	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r3, .L1360
	ldrb	r5, [r3]
	cmp	r5, #0x4
	bne	.L1325	@cond_branch
	strb	r4, [r3]
	ldr	r0, .L1360+0x4
	strb	r4, [r0]
	ldr	r0, [r6]
	ldr	r1, .L1360+0x8
	add	r0, r0, r1
	strb	r4, [r0]
	mov	r0, #0x1
	bl	ShoworHideMoveSelectionCursor
	ldr	r0, [r6]
	ldr	r2, .L1360+0xc
	add	r0, r0, r2
	strb	r4, [r0]
	b	.L1348
.L1361:
	.align	2, 0
.L1360:
	.word	sMoveSelectionCursorPos
	.word	sMoveSwapCursorPos
	.word	0x3268
	.word	0x3224
.L1325:
	ldr	r1, [r6]
	ldr	r0, .L1362
	add	r2, r1, r0
	ldrb	r0, [r2]
	cmp	r0, #0x1
	beq	.L1326	@cond_branch
	ldr	r3, .L1362+0x4
	add	r0, r1, r3
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.LCB11998
	b	.L1287	@long jump
.LCB11998:
	ldr	r0, .L1362+0x8
	add	r0, r0, r9
	ldrb	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB12008
	b	.L1287	@long jump
.LCB12008:
	ldr	r0, .L1362+0xc
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.LCB12014
	b	.L1287	@long jump
.LCB12014:
	ldr	r0, .L1362+0x10
	strb	r5, [r0]
	mov	r6, r8
	strb	r6, [r2]
	b	.L1287
.L1363:
	.align	2, 0
.L1362:
	.word	0x3268
	.word	0x3024
	.word	0x439
	.word	gReceivedRemoteLinkPlayers
	.word	sMoveSwapCursorPos
.L1326:
	strb	r4, [r2]
	ldr	r1, .L1364
	ldrb	r0, [r3]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.LCB12044
	b	.L1287	@long jump
.LCB12044:
	ldr	r0, [r6]
	ldr	r1, .L1364+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1330	@cond_branch
	bl	SwapMonMoveSlots
	b	.L1331
.L1365:
	.align	2, 0
.L1364:
	.word	sMoveSwapCursorPos
	.word	0x321c
.L1330:
	bl	SwapBoxMonMoveSlots
.L1331:
	ldr	r4, .L1366
	ldr	r0, [r4]
	ldr	r2, .L1366+0x4
	add	r0, r0, r2
	bl	UpdateCurrentMonBufferFromPartyOrBox
	bl	BufferMonMoves
	ldr	r0, [r4]
	ldr	r3, .L1366+0x8
	add	r0, r0, r3
	mov	r1, #0x2
	b	.L1349
.L1367:
	.align	2, 0
.L1366:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x3288
.L1324:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB12100
	b	.L1287	@long jump
.LCB12100:
	ldr	r0, [r6]
	ldr	r1, .L1368
	add	r2, r0, r1
	ldrb	r0, [r2]
	cmp	r0, #0x1
	bne	.L1334	@cond_branch
	ldr	r0, .L1368+0x4
	ldr	r1, .L1368+0x8
	ldrb	r1, [r1]
	strb	r1, [r0]
	strb	r5, [r2]
	b	.L1287
.L1369:
	.align	2, 0
.L1368:
	.word	0x3268
	.word	sMoveSwapCursorPos
	.word	sMoveSelectionCursorPos
.L1334:
	ldr	r1, .L1370
	ldrb	r0, [r1]
	cmp	r0, #0x4
	bne	.L1335	@cond_branch
	strb	r5, [r1]
	ldr	r0, .L1370+0x4
	strb	r5, [r0]
.L1335:
	mov	r0, #0x1
	bl	ShoworHideMoveSelectionCursor
	ldr	r0, [r6]
	ldr	r2, .L1370+0x8
	add	r0, r0, r2
	strb	r5, [r0]
.L1348:
	ldr	r0, [r6]
	ldr	r4, .L1370+0xc
	add	r0, r0, r4
	ldrb	r0, [r0]
	bl	PokeSum_RemoveWindows
	ldr	r1, [r6]
	add	r1, r1, r4
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r6]
	add	r0, r0, r7
	mov	r3, r8
	strb	r3, [r0]
	b	.L1287
.L1371:
	.align	2, 0
.L1370:
	.word	sMoveSelectionCursorPos
	.word	sMoveSwapCursorPos
	.word	0x3224
	.word	0x3214
.L1336:
	ldr	r2, .L1372
	ldr	r6, .L1372+0x4
	add	r0, r0, r6
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldr	r1, .L1372+0x8
	str	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r3]
	b	.L1287
.L1373:
	.align	2, 0
.L1372:
	.word	gTasks
	.word	0x3018
	.word	Task_BackOutOfSelectMove
.L1337:
	bl	PokeSum_PrintRightPaneText
	bl	PokeSum_PrintBottomPaneText
	bl	PokeSum_PrintAbilityDataOrMoveTypes
	ldr	r0, [r6]
	add	r0, r0, r7
	mov	r1, #0x3
	b	.L1349
.L1345:
.L1346:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1374
	strb	r4, [r0]
	b	.L1287
.L1375:
	.align	2, 0
.L1374:
	.word	sMoveSelectionCursorPos
.L1338:
	bl	IsActiveOverworldLinkBusy
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1287	@cond_branch
	bl	IsLinkRecvQueueAtOverworldMax
	cmp	r0, #0x1
	beq	.L1287	@cond_branch
	ldr	r0, [r6]
	ldr	r1, .L1376
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r6]
	ldr	r2, .L1376+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r6]
	ldr	r3, .L1376+0x8
	add	r0, r0, r3
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r6]
	ldr	r1, .L1376+0xc
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	ldr	r0, [r6]
	add	r0, r0, r7
	mov	r1, #0x0
.L1349:
	strb	r1, [r0]
.L1287:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1377:
	.align	2, 0
.L1376:
	.word	0x3003
	.word	0x3004
	.word	0x3005
	.word	0x3006
.Lfe76:
	.size	 Task_HandleInput_SelectMove,.Lfe76-Task_HandleInput_SelectMove
	.align	2, 0
	.type	 SwapMonMoveSlots,function
	.thumb_func
SwapMonMoveSlots:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	ldr	r0, .L1379
	ldr	r0, [r0]
	ldr	r1, .L1379+0x4
	add	r0, r0, r1
	ldr	r6, [r0]
	bl	GetLastViewedMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r0, r0, r1
	add	r6, r6, r0
	ldr	r3, .L1379+0x8
	ldrb	r1, [r3]
	add	r1, r1, #0xd
	add	r0, r6, #0
	bl	GetMonData
	mov	r1, sp
	add	r1, r1, #0x2
	str	r1, [sp, #0x8]
	strh	r0, [r1]
	ldr	r3, .L1379+0xc
	mov	r8, r3
	ldrb	r1, [r3]
	add	r1, r1, #0xd
	add	r0, r6, #0
	bl	GetMonData
	mov	r1, sp
	strh	r0, [r1]
	ldr	r0, .L1379+0x8
	ldrb	r1, [r0]
	add	r1, r1, #0x11
	add	r0, r6, #0
	bl	GetMonData
	mov	r1, #0x5
	add	r1, r1, sp
	mov	sl, r1
	strb	r0, [r1]
	mov	r3, r8
	ldrb	r1, [r3]
	add	r1, r1, #0x11
	add	r0, r6, #0
	bl	GetMonData
	add	r7, sp, #0x4
	strb	r0, [r7]
	add	r0, r6, #0
	mov	r1, #0x15
	bl	GetMonData
	mov	r4, sp
	add	r4, r4, #0x6
	strb	r0, [r4]
	ldr	r5, .L1379+0x10
	ldr	r0, .L1379+0x8
	ldrb	r1, [r0]
	add	r0, r1, r5
	ldrb	r0, [r0]
	mov	r9, r0
	ldrb	r3, [r4]
	add	r2, r3, #0
	mov	r0, r9
	and	r2, r2, r0
	lsl	r1, r1, #0x1
	asr	r2, r2, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r1, r8
	ldrb	r0, [r1]
	add	r1, r0, r5
	ldrb	r1, [r1]
	and	r1, r1, r3
	lsl	r0, r0, #0x1
	asr	r1, r1, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, r9
	bic	r3, r3, r0
	strb	r3, [r4]
	mov	r3, r8
	ldrb	r0, [r3]
	add	r0, r0, r5
	ldrb	r3, [r0]
	ldrb	r0, [r4]
	bic	r0, r0, r3
	strb	r0, [r4]
	mov	r3, r8
	ldrb	r0, [r3]
	lsl	r0, r0, #0x1
	lsl	r2, r2, r0
	ldr	r3, .L1379+0x8
	ldrb	r0, [r3]
	lsl	r0, r0, #0x1
	lsl	r1, r1, r0
	add	r2, r2, r1
	ldrb	r0, [r4]
	orr	r0, r0, r2
	strb	r0, [r4]
	ldrb	r1, [r3]
	add	r1, r1, #0xd
	add	r0, r6, #0
	mov	r2, sp
	bl	SetMonData
	mov	r0, r8
	ldrb	r1, [r0]
	add	r1, r1, #0xd
	add	r0, r6, #0
	ldr	r2, [sp, #0x8]
	bl	SetMonData
	ldr	r3, .L1379+0x8
	ldrb	r1, [r3]
	add	r1, r1, #0x11
	add	r0, r6, #0
	add	r2, r7, #0
	bl	SetMonData
	mov	r0, r8
	ldrb	r1, [r0]
	add	r1, r1, #0x11
	add	r0, r6, #0
	mov	r2, sl
	bl	SetMonData
	add	r0, r6, #0
	mov	r1, #0x15
	add	r2, r4, #0
	bl	SetMonData
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1380:
	.align	2, 0
.L1379:
	.word	sMonSummaryScreen
	.word	0x32f4
	.word	sMoveSelectionCursorPos
	.word	sMoveSwapCursorPos
	.word	gPPUpGetMask
.Lfe77:
	.size	 SwapMonMoveSlots,.Lfe77-SwapMonMoveSlots
	.align	2, 0
	.type	 SwapBoxMonMoveSlots,function
	.thumb_func
SwapBoxMonMoveSlots:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	ldr	r0, .L1382
	ldr	r0, [r0]
	ldr	r1, .L1382+0x4
	add	r0, r0, r1
	ldr	r6, [r0]
	bl	GetLastViewedMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x4
	add	r6, r6, r1
	ldr	r3, .L1382+0x8
	ldrb	r1, [r3]
	add	r1, r1, #0xd
	add	r0, r6, #0
	bl	GetBoxMonData
	mov	r1, sp
	add	r1, r1, #0x2
	str	r1, [sp, #0x8]
	strh	r0, [r1]
	ldr	r3, .L1382+0xc
	mov	r8, r3
	ldrb	r1, [r3]
	add	r1, r1, #0xd
	add	r0, r6, #0
	bl	GetBoxMonData
	mov	r1, sp
	strh	r0, [r1]
	ldr	r0, .L1382+0x8
	ldrb	r1, [r0]
	add	r1, r1, #0x11
	add	r0, r6, #0
	bl	GetBoxMonData
	mov	r1, #0x5
	add	r1, r1, sp
	mov	sl, r1
	strb	r0, [r1]
	mov	r3, r8
	ldrb	r1, [r3]
	add	r1, r1, #0x11
	add	r0, r6, #0
	bl	GetBoxMonData
	add	r7, sp, #0x4
	strb	r0, [r7]
	add	r0, r6, #0
	mov	r1, #0x15
	bl	GetBoxMonData
	mov	r4, sp
	add	r4, r4, #0x6
	strb	r0, [r4]
	ldr	r5, .L1382+0x10
	ldr	r0, .L1382+0x8
	ldrb	r1, [r0]
	add	r0, r1, r5
	ldrb	r0, [r0]
	mov	r9, r0
	ldrb	r3, [r4]
	add	r2, r3, #0
	mov	r0, r9
	and	r2, r2, r0
	lsl	r1, r1, #0x1
	asr	r2, r2, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r1, r8
	ldrb	r0, [r1]
	add	r1, r0, r5
	ldrb	r1, [r1]
	and	r1, r1, r3
	lsl	r0, r0, #0x1
	asr	r1, r1, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, r9
	bic	r3, r3, r0
	strb	r3, [r4]
	mov	r3, r8
	ldrb	r0, [r3]
	add	r0, r0, r5
	ldrb	r3, [r0]
	ldrb	r0, [r4]
	bic	r0, r0, r3
	strb	r0, [r4]
	mov	r3, r8
	ldrb	r0, [r3]
	lsl	r0, r0, #0x1
	lsl	r2, r2, r0
	ldr	r3, .L1382+0x8
	ldrb	r0, [r3]
	lsl	r0, r0, #0x1
	lsl	r1, r1, r0
	add	r2, r2, r1
	ldrb	r0, [r4]
	orr	r0, r0, r2
	strb	r0, [r4]
	ldrb	r1, [r3]
	add	r1, r1, #0xd
	add	r0, r6, #0
	mov	r2, sp
	bl	SetBoxMonData
	mov	r0, r8
	ldrb	r1, [r0]
	add	r1, r1, #0xd
	add	r0, r6, #0
	ldr	r2, [sp, #0x8]
	bl	SetBoxMonData
	ldr	r3, .L1382+0x8
	ldrb	r1, [r3]
	add	r1, r1, #0x11
	add	r0, r6, #0
	add	r2, r7, #0
	bl	SetBoxMonData
	mov	r0, r8
	ldrb	r1, [r0]
	add	r1, r1, #0x11
	add	r0, r6, #0
	mov	r2, sl
	bl	SetBoxMonData
	add	r0, r6, #0
	mov	r1, #0x15
	add	r2, r4, #0
	bl	SetBoxMonData
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1383:
	.align	2, 0
.L1382:
	.word	sMonSummaryScreen
	.word	0x32f4
	.word	sMoveSelectionCursorPos
	.word	sMoveSwapCursorPos
	.word	gPPUpGetMask
.Lfe78:
	.size	 SwapBoxMonMoveSlots,.Lfe78-SwapBoxMonMoveSlots
	.align	2, 0
	.type	 UpdateCurrentMonBufferFromPartyOrBox,function
	.thumb_func
UpdateCurrentMonBufferFromPartyOrBox:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L1387
	ldr	r1, [r0]
	ldr	r2, .L1387+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1385	@cond_branch
	add	r2, r2, #0xd8
	add	r0, r1, r2
	ldr	r4, [r0]
	bl	GetLastViewedMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x64
	mul	r1, r1, r0
	add	r1, r1, r4
	add	r0, r5, #0
	mov	r2, #0x64
	bl	memcpy
	b	.L1386
.L1388:
	.align	2, 0
.L1387:
	.word	sMonSummaryScreen
	.word	0x321c
.L1385:
	ldr	r2, .L1389
	add	r0, r1, r2
	ldr	r4, [r0]
	bl	GetLastViewedMonIndex
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x4
	add	r4, r4, r1
	add	r0, r4, #0
	add	r1, r5, #0
	bl	BoxMonToMon
.L1386:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1390:
	.align	2, 0
.L1389:
	.word	0x32f4
.Lfe79:
	.size	 UpdateCurrentMonBufferFromPartyOrBox,.Lfe79-UpdateCurrentMonBufferFromPartyOrBox
	.align	2, 0
	.type	 PokeSum_CanForgetSelectedMove,function
	.thumb_func
PokeSum_CanForgetSelectedMove:
	push	{r4, lr}
	ldr	r4, .L1394
	ldr	r0, [r4]
	ldr	r1, .L1394+0x4
	add	r0, r0, r1
	ldr	r1, .L1394+0x8
	ldrb	r1, [r1]
	bl	GetMonMoveBySlotId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	IsMoveHm
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1392	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L1394+0xc
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x3
	beq	.L1392	@cond_branch
	mov	r0, #0x0
	b	.L1393
.L1395:
	.align	2, 0
.L1394:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	sMoveSelectionCursorPos
	.word	0x3208
.L1392:
	mov	r0, #0x1
.L1393:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe80:
	.size	 PokeSum_CanForgetSelectedMove,.Lfe80-PokeSum_CanForgetSelectedMove
	.align	2, 0
	.type	 Task_InputHandler_SelectOrForgetMove,function
	.thumb_func
Task_InputHandler_SelectOrForgetMove:
	push	{r4, r5, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, .L1446
	ldr	r0, [r1]
	ldr	r3, .L1446+0x4
	add	r0, r0, r3
	ldrb	r0, [r0]
	add	r5, r1, #0
	cmp	r0, #0x6
	bls	.LCB12808
	b	.L1437	@long jump
.LCB12808:
	lsl	r0, r0, #0x2
	ldr	r1, .L1446+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1447:
	.align	2, 0
.L1446:
	.word	sMonSummaryScreen
	.word	0x3288
	.word	.L1439
	.align	2, 0
	.align	2, 0
.L1439:
	.word	.L1398
	.word	.L1399
	.word	.L1401
	.word	.L1431
	.word	.L1432
	.word	.L1435
	.word	.L1436
.L1398:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L1448
	ldr	r1, [r0]
	ldr	r4, .L1448+0x4
	add	r1, r1, r4
	b	.L1442
.L1449:
	.align	2, 0
.L1448:
	.word	sMonSummaryScreen
	.word	0x3288
.L1399:
	ldr	r0, .L1450
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB12860
	b	.L1396	@long jump
.LCB12860:
	bl	PokeSum_TryPlayMonCry
	ldr	r0, .L1450+0x4
	ldr	r1, [r0]
	ldr	r0, .L1450+0x8
	add	r1, r1, r0
	b	.L1442
.L1451:
	.align	2, 0
.L1450:
	.word	gPaletteFade
	.word	sMonSummaryScreen
	.word	0x3288
.L1401:
	ldr	r0, .L1452
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x40
	and	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0
	beq	.L1402	@cond_branch
	ldr	r4, .L1452+0x4
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L1403	@cond_branch
	ldr	r0, [r5]
	ldr	r1, .L1452+0x8
	add	r0, r0, r1
	mov	r1, #0x3
	strb	r1, [r0]
	mov	r0, #0x5
	bl	PlaySE
	ldrb	r4, [r4]
	cmp	r4, #0
	bne	.LCB12909
	b	.L1396	@long jump
.LCB12909:
	ldr	r0, [r5]
	ldr	r2, .L1452+0xc
	add	r1, r0, r2
.L1407:
	sub	r4, r4, #0x1
	lsl	r0, r4, #0x1
	add	r0, r1, r0
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.LCB12924
	b	.L1440	@long jump
.LCB12924:
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L1407	@cond_branch
	b	.L1396
.L1453:
	.align	2, 0
.L1452:
	.word	gMain
	.word	sMoveSelectionCursorPos
	.word	0x3288
	.word	0x3258
.L1403:
	mov	r0, #0x4
	strb	r0, [r4]
	ldr	r0, [r5]
	ldr	r3, .L1454
	add	r0, r0, r3
	b	.L1443
.L1455:
	.align	2, 0
.L1454:
	.word	0x3288
.L1402:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1412	@cond_branch
	ldr	r3, .L1456
	ldrb	r0, [r3]
	cmp	r0, #0x3
	bhi	.L1413	@cond_branch
	mov	r2, #0x4
	ldr	r0, [r5]
	ldr	r4, .L1456+0x4
	add	r0, r0, r4
	mov	r1, #0x3
	strb	r1, [r0]
	ldr	r1, [r5]
	sub	r4, r4, #0x20
	add	r0, r1, r4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1414	@cond_branch
	mov	r2, #0x3
.L1414:
	ldrb	r4, [r3]
	cmp	r4, r2
	bcs	.L1416	@cond_branch
	ldr	r0, .L1456+0x8
	add	r1, r1, r0
.L1418:
	add	r4, r4, #0x1
	lsl	r0, r4, #0x1
	add	r0, r1, r0
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.LCB13014
	b	.L1441	@long jump
.LCB13014:
	lsl	r0, r4, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, r2
	bcc	.L1418	@cond_branch
.L1416:
	ldr	r0, [r5]
	ldr	r1, .L1456+0xc
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.LCB13032
	b	.L1396	@long jump
.LCB13032:
	b	.L1441
.L1457:
	.align	2, 0
.L1456:
	.word	sMoveSelectionCursorPos
	.word	0x3288
	.word	0x3258
	.word	0x3268
.L1413:
	cmp	r0, #0x4
	beq	.LCB13048
	b	.L1396	@long jump
.LCB13048:
	strb	r2, [r3]
	ldr	r0, [r5]
	ldr	r2, .L1458
	add	r0, r0, r2
.L1443:
	mov	r1, #0x3
	strb	r1, [r0]
	mov	r0, #0x5
	bl	PlaySE
	b	.L1396
.L1459:
	.align	2, 0
.L1458:
	.word	0x3288
.L1412:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1425	@cond_branch
	bl	PokeSum_CanForgetSelectedMove
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L1427	@cond_branch
	ldr	r0, .L1460
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L1426	@cond_branch
.L1427:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r2, .L1460+0x4
	ldr	r0, .L1460
	ldrb	r0, [r0]
	strb	r0, [r2]
	ldr	r1, .L1460+0x8
	ldrb	r0, [r2]
	strh	r0, [r1]
	ldr	r0, .L1460+0xc
	ldr	r0, [r0]
	ldr	r3, .L1460+0x10
	add	r0, r0, r3
	b	.L1444
.L1461:
	.align	2, 0
.L1460:
	.word	sMoveSelectionCursorPos
	.word	sMoveSwapCursorPos
	.word	gSpecialVar_0x8005
	.word	sMonSummaryScreen
	.word	0x3288
.L1426:
	mov	r0, #0x1a
	bl	PlaySE
	ldr	r0, .L1462
	ldr	r0, [r0]
	ldr	r4, .L1462+0x4
	add	r0, r0, r4
	mov	r1, #0x5
	strb	r1, [r0]
	b	.L1396
.L1463:
	.align	2, 0
.L1462:
	.word	sMonSummaryScreen
	.word	0x3288
.L1425:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB13149
	b	.L1396	@long jump
.LCB13149:
	ldr	r1, .L1464
	mov	r0, #0x4
	strb	r0, [r1]
	ldr	r1, .L1464+0x4
	mov	r0, #0x4
	strh	r0, [r1]
	ldr	r0, [r5]
	ldr	r1, .L1464+0x8
	add	r0, r0, r1
.L1444:
	mov	r1, #0x6
	strb	r1, [r0]
	b	.L1396
.L1465:
	.align	2, 0
.L1464:
	.word	sMoveSwapCursorPos
	.word	gSpecialVar_0x8005
	.word	0x3288
.L1431:
	bl	PokeSum_PrintRightPaneText
	bl	PokeSum_PrintBottomPaneText
	bl	PokeSum_PrintAbilityDataOrMoveTypes
	ldr	r0, .L1466
	ldr	r0, [r0]
	ldr	r2, .L1466+0x4
	add	r0, r0, r2
	mov	r1, #0x4
	strb	r1, [r0]
	b	.L1396
.L1467:
	.align	2, 0
.L1466:
	.word	sMonSummaryScreen
	.word	0x3288
.L1432:
	bl	IsActiveOverworldLinkBusy
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB13201
	b	.L1396	@long jump
.LCB13201:
	bl	IsLinkRecvQueueAtOverworldMax
	cmp	r0, #0x1
	bne	.LCB13205
	b	.L1396	@long jump
.LCB13205:
	ldr	r4, .L1468
	ldr	r0, [r4]
	ldr	r3, .L1468+0x4
	add	r0, r0, r3
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r1, .L1468+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r2, .L1468+0xc
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r4]
	ldr	r3, .L1468+0x10
	add	r0, r0, r3
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	ldr	r0, [r4]
	ldr	r4, .L1468+0x14
	add	r0, r0, r4
	b	.L1445
.L1469:
	.align	2, 0
.L1468:
	.word	sMonSummaryScreen
	.word	0x3003
	.word	0x3004
	.word	0x3005
	.word	0x3006
	.word	0x3288
.L1435:
	ldr	r0, [r5]
	ldr	r4, .L1470
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x0
	str	r1, [sp]
	str	r1, [sp, #0x4]
	ldr	r1, .L1470+0x4
	str	r1, [sp, #0x8]
	mov	r1, #0x1
	neg	r1, r1
	str	r1, [sp, #0xc]
	ldr	r1, .L1470+0x8
	str	r1, [sp, #0x10]
	mov	r1, #0x2
	mov	r2, #0x7
	mov	r3, #0x2a
	bl	AddTextPrinterParameterized4
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	ldr	r0, [r5]
	ldr	r1, .L1470+0xc
	add	r0, r0, r1
.L1445:
	mov	r1, #0x2
	strb	r1, [r0]
	b	.L1396
.L1471:
	.align	2, 0
.L1470:
	.word	0x3004
	.word	sLevelNickTextColors
	.word	gText_PokeSum_HmMovesCantBeForgotten
	.word	0x3288
.L1436:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L1472
	ldr	r1, [r0]
	ldr	r2, .L1472+0x4
	add	r1, r1, r2
.L1442:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1396
.L1473:
	.align	2, 0
.L1472:
	.word	sMonSummaryScreen
	.word	0x3288
.L1440:
.L1441:
	mov	r0, #0x5
	bl	PlaySE
	ldr	r0, .L1474
	strb	r4, [r0]
	b	.L1396
.L1475:
	.align	2, 0
.L1474:
	.word	sMoveSelectionCursorPos
.L1437:
	ldr	r0, .L1476
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1396	@cond_branch
	add	r0, r2, #0
	bl	Task_DestroyResourcesOnExit
.L1396:
	add	sp, sp, #0x14
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1477:
	.align	2, 0
.L1476:
	.word	gPaletteFade
.Lfe81:
	.size	 Task_InputHandler_SelectOrForgetMove,.Lfe81-Task_InputHandler_SelectOrForgetMove
	.align	2, 0
	.type	 SpriteCB_PokeSum_MonPicSprite,function
	.thumb_func
SpriteCB_PokeSum_MonPicSprite:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	ldr	r0, .L1491
	ldr	r1, [r0]
	ldr	r2, .L1491+0x4
	add	r1, r1, r2
	ldrb	r1, [r1]
	add	r6, r0, #0
	cmp	r1, #0x1
	bhi	.L1478	@cond_branch
	ldr	r3, .L1491+0x8
	ldr	r2, [r3]
	ldrb	r0, [r2, #0x4]
	add	r1, r0, #0x1
	strb	r1, [r2, #0x4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r3, #0
	cmp	r0, #0x1
	bls	.L1478	@cond_branch
	ldr	r3, [r5]
	ldrb	r0, [r3, #0x8]
	cmp	r0, #0x1
	beq	.L1483	@cond_branch
	cmp	r0, #0x1
	bgt	.L1488	@cond_branch
	cmp	r0, #0
	beq	.L1482	@cond_branch
	b	.L1486
.L1492:
	.align	2, 0
.L1491:
	.word	sMonSummaryScreen
	.word	0x3020
	.word	sMonPicBounceState
.L1488:
	cmp	r0, #0x2
	beq	.L1484	@cond_branch
	b	.L1486
.L1482:
	ldr	r2, .L1493
	ldrb	r0, [r3]
	add	r1, r0, #0x1
	strb	r1, [r3]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r2
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	ldrh	r1, [r4, #0x22]
	add	r0, r0, r1
	strh	r0, [r4, #0x22]
	mov	r1, #0x3
	b	.L1481
.L1494:
	.align	2, 0
.L1493:
	.word	sMonPicBounceYDelta_Under60
.L1483:
	ldr	r2, .L1495
	ldrb	r0, [r3]
	add	r1, r0, #0x1
	strb	r1, [r3]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r2
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	ldrh	r2, [r4, #0x22]
	add	r0, r0, r2
	strh	r0, [r4, #0x22]
	mov	r1, #0x5
	b	.L1481
.L1496:
	.align	2, 0
.L1495:
	.word	sMonPicBounceYDelta_60to80
.L1484:
	ldr	r2, .L1497
	ldrb	r0, [r3]
	add	r1, r0, #0x1
	strb	r1, [r3]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r2
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	ldrh	r1, [r4, #0x22]
	add	r0, r0, r1
	b	.L1490
.L1498:
	.align	2, 0
.L1497:
	.word	sMonPicBounceYDelta_80to99
.L1486:
	ldr	r3, .L1499
	ldr	r2, [r5]
	ldrb	r0, [r2]
	add	r1, r0, #0x1
	strb	r1, [r2]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r3
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	ldrh	r2, [r4, #0x22]
	add	r0, r0, r2
.L1490:
	strh	r0, [r4, #0x22]
	mov	r1, #0x7
.L1481:
	ldr	r2, [r5]
	ldrb	r0, [r2]
	cmp	r0, r1
	bcc	.L1489	@cond_branch
	mov	r0, #0x0
	strb	r0, [r2]
	ldr	r1, [r6]
	ldr	r0, .L1499+0x4
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L1489:
	ldr	r1, [r5]
	mov	r0, #0x0
	strb	r0, [r1, #0x4]
.L1478:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1500:
	.align	2, 0
.L1499:
	.word	sMonPicBounceYDelta_Full
	.word	0x3020
.Lfe82:
	.size	 SpriteCB_PokeSum_MonPicSprite,.Lfe82-SpriteCB_PokeSum_MonPicSprite
	.align	2, 0
	.type	 SpriteCB_PokeSum_EggPicShake,function
	.thumb_func
SpriteCB_PokeSum_EggPicShake:
	push	{r4, r5, r6, lr}
	add	r3, r0, #0
	ldr	r5, .L1517
	ldr	r0, [r5]
	ldr	r6, .L1517+0x4
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bhi	.L1501	@cond_branch
	ldr	r4, .L1517+0x8
	ldr	r2, [r4]
	ldrb	r0, [r2, #0x8]
	cmp	r0, #0x1
	beq	.L1508	@cond_branch
	cmp	r0, #0x1
	ble	.L1505	@cond_branch
	cmp	r0, #0x2
	beq	.L1511	@cond_branch
.L1505:
	ldrb	r0, [r2, #0x4]
	add	r1, r0, #0x1
	strb	r1, [r2, #0x4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x77
	bls	.L1501	@cond_branch
	ldr	r2, .L1517+0xc
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, r2
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	ldrh	r2, [r3, #0x20]
	add	r0, r0, r2
	mov	r2, #0x0
	strh	r0, [r3, #0x20]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xa
	bls	.L1501	@cond_branch
	b	.L1516
.L1518:
	.align	2, 0
.L1517:
	.word	sMonSummaryScreen
	.word	0x3020
	.word	sMonPicBounceState
	.word	sEggPicShakeXDelta_ItWillTakeSomeTime
.L1508:
	ldrb	r0, [r2, #0x4]
	add	r1, r0, #0x1
	strb	r1, [r2, #0x4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x59
	bls	.L1501	@cond_branch
	ldr	r2, .L1519
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, r2
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	ldrh	r2, [r3, #0x20]
	add	r0, r0, r2
	mov	r2, #0x0
	strh	r0, [r3, #0x20]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xa
	bls	.L1501	@cond_branch
	b	.L1516
.L1520:
	.align	2, 0
.L1519:
	.word	sEggPicShakeXDelta_OccasionallyMoves
.L1511:
	ldrb	r0, [r2, #0x4]
	add	r1, r0, #0x1
	strb	r1, [r2, #0x4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3b
	bls	.L1501	@cond_branch
	ldr	r2, .L1521
	ldr	r1, [r4]
	ldrb	r0, [r1]
	add	r0, r0, r2
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	ldrh	r2, [r3, #0x20]
	add	r0, r0, r2
	mov	r2, #0x0
	strh	r0, [r3, #0x20]
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xe
	bls	.L1501	@cond_branch
.L1516:
	ldr	r0, [r4]
	strb	r2, [r0]
	ldr	r0, [r4]
	strb	r2, [r0, #0x4]
	ldr	r1, [r5]
	add	r1, r1, r6
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L1501:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1522:
	.align	2, 0
.L1521:
	.word	sEggPicShakeXDelta_AlmostReadyToHatch
.Lfe83:
	.size	 SpriteCB_PokeSum_EggPicShake,.Lfe83-SpriteCB_PokeSum_EggPicShake
	.align	2, 0
	.type	 SpriteCB_MonPicDummy,function
	.thumb_func
SpriteCB_MonPicDummy:
	bx	lr
.Lfe84:
	.size	 SpriteCB_MonPicDummy,.Lfe84-SpriteCB_MonPicDummy
	.align	2, 0
	.type	 PokeSum_CreateMonPicSprite,function
	.thumb_func
PokeSum_CreateMonPicSprite:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	ldr	r4, .L1534
	mov	r0, #0xc
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r5, .L1534+0x4
	ldr	r0, [r5]
	ldr	r4, .L1534+0x8
	add	r0, r0, r4
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	ldr	r0, [r5]
	add	r0, r0, r4
	mov	r1, #0x0
	bl	GetMonData
	add	r6, r0, #0
	ldr	r0, [r5]
	add	r0, r0, r4
	mov	r1, #0x1
	bl	GetMonData
	add	r4, r0, #0
	ldr	r5, [r5]
	ldr	r1, .L1534+0xc
	add	r0, r5, r1
	ldr	r1, [r0]
	ldr	r0, .L1534+0x10
	cmp	r1, r0
	bne	.L1525	@cond_branch
	ldr	r1, .L1534+0x14
	add	r0, r5, r1
	ldr	r5, [r0]
	cmp	r5, #0x1
	bne	.L1529	@cond_branch
	mov	r0, #0x3c
	str	r0, [sp]
	mov	r0, #0x41
	str	r0, [sp, #0x4]
	mov	r0, #0xc
	str	r0, [sp, #0x8]
	ldr	r0, .L1534+0x18
	str	r0, [sp, #0xc]
	str	r5, [sp, #0x10]
	add	r0, r7, #0
	add	r1, r4, #0
	add	r2, r6, #0
	mov	r3, #0x1
	bl	CreateMonPicSprite
	b	.L1533
.L1535:
	.align	2, 0
.L1534:
	.word	sMonPicBounceState
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x32f8
	.word	CB2_ReturnToTradeMenuFromSummary
	.word	0x3024
	.word	0xffff
.L1525:
	ldr	r0, .L1536
	ldrb	r1, [r0]
	mov	r0, #0x3
	bl	ShouldIgnoreDeoxysForm
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1529	@cond_branch
	mov	r0, #0x3c
	str	r0, [sp]
	mov	r0, #0x41
	str	r0, [sp, #0x4]
	mov	r0, #0xc
	str	r0, [sp, #0x8]
	ldr	r0, .L1536+0x4
	str	r0, [sp, #0xc]
	mov	r0, #0x1
	str	r0, [sp, #0x10]
	add	r0, r7, #0
	add	r1, r4, #0
	add	r2, r6, #0
	mov	r3, #0x1
	bl	CreateMonPicSprite
	b	.L1533
.L1537:
	.align	2, 0
.L1536:
	.word	sLastViewedMonIndex
	.word	0xffff
.L1529:
	mov	r0, #0x3c
	str	r0, [sp]
	mov	r0, #0x41
	str	r0, [sp, #0x4]
	mov	r0, #0xc
	str	r0, [sp, #0x8]
	ldr	r0, .L1538
	str	r0, [sp, #0xc]
	add	r0, r7, #0
	add	r1, r4, #0
	add	r2, r6, #0
	mov	r3, #0x1
	bl	CreateMonPicSprite_HandleDeoxys
.L1533:
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	ldr	r1, .L1538+0x4
	add	r4, r0, r1
	add	r0, r4, #0
	bl	FreeSpriteOamMatrix
	add	r0, r7, #0
	bl	IsMonSpriteNotFlipped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1531	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r2, #0x1
	orr	r1, r1, r2
	strb	r1, [r0]
	b	.L1532
.L1539:
	.align	2, 0
.L1538:
	.word	0xffff
	.word	gSprites
.L1531:
	add	r2, r4, #0
	add	r2, r2, #0x3f
	ldrb	r1, [r2]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
.L1532:
	ldr	r0, .L1540
	ldr	r0, [r0]
	ldr	r1, .L1540+0x4
	add	r0, r0, r1
	strb	r5, [r0]
	mov	r0, #0x1
	bl	PokeSum_ShowOrHideMonPicSprite
	add	r0, r5, #0
	bl	PokeSum_SetMonPicSpriteCallback
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1541:
	.align	2, 0
.L1540:
	.word	sMonSummaryScreen
	.word	0x3010
.Lfe85:
	.size	 PokeSum_CreateMonPicSprite,.Lfe85-PokeSum_CreateMonPicSprite
	.align	2, 0
	.type	 PokeSum_SetMonPicSpriteCallback,function
	.thumb_func
PokeSum_SetMonPicSpriteCallback:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	ldr	r1, .L1559
	ldr	r0, [r1]
	ldr	r2, .L1559+0x4
	add	r0, r0, r2
	mov	r6, #0x0
	strb	r6, [r0]
	ldr	r2, [r1]
	mov	r3, #0xc8
	lsl	r3, r3, #0x6
	add	r0, r2, r3
	ldrb	r4, [r0]
	add	r7, r1, #0
	cmp	r4, #0x1
	bne	.L1543	@cond_branch
	ldr	r1, .L1559+0x8
	add	r0, r2, r1
	mov	r1, #0x20
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r0, #0
	cmp	r0, #0x5
	bhi	.L1544	@cond_branch
	ldr	r0, .L1559+0xc
	ldr	r1, [r0]
	mov	r0, #0x2
	strb	r0, [r1, #0x8]
	b	.L1545
.L1560:
	.align	2, 0
.L1559:
	.word	sMonSummaryScreen
	.word	0x3020
	.word	0x3290
	.word	sMonPicBounceState
.L1544:
	cmp	r0, #0xa
	bhi	.L1546	@cond_branch
	ldr	r0, .L1561
	ldr	r0, [r0]
	strb	r4, [r0, #0x8]
	b	.L1545
.L1562:
	.align	2, 0
.L1561:
	.word	sMonPicBounceState
.L1546:
	cmp	r1, #0x28
	bhi	.L1545	@cond_branch
	ldr	r0, .L1563
	ldr	r0, [r0]
	strb	r6, [r0, #0x8]
.L1545:
	ldr	r0, .L1563+0x4
	mov	r2, r8
	lsl	r1, r2, #0x4
	add	r1, r1, r8
	lsl	r1, r1, #0x2
	add	r0, r0, #0x1c
	add	r1, r1, r0
	ldr	r0, .L1563+0x8
	b	.L1557
.L1564:
	.align	2, 0
.L1563:
	.word	sMonPicBounceState
	.word	gSprites
	.word	SpriteCB_PokeSum_EggPicShake
.L1543:
	ldr	r3, .L1565
	add	r0, r2, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1549	@cond_branch
	cmp	r0, #0x6
	beq	.L1549	@cond_branch
	cmp	r0, #0x7
	beq	.L1542	@cond_branch
	ldr	r0, .L1565+0x4
	mov	r2, r8
	lsl	r1, r2, #0x4
	add	r1, r1, r8
	lsl	r1, r1, #0x2
	add	r0, r0, #0x1c
	add	r1, r1, r0
	ldr	r0, .L1565+0x8
	b	.L1557
.L1566:
	.align	2, 0
.L1565:
	.word	0x326c
	.word	gSprites
	.word	SpriteCB_MonPicDummy
.L1549:
	ldr	r0, [r7]
	ldr	r4, .L1567
	add	r0, r0, r4
	mov	r1, #0x39
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, [r7]
	add	r0, r0, r4
	mov	r1, #0x3a
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r6, r0
	bne	.L1551	@cond_branch
	ldr	r0, .L1567+0x4
	ldr	r1, [r0]
	mov	r0, #0x3
	b	.L1558
.L1568:
	.align	2, 0
.L1567:
	.word	0x3290
	.word	sMonPicBounceState
.L1551:
	bl	__floatsidf
	str	r0, [sp]
	str	r1, [sp, #0x4]
	ldr	r3, .L1569+0x4		@ created by thumb_load_double_from_address
	ldr	r2, .L1569		@ created by thumb_load_double_from_address
	bl	__muldf3
	add	r5, r1, #0
	add	r4, r0, #0
	add	r0, r6, #0
	bl	__floatsidf
	add	r7, r1, #0
	add	r6, r0, #0
	add	r1, r5, #0
	add	r0, r4, #0
	add	r3, r7, #0
	add	r2, r6, #0
	bl	__ledf2
	cmp	r0, #0
	bgt	.L1553	@cond_branch
	ldr	r0, .L1569+0x8
	ldr	r1, [r0]
	mov	r0, #0x2
	b	.L1558
.L1570:
	.align	2, 0
.L1569:
	.long 0x3fe99999, 0x9999999a	@ double 8.00000000000000044409e-1
	.word	sMonPicBounceState
.L1553:
	ldr	r3, .L1571+0x4		@ created by thumb_load_double_from_address
	ldr	r2, .L1571		@ created by thumb_load_double_from_address
	ldr	r0, [sp]		@ created by thumb_load_double_from_address
	ldr	r1, [sp, #0x4]		@ created by thumb_load_double_from_address
	bl	__muldf3
	add	r3, r7, #0
	add	r2, r6, #0
	bl	__ledf2
	cmp	r0, #0
	bgt	.L1555	@cond_branch
	ldr	r0, .L1571+0x8
	ldr	r1, [r0]
	mov	r0, #0x1
	b	.L1558
.L1572:
	.align	2, 0
.L1571:
	.long 0x3fe33333, 0x33333333	@ double 5.99999999999999977796e-1
	.word	sMonPicBounceState
.L1555:
	ldr	r0, .L1573
	ldr	r1, [r0]
	mov	r0, #0x0
.L1558:
	strb	r0, [r1, #0x8]
	ldr	r0, .L1573+0x4
	mov	r3, r8
	lsl	r1, r3, #0x4
	add	r1, r1, r8
	lsl	r1, r1, #0x2
	add	r0, r0, #0x1c
	add	r1, r1, r0
	ldr	r0, .L1573+0x8
.L1557:
	str	r0, [r1]
.L1542:
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1574:
	.align	2, 0
.L1573:
	.word	sMonPicBounceState
	.word	gSprites
	.word	SpriteCB_PokeSum_MonPicSprite
.Lfe86:
	.size	 PokeSum_SetMonPicSpriteCallback,.Lfe86-PokeSum_SetMonPicSpriteCallback
	.align	2, 0
	.type	 PokeSum_ShowOrHideMonPicSprite,function
	.thumb_func
PokeSum_ShowOrHideMonPicSprite:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L1576
	ldr	r1, .L1576+0x4
	ldr	r1, [r1]
	ldr	r2, .L1576+0x8
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	add	r2, r2, #0x3e
	mov	r1, #0x1
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	ldrb	r3, [r2]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r0
	strb	r1, [r2]
	bx	lr
.L1577:
	.align	2, 0
.L1576:
	.word	gSprites
	.word	sMonSummaryScreen
	.word	0x3010
.Lfe87:
	.size	 PokeSum_ShowOrHideMonPicSprite,.Lfe87-PokeSum_ShowOrHideMonPicSprite
	.align	2, 0
	.type	 PokeSum_DestroyMonPicSprite,function
	.thumb_func
PokeSum_DestroyMonPicSprite:
	push	{r4, lr}
	ldr	r0, .L1579
	ldr	r0, [r0]
	ldr	r1, .L1579+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	FreeAndDestroyMonPicSprite
	ldr	r4, .L1579+0x8
	ldr	r0, [r4]
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L1580:
	.align	2, 0
.L1579:
	.word	sMonSummaryScreen
	.word	0x3010
	.word	sMonPicBounceState
.Lfe88:
	.size	 PokeSum_DestroyMonPicSprite,.Lfe88-PokeSum_DestroyMonPicSprite
	.align	2, 0
	.type	 CreateBallIconObj,function
	.thumb_func
CreateBallIconObj:
	push	{r4, lr}
	ldr	r0, .L1584
	ldr	r1, [r0]
	mov	r2, #0xc8
	lsl	r2, r2, #0x6
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1582	@cond_branch
	add	r2, r2, #0x90
	add	r0, r1, r2
	mov	r1, #0x26
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L1583
.L1585:
	.align	2, 0
.L1584:
	.word	sMonSummaryScreen
.L1582:
	mov	r0, #0x0
.L1583:
	bl	ItemIdToBallId
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	LoadBallGfx
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L1586
	add	r0, r0, r1
	mov	r1, #0x6a
	mov	r2, #0x58
	mov	r3, #0x0
	bl	CreateSprite
	ldr	r2, .L1586+0x4
	ldr	r1, [r2]
	ldr	r3, .L1586+0x8
	add	r1, r1, r3
	strb	r0, [r1]
	ldr	r4, .L1586+0xc
	ldr	r2, [r2]
	add	r2, r2, r3
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r4, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L1586+0x10
	str	r1, [r0]
	ldrb	r0, [r2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	mov	r0, #0x1
	bl	ShowOrHideBallIconObj
	pop	{r4}
	pop	{r0}
	bx	r0
.L1587:
	.align	2, 0
.L1586:
	.word	gBallSpriteTemplates
	.word	sMonSummaryScreen
	.word	0x300c
	.word	gSprites
	.word	SpriteCallbackDummy
.Lfe89:
	.size	 CreateBallIconObj,.Lfe89-CreateBallIconObj
	.align	2, 0
	.type	 ShowOrHideBallIconObj,function
	.thumb_func
ShowOrHideBallIconObj:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L1589
	ldr	r1, .L1589+0x4
	ldr	r1, [r1]
	ldr	r2, .L1589+0x8
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	add	r2, r2, #0x3e
	mov	r1, #0x1
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	ldrb	r3, [r2]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r0
	strb	r1, [r2]
	bx	lr
.L1590:
	.align	2, 0
.L1589:
	.word	gSprites
	.word	sMonSummaryScreen
	.word	0x300c
.Lfe90:
	.size	 ShowOrHideBallIconObj,.Lfe90-ShowOrHideBallIconObj
	.align	2, 0
	.type	 DestroyBallIconObj,function
	.thumb_func
DestroyBallIconObj:
	push	{lr}
	ldr	r0, .L1592
	ldr	r0, [r0]
	ldr	r1, .L1592+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1592+0x8
	add	r0, r0, r1
	bl	DestroySpriteAndFreeResources_Ball
	pop	{r0}
	bx	r0
.L1593:
	.align	2, 0
.L1592:
	.word	sMonSummaryScreen
	.word	0x300c
	.word	gSprites
.Lfe91:
	.size	 DestroyBallIconObj,.Lfe91-DestroyBallIconObj
	.align	2, 0
	.type	 PokeSum_CreateMonIconSprite,function
	.thumb_func
PokeSum_CreateMonIconSprite:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r6, .L1606
	ldr	r0, [r6]
	ldr	r4, .L1606+0x4
	add	r0, r0, r4
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r0, [r6]
	add	r0, r0, r4
	mov	r1, #0x0
	bl	GetMonData
	add	r4, r0, #0
	add	r0, r5, #0
	bl	SafeLoadMonIconPalette
	ldr	r2, [r6]
	ldr	r1, .L1606+0x8
	add	r0, r2, r1
	ldr	r1, [r0]
	ldr	r0, .L1606+0xc
	cmp	r1, r0
	bne	.L1595	@cond_branch
	ldr	r1, .L1606+0x10
	add	r0, r2, r1
	ldr	r0, [r0]
	cmp	r0, #0x1
	bne	.L1596	@cond_branch
	ldr	r1, .L1606+0x14
	mov	r0, #0x0
	str	r0, [sp]
	str	r4, [sp, #0x4]
	b	.L1603
.L1607:
	.align	2, 0
.L1606:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x32f8
	.word	CB2_ReturnToTradeMenuFromSummary
	.word	0x3024
	.word	SpriteCallbackDummy
.L1596:
	ldr	r1, .L1608
	mov	r0, #0x0
	b	.L1604
.L1609:
	.align	2, 0
.L1608:
	.word	SpriteCallbackDummy
.L1595:
	ldr	r0, .L1610
	ldrb	r1, [r0]
	mov	r0, #0x3
	bl	ShouldIgnoreDeoxysForm
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1599	@cond_branch
	ldr	r1, .L1610+0x4
	mov	r0, #0x0
	str	r0, [sp]
	str	r4, [sp, #0x4]
	b	.L1603
.L1611:
	.align	2, 0
.L1610:
	.word	sLastViewedMonIndex
	.word	SpriteCallbackDummy
.L1599:
	ldr	r1, .L1612
.L1604:
	str	r0, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x1
.L1603:
	str	r0, [sp, #0x8]
	add	r0, r5, #0
	mov	r2, #0x18
	mov	r3, #0x20
	bl	CreateMonIcon
	ldr	r1, [r6]
	ldr	r2, .L1612+0x4
	add	r1, r1, r2
	strb	r0, [r1]
	add	r0, r5, #0
	bl	IsMonSpriteNotFlipped
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1601	@cond_branch
	ldr	r2, .L1612+0x8
	ldr	r0, .L1612+0xc
	ldr	r0, [r0]
	ldr	r1, .L1612+0x4
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r2, #0x1
	orr	r1, r1, r2
	b	.L1605
.L1613:
	.align	2, 0
.L1612:
	.word	SpriteCallbackDummy
	.word	0x3014
	.word	gSprites
	.word	sMonSummaryScreen
.L1601:
	ldr	r2, .L1614
	ldr	r0, .L1614+0x4
	ldr	r0, [r0]
	ldr	r1, .L1614+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3f
	ldrb	r2, [r0]
	mov	r1, #0x2
	neg	r1, r1
	and	r1, r1, r2
.L1605:
	strb	r1, [r0]
	mov	r0, #0x1
	bl	PokeSum_ShowOrHideMonIconSprite
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1615:
	.align	2, 0
.L1614:
	.word	gSprites
	.word	sMonSummaryScreen
	.word	0x3014
.Lfe92:
	.size	 PokeSum_CreateMonIconSprite,.Lfe92-PokeSum_CreateMonIconSprite
	.align	2, 0
	.type	 PokeSum_ShowOrHideMonIconSprite,function
	.thumb_func
PokeSum_ShowOrHideMonIconSprite:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L1617
	ldr	r1, .L1617+0x4
	ldr	r1, [r1]
	ldr	r2, .L1617+0x8
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	add	r2, r2, #0x3e
	mov	r1, #0x1
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	ldrb	r3, [r2]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r0
	strb	r1, [r2]
	bx	lr
.L1618:
	.align	2, 0
.L1617:
	.word	gSprites
	.word	sMonSummaryScreen
	.word	0x3014
.Lfe93:
	.size	 PokeSum_ShowOrHideMonIconSprite,.Lfe93-PokeSum_ShowOrHideMonIconSprite
	.align	2, 0
	.type	 PokeSum_DestroyMonIconSprite,function
	.thumb_func
PokeSum_DestroyMonIconSprite:
	push	{r4, lr}
	ldr	r4, .L1620
	ldr	r0, [r4]
	ldr	r1, .L1620+0x4
	add	r0, r0, r1
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	SafeFreeMonIconPalette
	ldr	r0, [r4]
	ldr	r1, .L1620+0x8
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L1620+0xc
	add	r0, r0, r1
	bl	DestroyMonIcon
	pop	{r4}
	pop	{r0}
	bx	r0
.L1621:
	.align	2, 0
.L1620:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x3014
	.word	gSprites
.Lfe94:
	.size	 PokeSum_DestroyMonIconSprite,.Lfe94-PokeSum_DestroyMonIconSprite
	.align	2, 0
	.type	 CreateMoveSelectionCursorObjs,function
	.thumb_func
CreateMoveSelectionCursorObjs:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x34
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x30]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r9, r1
	mov	r6, #0x80
	lsl	r6, r6, #0x4
	add	r0, r6, #0
	bl	AllocZeroed
	str	r0, [sp, #0x18]
	add	r0, r6, #0
	bl	AllocZeroed
	add	r5, sp, #0x18
	str	r0, [r5, #0x4]
	mov	r0, #0xc
	bl	AllocZeroed
	ldr	r4, .L1631
	str	r0, [r4]
	mov	r0, #0xc
	bl	AllocZeroed
	str	r0, [r4, #0x4]
	mov	r0, #0xc
	bl	AllocZeroed
	str	r0, [r4, #0x8]
	mov	r0, #0xc
	bl	AllocZeroed
	str	r0, [r4, #0xc]
	ldr	r0, .L1631+0x4
	ldr	r1, [sp, #0x18]
	bl	LZ77UnCompWram
	ldr	r0, .L1631+0x8
	ldr	r1, [r5, #0x4]
	bl	LZ77UnCompWram
	mov	r7, #0x0
	add	r0, sp, #0x20
	mov	r8, r0
	add	r6, sp, #0x28
.L1626:
	mov	r4, #0x1
	and	r4, r4, r7
	lsl	r0, r4, #0x2
	add	r0, r0, sp
	add	r0, r0, #0x18
	ldr	r0, [r0]
	str	r0, [sp, #0x20]
	ldr	r1, [sp, #0x30]
	add	r5, r1, r7
	lsl	r0, r5, #0x10
	mov	r1, #0x80
	lsl	r1, r1, #0x4
	orr	r0, r0, r1
	mov	r1, r8
	str	r0, [r1, #0x4]
	ldr	r0, .L1631+0xc
	str	r0, [sp, #0x28]
	ldr	r1, .L1631+0x10
	ldr	r0, [r6, #0x4]
	and	r0, r0, r1
	mov	r1, r9
	orr	r0, r0, r1
	str	r0, [r6, #0x4]
	mov	r0, sp
	mov	r1, #0x0
	mov	sl, r1
	strh	r5, [r0]
	mov	r1, r9
	strh	r1, [r0, #0x2]
	ldr	r0, .L1631+0x14
	str	r0, [sp, #0x4]
	ldr	r0, .L1631+0x18
	str	r0, [sp, #0x8]
	mov	r0, sl
	str	r0, [sp, #0xc]
	ldr	r0, .L1631+0x1c
	str	r0, [sp, #0x10]
	ldr	r0, .L1631+0x20
	str	r0, [sp, #0x14]
	mov	r0, r8
	bl	LoadSpriteSheet
	add	r0, r6, #0
	bl	LoadSpritePalette
	lsl	r1, r4, #0x6
	add	r1, r1, #0x98
	ldr	r0, .L1631+0x24
	ldrb	r0, [r0]
	lsl	r2, r0, #0x3
	sub	r2, r2, r0
	lsl	r2, r2, #0x12
	mov	r0, #0x88
	lsl	r0, r0, #0xe
	add	r2, r2, r0
	asr	r2, r2, #0x10
	mov	r0, sp
	add	r3, r4, #0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L1631
	lsl	r1, r7, #0x2
	add	r3, r1, r2
	ldr	r2, [r3]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1631+0x28
	add	r1, r1, r0
	str	r1, [r2]
	strh	r7, [r2, #0x4]
	ldr	r0, [r3]
	strh	r5, [r0, #0x6]
	ldr	r0, [r3]
	mov	r1, r9
	strh	r1, [r0, #0x8]
	ldr	r0, [r3]
	ldr	r0, [r0]
	add	r0, r0, #0x43
	strb	r7, [r0]
	cmp	r7, #0x1
	bls	.L1625	@cond_branch
	ldr	r0, [r3]
	ldr	r0, [r0]
	mov	r1, #0x1
	bl	StartSpriteAnim
.L1625:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0x3
	bls	.L1626	@cond_branch
	mov	r0, #0x1
	bl	ShoworHideMoveSelectionCursor
	ldr	r0, [sp, #0x18]
	cmp	r0, #0
	beq	.L1629	@cond_branch
	bl	Free
	mov	r0, sl
	str	r0, [sp, #0x18]
.L1629:
	ldr	r0, [sp, #0x1c]
	cmp	r0, #0
	beq	.L1630	@cond_branch
	bl	Free
	mov	r1, sl
	str	r1, [sp, #0x1c]
.L1630:
	add	sp, sp, #0x34
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1632:
	.align	2, 0
.L1631:
	.word	sMoveSelectionCursorObjs
	.word	sMoveSelectionCursorTiles_Left
	.word	sMoveSelectionCursorTiles_Right
	.word	sMoveSelectionCursorPals
	.word	-0x10000
	.word	sMoveSelectionCursorOamData
	.word	sMoveSelectionCursorOamAnimTable
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCB_MoveSelectionCursor
	.word	sMoveSelectionCursorPos
	.word	gSprites
.Lfe95:
	.size	 CreateMoveSelectionCursorObjs,.Lfe95-CreateMoveSelectionCursorObjs
	.align	2, 0
	.type	 ShoworHideMoveSelectionCursor,function
	.thumb_func
ShoworHideMoveSelectionCursor:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r3, #0x0
	ldr	r6, .L1639
	mov	r1, #0x1
	and	r0, r0, r1
	lsl	r4, r0, #0x2
	mov	r5, #0x5
	neg	r5, r5
.L1637:
	lsl	r0, r3, #0x2
	add	r0, r0, r6
	ldr	r0, [r0]
	ldr	r1, [r0]
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	add	r0, r5, #0
	and	r0, r0, r2
	orr	r0, r0, r4
	strb	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x3
	bls	.L1637	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1640:
	.align	2, 0
.L1639:
	.word	sMoveSelectionCursorObjs
.Lfe96:
	.size	 ShoworHideMoveSelectionCursor,.Lfe96-ShoworHideMoveSelectionCursor
	.align	2, 0
	.type	 SpriteCB_MoveSelectionCursor,function
	.thumb_func
SpriteCB_MoveSelectionCursor:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r6, #0x0
	ldr	r3, .L1659
	ldr	r4, .L1659+0x4
.L1645:
	ldr	r0, [r3]
	ldr	r1, .L1659+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1646	@cond_branch
	cmp	r6, #0x1
	bhi	.L1644	@cond_branch
.L1646:
	lsl	r0, r6, #0x2
	add	r0, r0, r4
	ldr	r0, [r0]
	ldr	r2, [r0]
	ldr	r0, .L1659+0xc
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, #0x22
	strh	r0, [r2, #0x22]
.L1644:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x3
	bls	.L1645	@cond_branch
	ldr	r1, [r3]
	ldr	r2, .L1659+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L1648	@cond_branch
	sub	r2, r2, #0x54
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L1641	@cond_branch
	ldr	r4, .L1659+0x4
	ldr	r0, [r4]
	ldr	r1, [r0]
	add	r1, r1, #0x3e
	ldrb	r3, [r1]
	mov	r2, #0x5
	neg	r2, r2
	add	r0, r2, #0
	and	r0, r0, r3
	strb	r0, [r1]
	ldr	r0, [r4, #0x4]
	ldr	r0, [r0]
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	and	r2, r2, r1
	strb	r2, [r0]
	b	.L1641
.L1660:
	.align	2, 0
.L1659:
	.word	sMonSummaryScreen
	.word	sMoveSelectionCursorObjs
	.word	0x3268
	.word	sMoveSelectionCursorPos
.L1648:
	mov	r6, #0x0
	ldr	r0, .L1661
	mov	r9, r0
	mov	r8, r6
	mov	r7, #0x4
	mov	r1, #0x5
	neg	r1, r1
	mov	ip, r1
.L1653:
	lsl	r0, r6, #0x2
	add	r0, r0, r9
	ldr	r0, [r0]
	ldr	r3, [r0]
	ldrh	r0, [r3, #0x2e]
	add	r1, r0, #0x1
	strh	r1, [r3, #0x2e]
	add	r4, r3, #0
	add	r4, r4, #0x3e
	ldrb	r2, [r4]
	mov	r0, #0x4
	and	r0, r0, r2
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	beq	.L1654	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3c
	ble	.L1652	@cond_branch
	mov	r0, ip
	and	r0, r0, r2
	strb	r0, [r4]
	mov	r2, r8
	strh	r2, [r3, #0x2e]
	b	.L1652
.L1662:
	.align	2, 0
.L1661:
	.word	sMoveSelectionCursorObjs
.L1654:
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3c
	ble	.L1652	@cond_branch
	add	r0, r2, #0
	orr	r0, r0, r7
	strb	r0, [r4]
	strh	r5, [r3, #0x2e]
.L1652:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x1
	bls	.L1653	@cond_branch
.L1641:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe97:
	.size	 SpriteCB_MoveSelectionCursor,.Lfe97-SpriteCB_MoveSelectionCursor
	.align	2, 0
	.type	 DestroyMoveSelectionCursorObjs,function
	.thumb_func
DestroyMoveSelectionCursorObjs:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r6, .L1671
.L1667:
	lsl	r0, r5, #0x2
	add	r4, r0, r6
	ldr	r0, [r4]
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L1668	@cond_branch
	bl	DestroySpriteAndFreeResources
.L1668:
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L1666	@cond_branch
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L1666:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3
	bls	.L1667	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1672:
	.align	2, 0
.L1671:
	.word	sMoveSelectionCursorObjs
.Lfe98:
	.size	 DestroyMoveSelectionCursorObjs,.Lfe98-DestroyMoveSelectionCursorObjs
	.align	2, 0
	.type	 CreateMonStatusIconObj,function
	.thumb_func
CreateMonStatusIconObj:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x28
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	ldr	r0, .L1676
	mov	r8, r0
	mov	r0, #0x8
	bl	AllocZeroed
	mov	r1, r8
	str	r0, [r1]
	mov	r4, #0x80
	lsl	r4, r4, #0x3
	add	r0, r4, #0
	bl	AllocZeroed
	add	r5, r0, #0
	ldr	r0, .L1676+0x4
	add	r1, r5, #0
	bl	LZ77UnCompWram
	mov	r1, r8
	ldr	r0, [r1]
	cmp	r0, #0
	beq	.L1674	@cond_branch
	str	r5, [sp, #0x18]
	add	r0, sp, #0x18
	lsl	r1, r7, #0x10
	orr	r1, r1, r4
	str	r1, [r0, #0x4]
	ldr	r1, .L1676+0x8
	str	r1, [sp, #0x20]
	ldr	r2, .L1676+0xc
	add	r4, sp, #0x20
	ldr	r1, [r4, #0x4]
	and	r1, r1, r2
	orr	r1, r1, r6
	str	r1, [r4, #0x4]
	mov	r1, sp
	mov	r2, #0x0
	strh	r7, [r1]
	strh	r6, [r1, #0x2]
	ldr	r1, .L1676+0x10
	str	r1, [sp, #0x4]
	ldr	r1, .L1676+0x14
	str	r1, [sp, #0x8]
	str	r2, [sp, #0xc]
	ldr	r1, .L1676+0x18
	str	r1, [sp, #0x10]
	ldr	r1, .L1676+0x1c
	str	r1, [sp, #0x14]
	bl	LoadSpriteSheet
	add	r0, r4, #0
	bl	LoadSpritePalette
	mov	r0, sp
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1676+0x20
	add	r1, r1, r0
	str	r1, [r2]
	strh	r7, [r2, #0x4]
	strh	r6, [r2, #0x6]
.L1674:
	mov	r0, #0x1
	bl	ShowOrHideStatusIcon
	bl	UpdateMonStatusIconObj
	cmp	r5, #0
	beq	.L1675	@cond_branch
	add	r0, r5, #0
	bl	Free
.L1675:
	add	sp, sp, #0x28
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1677:
	.align	2, 0
.L1676:
	.word	sStatusIcon
	.word	gSummaryScreen_StatusAilmentIcon_Gfx
	.word	gSummaryScreen_StatusAilmentIcon_Pal
	.word	-0x10000
	.word	sStatusAilmentIconOamData
	.word	sStatusAilmentIconAnimTable
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.word	gSprites
.Lfe99:
	.size	 CreateMonStatusIconObj,.Lfe99-CreateMonStatusIconObj
	.align	2, 0
	.type	 DestroyMonStatusIconObj,function
	.thumb_func
DestroyMonStatusIconObj:
	push	{r4, lr}
	ldr	r4, .L1681
	ldr	r0, [r4]
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L1679	@cond_branch
	bl	DestroySpriteAndFreeResources
.L1679:
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L1680	@cond_branch
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L1680:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1682:
	.align	2, 0
.L1681:
	.word	sStatusIcon
.Lfe100:
	.size	 DestroyMonStatusIconObj,.Lfe100-DestroyMonStatusIconObj
	.align	2, 0
	.type	 UpdateMonStatusIconObj,function
	.thumb_func
UpdateMonStatusIconObj:
	push	{r4, lr}
	ldr	r4, .L1685
	ldr	r0, [r4]
	ldr	r1, .L1685+0x4
	add	r0, r0, r1
	mov	r1, #0x37
	bl	GetMonData
	bl	StatusToAilment
	ldr	r1, [r4]
	ldr	r2, .L1685+0x8
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r0, [r4]
	add	r0, r0, r2
	ldrb	r1, [r0]
	cmp	r1, #0
	bne	.L1684	@cond_branch
	mov	r0, #0x1
	bl	ShowOrHideStatusIcon
	b	.L1683
.L1686:
	.align	2, 0
.L1685:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x326c
.L1684:
	ldr	r0, .L1687
	ldr	r0, [r0]
	ldr	r0, [r0]
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	mov	r0, #0x0
	bl	ShowOrHideStatusIcon
.L1683:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1688:
	.align	2, 0
.L1687:
	.word	sStatusIcon
.Lfe101:
	.size	 UpdateMonStatusIconObj,.Lfe101-UpdateMonStatusIconObj
	.align	2, 0
	.type	 ShowOrHideStatusIcon,function
	.thumb_func
ShowOrHideStatusIcon:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r1, .L1698
	ldr	r2, [r1]
	ldr	r4, .L1698+0x4
	add	r0, r2, r4
	ldrb	r0, [r0]
	add	r5, r1, #0
	cmp	r0, #0
	beq	.L1691	@cond_branch
	mov	r1, #0xc8
	lsl	r1, r1, #0x6
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1690	@cond_branch
.L1691:
	ldr	r3, .L1698+0x8
	ldr	r0, [r3]
	ldr	r1, [r0]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1]
	b	.L1692
.L1699:
	.align	2, 0
.L1698:
	.word	sMonSummaryScreen
	.word	0x326c
	.word	sStatusIcon
.L1690:
	ldr	r4, .L1700
	ldr	r0, [r4]
	ldr	r2, [r0]
	add	r2, r2, #0x3e
	mov	r0, #0x1
	add	r1, r3, #0
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	add	r3, r4, #0
.L1692:
	ldr	r0, [r5]
	ldr	r4, .L1700+0x4
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L1693	@cond_branch
	ldr	r1, [r3]
	ldr	r2, [r1]
	mov	r3, #0x22
	ldrsh	r0, [r2, r3]
	cmp	r0, #0x2d
	beq	.L1689	@cond_branch
	mov	r0, #0x10
	strh	r0, [r2, #0x20]
	ldr	r1, [r1]
	mov	r0, #0x2d
	b	.L1697
.L1701:
	.align	2, 0
.L1700:
	.word	sStatusIcon
	.word	0x3214
.L1693:
	ldr	r1, [r3]
	ldr	r2, [r1]
	mov	r4, #0x22
	ldrsh	r0, [r2, r4]
	cmp	r0, #0x26
	beq	.L1689	@cond_branch
	mov	r0, #0x10
	strh	r0, [r2, #0x20]
	ldr	r1, [r1]
	mov	r0, #0x26
.L1697:
	strh	r0, [r1, #0x22]
.L1689:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe102:
	.size	 ShowOrHideStatusIcon,.Lfe102-ShowOrHideStatusIcon
	.align	2, 0
	.type	 CreateHpBarObjs,function
	.thumb_func
CreateHpBarObjs:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x40
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	sl, r0
	lsl	r1, r1, #0x10
	lsr	r7, r1, #0x10
	mov	r0, #0x0
	str	r0, [sp, #0x38]
	ldr	r4, .L1713
	mov	r0, #0x40
	bl	AllocZeroed
	str	r0, [r4]
	mov	r0, #0xc0
	lsl	r0, r0, #0x1
	bl	AllocZeroed
	mov	r9, r0
	ldr	r0, .L1713+0x4
	mov	r1, r9
	bl	LZ77UnCompWram
	ldr	r5, .L1713+0x8
	ldr	r0, [r5]
	ldr	r4, .L1713+0xc
	add	r0, r0, r4
	mov	r1, #0x39
	bl	GetMonData
	add	r6, r0, #0
	ldr	r0, [r5]
	add	r0, r0, r4
	mov	r1, #0x3a
	bl	GetMonData
	add	r1, r0, #0
	lsr	r0, r1, #0x2
	cmp	r0, r6
	bls	.L1703	@cond_branch
	mov	r1, #0x2
	str	r1, [sp, #0x38]
	b	.L1704
.L1714:
	.align	2, 0
.L1713:
	.word	sHpBarObjs
	.word	gSummaryScreen_HpBar_Gfx
	.word	sMonSummaryScreen
	.word	0x3290
.L1703:
	lsr	r0, r1, #0x1
	cmp	r0, r6
	bls	.L1704	@cond_branch
	mov	r2, #0x1
	str	r2, [sp, #0x38]
.L1704:
	mov	r3, r9
	cmp	r3, #0
	beq	.L1706	@cond_branch
	str	r3, [sp, #0x18]
	mov	r2, #0xc0
	lsl	r2, r2, #0x1
	add	r0, sp, #0x18
	mov	r6, sl
	lsl	r1, r6, #0x10
	orr	r1, r1, r2
	str	r1, [r0, #0x4]
	ldr	r3, .L1715
	ldr	r1, [r3]
	str	r1, [sp, #0x20]
	ldr	r6, .L1715+0x4
	add	r1, sp, #0x20
	mov	r8, r1
	ldr	r1, [r1, #0x4]
	and	r1, r1, r6
	orr	r1, r1, r7
	mov	r2, r8
	str	r1, [r2, #0x4]
	ldr	r1, [r3, #0x4]
	str	r1, [sp, #0x28]
	add	r2, r7, #0x1
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	add	r5, sp, #0x28
	ldr	r1, [r5, #0x4]
	and	r1, r1, r6
	orr	r1, r1, r2
	str	r1, [r5, #0x4]
	ldr	r1, [r3, #0x8]
	str	r1, [sp, #0x30]
	add	r2, r7, #0x2
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	add	r4, sp, #0x30
	ldr	r1, [r4, #0x4]
	and	r1, r1, r6
	orr	r1, r1, r2
	str	r1, [r4, #0x4]
	bl	LoadSpriteSheet
	mov	r0, r8
	bl	LoadSpritePalette
	add	r0, r5, #0
	bl	LoadSpritePalette
	add	r0, r4, #0
	bl	LoadSpritePalette
.L1706:
	mov	r4, #0x0
	ldr	r3, [sp, #0x38]
	add	r3, r7, r3
	str	r3, [sp, #0x3c]
	mov	r8, r4
	ldr	r5, .L1715+0x8
.L1710:
	mov	r0, sp
	mov	r6, sl
	strh	r6, [r0]
	ldrh	r1, [r0, #0x3c]
	strh	r1, [r0, #0x2]
	ldr	r0, .L1715+0xc
	str	r0, [sp, #0x4]
	ldr	r0, .L1715+0x10
	str	r0, [sp, #0x8]
	mov	r2, r8
	str	r2, [sp, #0xc]
	ldr	r0, .L1715+0x14
	str	r0, [sp, #0x10]
	ldr	r0, .L1715+0x18
	str	r0, [sp, #0x14]
	ldr	r1, [r5]
	lsl	r0, r4, #0x1
	add	r1, r1, #0x28
	add	r1, r1, r0
	lsl	r0, r4, #0x3
	add	r0, r0, #0xac
	strh	r0, [r1]
	mov	r3, #0x0
	ldrsh	r1, [r1, r3]
	mov	r0, sp
	mov	r2, #0x24
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, [r5]
	lsl	r3, r4, #0x2
	add	r2, r2, r3
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1715+0x1c
	add	r1, r1, r0
	str	r1, [r2]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r6, #0x5
	neg	r6, r6
	add	r2, r6, #0
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, r3
	ldr	r2, [r0]
	ldrb	r1, [r2, #0x5]
	sub	r6, r6, #0x8
	add	r0, r6, #0
	and	r1, r1, r0
	mov	r0, #0x8
	orr	r1, r1, r0
	strb	r1, [r2, #0x5]
	ldr	r0, [r5]
	mov	r1, sl
	strh	r1, [r0, #0x3c]
	strh	r7, [r0, #0x3e]
	add	r0, r0, r3
	ldr	r0, [r0]
	mov	r1, #0x8
	bl	StartSpriteAnim
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x8
	bls	.L1710	@cond_branch
	bl	UpdateHpBarObjs
	mov	r0, #0x1
	bl	ShowOrHideHpBarObjs
	mov	r2, r9
	cmp	r2, #0
	beq	.L1712	@cond_branch
	mov	r0, r9
	bl	Free
.L1712:
	add	sp, sp, #0x40
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1716:
	.align	2, 0
.L1715:
	.word	sHpBarPals
	.word	-0x10000
	.word	sHpBarObjs
	.word	sHpOrExpBarOamData
	.word	sHpOrExpBarAnimTable
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.word	gSprites
.Lfe103:
	.size	 CreateHpBarObjs,.Lfe103-CreateHpBarObjs
	.align	2, 0
	.type	 UpdateHpBarObjs,function
	.thumb_func
UpdateHpBarObjs:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	mov	r0, #0x0
	mov	sl, r0
	ldr	r5, .L1759
	ldr	r1, [r5]
	mov	r2, #0xc8
	lsl	r2, r2, #0x6
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.LCB15806
	b	.L1717	@long jump
.LCB15806:
	ldr	r4, .L1759+0x4
	add	r0, r1, r4
	mov	r1, #0x39
	bl	GetMonData
	mov	r9, r0
	ldr	r0, [r5]
	add	r0, r0, r4
	mov	r1, #0x3a
	bl	GetMonData
	add	r4, r0, #0
	mov	r1, #0x5
	bl	__udivsi3
	cmp	r0, r9
	bcs	.L1720	@cond_branch
	lsr	r0, r4, #0x1
.L1720:
	mov	r3, r9
	lsl	r0, r3, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r4, #0x10
	asr	r1, r1, #0x10
	bl	GetHPBarLevel
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.L1725	@cond_branch
	cmp	r0, #0x2
	bgt	.L1728	@cond_branch
	cmp	r0, #0x1
	beq	.L1726	@cond_branch
.L1728:
	mov	r6, #0x0
	b	.L1722
.L1760:
	.align	2, 0
.L1759:
	.word	sMonSummaryScreen
	.word	0x3290
.L1725:
	mov	r6, #0x1
	b	.L1722
.L1726:
	mov	r6, #0x2
.L1722:
	mov	r0, #0x0
	mov	r8, r0
.L1732:
	mov	r0, #0x78
	bl	IndexOfSpritePaletteTag
	ldr	r5, .L1761
	ldr	r1, [r5]
	mov	r3, r8
	lsl	r2, r3, #0x2
	add	r1, r1, r2
	ldr	r3, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r6
	lsl	r0, r0, #0x4
	ldrb	r2, [r3, #0x5]
	mov	r1, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r3, #0x5]
	mov	r0, r8
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	cmp	r0, #0x8
	bls	.L1732	@cond_branch
	cmp	r9, r4
	bne	.L1734	@cond_branch
	mov	r0, #0x2
	mov	r8, r0
	cmp	r0, #0x7
	bls	.LCB15905
	b	.L1740	@long jump
.LCB15905:
	add	r4, r5, #0
.L1738:
	ldr	r0, [r4]
	mov	r2, r8
	lsl	r1, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x8
	bl	StartSpriteAnim
	mov	r0, r8
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	cmp	r0, #0x7
	bls	.L1738	@cond_branch
	b	.L1740
.L1762:
	.align	2, 0
.L1761:
	.word	sHpBarObjs
.L1734:
	lsl	r0, r4, #0x2
	mov	r1, #0x6
	bl	__udivsi3
	add	r6, r0, #0
	mov	r7, #0x0
	mov	r3, r9
	lsl	r0, r3, #0x2
	add	r4, r0, #0
	mov	r5, #0x0
	b	.L1757
.L1744:
	sub	r4, r4, r6
	sbc	r5, r5, r7
	mov	r0, sl
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
.L1757:
	cmp	r5, r7
	bgt	.L1744	@cond_branch
	cmp	r5, r7
	bne	.L1742	@cond_branch
	cmp	r4, r6
	bhi	.L1744	@cond_branch
.L1742:
	mov	r0, sl
	add	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	mov	r0, #0x2
	mov	r8, r0
	lsr	r1, r4, #0x1f
	str	r1, [sp, #0x4]
	lsl	r2, r5, #0x1
	str	r2, [sp]
	cmp	r8, sl
	bcs	.L1748	@cond_branch
	ldr	r3, .L1763
	mov	r9, r3
.L1750:
	mov	r1, r9
	ldr	r0, [r1]
	mov	r2, r8
	lsl	r1, r2, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x8
	bl	StartSpriteAnim
	mov	r0, r8
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	cmp	r8, sl
	bcc	.L1750	@cond_branch
.L1748:
	ldr	r3, [sp, #0x4]
	ldr	r0, [sp]
	orr	r3, r3, r0
	lsl	r2, r4, #0x1
	add	r2, r2, r4
	adc	r3, r3, r5
	lsr	r5, r2, #0x1f
	lsl	r4, r3, #0x1
	add	r1, r5, #0
	orr	r1, r1, r4
	lsl	r0, r2, #0x1
	add	r3, r7, #0
	add	r2, r6, #0
	bl	__divdi3
	add	r2, r1, #0
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r4, .L1763
	ldr	r0, [r4]
	mov	r2, sl
	lsl	r3, r2, #0x2
	add	r0, r0, r3
	ldr	r0, [r0]
	bl	StartSpriteAnim
	mov	r0, sl
	b	.L1758
.L1764:
	.align	2, 0
.L1763:
	.word	sHpBarObjs
.L1755:
	ldr	r0, [r4]
	mov	r3, r8
	lsl	r1, r3, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x0
	bl	StartSpriteAnim
	mov	r0, r8
.L1758:
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	cmp	r0, #0x7
	bls	.L1755	@cond_branch
.L1740:
	ldr	r4, .L1765
	ldr	r0, [r4]
	ldr	r0, [r0]
	mov	r1, #0x9
	bl	StartSpriteAnim
	ldr	r0, [r4]
	ldr	r0, [r0, #0x4]
	mov	r1, #0xa
	bl	StartSpriteAnim
	ldr	r0, [r4]
	ldr	r0, [r0, #0x20]
	mov	r1, #0xb
	bl	StartSpriteAnim
.L1717:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1766:
	.align	2, 0
.L1765:
	.word	sHpBarObjs
.Lfe104:
	.size	 UpdateHpBarObjs,.Lfe104-UpdateHpBarObjs
	.align	2, 0
	.type	 DestroyHpBarObjs,function
	.thumb_func
DestroyHpBarObjs:
	push	{r4, r5, lr}
	mov	r4, #0x0
.L1771:
	ldr	r5, .L1775
	ldr	r0, [r5]
	lsl	r1, r4, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L1770	@cond_branch
	bl	DestroySpriteAndFreeResources
.L1770:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x8
	bls	.L1771	@cond_branch
	ldr	r0, [r5]
	cmp	r0, #0
	beq	.L1774	@cond_branch
	bl	Free
	mov	r0, #0x0
	str	r0, [r5]
.L1774:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1776:
	.align	2, 0
.L1775:
	.word	sHpBarObjs
.Lfe105:
	.size	 DestroyHpBarObjs,.Lfe105-DestroyHpBarObjs
	.align	2, 0
	.type	 ShowOrHideHpBarObjs,function
	.thumb_func
ShowOrHideHpBarObjs:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r3, #0x0
	ldr	r6, .L1783
	mov	r1, #0x1
	and	r0, r0, r1
	lsl	r4, r0, #0x2
	mov	r5, #0x5
	neg	r5, r5
.L1781:
	ldr	r0, [r6]
	lsl	r1, r3, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	add	r0, r5, #0
	and	r0, r0, r2
	orr	r0, r0, r4
	strb	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x8
	bls	.L1781	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1784:
	.align	2, 0
.L1783:
	.word	sHpBarObjs
.Lfe106:
	.size	 ShowOrHideHpBarObjs,.Lfe106-ShowOrHideHpBarObjs
	.align	2, 0
	.type	 CreateExpBarObjs,function
	.thumb_func
CreateExpBarObjs:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x28
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	ldr	r0, .L1793
	mov	r8, r0
	mov	r0, #0x48
	bl	AllocZeroed
	mov	r1, r8
	str	r0, [r1]
	mov	r4, #0xc0
	lsl	r4, r4, #0x1
	add	r0, r4, #0
	bl	AllocZeroed
	add	r5, r0, #0
	ldr	r0, .L1793+0x4
	add	r1, r5, #0
	bl	LZ77UnCompWram
	cmp	r5, #0
	beq	.L1786	@cond_branch
	str	r5, [sp, #0x18]
	add	r0, sp, #0x18
	lsl	r1, r7, #0x10
	orr	r1, r1, r4
	str	r1, [r0, #0x4]
	ldr	r1, .L1793+0x8
	str	r1, [sp, #0x20]
	ldr	r2, .L1793+0xc
	add	r4, sp, #0x20
	ldr	r1, [r4, #0x4]
	and	r1, r1, r2
	orr	r1, r1, r6
	str	r1, [r4, #0x4]
	bl	LoadSpriteSheet
	add	r0, r4, #0
	bl	LoadSpritePalette
.L1786:
	mov	r4, #0x0
	mov	r9, r4
.L1790:
	mov	r0, sp
	strh	r7, [r0]
	strh	r6, [r0, #0x2]
	ldr	r0, .L1793+0x10
	str	r0, [sp, #0x4]
	ldr	r0, .L1793+0x14
	str	r0, [sp, #0x8]
	mov	r3, r9
	str	r3, [sp, #0xc]
	ldr	r0, .L1793+0x18
	str	r0, [sp, #0x10]
	ldr	r0, .L1793+0x1c
	str	r0, [sp, #0x14]
	mov	r0, r8
	ldr	r1, [r0]
	lsl	r0, r4, #0x1
	add	r1, r1, #0x2c
	add	r1, r1, r0
	lsl	r0, r4, #0x3
	add	r0, r0, #0x9c
	strh	r0, [r1]
	mov	r3, #0x0
	ldrsh	r1, [r1, r3]
	mov	r0, sp
	mov	r2, #0x84
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r1, r4, #0x2
	add	r2, r2, r1
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1793+0x20
	add	r1, r1, r0
	str	r1, [r2]
	ldrb	r2, [r1, #0x5]
	mov	r3, #0xd
	neg	r3, r3
	add	r0, r3, #0
	and	r2, r2, r0
	mov	r0, #0x8
	orr	r2, r2, r0
	strb	r2, [r1, #0x5]
	mov	r1, r8
	ldr	r0, [r1]
	add	r1, r0, #0
	add	r1, r1, #0x42
	strh	r7, [r1]
	add	r0, r0, #0x44
	strh	r6, [r0]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xa
	bls	.L1790	@cond_branch
	bl	UpdateExpBarObjs
	mov	r0, #0x1
	bl	ShowOrHideExpBarObjs
	cmp	r5, #0
	beq	.L1792	@cond_branch
	add	r0, r5, #0
	bl	Free
.L1792:
	add	sp, sp, #0x28
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1794:
	.align	2, 0
.L1793:
	.word	sExpBarObjs
	.word	gSummaryScreen_ExpBar_Gfx
	.word	gSummaryScreen_HpExpBar_Pal
	.word	-0x10000
	.word	sHpOrExpBarOamData
	.word	sHpOrExpBarAnimTable
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.word	gSprites
.Lfe107:
	.size	 CreateExpBarObjs,.Lfe107-CreateExpBarObjs
	.align	2, 0
	.type	 UpdateExpBarObjs,function
	.thumb_func
UpdateExpBarObjs:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	mov	r7, #0x0
	ldr	r6, .L1824
	ldr	r1, [r6]
	mov	r2, #0xc8
	lsl	r2, r2, #0x6
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.LCB16390
	b	.L1795	@long jump
.LCB16390:
	ldr	r4, .L1824+0x4
	add	r0, r1, r4
	mov	r1, #0x19
	bl	GetMonData
	mov	r8, r0
	ldr	r0, [r6]
	add	r0, r0, r4
	mov	r1, #0x38
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, [r6]
	add	r0, r0, r4
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r5, #0x63
	bls	.LCB16414
	b	.L1797	@long jump
.LCB16414:
	ldr	r3, .L1824+0x8
	add	r1, r5, #0x1
	lsl	r1, r1, #0x2
	ldr	r2, .L1824+0xc
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r2, [r0, #0x13]
	mov	r0, #0xca
	lsl	r0, r0, #0x1
	mul	r2, r2, r0
	add	r1, r1, r2
	add	r1, r1, r3
	lsl	r0, r5, #0x2
	add	r0, r0, r2
	add	r0, r0, r3
	ldr	r1, [r1]
	ldr	r0, [r0]
	sub	r1, r1, r0
	mov	sl, r1
	mov	r1, r8
	sub	r1, r1, r0
	mov	r9, r1
	mov	r2, sl
	lsl	r0, r2, #0x2
	lsr	r0, r0, #0x3
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	lsl	r0, r1, #0x2
	add	r4, r0, #0
	mov	r5, #0x0
	ldr	r1, [sp, #0x4]
	cmp	r5, r1
	ble	.L1823	@cond_branch
.L1801:
	ldr	r0, [sp]		@ created by thumb_load_double_from_address
	ldr	r1, [sp, #0x4]		@ created by thumb_load_double_from_address
	sub	r4, r4, r0
	sbc	r5, r5, r1
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r5, r1
	bgt	.L1801	@cond_branch
	ldr	r1, [sp, #0x4]
.L1823:
	cmp	r5, r1
	bne	.L1799	@cond_branch
	ldr	r2, [sp]
	cmp	r4, r2
	bhi	.L1801	@cond_branch
.L1799:
	add	r0, r7, #0x2
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r6, #0x2
	cmp	r6, r7
	bcs	.L1805	@cond_branch
	ldr	r0, .L1824+0x10
	mov	r8, r0
.L1807:
	mov	r1, r8
	ldr	r0, [r1]
	lsl	r1, r6, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x8
	bl	StartSpriteAnim
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, r7
	bcc	.L1807	@cond_branch
.L1805:
	cmp	r7, #0x9
	bls	.L1809	@cond_branch
	cmp	sl, r9
	beq	.L1795	@cond_branch
	ldr	r0, .L1824+0x10
	ldr	r0, [r0]
	ldr	r0, [r0, #0x24]
	mov	r1, #0x7
	bl	StartSpriteAnim
.L1809:
	lsr	r3, r4, #0x1d
	lsl	r2, r5, #0x3
	add	r1, r3, #0
	orr	r1, r1, r2
	lsl	r0, r4, #0x3
	ldr	r2, [sp]		@ created by thumb_load_double_from_address
	ldr	r3, [sp, #0x4]		@ created by thumb_load_double_from_address
	bl	__divdi3
	add	r2, r1, #0
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r4, .L1824+0x10
	ldr	r0, [r4]
	lsl	r3, r7, #0x2
	add	r0, r0, r3
	ldr	r0, [r0]
	bl	StartSpriteAnim
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x9
	bhi	.L1817	@cond_branch
.L1815:
	ldr	r0, [r4]
	lsl	r1, r6, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x0
	bl	StartSpriteAnim
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x9
	bls	.L1815	@cond_branch
	b	.L1817
.L1825:
	.align	2, 0
.L1824:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	gExperienceTables
	.word	gSpeciesInfo
	.word	sExpBarObjs
.L1797:
	mov	r6, #0x2
	ldr	r4, .L1826
.L1821:
	ldr	r0, [r4]
	lsl	r1, r6, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x0
	bl	StartSpriteAnim
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0x9
	bls	.L1821	@cond_branch
.L1817:
	ldr	r4, .L1826
	ldr	r0, [r4]
	ldr	r0, [r0]
	mov	r1, #0x9
	bl	StartSpriteAnim
	ldr	r0, [r4]
	ldr	r0, [r0, #0x4]
	mov	r1, #0xa
	bl	StartSpriteAnim
	ldr	r0, [r4]
	ldr	r0, [r0, #0x28]
	mov	r1, #0xb
	bl	StartSpriteAnim
.L1795:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1827:
	.align	2, 0
.L1826:
	.word	sExpBarObjs
.Lfe108:
	.size	 UpdateExpBarObjs,.Lfe108-UpdateExpBarObjs
	.align	2, 0
	.type	 DestroyExpBarObjs,function
	.thumb_func
DestroyExpBarObjs:
	push	{r4, r5, lr}
	mov	r4, #0x0
.L1832:
	ldr	r5, .L1836
	ldr	r0, [r5]
	lsl	r1, r4, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L1831	@cond_branch
	bl	DestroySpriteAndFreeResources
.L1831:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0xa
	bls	.L1832	@cond_branch
	ldr	r0, [r5]
	cmp	r0, #0
	beq	.L1835	@cond_branch
	bl	Free
	mov	r0, #0x0
	str	r0, [r5]
.L1835:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1837:
	.align	2, 0
.L1836:
	.word	sExpBarObjs
.Lfe109:
	.size	 DestroyExpBarObjs,.Lfe109-DestroyExpBarObjs
	.align	2, 0
	.type	 ShowOrHideExpBarObjs,function
	.thumb_func
ShowOrHideExpBarObjs:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r3, #0x0
	ldr	r6, .L1844
	mov	r1, #0x1
	and	r0, r0, r1
	lsl	r4, r0, #0x2
	mov	r5, #0x5
	neg	r5, r5
.L1842:
	ldr	r0, [r6]
	lsl	r1, r3, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	add	r0, r5, #0
	and	r0, r0, r2
	orr	r0, r0, r4
	strb	r0, [r1]
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0xa
	bls	.L1842	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1845:
	.align	2, 0
.L1844:
	.word	sExpBarObjs
.Lfe110:
	.size	 ShowOrHideExpBarObjs,.Lfe110-ShowOrHideExpBarObjs
	.align	2, 0
	.type	 CreatePokerusIconObj,function
	.thumb_func
CreatePokerusIconObj:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x28
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	ldr	r0, .L1849
	mov	r8, r0
	mov	r0, #0x8
	bl	AllocZeroed
	mov	r1, r8
	str	r0, [r1]
	mov	r0, #0x20
	bl	AllocZeroed
	add	r5, r0, #0
	ldr	r0, .L1849+0x4
	add	r1, r5, #0
	bl	LZ77UnCompWram
	mov	r1, r8
	ldr	r0, [r1]
	cmp	r0, #0
	beq	.L1847	@cond_branch
	str	r5, [sp, #0x18]
	mov	r2, #0x20
	add	r0, sp, #0x18
	lsl	r1, r7, #0x10
	orr	r1, r1, r2
	str	r1, [r0, #0x4]
	ldr	r1, .L1849+0x8
	str	r1, [sp, #0x20]
	ldr	r2, .L1849+0xc
	add	r4, sp, #0x20
	ldr	r1, [r4, #0x4]
	and	r1, r1, r2
	orr	r1, r1, r6
	str	r1, [r4, #0x4]
	mov	r1, sp
	mov	r2, #0x0
	strh	r7, [r1]
	strh	r6, [r1, #0x2]
	ldr	r1, .L1849+0x10
	str	r1, [sp, #0x4]
	ldr	r1, .L1849+0x14
	str	r1, [sp, #0x8]
	str	r2, [sp, #0xc]
	ldr	r1, .L1849+0x18
	str	r1, [sp, #0x10]
	ldr	r1, .L1849+0x1c
	str	r1, [sp, #0x14]
	bl	LoadSpriteSheet
	add	r0, r4, #0
	bl	LoadSpritePalette
	mov	r0, sp
	mov	r1, #0x72
	mov	r2, #0x5c
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1849+0x20
	add	r1, r1, r0
	str	r1, [r2]
	strh	r7, [r2, #0x4]
	strh	r6, [r2, #0x6]
.L1847:
	mov	r0, #0x1
	bl	HideShowPokerusIcon
	bl	ShowPokerusIconObjIfHasOrHadPokerus
	cmp	r5, #0
	beq	.L1848	@cond_branch
	add	r0, r5, #0
	bl	Free
.L1848:
	add	sp, sp, #0x28
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1850:
	.align	2, 0
.L1849:
	.word	sPokerusIconObj
	.word	sPokerusIconObjTiles
	.word	sPokerusIconObjPal
	.word	-0x10000
	.word	sPokerusIconObjOamData
	.word	sPokerusIconObjAnimTable
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.word	gSprites
.Lfe111:
	.size	 CreatePokerusIconObj,.Lfe111-CreatePokerusIconObj
	.align	2, 0
	.type	 DestroyPokerusIconObj,function
	.thumb_func
DestroyPokerusIconObj:
	push	{r4, lr}
	ldr	r4, .L1854
	ldr	r0, [r4]
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L1852	@cond_branch
	bl	DestroySpriteAndFreeResources
.L1852:
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L1853	@cond_branch
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L1853:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1855:
	.align	2, 0
.L1854:
	.word	sPokerusIconObj
.Lfe112:
	.size	 DestroyPokerusIconObj,.Lfe112-DestroyPokerusIconObj
	.align	2, 0
	.type	 ShowPokerusIconObjIfHasOrHadPokerus,function
	.thumb_func
ShowPokerusIconObjIfHasOrHadPokerus:
	push	{r4, lr}
	ldr	r4, .L1859
	ldr	r0, [r4]
	ldr	r1, .L1859+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	bl	CheckPartyPokerus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1857	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L1859+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	bl	CheckPartyHasHadPokerus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1857	@cond_branch
	mov	r0, #0x0
	bl	HideShowPokerusIcon
	b	.L1858
.L1860:
	.align	2, 0
.L1859:
	.word	sMonSummaryScreen
	.word	0x3290
.L1857:
	mov	r0, #0x1
	bl	HideShowPokerusIcon
.L1858:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe113:
	.size	 ShowPokerusIconObjIfHasOrHadPokerus,.Lfe113-ShowPokerusIconObjIfHasOrHadPokerus
	.align	2, 0
	.type	 HideShowPokerusIcon,function
	.thumb_func
HideShowPokerusIcon:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L1867
	ldr	r0, [r4]
	ldr	r1, .L1867+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	bl	CheckPartyPokerus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1862	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L1867+0x4
	add	r0, r0, r1
	mov	r1, #0x0
	bl	CheckPartyHasHadPokerus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1862	@cond_branch
	ldr	r0, .L1867+0x8
	ldr	r0, [r0]
	ldr	r2, [r0]
	add	r2, r2, #0x3e
	mov	r0, #0x1
	add	r1, r5, #0
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	b	.L1861
.L1868:
	.align	2, 0
.L1867:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	sPokerusIconObj
.L1862:
	ldr	r2, .L1869
	ldr	r0, [r2]
	ldr	r1, [r0]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r3, #0x4
	orr	r0, r0, r3
	strb	r0, [r1]
	ldr	r0, .L1869+0x4
	ldr	r0, [r0]
	ldr	r1, .L1869+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L1864	@cond_branch
	ldr	r0, [r2]
	ldr	r1, [r0]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	orr	r0, r0, r3
	strb	r0, [r1]
	ldr	r2, [r2]
	ldr	r1, [r2]
	mov	r0, #0x10
	strh	r0, [r1, #0x20]
	ldr	r1, [r2]
	mov	r0, #0x2c
	b	.L1866
.L1870:
	.align	2, 0
.L1869:
	.word	sPokerusIconObj
	.word	sMonSummaryScreen
	.word	0x3214
.L1864:
	ldr	r2, [r2]
	ldr	r1, [r2]
	mov	r0, #0x72
	strh	r0, [r1, #0x20]
	ldr	r1, [r2]
	mov	r0, #0x5c
.L1866:
	strh	r0, [r1, #0x22]
.L1861:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe114:
	.size	 HideShowPokerusIcon,.Lfe114-HideShowPokerusIcon
	.align	2, 0
	.type	 CreateShinyStarObj,function
	.thumb_func
CreateShinyStarObj:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x28
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	ldr	r0, .L1874
	mov	r8, r0
	mov	r0, #0x8
	bl	AllocZeroed
	mov	r1, r8
	str	r0, [r1]
	mov	r0, #0x40
	bl	AllocZeroed
	add	r5, r0, #0
	ldr	r0, .L1874+0x4
	add	r1, r5, #0
	bl	LZ77UnCompWram
	mov	r1, r8
	ldr	r0, [r1]
	cmp	r0, #0
	beq	.L1872	@cond_branch
	str	r5, [sp, #0x18]
	mov	r2, #0x40
	add	r0, sp, #0x18
	lsl	r1, r7, #0x10
	orr	r1, r1, r2
	str	r1, [r0, #0x4]
	ldr	r1, .L1874+0x8
	str	r1, [sp, #0x20]
	ldr	r2, .L1874+0xc
	add	r4, sp, #0x20
	ldr	r1, [r4, #0x4]
	and	r1, r1, r2
	orr	r1, r1, r6
	str	r1, [r4, #0x4]
	mov	r1, sp
	mov	r2, #0x0
	strh	r7, [r1]
	strh	r6, [r1, #0x2]
	ldr	r1, .L1874+0x10
	str	r1, [sp, #0x4]
	ldr	r1, .L1874+0x14
	str	r1, [sp, #0x8]
	str	r2, [sp, #0xc]
	ldr	r1, .L1874+0x18
	str	r1, [sp, #0x10]
	ldr	r1, .L1874+0x1c
	str	r1, [sp, #0x14]
	bl	LoadSpriteSheet
	add	r0, r4, #0
	bl	LoadSpritePalette
	mov	r0, sp
	mov	r1, #0x6a
	mov	r2, #0x28
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	ldr	r2, [r1]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1874+0x20
	add	r1, r1, r0
	str	r1, [r2]
	strh	r7, [r2, #0x4]
	strh	r6, [r2, #0x6]
.L1872:
	mov	r0, #0x1
	bl	HideShowShinyStar
	bl	ShowShinyStarObjIfMonShiny
	cmp	r5, #0
	beq	.L1873	@cond_branch
	add	r0, r5, #0
	bl	Free
.L1873:
	add	sp, sp, #0x28
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1875:
	.align	2, 0
.L1874:
	.word	sShinyStarObjData
	.word	sStarObjTiles
	.word	sStarObjPal
	.word	-0x10000
	.word	sStarObjOamData
	.word	sStarObjAnimTable
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.word	gSprites
.Lfe115:
	.size	 CreateShinyStarObj,.Lfe115-CreateShinyStarObj
	.align	2, 0
	.type	 DestroyShinyStarObj,function
	.thumb_func
DestroyShinyStarObj:
	push	{r4, lr}
	ldr	r4, .L1879
	ldr	r0, [r4]
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L1877	@cond_branch
	bl	DestroySpriteAndFreeResources
.L1877:
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L1878	@cond_branch
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L1878:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1880:
	.align	2, 0
.L1879:
	.word	sShinyStarObjData
.Lfe116:
	.size	 DestroyShinyStarObj,.Lfe116-DestroyShinyStarObj
	.align	2, 0
	.type	 HideShowShinyStar,function
	.thumb_func
HideShowShinyStar:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L1887
	ldr	r0, [r4]
	ldr	r1, .L1887+0x4
	add	r0, r0, r1
	bl	IsMonShiny
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1882	@cond_branch
	ldr	r0, [r4]
	mov	r1, #0xc8
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1882	@cond_branch
	ldr	r4, .L1887+0x8
	ldr	r0, [r4]
	ldr	r2, [r0]
	add	r2, r2, #0x3e
	mov	r0, #0x1
	add	r1, r5, #0
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
	add	r3, r4, #0
	b	.L1883
.L1888:
	.align	2, 0
.L1887:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	sShinyStarObjData
.L1882:
	ldr	r3, .L1889
	ldr	r0, [r3]
	ldr	r1, [r0]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1]
.L1883:
	ldr	r0, .L1889+0x4
	ldr	r0, [r0]
	ldr	r1, .L1889+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x3
	bne	.L1884	@cond_branch
	ldr	r2, [r3]
	ldr	r1, [r2]
	mov	r0, #0x8
	strh	r0, [r1, #0x20]
	ldr	r1, [r2]
	mov	r0, #0x18
	b	.L1886
.L1890:
	.align	2, 0
.L1889:
	.word	sShinyStarObjData
	.word	sMonSummaryScreen
	.word	0x3214
.L1884:
	ldr	r2, [r3]
	ldr	r1, [r2]
	mov	r0, #0x6a
	strh	r0, [r1, #0x20]
	ldr	r1, [r2]
	mov	r0, #0x28
.L1886:
	strh	r0, [r1, #0x22]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe117:
	.size	 HideShowShinyStar,.Lfe117-HideShowShinyStar
	.align	2, 0
	.type	 ShowShinyStarObjIfMonShiny,function
	.thumb_func
ShowShinyStarObjIfMonShiny:
	push	{r4, lr}
	ldr	r4, .L1894
	ldr	r0, [r4]
	ldr	r1, .L1894+0x4
	add	r0, r0, r1
	bl	IsMonShiny
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1892	@cond_branch
	ldr	r0, [r4]
	mov	r1, #0xc8
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1892	@cond_branch
	mov	r0, #0x0
	bl	HideShowShinyStar
	b	.L1893
.L1895:
	.align	2, 0
.L1894:
	.word	sMonSummaryScreen
	.word	0x3290
.L1892:
	mov	r0, #0x1
	bl	HideShowShinyStar
.L1893:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe118:
	.size	 ShowShinyStarObjIfMonShiny,.Lfe118-ShowShinyStarObjIfMonShiny
	.align	2, 0
	.type	 PokeSum_DestroySprites,function
	.thumb_func
PokeSum_DestroySprites:
	push	{lr}
	bl	DestroyMoveSelectionCursorObjs
	bl	DestroyHpBarObjs
	bl	DestroyExpBarObjs
	bl	PokeSum_DestroyMonPicSprite
	bl	PokeSum_DestroyMonIconSprite
	bl	DestroyBallIconObj
	bl	PokeSum_DestroyMonMarkingsSprite
	bl	DestroyMonStatusIconObj
	bl	DestroyPokerusIconObj
	bl	DestroyShinyStarObj
	bl	ResetSpriteData
	pop	{r0}
	bx	r0
.Lfe119:
	.size	 PokeSum_DestroySprites,.Lfe119-PokeSum_DestroySprites
	.align	2, 0
	.type	 PokeSum_CreateSprites,function
	.thumb_func
PokeSum_CreateSprites:
	push	{lr}
	bl	CreateBallIconObj
	mov	r0, #0x0
	bl	ShowOrHideBallIconObj
	bl	PokeSum_CreateMonIconSprite
	bl	PokeSum_CreateMonPicSprite
	mov	r0, #0x0
	bl	PokeSum_ShowOrHideMonPicSprite
	bl	UpdateHpBarObjs
	bl	UpdateExpBarObjs
	bl	PokeSum_UpdateMonMarkingsAnim
	bl	UpdateMonStatusIconObj
	bl	ShowPokerusIconObjIfHasOrHadPokerus
	bl	ShowShinyStarObjIfMonShiny
	pop	{r0}
	bx	r0
.Lfe120:
	.size	 PokeSum_CreateSprites,.Lfe120-PokeSum_CreateSprites
	.align	2, 0
	.type	 PokeSum_CreateMonMarkingsSprite,function
	.thumb_func
PokeSum_CreateMonMarkingsSprite:
	push	{r4, r5, r6, lr}
	ldr	r5, .L1900
	ldr	r0, [r5]
	ldr	r1, .L1900+0x4
	add	r0, r0, r1
	mov	r1, #0x8
	bl	GetMonData
	add	r6, r0, #0
	ldr	r0, [r5]
	ldr	r4, .L1900+0x8
	add	r0, r0, r4
	ldr	r0, [r0]
	bl	DestroySpriteAndFreeResources
	ldr	r2, .L1900+0xc
	mov	r0, #0x8c
	mov	r1, #0x8c
	bl	CreateMonMarkingAllCombosSprite
	add	r2, r0, #0
	ldr	r0, [r5]
	add	r0, r0, r4
	str	r2, [r0]
	cmp	r2, #0
	beq	.L1899	@cond_branch
	lsl	r1, r6, #0x18
	lsr	r1, r1, #0x18
	add	r0, r2, #0
	bl	StartSpriteAnim
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r2, [r0]
	mov	r1, #0x14
	strh	r1, [r2, #0x20]
	ldr	r1, [r0]
	mov	r0, #0x5b
	strh	r0, [r1, #0x22]
.L1899:
	mov	r0, #0x1
	bl	PokeSum_ShowOrHideMonMarkingsSprite
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1901:
	.align	2, 0
.L1900:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x32fc
	.word	sMonMarkingSpritePalette
.Lfe121:
	.size	 PokeSum_CreateMonMarkingsSprite,.Lfe121-PokeSum_CreateMonMarkingsSprite
	.align	2, 0
	.type	 PokeSum_DestroyMonMarkingsSprite,function
	.thumb_func
PokeSum_DestroyMonMarkingsSprite:
	push	{lr}
	ldr	r0, .L1903
	ldr	r0, [r0]
	ldr	r1, .L1903+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	DestroySpriteAndFreeResources
	pop	{r0}
	bx	r0
.L1904:
	.align	2, 0
.L1903:
	.word	sMonSummaryScreen
	.word	0x32fc
.Lfe122:
	.size	 PokeSum_DestroyMonMarkingsSprite,.Lfe122-PokeSum_DestroyMonMarkingsSprite
	.align	2, 0
	.type	 PokeSum_ShowOrHideMonMarkingsSprite,function
	.thumb_func
PokeSum_ShowOrHideMonMarkingsSprite:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r4, .L1908
	ldr	r0, [r4]
	ldr	r1, .L1908+0x4
	add	r0, r0, r1
	mov	r1, #0x8
	bl	GetMonData
	cmp	r0, #0
	bne	.L1906	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L1908+0x8
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1]
	b	.L1907
.L1909:
	.align	2, 0
.L1908:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x32fc
.L1906:
	ldr	r0, [r4]
	ldr	r1, .L1910
	add	r0, r0, r1
	ldr	r2, [r0]
	add	r2, r2, #0x3e
	mov	r0, #0x1
	add	r1, r5, #0
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
.L1907:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1911:
	.align	2, 0
.L1910:
	.word	0x32fc
.Lfe123:
	.size	 PokeSum_ShowOrHideMonMarkingsSprite,.Lfe123-PokeSum_ShowOrHideMonMarkingsSprite
	.align	2, 0
	.type	 PokeSum_UpdateMonMarkingsAnim,function
	.thumb_func
PokeSum_UpdateMonMarkingsAnim:
	push	{r4, lr}
	ldr	r4, .L1913
	ldr	r0, [r4]
	ldr	r1, .L1913+0x4
	add	r0, r0, r1
	mov	r1, #0x8
	bl	GetMonData
	add	r1, r0, #0
	ldr	r0, [r4]
	ldr	r2, .L1913+0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	mov	r0, #0x0
	bl	PokeSum_ShowOrHideMonMarkingsSprite
	pop	{r4}
	pop	{r0}
	bx	r0
.L1914:
	.align	2, 0
.L1913:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	0x32fc
.Lfe124:
	.size	 PokeSum_UpdateMonMarkingsAnim,.Lfe124-PokeSum_UpdateMonMarkingsAnim
	.align	2, 0
	.type	 PokeSum_SeekToNextMon,function
	.thumb_func
PokeSum_SeekToNextMon:
	push	{r4, r5, r6, lr}
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r1, .L1928
	ldr	r2, [r1]
	ldr	r3, .L1928+0x4
	add	r0, r2, r3
	ldrb	r3, [r0]
	add	r6, r1, #0
	cmp	r3, #0x1
	bne	.L1916	@cond_branch
	ldr	r1, .L1928+0x8
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1917	@cond_branch
	lsl	r1, r5, #0x18
	asr	r1, r1, #0x18
	mov	r5, #0x2
	eor	r1, r1, r3
	neg	r0, r1
	orr	r0, r0, r1
	asr	r0, r0, #0x1f
	and	r5, r5, r0
	b	.L1920
.L1929:
	.align	2, 0
.L1928:
	.word	sMonSummaryScreen
	.word	0x321c
	.word	0x3214
.L1917:
	lsl	r0, r5, #0x18
	asr	r0, r0, #0x18
	mov	r5, #0x3
	cmp	r0, #0x1
	bne	.L1920	@cond_branch
	mov	r5, #0x1
.L1920:
	ldr	r0, [r6]
	ldr	r2, .L1930
	add	r0, r0, r2
	ldr	r4, [r0]
	bl	GetLastViewedMonIndex
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, [r6]
	ldr	r3, .L1930+0x4
	add	r0, r0, r3
	ldrb	r2, [r0]
	add	r3, r5, #0
	add	r0, r4, #0
	bl	SeekToNextMonInBox
	b	.L1927
.L1931:
	.align	2, 0
.L1930:
	.word	0x32f4
	.word	0x3210
.L1916:
	bl	IsUpdateLinkStateCBActive
	cmp	r0, #0
	bne	.L1924	@cond_branch
	ldr	r0, .L1932
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L1924	@cond_branch
	bl	IsMultiBattle
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1924	@cond_branch
	lsl	r0, r5, #0x18
	asr	r0, r0, #0x18
	bl	SeekToNextMonInMultiParty
	b	.L1927
.L1933:
	.align	2, 0
.L1932:
	.word	gReceivedRemoteLinkPlayers
.L1924:
	lsl	r0, r5, #0x18
	asr	r0, r0, #0x18
	bl	SeekToNextMonInSingleParty
.L1927:
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	lsl	r0, r2, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L1915	@cond_branch
	ldr	r0, .L1934
	strb	r2, [r0]
	ldr	r0, .L1934+0x4
	mov	r1, #0x0
	bl	CreateTask
	ldr	r0, .L1934+0x8
	ldr	r0, [r0]
	ldr	r1, .L1934+0xc
	add	r0, r0, r1
	mov	r1, #0x0
	strb	r1, [r0]
.L1915:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1935:
	.align	2, 0
.L1934:
	.word	sLastViewedMonIndex
	.word	Task_PokeSum_SwitchDisplayedPokemon
	.word	sMonSummaryScreen
	.word	0x328c
.Lfe125:
	.size	 PokeSum_SeekToNextMon,.Lfe125-PokeSum_SeekToNextMon
	.align	2, 0
	.type	 SeekToNextMonInSingleParty,function
	.thumb_func
SeekToNextMonInSingleParty:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r2, .L1952
	ldr	r0, [r2]
	ldr	r3, .L1952+0x4
	add	r1, r0, r3
	ldr	r7, [r1]
	mov	r6, #0x0
	ldr	r1, .L1952+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1937	@cond_branch
	lsl	r0, r4, #0x18
	asr	r3, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	add	r5, r0, #0
	ldr	r6, .L1952+0xc
	cmp	r3, r1
	bne	.L1938	@cond_branch
	ldrb	r0, [r6]
	cmp	r0, #0
	beq	.L1946	@cond_branch
.L1938:
	asr	r0, r5, #0x18
	cmp	r0, #0x1
	bne	.L1940	@cond_branch
	ldr	r0, [r2]
	ldr	r2, .L1952+0x10
	add	r0, r0, r2
	ldrb	r1, [r6]
	ldrb	r0, [r0]
	cmp	r1, r0
	bcs	.L1946	@cond_branch
.L1940:
	ldrb	r0, [r6]
	add	r0, r0, r4
	b	.L1951
.L1953:
	.align	2, 0
.L1952:
	.word	sMonSummaryScreen
	.word	0x32f4
	.word	0x3214
	.word	sLastViewedMonIndex
	.word	0x3210
.L1937:
	lsl	r5, r4, #0x18
.L1944:
	lsl	r0, r6, #0x18
	asr	r0, r0, #0x18
	asr	r1, r5, #0x18
	add	r0, r0, r1
	lsl	r0, r0, #0x18
	ldr	r4, .L1954
	lsr	r6, r0, #0x18
	asr	r0, r0, #0x18
	ldrb	r3, [r4]
	add	r1, r0, r3
	cmp	r1, #0
	blt	.L1946	@cond_branch
	ldr	r0, .L1954+0x4
	ldr	r0, [r0]
	ldr	r2, .L1954+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r1, r0
	ble	.L1945	@cond_branch
.L1946:
	mov	r0, #0x1
	neg	r0, r0
	b	.L1949
.L1955:
	.align	2, 0
.L1954:
	.word	sLastViewedMonIndex
	.word	sMonSummaryScreen
	.word	0x3210
.L1945:
	mov	r0, #0x64
	mul	r0, r0, r1
	add	r0, r7, r0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L1944	@cond_branch
	ldrb	r0, [r4]
	add	r0, r0, r6
.L1951:
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
.L1949:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe126:
	.size	 SeekToNextMonInSingleParty,.Lfe126-SeekToNextMonInSingleParty
	.align	2, 0
	.type	 PokeSum_CanSeekToMon,function
	.thumb_func
PokeSum_CanSeekToMon:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0xb
	bl	GetMonData
	cmp	r0, #0
	beq	.L1957	@cond_branch
	ldr	r0, .L1960
	ldr	r0, [r0]
	ldr	r1, .L1960+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1958	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L1957	@cond_branch
.L1958:
	mov	r0, #0x1
	b	.L1959
.L1961:
	.align	2, 0
.L1960:
	.word	sMonSummaryScreen
	.word	0x3214
.L1957:
	mov	r0, #0x0
.L1959:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe127:
	.size	 PokeSum_CanSeekToMon,.Lfe127-PokeSum_CanSeekToMon
	.align	2, 0
	.type	 SeekToMonInMultiParty_SeekForward,function
	.thumb_func
SeekToMonInMultiParty_SeekForward:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L1963:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x6
	beq	.L1966	@cond_branch
	ldr	r0, .L1970
	add	r5, r4, r0
	ldrb	r1, [r5]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1970+0x4
	add	r0, r0, r1
	bl	PokeSum_CanSeekToMon
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1963	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	b	.L1969
.L1971:
	.align	2, 0
.L1970:
	.word	sMultiBattlePartyOrder
	.word	gPlayerParty
.L1966:
	mov	r0, #0x1
	neg	r0, r0
.L1969:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe128:
	.size	 SeekToMonInMultiParty_SeekForward,.Lfe128-SeekToMonInMultiParty_SeekForward
	.align	2, 0
	.type	 SeekToMonInMultiParty_SeekBack,function
	.thumb_func
SeekToMonInMultiParty_SeekBack:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L1973:
	cmp	r4, #0
	beq	.L1976	@cond_branch
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L1980
	add	r5, r4, r0
	ldrb	r1, [r5]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L1980+0x4
	add	r0, r0, r1
	bl	PokeSum_CanSeekToMon
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L1973	@cond_branch
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	b	.L1979
.L1981:
	.align	2, 0
.L1980:
	.word	sMultiBattlePartyOrder
	.word	gPlayerParty
.L1976:
	mov	r0, #0x1
	neg	r0, r0
.L1979:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe129:
	.size	 SeekToMonInMultiParty_SeekBack,.Lfe129-SeekToMonInMultiParty_SeekBack
	.align	2, 0
	.type	 SeekToNextMonInMultiParty,function
	.thumb_func
SeekToNextMonInMultiParty:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r6, #0x0
	mov	r5, #0x0
	b	.L1983
.L1985:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L1983:
	cmp	r5, #0x5
	bhi	.L1984	@cond_branch
	ldr	r4, .L1998
	add	r4, r5, r4
	bl	GetLastViewedMonIndex
	ldrb	r1, [r4]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r1, r0
	bne	.L1985	@cond_branch
	add	r6, r5, #0
.L1984:
	lsl	r0, r7, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	bne	.L1991	@cond_branch
	cmp	r6, #0
	beq	.L1990	@cond_branch
.L1991:
	cmp	r1, #0x1
	bne	.L1995	@cond_branch
	cmp	r6, #0x5
	bne	.L1992	@cond_branch
.L1990:
	mov	r0, #0x1
	neg	r0, r0
	b	.L1994
.L1999:
	.align	2, 0
.L1998:
	.word	sMultiBattlePartyOrder
.L1995:
	add	r0, r6, #0
	bl	SeekToMonInMultiParty_SeekBack
	b	.L1997
.L1992:
	add	r0, r6, #0
	bl	SeekToMonInMultiParty_SeekForward
.L1997:
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
.L1994:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe130:
	.size	 SeekToNextMonInMultiParty,.Lfe130-SeekToNextMonInMultiParty
	.align	2, 0
	.type	 Task_PokeSum_SwitchDisplayedPokemon,function
	.thumb_func
Task_PokeSum_SwitchDisplayedPokemon:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r1, .L2028
	ldr	r0, [r1]
	ldr	r4, .L2028+0x4
	add	r2, r0, r4
	ldrb	r0, [r2]
	add	r5, r1, #0
	cmp	r0, #0xb
	bls	.LCB18174
	b	.L2023	@long jump
.LCB18174:
	lsl	r0, r0, #0x2
	ldr	r1, .L2028+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L2029:
	.align	2, 0
.L2028:
	.word	sMonSummaryScreen
	.word	0x328c
	.word	.L2024
	.align	2, 0
	.align	2, 0
.L2024:
	.word	.L2002
	.word	.L2003
	.word	.L2004
	.word	.L2006
	.word	.L2009
	.word	.L2013
	.word	.L2014
	.word	.L2016
	.word	.L2018
	.word	.L2019
	.word	.L2020
	.word	.L2021
.L2002:
	bl	StopCryAndClearCrySongs
	ldr	r0, .L2030
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L2030+0x4
	strb	r1, [r0]
	ldr	r0, .L2030+0x8
	ldr	r1, [r0]
	ldr	r0, .L2030+0xc
	add	r1, r1, r0
	b	.L2025
.L2031:
	.align	2, 0
.L2030:
	.word	sMoveSelectionCursorPos
	.word	sMoveSwapCursorPos
	.word	sMonSummaryScreen
	.word	0x328c
.L2003:
	bl	PokeSum_DestroyMonPicSprite
	bl	PokeSum_DestroyMonIconSprite
	bl	DestroyBallIconObj
	b	.L2026
.L2004:
	ldr	r0, [r5]
	ldr	r4, .L2032
	add	r0, r0, r4
	bl	BufferSelectedMonData
	ldr	r0, [r5]
	add	r0, r0, r4
	mov	r1, #0x2d
	bl	GetMonData
	ldr	r1, [r5]
	mov	r2, #0xc8
	lsl	r2, r2, #0x6
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, r4
	mov	r1, #0x4
	bl	GetMonData
	ldr	r1, [r5]
	ldr	r2, .L2032+0x4
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r2, r0, r2
	ldrb	r1, [r2]
	cmp	r1, #0x1
	bne	.L2005	@cond_branch
	sub	r4, r4, #0x90
	add	r0, r0, r4
	strb	r1, [r0]
.L2005:
	ldr	r1, [r5]
	ldr	r0, .L2032+0x8
	add	r1, r1, r0
	b	.L2025
.L2033:
	.align	2, 0
.L2032:
	.word	0x3290
	.word	0x3204
	.word	0x328c
.L2006:
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	ldr	r4, .L2034
	ldr	r0, [r4]
	ldr	r1, .L2034+0x4
	add	r0, r0, r1
	bl	IsMonShiny
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L2007	@cond_branch
	ldr	r0, [r4]
	mov	r2, #0xc8
	lsl	r2, r2, #0x6
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L2007	@cond_branch
	ldr	r4, .L2034+0x8
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	sub	r4, r4, #0x20
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x20
	bl	LoadPalette
	b	.L2008
.L2035:
	.align	2, 0
.L2034:
	.word	sMonSummaryScreen
	.word	0x3290
	.word	gSummaryScreen_Bg_Pal+0xc0
.L2007:
	ldr	r4, .L2036
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x20
	bl	LoadPalette
	add	r4, r4, #0x20
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x20
	bl	LoadPalette
.L2008:
	ldr	r0, .L2036+0x4
	ldr	r1, [r0]
	ldr	r4, .L2036+0x8
	add	r1, r1, r4
	b	.L2025
.L2037:
	.align	2, 0
.L2036:
	.word	gSummaryScreen_Bg_Pal
	.word	sMonSummaryScreen
	.word	0x328c
.L2009:
	ldr	r4, .L2038
	ldr	r1, [r4]
	ldr	r2, .L2038+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L2010	@cond_branch
	sub	r2, r2, #0x14
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L2011	@cond_branch
	add	r2, r2, #0x3c
	add	r0, r1, r2
	ldrb	r0, [r0]
	ldr	r1, .L2038+0x8
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	ldr	r0, [r4]
	mov	r4, #0xc9
	lsl	r4, r4, #0x6
	add	r0, r0, r4
	ldrb	r0, [r0]
	ldr	r1, .L2038+0xc
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	b	.L2010
.L2039:
	.align	2, 0
.L2038:
	.word	sMonSummaryScreen
	.word	0x3214
	.word	gSummaryScreen_PageEgg_Tilemap
	.word	gSummaryScreen_PageSkills_Tilemap
.L2011:
	ldr	r2, .L2040
	add	r0, r1, r2
	ldrb	r0, [r0]
	ldr	r1, .L2040+0x4
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	ldr	r0, [r4]
	mov	r4, #0xc9
	lsl	r4, r4, #0x6
	add	r0, r0, r4
	ldrb	r0, [r0]
	ldr	r1, .L2040+0x8
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
.L2010:
	ldr	r0, .L2040+0xc
	ldr	r1, [r0]
	ldr	r0, .L2040+0x10
	add	r1, r1, r0
	b	.L2025
.L2041:
	.align	2, 0
.L2040:
	.word	0x323c
	.word	gSummaryScreen_PageInfo_Tilemap
	.word	gSummaryScreen_PageSkills_Tilemap
	.word	sMonSummaryScreen
	.word	0x328c
.L2013:
	bl	BufferMonInfo
	b	.L2026
.L2014:
	ldr	r0, [r5]
	mov	r4, #0xc8
	lsl	r4, r4, #0x6
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L2015	@cond_branch
	bl	BufferMonSkills
.L2015:
	ldr	r1, [r5]
	ldr	r0, .L2042
	add	r1, r1, r0
	b	.L2025
.L2043:
	.align	2, 0
.L2042:
	.word	0x328c
.L2016:
	ldr	r0, [r5]
	mov	r1, #0xc8
	lsl	r1, r1, #0x6
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L2017	@cond_branch
	bl	BufferMonMoves
.L2017:
	ldr	r1, [r5]
	b	.L2027
.L2018:
	bl	PokeSum_PrintRightPaneText
	bl	PokeSum_PrintBottomPaneText
	bl	PokeSum_PrintAbilityDataOrMoveTypes
	ldr	r0, .L2044
	ldr	r1, [r0]
	ldr	r4, .L2044+0x4
	add	r1, r1, r4
	b	.L2025
.L2045:
	.align	2, 0
.L2044:
	.word	sMonSummaryScreen
	.word	0x328c
.L2019:
	bl	PokeSum_PrintMonTypeIcons
	bl	PokeSum_DrawPageProgressTiles
	ldr	r4, .L2046
	ldr	r0, [r4]
	ldr	r1, .L2046+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	PokeSum_PrintPageHeaderText
	ldr	r1, [r4]
	b	.L2027
.L2047:
	.align	2, 0
.L2046:
	.word	sMonSummaryScreen
	.word	0x3214
.L2020:
	ldr	r0, [r5]
	mov	r4, #0xc0
	lsl	r4, r4, #0x6
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r5]
	ldr	r1, .L2048
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r5]
	ldr	r2, .L2048+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r5]
	add	r4, r4, #0x6
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r5]
	ldr	r1, .L2048+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r5]
	ldr	r2, .L2048+0xc
	add	r0, r0, r2
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldr	r0, [r5]
	sub	r4, r4, #0x1
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	ldr	r1, [r5]
	ldr	r0, .L2048+0x10
	add	r1, r1, r0
	b	.L2025
.L2049:
	.align	2, 0
.L2048:
	.word	0x3001
	.word	0x3002
	.word	0x3003
	.word	0x3004
	.word	0x328c
.L2021:
	bl	Overworld_LinkRecvQueueLengthMoreThan2
	cmp	r0, #0
	bne	.L2001	@cond_branch
	bl	IsLinkRecvQueueAtOverworldMax
	cmp	r0, #0
	bne	.L2001	@cond_branch
	bl	PokeSum_CreateSprites
	bl	PokeSum_TryPlayMonCry
.L2026:
	ldr	r0, .L2050
	ldr	r1, [r0]
.L2027:
	ldr	r2, .L2050+0x4
	add	r1, r1, r2
.L2025:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L2001
.L2051:
	.align	2, 0
.L2050:
	.word	sMonSummaryScreen
	.word	0x328c
.L2023:
	mov	r0, #0x0
	strb	r0, [r2]
	add	r0, r3, #0
	bl	DestroyTask
.L2001:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe131:
	.size	 Task_PokeSum_SwitchDisplayedPokemon,.Lfe131-Task_PokeSum_SwitchDisplayedPokemon
	.align	2, 0
	.type	 PokeSum_UpdateWin1ActiveFlag,function
	.thumb_func
PokeSum_UpdateWin1ActiveFlag:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r5, #0x80
	lsl	r5, r5, #0x7
	mov	r0, #0x0
	add	r1, r5, #0
	bl	ClearGpuRegBits
	cmp	r4, #0x2
	bgt	.L2053	@cond_branch
	cmp	r4, #0
	blt	.L2053	@cond_branch
	mov	r0, #0x0
	bl	GetGpuReg
	add	r1, r5, #0
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x0
	bl	SetGpuReg
.L2053:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe132:
	.size	 PokeSum_UpdateWin1ActiveFlag,.Lfe132-PokeSum_UpdateWin1ActiveFlag
	.align	2, 0
	.type	 PokeSum_TryPlayMonCry,function
	.thumb_func
PokeSum_TryPlayMonCry:
	push	{r4, r5, lr}
	ldr	r4, .L2063
	ldr	r0, [r4]
	ldr	r5, .L2063+0x4
	add	r0, r0, r5
	mov	r1, #0x2d
	bl	GetMonData
	cmp	r0, #0
	bne	.L2060	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, r5
	bl	ShouldPlayNormalMonCry
	cmp	r0, #0x1
	bne	.L2061	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	mov	r2, #0x0
	bl	PlayCry_ByMode
	b	.L2060
.L2064:
	.align	2, 0
.L2063:
	.word	sMonSummaryScreen
	.word	0x3290
.L2061:
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	mov	r2, #0xb
	bl	PlayCry_ByMode
.L2060:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe133:
	.size	 PokeSum_TryPlayMonCry,.Lfe133-PokeSum_TryPlayMonCry
	.align	2, 0
	.type	 PokeSum_IsMonBoldOrGentle,function
	.thumb_func
PokeSum_IsMonBoldOrGentle:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	beq	.L2067	@cond_branch
	cmp	r0, #0x15
	bne	.L2066	@cond_branch
.L2067:
	mov	r0, #0x1
	b	.L2068
.L2066:
	mov	r0, #0x0
.L2068:
	pop	{r1}
	bx	r1
.Lfe134:
	.size	 PokeSum_IsMonBoldOrGentle,.Lfe134-PokeSum_IsMonBoldOrGentle
	.align	2, 0
	.type	 CurrentMonIsFromGBA,function
	.thumb_func
CurrentMonIsFromGBA:
	push	{lr}
	ldr	r0, .L2073
	ldr	r0, [r0]
	ldr	r1, .L2073+0x4
	add	r0, r0, r1
	mov	r1, #0x25
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	mov	r2, #0xfc
	lsl	r2, r2, #0x18
	add	r0, r0, r2
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L2071	@cond_branch
	cmp	r1, #0x2
	beq	.L2071	@cond_branch
	cmp	r1, #0x1
	beq	.L2071	@cond_branch
	cmp	r1, #0x3
	bne	.L2070	@cond_branch
.L2071:
	mov	r0, #0x1
	b	.L2072
.L2074:
	.align	2, 0
.L2073:
	.word	sMonSummaryScreen
	.word	0x3290
.L2070:
	mov	r0, #0x0
.L2072:
	pop	{r1}
	bx	r1
.Lfe135:
	.size	 CurrentMonIsFromGBA,.Lfe135-CurrentMonIsFromGBA
	.align	2, 0
	.type	 MapSecIsInKantoOrSevii,function
	.thumb_func
MapSecIsInKantoOrSevii:
	push	{lr}
	lsl	r0, r0, #0x18
	mov	r1, #0xa8
	lsl	r1, r1, #0x18
	add	r0, r0, r1
	lsr	r0, r0, #0x18
	cmp	r0, #0x6c
	bls	.L2076	@cond_branch
	mov	r0, #0x0
	b	.L2077
.L2076:
	mov	r0, #0x1
.L2077:
	pop	{r1}
	bx	r1
.Lfe136:
	.size	 MapSecIsInKantoOrSevii,.Lfe136-MapSecIsInKantoOrSevii
	.align	2, 0
	.type	 ShowPokemonSummaryScreen_NullParty,function
	.thumb_func
ShowPokemonSummaryScreen_NullParty:
	push	{lr}
	add	sp, sp, #-0x4
	ldr	r3, .L2079
	mov	r0, #0x0
	str	r0, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ShowPokemonSummaryScreen
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L2080:
	.align	2, 0
.L2079:
	.word	CB2_ReturnToField
.Lfe137:
	.size	 ShowPokemonSummaryScreen_NullParty,.Lfe137-ShowPokemonSummaryScreen_NullParty
.text
	.align	2, 0 @ Don't pad with nop

