@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	TrySetQuestLogBattleEvent
	.type	 TrySetQuestLogBattleEvent,function
	.thumb_func
TrySetQuestLogBattleEvent:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	ldr	r4, .L29
	ldr	r0, [r4]
	ldr	r1, .L29+0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB11
	b	.L5	@long jump
.LCB11:
	ldr	r5, .L29+0x8
	ldrb	r0, [r5]
	cmp	r0, #0x1
	beq	.L6	@cond_branch
	cmp	r0, #0x7
	beq	.LCB19
	b	.L5	@long jump
.LCB19:
.L6:
	mov	r0, #0x8
	bl	Alloc
	add	r7, r0, #0
	mov	r0, #0x8
	bl	Alloc
	mov	r9, r0
	ldr	r4, [r4]
	mov	r0, #0x8
	and	r4, r4, r0
	cmp	r4, #0
	bne	.LCB32
	b	.L7	@long jump
.LCB32:
	ldr	r3, .L29+0xc
	ldr	r2, .L29+0x10
	ldrh	r1, [r2]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r3
	ldrb	r1, [r0, #0x1]
	cmp	r1, #0x57
	beq	.L11	@cond_branch
	cmp	r1, #0x57
	bgt	.L14	@cond_branch
	cmp	r1, #0x54
	beq	.L9	@cond_branch
	b	.L12
.L30:
	.align	2, 0
.L29:
	.word	gBattleTypeFlags
	.word	0x10202
	.word	gBattleOutcome
	.word	gTrainers
	.word	gTrainerBattleOpponent_A
.L14:
	cmp	r1, #0x5a
	beq	.L10	@cond_branch
	b	.L12
.L9:
	mov	r0, #0x1e
	mov	sl, r0
	b	.L8
.L10:
	mov	r1, #0x21
	b	.L26
.L11:
	mov	r0, #0x20
	mov	sl, r0
	b	.L8
.L12:
	mov	r1, #0x22
.L26:
	mov	sl, r1
.L8:
	ldrh	r0, [r2]
	strh	r0, [r7]
	ldr	r0, .L31
	ldr	r0, [r0]
	mov	r1, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L15	@cond_branch
	ldr	r0, .L31+0x4
	ldrh	r0, [r0, #0x20]
	strh	r0, [r7, #0x2]
	ldr	r4, .L31+0x8
	ldr	r0, [r4]
	mov	r1, #0xc1
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldrb	r0, [r0]
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L16	@cond_branch
	ldr	r2, .L31+0xc
	ldr	r0, [r4]
	mov	r1, #0xc1
	lsl	r1, r1, #0x1
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x58
	mul	r0, r0, r1
	add	r0, r0, r2
	b	.L27
.L32:
	.align	2, 0
.L31:
	.word	gBattleTypeFlags
	.word	gBattleResults
	.word	gBattleStruct
	.word	gBattleMons
.L16:
	ldr	r5, .L33
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r4, #0x58
	mul	r0, r0, r4
	add	r0, r0, r5
	ldrh	r0, [r0, #0x28]
	cmp	r0, #0
	beq	.L18	@cond_branch
	mov	r0, #0x0
	b	.L28
.L34:
	.align	2, 0
.L33:
	.word	gBattleMons
.L18:
	mov	r0, #0x2
.L28:
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r4
	add	r0, r0, r5
.L27:
	ldrh	r0, [r0]
	strh	r0, [r7, #0x4]
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	add	r4, r0, #0
	mov	r0, #0x2
	bl	GetBattlerAtPosition
	ldr	r6, .L35
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r5, #0x58
	mov	r1, r4
	mul	r1, r1, r5
	add	r1, r1, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r5
	add	r0, r0, r6
	ldrh	r0, [r0, #0x28]
	ldrh	r1, [r1, #0x28]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	add	r4, r0, #0
	mov	r0, #0x2
	bl	GetBattlerAtPosition
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r1, r4
	mul	r1, r1, r5
	add	r1, r1, r6
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r5
	add	r0, r0, r6
	ldrh	r0, [r0, #0x2c]
	ldrh	r1, [r1, #0x2c]
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	b	.L20
.L36:
	.align	2, 0
.L35:
	.word	gBattleMons
.L15:
	ldr	r0, .L37
	ldrh	r0, [r0, #0x20]
	strh	r0, [r7, #0x2]
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	ldr	r5, .L37+0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r4, #0x58
	mul	r0, r0, r4
	add	r0, r0, r5
	ldrh	r0, [r0]
	strh	r0, [r7, #0x4]
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r4
	add	r0, r0, r5
	ldrh	r0, [r0, #0x28]
	mov	r8, r0
	mov	r0, #0x0
	bl	GetBattlerAtPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r4
	add	r0, r0, r5
	ldrh	r4, [r0, #0x2c]
.L20:
	bl	GetCurrentRegionMapSectionId
	mov	r1, #0x0
	strb	r0, [r7, #0x7]
	strb	r1, [r7, #0x6]
	add	r0, r4, #0
	mov	r1, #0x3
	bl	__udivsi3
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	lsl	r0, r1, #0x1
	cmp	r8, r0
	bge	.L21	@cond_branch
	mov	r0, #0x1
	strb	r0, [r7, #0x6]
.L21:
	cmp	r8, r1
	bcs	.L22	@cond_branch
	ldrb	r0, [r7, #0x6]
	add	r0, r0, #0x1
	strb	r0, [r7, #0x6]
.L22:
	mov	r0, sl
	add	r1, r7, #0
	bl	SetQuestLogEvent
	b	.L23
.L38:
	.align	2, 0
.L37:
	.word	gBattleResults
	.word	gBattleMons
.L7:
	ldrb	r0, [r5]
	cmp	r0, #0x1
	bne	.L24	@cond_branch
	ldr	r0, .L39
	mov	r1, #0xb
	bl	GetMonData
	mov	r1, r9
	strh	r0, [r1]
	strh	r4, [r1, #0x2]
	b	.L25
.L40:
	.align	2, 0
.L39:
	.word	gEnemyParty
.L24:
	mov	r0, r9
	strh	r4, [r0]
	ldr	r0, .L41
	mov	r1, #0xb
	bl	GetMonData
	mov	r1, r9
	strh	r0, [r1, #0x2]
.L25:
	bl	GetCurrentRegionMapSectionId
	mov	r1, r9
	strb	r0, [r1, #0x4]
	mov	r0, #0x1f
	bl	SetQuestLogEvent
.L23:
	add	r0, r7, #0
	bl	Free
	mov	r0, r9
	bl	Free
.L5:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L42:
	.align	2, 0
.L41:
	.word	gEnemyParty
.Lfe1:
	.size	 TrySetQuestLogBattleEvent,.Lfe1-TrySetQuestLogBattleEvent
	.align	2, 0
	.globl	TrySetQuestLogLinkBattleEvent
	.type	 TrySetQuestLogLinkBattleEvent,function
	.thumb_func
TrySetQuestLogLinkBattleEvent:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0xc
	ldr	r4, .L60
	ldr	r0, [r4]
	mov	r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L44	@cond_branch
	mov	r0, #0x18
	bl	Alloc
	add	r5, r0, #0
	ldr	r0, .L60+0x4
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	strb	r0, [r5]
	ldr	r1, [r4]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L45	@cond_branch
	mov	r0, #0xf
	mov	r8, r0
	add	r4, sp, #0x4
	mov	r0, sp
	add	r1, r4, #0
	bl	GetLinkMultiBattlePlayerIndexes
	mov	r3, #0x0
	mov	r9, r4
	add	r1, r5, #0x1
	mov	ip, r1
	add	r7, r5, #0
	add	r7, r7, #0x8
	add	r6, r5, #0
	add	r6, r6, #0xf
	ldr	r4, .L60+0x8
.L49:
	mov	r0, ip
	add	r2, r0, r3
	ldr	r1, [sp]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r3, r0
	add	r0, r0, r4
	ldrb	r0, [r0]
	strb	r0, [r2]
	add	r2, r7, r3
	ldr	r1, [sp, #0x4]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r3, r0
	add	r0, r0, r4
	ldrb	r0, [r0]
	strb	r0, [r2]
	add	r2, r6, r3
	mov	r0, r9
	ldr	r1, [r0, #0x4]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r3, r0
	add	r0, r0, r4
	ldrb	r0, [r0]
	strb	r0, [r2]
	add	r3, r3, #0x1
	cmp	r3, #0x6
	ble	.L49	@cond_branch
	b	.L51
.L61:
	.align	2, 0
.L60:
	.word	gBattleTypeFlags
	.word	gBattleOutcome
	.word	gLinkPlayers+0x8
.L45:
	mov	r0, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L52	@cond_branch
	mov	r1, #0xe
	mov	r8, r1
	b	.L53
.L52:
	bl	InUnionRoom
	mov	r1, #0xd
	mov	r8, r1
	cmp	r0, #0x1
	bne	.L53	@cond_branch
	mov	r0, #0x13
	mov	r8, r0
.L53:
	mov	r3, #0x0
	add	r4, r5, #0x1
	ldr	r1, .L62
	mov	ip, r1
	ldr	r7, .L62+0x4
	mov	r6, #0x1
.L58:
	add	r2, r4, r3
	ldr	r0, [r7]
	add	r0, r0, #0xb5
	ldrb	r0, [r0]
	add	r1, r6, #0
	eor	r1, r1, r0
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r3, r0
	add	r0, r0, ip
	ldrb	r0, [r0]
	strb	r0, [r2]
	add	r3, r3, #0x1
	cmp	r3, #0x6
	ble	.L58	@cond_branch
.L51:
	mov	r0, r8
	add	r1, r5, #0
	bl	SetQuestLogEvent
	add	r0, r5, #0
	bl	Free
.L44:
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L63:
	.align	2, 0
.L62:
	.word	gLinkPlayers+0x8
	.word	gBattleStruct
.Lfe2:
	.size	 TrySetQuestLogLinkBattleEvent,.Lfe2-TrySetQuestLogLinkBattleEvent
	.align	2, 0
	.type	 GetLinkMultiBattlePlayerIndexes,function
	.thumb_func
GetLinkMultiBattlePlayerIndexes:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	ldr	r3, .L73
	ldr	r4, .L73+0x4
	ldr	r0, [r4]
	add	r0, r0, #0xb5
	ldrb	r2, [r0]
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrb	r2, [r0, #0x18]
	mov	r0, #0x2
	mov	r5, #0x0
	eor	r2, r2, r0
.L68:
	ldrh	r0, [r3, #0x18]
	cmp	r2, r0
	bne	.L69	@cond_branch
	str	r5, [r6]
	b	.L67
.L74:
	.align	2, 0
.L73:
	.word	gLinkPlayers
	.word	gBattleStruct
.L69:
	ldr	r0, [r4]
	add	r0, r0, #0xb5
	ldrb	r0, [r0]
	cmp	r5, r0
	beq	.L67	@cond_branch
	stmia	r1!, {r5}
.L67:
	add	r3, r3, #0x1c
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L68	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 GetLinkMultiBattlePlayerIndexes,.Lfe3-GetLinkMultiBattlePlayerIndexes
.text
	.align	2, 0 @ Don't pad with nop

