@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	ReshowBattleScreenDummy
	.type	 ReshowBattleScreenDummy,function
	.thumb_func
ReshowBattleScreenDummy:
	bx	lr
.Lfe1:
	.size	 ReshowBattleScreenDummy,.Lfe1-ReshowBattleScreenDummy
	.align	2, 0
	.globl	ReshowBattleScreenAfterMenu
	.type	 ReshowBattleScreenAfterMenu,function
	.thumb_func
ReshowBattleScreenAfterMenu:
	push	{lr}
	ldr	r2, .L13
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	mov	r0, #0x0
	bl	SetHBlankCallback
	mov	r0, #0x4c
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r0, .L13+0x4
	add	r2, r0, #0
	add	r2, r2, #0x21
	mov	r1, #0x0
	strb	r1, [r2]
	add	r0, r0, #0x22
	strb	r1, [r0]
	ldr	r0, .L13+0x8
	ldr	r1, [r0]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L6	@cond_branch
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L7	@cond_branch
	mov	r0, #0x1
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L8	@cond_branch
	mov	r0, #0x19
	bl	SetHelpContext
	b	.L6
.L14:
	.align	2, 0
.L13:
	.word	gPaletteFade
	.word	gBattleScripting
	.word	gBattleTypeFlags
.L8:
	mov	r0, #0x18
	bl	SetHelpContext
	b	.L6
.L7:
	mov	r0, #0x80
	and	r1, r1, r0
	cmp	r1, #0
	beq	.L11	@cond_branch
	mov	r0, #0x1a
	bl	SetHelpContext
	b	.L6
.L11:
	mov	r0, #0x17
	bl	SetHelpContext
.L6:
	ldr	r0, .L15
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L16:
	.align	2, 0
.L15:
	.word	CB2_ReshowBattleScreenAfterMenu
.Lfe2:
	.size	 ReshowBattleScreenAfterMenu,.Lfe2-ReshowBattleScreenAfterMenu
	.align	2, 0
	.type	 CB2_ReshowBattleScreenAfterMenu,function
	.thumb_func
CB2_ReshowBattleScreenAfterMenu:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L52
	add	r0, r0, #0x21
	ldrb	r0, [r0]
	cmp	r0, #0x14
	bls	.LCB103
	b	.L18	@long jump
.LCB103:
	lsl	r0, r0, #0x2
	ldr	r1, .L52+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L53:
	.align	2, 0
.L52:
	.word	gBattleScripting
	.word	.L49
	.align	2, 0
	.align	2, 0
.L49:
	.word	.L19
	.word	.L20
	.word	.L21
	.word	.L22
	.word	.L23
	.word	.L24
	.word	.L25
	.word	.L28
	.word	.L30
	.word	.L32
	.word	.L34
	.word	.L36
	.word	.L37
	.word	.L38
	.word	.L39
	.word	.L40
	.word	.L41
	.word	.L42
	.word	.L43
	.word	.L44
	.word	.L47
.L19:
	bl	ResetSpriteData
	b	.L18
.L20:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ScanlineEffect_Clear
	bl	BattleInitBgsAndWindows
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0x0
	bl	SetBgAttribute
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0x0
	bl	SetBgAttribute
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	bl	ResetPaletteFade
	ldr	r0, .L54
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r0, .L54+0x4
	strh	r1, [r0]
	ldr	r0, .L54+0x8
	strh	r1, [r0]
	ldr	r0, .L54+0xc
	strh	r1, [r0]
	ldr	r0, .L54+0x10
	strh	r1, [r0]
	ldr	r0, .L54+0x14
	strh	r1, [r0]
	ldr	r0, .L54+0x18
	strh	r1, [r0]
	ldr	r0, .L54+0x1c
	strh	r1, [r0]
	b	.L18
.L55:
	.align	2, 0
.L54:
	.word	gBattle_BG0_X
	.word	gBattle_BG0_Y
	.word	gBattle_BG1_X
	.word	gBattle_BG1_Y
	.word	gBattle_BG2_X
	.word	gBattle_BG2_Y
	.word	gBattle_BG3_X
	.word	gBattle_BG3_Y
.L21:
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	ldr	r2, .L56
	add	r0, sp, #0x4
	bl	CpuFastSet
	b	.L18
.L57:
	.align	2, 0
.L56:
	.word	0x1006000
.L22:
	bl	LoadBattleTextboxAndBackground
	b	.L18
.L23:
	bl	FreeAllSpritePalettes
	ldr	r1, .L58
	mov	r0, #0x4
	strb	r0, [r1]
	b	.L18
.L59:
	.align	2, 0
.L58:
	.word	gReservedSpritePaletteCount
.L24:
	bl	ClearSpritesHealthboxAnimData
	b	.L18
.L25:
	ldr	r5, .L60
	add	r4, r5, #0
	add	r4, r4, #0x22
	ldrb	r0, [r4]
	bl	BattleLoadAllHealthBoxesGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L26	@cond_branch
	mov	r0, #0x0
	strb	r0, [r4]
	b	.L18
.L61:
	.align	2, 0
.L60:
	.word	gBattleScripting
.L26:
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	add	r1, r5, #0
	b	.L50
.L28:
	mov	r0, #0x0
	b	.L51
.L30:
	mov	r0, #0x1
	b	.L51
.L32:
	mov	r0, #0x2
	b	.L51
.L34:
	mov	r0, #0x3
.L51:
	bl	LoadBattlerSpriteGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB278
	b	.L18	@long jump
.LCB278:
	ldr	r1, .L62
.L50:
	add	r1, r1, #0x21
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	strb	r0, [r1]
	b	.L18
.L63:
	.align	2, 0
.L62:
	.word	gBattleScripting
.L36:
	mov	r0, #0x0
	bl	CreateBattlerSprite
	b	.L18
.L37:
	mov	r0, #0x1
	bl	CreateBattlerSprite
	b	.L18
.L38:
	mov	r0, #0x2
	bl	CreateBattlerSprite
	b	.L18
.L39:
	mov	r0, #0x3
	bl	CreateBattlerSprite
	b	.L18
.L40:
	mov	r0, #0x0
	bl	CreateHealthboxSprite
	b	.L18
.L41:
	mov	r0, #0x1
	bl	CreateHealthboxSprite
	b	.L18
.L42:
	mov	r0, #0x2
	bl	CreateHealthboxSprite
	b	.L18
.L43:
	mov	r0, #0x3
	bl	CreateHealthboxSprite
	b	.L18
.L44:
	bl	LoadAndCreateEnemyShadowSprites
	mov	r0, #0x1
	bl	GetBattlerAtPosition
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r7, .L64
	lsl	r0, r4, #0x1
	add	r0, r0, r7
	ldrh	r0, [r0]
	mov	r6, #0x64
	mul	r0, r0, r6
	ldr	r5, .L64+0x4
	add	r0, r0, r5
	mov	r1, #0xb
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	SetBattlerShadowSpriteCallback
	bl	IsDoubleBattle
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L45	@cond_branch
	mov	r0, #0x3
	bl	GetBattlerAtPosition
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r0, r4, #0x1
	add	r0, r0, r7
	ldrh	r0, [r0]
	mul	r0, r0, r6
	add	r0, r0, r5
	mov	r1, #0xb
	bl	GetMonData
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	SetBattlerShadowSpriteCallback
.L45:
	ldr	r1, .L64+0x8
	ldr	r0, .L64+0xc
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	ActionSelectionCreateCursorAt
	ldr	r0, .L64+0x10
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L18	@cond_branch
	ldr	r0, .L64+0x14
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L18	@cond_branch
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	b	.L18
.L65:
	.align	2, 0
.L64:
	.word	gBattlerPartyIndexes
	.word	gEnemyParty
	.word	gActionSelectionCursor
	.word	gBattlerInMenuId
	.word	gWirelessCommType
	.word	gReceivedRemoteLinkPlayers
.L47:
	ldr	r0, .L66
	bl	SetVBlankCallback
	bl	ReshowBattleScreen_TurnOnDisplay
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0xff
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginHardwarePaletteFade
	ldr	r2, .L66+0x4
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r0, .L66+0x8
	bl	SetMainCallback2
	bl	BattleInterfaceSetWindowPals
.L18:
	ldr	r1, .L66+0xc
	add	r1, r1, #0x21
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L67:
	.align	2, 0
.L66:
	.word	VBlankCB_Battle
	.word	gPaletteFade
	.word	BattleMainCB2
	.word	gBattleScripting
.Lfe3:
	.size	 CB2_ReshowBattleScreenAfterMenu,.Lfe3-CB2_ReshowBattleScreenAfterMenu
	.align	2, 0
	.type	 ReshowBattleScreen_TurnOnDisplay,function
	.thumb_func
ReshowBattleScreen_TurnOnDisplay:
	push	{lr}
	mov	r0, #0x1
	bl	EnableInterrupts
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x52
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x3f
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x3f
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x42
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x46
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r1, .L69
	mov	r0, #0x0
	bl	SetGpuRegBits
	pop	{r0}
	bx	r0
.L70:
	.align	2, 0
.L69:
	.word	0xb040
.Lfe4:
	.size	 ReshowBattleScreen_TurnOnDisplay,.Lfe4-ReshowBattleScreen_TurnOnDisplay
	.align	2, 0
	.type	 LoadBattlerSpriteGfx,function
	.thumb_func
LoadBattlerSpriteGfx:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L86
	ldrb	r0, [r0]
	cmp	r4, r0
	bcc	.LCB529
	b	.L72	@long jump
.LCB529:
	add	r0, r4, #0
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L73	@cond_branch
	ldr	r0, .L86+0x4
	ldr	r0, [r0]
	mov	r1, #0xa0
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	mov	r1, #0x80
	lsl	r1, r1, #0x8
	cmp	r0, r1
	bne	.L74	@cond_branch
	ldr	r1, .L86+0x8
	lsl	r0, r4, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L86+0xc
	add	r0, r0, r1
	add	r1, r4, #0
	bl	DecompressGhostFrontPic
	b	.L78
.L87:
	.align	2, 0
.L86:
	.word	gBattlersCount
	.word	gBattleTypeFlags
	.word	gBattlerPartyIndexes
	.word	gEnemyParty
.L74:
	ldr	r0, .L88
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L76	@cond_branch
	ldr	r1, .L88+0x4
	lsl	r0, r4, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L88+0x8
	add	r0, r0, r1
	add	r1, r4, #0
	bl	BattleLoadOpponentMonSpriteGfx
	b	.L78
.L89:
	.align	2, 0
.L88:
	.word	gBattleSpritesDataPtr
	.word	gBattlerPartyIndexes
	.word	gEnemyParty
.L76:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	BattleLoadSubstituteOrMonSpriteGfx
	b	.L78
.L73:
	ldr	r0, .L90
	ldr	r1, [r0]
	mov	r2, #0x80
	and	r1, r1, r2
	cmp	r1, #0
	beq	.L79	@cond_branch
	cmp	r4, #0
	bne	.L79	@cond_branch
	ldr	r0, .L90+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	b	.L85
.L91:
	.align	2, 0
.L90:
	.word	gBattleTypeFlags
	.word	gSaveBlock2Ptr
.L79:
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L81	@cond_branch
	cmp	r4, #0
	bne	.L81	@cond_branch
	mov	r0, #0x5
.L85:
	mov	r1, #0x0
	bl	DecompressTrainerBackPalette
	b	.L78
.L81:
	ldr	r0, .L92
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L83	@cond_branch
	ldr	r1, .L92+0x4
	lsl	r0, r4, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L92+0x8
	add	r0, r0, r1
	add	r1, r4, #0
	bl	BattleLoadPlayerMonSpriteGfx
	b	.L78
.L93:
	.align	2, 0
.L92:
	.word	gBattleSpritesDataPtr
	.word	gBattlerPartyIndexes
	.word	gPlayerParty
.L83:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	BattleLoadSubstituteOrMonSpriteGfx
.L78:
	ldr	r0, .L94
	add	r0, r0, #0x22
	mov	r1, #0x0
	strb	r1, [r0]
.L72:
	mov	r0, #0x1
	pop	{r4}
	pop	{r1}
	bx	r1
.L95:
	.align	2, 0
.L94:
	.word	gBattleScripting
.Lfe5:
	.size	 LoadBattlerSpriteGfx,.Lfe5-LoadBattlerSpriteGfx
	.align	2, 0
	.type	 CreateBattlerSprite,function
	.thumb_func
CreateBattlerSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L113
	ldrb	r0, [r0]
	cmp	r7, r0
	bcc	.LCB721
	b	.L96	@long jump
.LCB721:
	ldr	r0, .L113+0x4
	ldr	r0, [r0]
	mov	r1, #0xa0
	lsl	r1, r1, #0x8
	and	r0, r0, r1
	mov	r1, #0x80
	lsl	r1, r1, #0x8
	cmp	r0, r1
	bne	.L98	@cond_branch
	add	r0, r7, #0
	bl	GetGhostSpriteDefault_Y
	b	.L111
.L114:
	.align	2, 0
.L113:
	.word	gBattlersCount
	.word	gBattleTypeFlags
.L98:
	ldr	r0, .L115
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r7, #0x2
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L100	@cond_branch
	add	r0, r7, #0
	bl	GetSubstituteSpriteDefault_Y
	b	.L111
.L116:
	.align	2, 0
.L115:
	.word	gBattleSpritesDataPtr
.L100:
	add	r0, r7, #0
	bl	GetBattlerSpriteDefault_Y
.L111:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	add	r0, r7, #0
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB782
	b	.L102	@long jump
.LCB782:
	ldr	r1, .L117
	lsl	r0, r7, #0x1
	add	r6, r0, r1
	ldrh	r0, [r6]
	mov	r1, #0x64
	mov	sl, r1
	mov	r1, sl
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r1, .L117+0x4
	mov	r9, r1
	add	r0, r0, r9
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.LCB800
	b	.L96	@long jump
.LCB800:
	ldrh	r0, [r6]
	mov	r1, sl
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r9
	mov	r1, #0xb
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r7, #0
	bl	GetBattlerPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	SetMultiuseSpriteTemplateToPokemon
	ldr	r5, .L117+0x8
	add	r0, r7, #0
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r7, #0
	bl	GetBattlerSpriteSubpriority
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, r8
	bl	CreateSprite
	ldr	r4, .L117+0xc
	add	r4, r7, r4
	strb	r0, [r4]
	ldr	r5, .L117+0x10
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	lsl	r3, r7, #0x4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r5, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L117+0x14
	str	r1, [r0]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	strh	r7, [r0, #0x2e]
	ldrh	r0, [r6]
	mov	r1, sl
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r9
	mov	r1, #0xb
	bl	GetMonData
	ldrb	r2, [r4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	strh	r0, [r1, #0x32]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, .L117+0x18
	add	r1, r7, r1
	ldrb	r1, [r1]
	bl	StartSpriteAnim
	b	.L104
.L118:
	.align	2, 0
.L117:
	.word	gBattlerPartyIndexes
	.word	gEnemyParty
	.word	gMultiuseSpriteTemplate
	.word	gBattlerSpriteIds
	.word	gSprites
	.word	SpriteCallbackDummy
	.word	gBattleMonForms
.L102:
	ldr	r0, .L119
	ldr	r1, [r0]
	mov	r2, #0x80
	and	r1, r1, r2
	cmp	r1, #0
	beq	.L105	@cond_branch
	cmp	r7, #0
	bne	.L105	@cond_branch
	ldr	r5, .L119+0x4
	ldr	r0, [r5]
	ldrb	r4, [r0, #0x8]
	mov	r0, #0x0
	bl	GetBattlerPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	SetMultiuseSpriteTemplateToTrainerBack
	ldr	r6, .L119+0x8
	ldr	r1, .L119+0xc
	ldr	r0, [r5]
	ldrb	r0, [r0, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r4, #0x8
	sub	r4, r4, r0
	lsl	r4, r4, #0x12
	mov	r0, #0xa0
	lsl	r0, r0, #0xf
	add	r4, r4, r0
	asr	r4, r4, #0x10
	mov	r0, #0x0
	bl	GetBattlerSpriteSubpriority
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r6, #0
	b	.L112
.L120:
	.align	2, 0
.L119:
	.word	gBattleTypeFlags
	.word	gSaveBlock2Ptr
	.word	gMultiuseSpriteTemplate
	.word	gTrainerBackPicCoords
.L105:
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L107	@cond_branch
	cmp	r7, #0
	bne	.L107	@cond_branch
	mov	r0, #0x0
	bl	GetBattlerPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x5
	bl	SetMultiuseSpriteTemplateToTrainerBack
	ldr	r5, .L121
	ldr	r0, .L121+0x4
	ldrb	r0, [r0, #0x14]
	mov	r4, #0x8
	sub	r4, r4, r0
	lsl	r4, r4, #0x12
	mov	r1, #0xa0
	lsl	r1, r1, #0xf
	add	r4, r4, r1
	asr	r4, r4, #0x10
	mov	r0, #0x0
	bl	GetBattlerSpriteSubpriority
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r5, #0
.L112:
	mov	r1, #0x50
	add	r2, r4, #0
	bl	CreateSprite
	ldr	r3, .L121+0x8
	strb	r0, [r3]
	ldr	r4, .L121+0xc
	ldrb	r0, [r3]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	ldrb	r1, [r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r4, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L121+0x10
	str	r1, [r0]
	ldrb	r1, [r3]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	strh	r7, [r0, #0x2e]
	b	.L104
.L122:
	.align	2, 0
.L121:
	.word	gMultiuseSpriteTemplate
	.word	gTrainerBackPicCoords
	.word	gBattlerSpriteIds
	.word	gSprites
	.word	SpriteCallbackDummy
.L107:
	ldr	r1, .L123
	lsl	r0, r7, #0x1
	add	r6, r0, r1
	ldrh	r0, [r6]
	mov	r1, #0x64
	mov	sl, r1
	mov	r1, sl
	mul	r1, r1, r0
	add	r0, r1, #0
	ldr	r1, .L123+0x4
	mov	r9, r1
	add	r0, r0, r9
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	beq	.L96	@cond_branch
	ldrh	r0, [r6]
	mov	r1, sl
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r9
	mov	r1, #0xb
	bl	GetMonData
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r7, #0
	bl	GetBattlerPosition
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	SetMultiuseSpriteTemplateToPokemon
	ldr	r5, .L123+0x8
	add	r0, r7, #0
	mov	r1, #0x2
	bl	GetBattlerSpriteCoord
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r7, #0
	bl	GetBattlerSpriteSubpriority
	add	r3, r0, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, r8
	bl	CreateSprite
	ldr	r4, .L123+0xc
	add	r4, r7, r4
	strb	r0, [r4]
	ldr	r5, .L123+0x10
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	lsl	r3, r7, #0x4
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r5, #0
	add	r1, r1, #0x1c
	add	r0, r0, r1
	ldr	r1, .L123+0x14
	str	r1, [r0]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	strh	r7, [r0, #0x2e]
	ldrh	r0, [r6]
	mov	r1, sl
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r9
	mov	r1, #0xb
	bl	GetMonData
	ldrb	r2, [r4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	strh	r0, [r1, #0x32]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, .L123+0x18
	add	r1, r7, r1
	ldrb	r1, [r1]
	bl	StartSpriteAnim
.L104:
	ldr	r1, .L123+0x10
	ldr	r0, .L123+0xc
	add	r0, r7, r0
	ldrb	r0, [r0]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r1
	ldr	r0, .L123+0x1c
	ldr	r0, [r0]
	ldr	r1, [r0]
	lsl	r0, r7, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	lsl	r1, r1, #0x1f
	add	r2, r2, #0x3e
	lsr	r1, r1, #0x1f
	lsl	r1, r1, #0x2
	ldrb	r3, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2]
.L96:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L124:
	.align	2, 0
.L123:
	.word	gBattlerPartyIndexes
	.word	gPlayerParty
	.word	gMultiuseSpriteTemplate
	.word	gBattlerSpriteIds
	.word	gSprites
	.word	SpriteCallbackDummy
	.word	gBattleMonForms
	.word	gBattleSpritesDataPtr
.Lfe6:
	.size	 CreateBattlerSprite,.Lfe6-CreateBattlerSprite
	.align	2, 0
	.type	 CreateHealthboxSprite,function
	.thumb_func
CreateHealthboxSprite:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L143
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.LCB1219
	b	.L125	@long jump
.LCB1219:
	ldr	r0, .L143+0x4
	ldr	r1, [r0]
	mov	r2, #0x80
	and	r1, r1, r2
	cmp	r1, #0
	beq	.L127	@cond_branch
	cmp	r5, #0
	bne	.L127	@cond_branch
	bl	CreateSafariPlayerHealthboxSprites
	b	.L142
.L144:
	.align	2, 0
.L143:
	.word	gBattlersCount
	.word	gBattleTypeFlags
.L127:
	ldr	r0, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L129	@cond_branch
	cmp	r5, #0
	bne	.LCB1250
	b	.L125	@long jump
.LCB1250:
.L129:
	add	r0, r5, #0
	bl	CreateBattlerHealthboxSprites
.L142:
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L145
	add	r4, r5, r0
	strb	r6, [r4]
	add	r0, r5, #0
	bl	InitBattlerHealthboxCoords
	add	r0, r6, #0
	bl	SetHealthboxSpriteVisible
	add	r0, r5, #0
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L131	@cond_branch
	ldrb	r0, [r4]
	ldr	r1, .L145+0x4
	lsl	r4, r5, #0x1
	add	r1, r4, r1
	ldrh	r2, [r1]
	mov	r1, #0x64
	mul	r1, r1, r2
	ldr	r2, .L145+0x8
	add	r1, r1, r2
	mov	r2, #0x0
	bl	UpdateHealthboxAttribute
	b	.L132
.L146:
	.align	2, 0
.L145:
	.word	gHealthboxSpriteIds
	.word	gBattlerPartyIndexes
	.word	gEnemyParty
.L131:
	ldr	r0, .L147
	ldr	r0, [r0]
	mov	r1, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L133	@cond_branch
	ldrb	r0, [r4]
	ldr	r1, .L147+0x4
	lsl	r4, r5, #0x1
	add	r1, r4, r1
	ldrh	r2, [r1]
	mov	r1, #0x64
	mul	r1, r1, r2
	ldr	r2, .L147+0x8
	add	r1, r1, r2
	mov	r2, #0xa
	bl	UpdateHealthboxAttribute
	b	.L132
.L148:
	.align	2, 0
.L147:
	.word	gBattleTypeFlags
	.word	gBattlerPartyIndexes
	.word	gPlayerParty
.L133:
	ldrb	r0, [r4]
	ldr	r1, .L149
	lsl	r4, r5, #0x1
	add	r1, r4, r1
	ldrh	r2, [r1]
	mov	r1, #0x64
	mul	r1, r1, r2
	ldr	r2, .L149+0x4
	add	r1, r1, r2
	mov	r2, #0x0
	bl	UpdateHealthboxAttribute
.L132:
	add	r0, r5, #0
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.L136	@cond_branch
	add	r0, r5, #0
	bl	GetBattlerPosition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L135	@cond_branch
.L136:
	ldr	r0, .L149+0x8
	add	r0, r5, r0
	ldrb	r0, [r0]
	mov	r1, #0x1
	bl	DummyBattleInterfaceFunc
	b	.L137
.L150:
	.align	2, 0
.L149:
	.word	gBattlerPartyIndexes
	.word	gPlayerParty
	.word	gHealthboxSpriteIds
.L135:
	ldr	r0, .L151
	add	r0, r5, r0
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	DummyBattleInterfaceFunc
.L137:
	add	r0, r5, #0
	bl	GetBattlerSide
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L138	@cond_branch
	ldr	r0, .L151+0x4
	add	r0, r4, r0
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L151+0x8
	add	r0, r0, r1
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.L125	@cond_branch
	add	r0, r6, #0
	bl	SetHealthboxSpriteInvisible
	b	.L125
.L152:
	.align	2, 0
.L151:
	.word	gHealthboxSpriteIds
	.word	gBattlerPartyIndexes
	.word	gEnemyParty
.L138:
	ldr	r0, .L153
	ldr	r0, [r0]
	mov	r1, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L125	@cond_branch
	ldr	r0, .L153+0x4
	add	r0, r4, r0
	ldrh	r1, [r0]
	mov	r0, #0x64
	mul	r0, r0, r1
	ldr	r1, .L153+0x8
	add	r0, r0, r1
	mov	r1, #0x39
	bl	GetMonData
	cmp	r0, #0
	bne	.L125	@cond_branch
	add	r0, r6, #0
	bl	SetHealthboxSpriteInvisible
.L125:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L154:
	.align	2, 0
.L153:
	.word	gBattleTypeFlags
	.word	gBattlerPartyIndexes
	.word	gPlayerParty
.Lfe7:
	.size	 CreateHealthboxSprite,.Lfe7-CreateHealthboxSprite
.text
	.align	2, 0 @ Don't pad with nop

