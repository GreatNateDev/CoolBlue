@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	1, 0
	.type	 sViewportObjectEvents,object
	.size	 sViewportObjectEvents,128
sViewportObjectEvents:
	.short	0x0
	.space	6
	.space	120
	.align	2, 0
	.type	 sShopData,object
	.size	 sShopData,28
sShopData:
	.word	0x0
	.space	24
	.type	 sShopMenuWindowId,object
	.size	 sShopMenuWindowId,1
sShopMenuWindowId:
	.byte	0x0
	.globl	gShopTilemapBuffer1
	.align	2, 0
	.type	 gShopTilemapBuffer1,object
	.size	 gShopTilemapBuffer1,4
gShopTilemapBuffer1:
	.word	0x0
	.globl	gShopTilemapBuffer2
	.align	2, 0
	.type	 gShopTilemapBuffer2,object
	.size	 gShopTilemapBuffer2,4
gShopTilemapBuffer2:
	.word	0x0
	.globl	gShopTilemapBuffer3
	.align	2, 0
	.type	 gShopTilemapBuffer3,object
	.size	 gShopTilemapBuffer3,4
gShopTilemapBuffer3:
	.word	0x0
	.globl	gShopTilemapBuffer4
	.align	2, 0
	.type	 gShopTilemapBuffer4,object
	.size	 gShopTilemapBuffer4,4
gShopTilemapBuffer4:
	.word	0x0
	.globl	sShopMenuListMenu
	.align	2, 0
	.type	 sShopMenuListMenu,object
	.size	 sShopMenuListMenu,4
sShopMenuListMenu:
	.word	0x0
	.align	2, 0
	.type	 sShopMenuItemStrings,object
	.size	 sShopMenuItemStrings,4
sShopMenuItemStrings:
	.word	0x0
	.globl	sHistory
	.align	2, 0
	.type	 sHistory,object
	.size	 sHistory,24
sHistory:
	.word	0x0
	.space	8
	.space	12
	.section .rodata
	.align	2, 0
	.type	 sShopMenuActions_BuySellQuit,object
sShopMenuActions_BuySellQuit:
	.word	gText_ShopBuy
	.word	Task_HandleShopMenuBuy
	.word	gText_ShopSell
	.word	Task_HandleShopMenuSell
	.word	gText_ShopQuit
	.word	Task_HandleShopMenuQuit
	.size	 sShopMenuActions_BuySellQuit,24
	.align	2, 0
	.type	 sShopMenuActions_BuyQuit,object
sShopMenuActions_BuyQuit:
	.word	BuyMenuTryMakePurchase
	.word	BuyMenuReturnToItemList
	.size	 sShopMenuActions_BuyQuit,8
	.align	2, 0
	.type	 sShopMenuWindowTemplate,object
	.size	 sShopMenuWindowTemplate,8
sShopMenuWindowTemplate:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0xc
	.byte	0x6
	.byte	0xf
	.short	0x8
	.align	2, 0
	.type	 sShopBuyMenuBgTemplates,object
	.size	 sShopBuyMenuBgTemplates,16
sShopBuyMenuBgTemplates:
	.byte	0xf8
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xe1
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0xd2
	.byte	0x21
	.byte	0x0
	.space	1
	.byte	0xc3
	.byte	0x31
	.byte	0x0
	.space	1
.text
	.align	2, 0
	.type	 CreateShopMenu,function
	.thumb_func
CreateShopMenu:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetMartTypeFromItemList
	ldr	r4, .L8
	mov	r1, #0xf
	and	r1, r1, r0
	ldrb	r2, [r4, #0x16]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x16]
	mov	r0, #0x0
	strh	r0, [r4, #0xc]
	bl	ContextNpcGetTextColor
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L5	@cond_branch
	ldrh	r0, [r4, #0x16]
	ldr	r1, .L8+0x4
	and	r1, r1, r0
	mov	r0, #0x40
	b	.L7
.L9:
	.align	2, 0
.L8:
	.word	sShopData
	.word	-0x1f1
.L5:
	ldrh	r0, [r4, #0x16]
	ldr	r1, .L10
	and	r1, r1, r0
	mov	r0, #0x50
.L7:
	orr	r1, r1, r0
	strh	r1, [r4, #0x16]
	ldr	r4, .L10+0x4
	ldr	r0, .L10+0x8
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	SetStdWindowBorderStyle
	mov	r0, #0x2
	mov	r1, #0x0
	bl	GetMenuCursorDimensionByFont
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldrb	r0, [r4]
	mov	r6, #0x10
	str	r6, [sp]
	mov	r5, #0x3
	str	r5, [sp, #0x4]
	ldr	r1, .L10+0xc
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x2
	bl	PrintTextArray
	ldrb	r0, [r4]
	str	r6, [sp]
	str	r5, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x0
	mov	r3, #0x2
	bl	Menu_InitCursor
	ldrb	r0, [r4]
	bl	PutWindowTilemap
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldr	r0, .L10+0x10
	mov	r1, #0x8
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L11:
	.align	2, 0
.L10:
	.word	-0x1f1
	.word	sShopMenuWindowId
	.word	sShopMenuWindowTemplate
	.word	sShopMenuActions_BuySellQuit
	.word	Task_ShopMenu
.Lfe1:
	.size	 CreateShopMenu,.Lfe1-CreateShopMenu
	.align	2, 0
	.type	 GetMartTypeFromItemList,function
	.thumb_func
GetMartTypeFromItemList:
	push	{r4, r5, lr}
	cmp	r0, #0
	beq	.L13	@cond_branch
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L21
.L22:
	mov	r0, #0x1
	b	.L21
.L13:
	mov	r4, #0x0
	ldr	r1, .L23
	ldrh	r0, [r1, #0x10]
	cmp	r4, r0
	bcs	.L15	@cond_branch
	ldr	r0, [r1, #0x4]
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L15	@cond_branch
	add	r5, r1, #0
.L17:
	ldr	r1, [r5, #0x4]
	lsl	r0, r4, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	ItemId_GetPocket
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x4
	beq	.L22	@cond_branch
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	ldrh	r0, [r5, #0x10]
	cmp	r4, r0
	bcs	.L15	@cond_branch
	ldr	r0, [r5, #0x4]
	lsl	r1, r4, #0x1
	add	r1, r1, r0
	ldrh	r0, [r1]
	cmp	r0, #0
	bne	.L17	@cond_branch
.L15:
	mov	r0, #0x0
.L21:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L24:
	.align	2, 0
.L23:
	.word	sShopData
.Lfe2:
	.size	 GetMartTypeFromItemList,.Lfe2-GetMartTypeFromItemList
	.align	2, 0
	.type	 SetShopItemsForSale,function
	.thumb_func
SetShopItemsForSale:
	push	{lr}
	add	r1, r0, #0
	ldr	r2, .L31
	str	r1, [r2, #0x4]
	mov	r0, #0x0
	strh	r0, [r2, #0x10]
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L25	@cond_branch
.L29:
	ldrh	r0, [r2, #0x10]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x10]
	ldrh	r0, [r2, #0x10]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L29	@cond_branch
.L25:
	pop	{r0}
	bx	r0
.L32:
	.align	2, 0
.L31:
	.word	sShopData
.Lfe3:
	.size	 SetShopItemsForSale,.Lfe3-SetShopItemsForSale
	.align	2, 0
	.type	 SetShopMenuCallback,function
	.thumb_func
SetShopMenuCallback:
	ldr	r1, .L34
	str	r0, [r1]
	bx	lr
.L35:
	.align	2, 0
.L34:
	.word	sShopData
.Lfe4:
	.size	 SetShopMenuCallback,.Lfe4-SetShopMenuCallback
	.align	2, 0
	.type	 Task_ShopMenu,function
	.thumb_func
Task_ShopMenu:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r5, r4, #0
	bl	Menu_ProcessInputNoWrapAround
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r1, r0
	beq	.L37	@cond_branch
	add	r0, r0, #0x1
	cmp	r1, r0
	bne	.L40	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	Task_HandleShopMenuQuit
	b	.L37
.L40:
	ldr	r4, .L42
	bl	Menu_GetCursorPos
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x15
	add	r4, r4, #0x4
	add	r0, r0, r4
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	_call_via_r1
.L37:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L43:
	.align	2, 0
.L42:
	.word	sShopMenuActions_BuySellQuit
.Lfe5:
	.size	 Task_ShopMenu,.Lfe5-Task_ShopMenu
	.align	2, 0
	.type	 Task_HandleShopMenuBuy,function
	.thumb_func
Task_HandleShopMenuBuy:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r2, .L45
	add	r0, r4, #0
	mov	r1, #0xe
	bl	SetWordTaskArg
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r1, .L45+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L45+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L46:
	.align	2, 0
.L45:
	.word	CB2_InitBuyMenu
	.word	gTasks
	.word	Task_GoToBuyOrSellMenu
.Lfe6:
	.size	 Task_HandleShopMenuBuy,.Lfe6-Task_HandleShopMenuBuy
	.align	2, 0
	.type	 Task_HandleShopMenuSell,function
	.thumb_func
Task_HandleShopMenuSell:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r2, .L48
	add	r0, r4, #0
	mov	r1, #0xe
	bl	SetWordTaskArg
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	ldr	r1, .L48+0x4
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L48+0x8
	str	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L49:
	.align	2, 0
.L48:
	.word	CB2_GoToSellMenu
	.word	gTasks
	.word	Task_GoToBuyOrSellMenu
.Lfe7:
	.size	 Task_HandleShopMenuSell,.Lfe7-Task_HandleShopMenuSell
	.align	2, 0
	.type	 CB2_GoToSellMenu,function
	.thumb_func
CB2_GoToSellMenu:
	push	{lr}
	ldr	r2, .L51
	mov	r0, #0x2
	mov	r1, #0x3
	bl	GoToBagMenu
	ldr	r1, .L51+0x4
	ldr	r0, .L51+0x8
	str	r0, [r1]
	pop	{r0}
	bx	r0
.L52:
	.align	2, 0
.L51:
	.word	CB2_ReturnToField
	.word	gFieldCallback
	.word	MapPostLoadHook_ReturnToShopMenu
.Lfe8:
	.size	 CB2_GoToSellMenu,.Lfe8-CB2_GoToSellMenu
	.align	2, 0
	.type	 Task_HandleShopMenuQuit,function
	.thumb_func
Task_HandleShopMenuQuit:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ClearShopMenuWindow
	bl	RecordTransactionForQuestLog
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L55
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L54	@cond_branch
	bl	_call_via_r0
.L54:
	pop	{r4}
	pop	{r0}
	bx	r0
.L56:
	.align	2, 0
.L55:
	.word	sShopData
.Lfe9:
	.size	 Task_HandleShopMenuQuit,.Lfe9-Task_HandleShopMenuQuit
	.align	2, 0
	.type	 ClearShopMenuWindow,function
	.thumb_func
ClearShopMenuWindow:
	push	{r4, lr}
	ldr	r4, .L58
	ldrb	r0, [r4]
	mov	r1, #0x2
	bl	ClearStdWindowAndFrameToTransparent
	ldrb	r0, [r4]
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.L59:
	.align	2, 0
.L58:
	.word	sShopMenuWindowId
.Lfe10:
	.size	 ClearShopMenuWindow,.Lfe10-ClearShopMenuWindow
	.align	2, 0
	.type	 Task_GoToBuyOrSellMenu,function
	.thumb_func
Task_GoToBuyOrSellMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L62
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L60	@cond_branch
	add	r0, r4, #0
	mov	r1, #0xe
	bl	GetWordTaskArg
	bl	SetMainCallback2
	bl	FreeAllWindowBuffers
	add	r0, r4, #0
	bl	DestroyTask
.L60:
	pop	{r4}
	pop	{r0}
	bx	r0
.L63:
	.align	2, 0
.L62:
	.word	gPaletteFade
.Lfe11:
	.size	 Task_GoToBuyOrSellMenu,.Lfe11-Task_GoToBuyOrSellMenu
	.align	2, 0
	.type	 MapPostLoadHook_ReturnToShopMenu,function
	.thumb_func
MapPostLoadHook_ReturnToShopMenu:
	push	{lr}
	bl	FadeInFromBlack
	ldr	r0, .L65
	mov	r1, #0x8
	bl	CreateTask
	pop	{r0}
	bx	r0
.L66:
	.align	2, 0
.L65:
	.word	Task_ReturnToShopMenu
.Lfe12:
	.size	 MapPostLoadHook_ReturnToShopMenu,.Lfe12-MapPostLoadHook_ReturnToShopMenu
	.align	2, 0
	.type	 Task_ReturnToShopMenu,function
	.thumb_func
Task_ReturnToShopMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsWeatherNotFadingIn
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L67	@cond_branch
	bl	GetMartFontId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r2, .L69
	ldr	r3, .L69+0x4
	add	r0, r4, #0
	bl	DisplayItemMessageOnField
.L67:
	pop	{r4}
	pop	{r0}
	bx	r0
.L70:
	.align	2, 0
.L69:
	.word	gText_AnythingElseICanHelp
	.word	ShowShopMenuAfterExitingBuyOrSellMenu
.Lfe13:
	.size	 Task_ReturnToShopMenu,.Lfe13-Task_ReturnToShopMenu
	.align	2, 0
	.type	 ShowShopMenuAfterExitingBuyOrSellMenu,function
	.thumb_func
ShowShopMenuAfterExitingBuyOrSellMenu:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L72
	ldrb	r0, [r0, #0x16]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	CreateShopMenu
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.L73:
	.align	2, 0
.L72:
	.word	sShopData
.Lfe14:
	.size	 ShowShopMenuAfterExitingBuyOrSellMenu,.Lfe14-ShowShopMenuAfterExitingBuyOrSellMenu
	.align	2, 0
	.type	 CB2_BuyMenu,function
	.thumb_func
CB2_BuyMenu:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	bl	DoScheduledBgTilemapCopiesToVram
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 CB2_BuyMenu,.Lfe15-CB2_BuyMenu
	.align	2, 0
	.type	 VBlankCB_BuyMenu,function
	.thumb_func
VBlankCB_BuyMenu:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 VBlankCB_BuyMenu,.Lfe16-VBlankCB_BuyMenu
	.align	2, 0
	.type	 CB2_InitBuyMenu,function
	.thumb_func
CB2_InitBuyMenu:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L88
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r5, r0, r1
	ldrb	r4, [r5]
	cmp	r4, #0
	beq	.L78	@cond_branch
	cmp	r4, #0x1
	bne	.LCB652
	b	.L81	@long jump
.LCB652:
	ldr	r0, .L88+0x4
	mov	r5, #0x0
	strh	r5, [r0, #0xc]
	strh	r5, [r0, #0xe]
	bl	BuyMenuDrawGraphics
	bl	BuyMenuAddScrollIndicatorArrows
	ldr	r0, .L88+0x8
	mov	r1, #0x8
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L88+0xc
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	ldr	r2, .L88+0x10
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0x16]
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	str	r5, [sp]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L88+0x14
	bl	SetVBlankCallback
	ldr	r0, .L88+0x18
	bl	SetMainCallback2
	b	.L76
.L89:
	.align	2, 0
.L88:
	.word	gMain
	.word	sShopData
	.word	Task_BuyMenu
	.word	gMultiuseListMenuTemplate
	.word	gTasks
	.word	VBlankCB_BuyMenu
	.word	CB2_BuyMenu
.L78:
	bl	SetVBlankHBlankCallbacksToNull
	str	r4, [sp, #0x8]
	mov	r1, #0xe0
	lsl	r1, r1, #0x13
	ldr	r2, .L90
	add	r0, sp, #0x8
	bl	CpuFastSet
	bl	ScanlineEffect_Stop
	bl	ResetTempTileDataBuffers
	bl	FreeAllSpritePalettes
	bl	ResetPaletteFade
	bl	ResetSpriteData
	bl	ResetTasks
	bl	ClearScheduledBgCopiesToVram
	bl	ResetItemMenuIconState
	bl	InitShopData
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L76	@cond_branch
	bl	BuyMenuBuildListMenuTemplate
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L76	@cond_branch
	bl	BuyMenuInitBgs
	mov	r4, #0x20
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	ldr	r0, .L90+0x4
	ldrb	r0, [r0, #0x16]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	bl	BuyMenuInitWindows
	bl	BuyMenuDecompressBgGraphics
	b	.L87
.L91:
	.align	2, 0
.L90:
	.word	0x1000100
	.word	sShopData
.L81:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L76	@cond_branch
.L87:
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
.L76:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe17:
	.size	 CB2_InitBuyMenu,.Lfe17-CB2_InitBuyMenu
	.align	2, 0
	.type	 InitShopData,function
	.thumb_func
InitShopData:
	push	{r4, r5, lr}
	ldr	r4, .L98
	mov	r5, #0x80
	lsl	r5, r5, #0x4
	add	r0, r5, #0
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	beq	.L96	@cond_branch
	ldr	r4, .L98+0x4
	add	r0, r5, #0
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	beq	.L96	@cond_branch
	ldr	r4, .L98+0x8
	add	r0, r5, #0
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	beq	.L96	@cond_branch
	ldr	r4, .L98+0xc
	add	r0, r5, #0
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	beq	.L96	@cond_branch
	mov	r0, #0x1
	b	.L97
.L99:
	.align	2, 0
.L98:
	.word	gShopTilemapBuffer1
	.word	gShopTilemapBuffer2
	.word	gShopTilemapBuffer3
	.word	gShopTilemapBuffer4
.L96:
	bl	BuyMenuFreeMemory
	bl	SetShopExitCallback
	mov	r0, #0x0
.L97:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 InitShopData,.Lfe18-InitShopData
	.align	2, 0
	.type	 BuyMenuInitBgs,function
	.thumb_func
BuyMenuInitBgs:
	push	{lr}
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L101
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	ldr	r0, .L101+0x4
	ldr	r1, [r0]
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r0, .L101+0x8
	ldr	r1, [r0]
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r0, .L101+0xc
	ldr	r1, [r0]
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x16
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1c
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1e
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	pop	{r0}
	bx	r0
.L102:
	.align	2, 0
.L101:
	.word	sShopBuyMenuBgTemplates
	.word	gShopTilemapBuffer2
	.word	gShopTilemapBuffer4
	.word	gShopTilemapBuffer3
.Lfe19:
	.size	 BuyMenuInitBgs,.Lfe19-BuyMenuInitBgs
	.align	2, 0
	.type	 BuyMenuDecompressBgGraphics,function
	.thumb_func
BuyMenuDecompressBgGraphics:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L106
	mov	r2, #0x90
	lsl	r2, r2, #0x3
	mov	r3, #0xf7
	lsl	r3, r3, #0x2
	mov	r0, #0x0
	str	r0, [sp]
	mov	r0, #0x1
	bl	DecompressAndCopyTileDataToVram
	ldr	r0, .L106+0x4
	ldrb	r1, [r0, #0x16]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	beq	.L104	@cond_branch
	ldr	r0, .L106+0x8
	ldr	r1, .L106+0xc
	ldr	r1, [r1]
	bl	LZDecompressWram
	b	.L105
.L107:
	.align	2, 0
.L106:
	.word	gBuyMenuFrame_Gfx
	.word	sShopData
	.word	gBuyMenuFrame_Tilemap
	.word	gShopTilemapBuffer1
.L104:
	ldr	r0, .L108
	ldr	r1, .L108+0x4
	ldr	r1, [r1]
	bl	LZDecompressWram
.L105:
	mov	r0, #0x40
	bl	Alloc
	add	r4, r0, #0
	ldr	r0, .L108+0x8
	add	r1, r4, #0
	bl	LZDecompressWram
	add	r0, r4, #0
	mov	r1, #0xb0
	mov	r2, #0x20
	bl	LoadPalette
	add	r0, r4, #0
	add	r0, r0, #0x20
	mov	r1, #0x60
	mov	r2, #0x20
	bl	LoadPalette
	add	r0, r4, #0
	bl	Free
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L109:
	.align	2, 0
.L108:
	.word	gBuyMenuFrame_TmHmTilemap
	.word	gShopTilemapBuffer1
	.word	gBuyMenuFrame_Pal
.Lfe20:
	.size	 BuyMenuDecompressBgGraphics,.Lfe20-BuyMenuDecompressBgGraphics
	.align	2, 0
	.type	 RecolorItemDescriptionBox,function
	.thumb_func
RecolorItemDescriptionBox:
	push	{lr}
	add	sp, sp, #-0x8
	mov	r2, #0x6
	cmp	r0, #0
	bne	.L111	@cond_branch
	mov	r2, #0xb
.L111:
	ldr	r0, .L115
	ldrb	r1, [r0, #0x16]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	beq	.L113	@cond_branch
	mov	r0, #0x6
	str	r0, [sp]
	str	r2, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0xe
	mov	r3, #0x1e
	bl	SetBgTilemapPalette
	b	.L114
.L116:
	.align	2, 0
.L115:
	.word	sShopData
.L113:
	mov	r0, #0x8
	str	r0, [sp]
	str	r2, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0xc
	mov	r3, #0x1e
	bl	SetBgTilemapPalette
.L114:
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 RecolorItemDescriptionBox,.Lfe21-RecolorItemDescriptionBox
	.align	2, 0
	.type	 BuyMenuDrawGraphics,function
	.thumb_func
BuyMenuDrawGraphics:
	push	{lr}
	bl	BuyMenuDrawMapView
	bl	BuyMenuCopyTilemapData
	bl	BuyMenuDrawMoneyBox
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x1
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x2
	bl	ScheduleBgCopyTilemapToVram
	mov	r0, #0x3
	bl	ScheduleBgCopyTilemapToVram
	pop	{r0}
	bx	r0
.Lfe22:
	.size	 BuyMenuDrawGraphics,.Lfe22-BuyMenuDrawGraphics
	.align	2, 0
	.type	 BuyMenuBuildListMenuTemplate,function
	.thumb_func
BuyMenuBuildListMenuTemplate:
	push	{r4, r5, r6, r7, lr}
	ldr	r7, .L132
	ldr	r4, .L132+0x4
	ldrh	r0, [r4, #0x10]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x3
	bl	Alloc
	str	r0, [r7]
	cmp	r0, #0
	beq	.L120	@cond_branch
	ldr	r5, .L132+0x8
	ldrh	r0, [r4, #0x10]
	add	r0, r0, #0x1
	mov	r1, #0xd
	mul	r0, r0, r1
	bl	Alloc
	str	r0, [r5]
	cmp	r0, #0
	bne	.L119	@cond_branch
.L120:
	bl	BuyMenuFreeMemory
	bl	SetShopExitCallback
	mov	r0, #0x0
	b	.L130
.L133:
	.align	2, 0
.L132:
	.word	sShopMenuListMenu
	.word	sShopData
	.word	sShopMenuItemStrings
.L119:
	mov	r6, #0x0
	b	.L131
.L124:
	lsl	r1, r6, #0x3
	ldr	r0, [r7]
	add	r0, r0, r1
	ldr	r2, [r4, #0x4]
	lsl	r1, r6, #0x1
	add	r1, r1, r2
	ldrh	r1, [r1]
	mov	r2, #0xd
	mov	r3, r6
	mul	r3, r3, r2
	ldr	r2, [r5]
	add	r2, r2, r3
	bl	PokeMartWriteNameAndIdAt
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
.L131:
	ldrh	r0, [r4, #0x10]
	cmp	r6, r0
	bcc	.L124	@cond_branch
	ldr	r5, .L134
	mov	r0, #0xd
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, [r5]
	add	r0, r0, r4
	ldr	r1, .L134+0x4
	bl	StringCopy
	ldr	r0, .L134+0x8
	ldr	r2, [r0]
	lsl	r1, r6, #0x3
	add	r1, r1, r2
	ldr	r0, [r5]
	add	r0, r0, r4
	str	r0, [r1]
	mov	r0, #0x2
	neg	r0, r0
	str	r0, [r1, #0x4]
	ldr	r5, .L134+0xc
	str	r2, [r5]
	ldr	r6, .L134+0x10
	ldrh	r0, [r6, #0x10]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r5, #0xc]
	mov	r0, #0x4
	strb	r0, [r5, #0x10]
	strb	r1, [r5, #0x11]
	mov	r0, #0x9
	strb	r0, [r5, #0x12]
	mov	r0, #0x1
	strb	r0, [r5, #0x13]
	ldrb	r1, [r5, #0x16]
	sub	r0, r0, #0x9
	and	r0, r0, r1
	mov	r1, #0x39
	neg	r1, r1
	and	r0, r0, r1
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r5, #0x16]
	ldrb	r2, [r5, #0x14]
	mov	r1, #0x10
	neg	r1, r1
	add	r0, r1, #0
	and	r0, r0, r2
	mov	r3, #0x2
	orr	r0, r0, r3
	strb	r0, [r5, #0x14]
	ldrb	r2, [r5, #0x17]
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r5, #0x17]
	ldrb	r0, [r5, #0x15]
	and	r1, r1, r0
	strb	r1, [r5, #0x15]
	mov	r0, #0x2
	mov	r1, #0x5
	bl	GetFontAttribute
	lsl	r0, r0, #0x4
	ldrb	r2, [r5, #0x14]
	mov	r4, #0xf
	add	r1, r4, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r5, #0x14]
	mov	r0, #0x2
	mov	r1, #0x7
	bl	GetFontAttribute
	lsl	r0, r0, #0x4
	ldrb	r2, [r5, #0x15]
	add	r1, r4, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r5, #0x15]
	ldr	r0, .L134+0x14
	str	r0, [r5, #0x4]
	ldr	r0, .L134+0x18
	str	r0, [r5, #0x8]
	ldrb	r2, [r5, #0x16]
	mov	r1, #0x3f
	add	r0, r1, #0
	and	r0, r0, r2
	strb	r0, [r5, #0x16]
	ldrb	r0, [r5, #0x17]
	and	r1, r1, r0
	strb	r1, [r5, #0x17]
	ldrb	r0, [r6, #0x16]
	and	r4, r4, r0
	mov	r1, #0x6
	cmp	r4, #0x1
	bne	.L126	@cond_branch
	mov	r1, #0x5
.L126:
	ldrh	r0, [r6, #0x10]
	add	r0, r0, #0x1
	cmp	r0, r1
	ble	.L128	@cond_branch
	strh	r1, [r5, #0xe]
	b	.L129
.L135:
	.align	2, 0
.L134:
	.word	sShopMenuItemStrings
	.word	gFameCheckerText_Cancel
	.word	sShopMenuListMenu
	.word	gMultiuseListMenuTemplate
	.word	sShopData
	.word	BuyMenuPrintItemDescriptionAndShowItemIcon
	.word	BuyMenuPrintPriceInList
.L128:
	strh	r0, [r5, #0xe]
.L129:
	ldr	r0, .L136
	ldr	r1, .L136+0x4
	ldrh	r1, [r1, #0xe]
	strh	r1, [r0, #0x12]
	mov	r0, #0x1
.L130:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L137:
	.align	2, 0
.L136:
	.word	sShopData
	.word	gMultiuseListMenuTemplate
.Lfe23:
	.size	 BuyMenuBuildListMenuTemplate,.Lfe23-BuyMenuBuildListMenuTemplate
	.align	2, 0
	.type	 PokeMartWriteNameAndIdAt,function
	.thumb_func
PokeMartWriteNameAndIdAt:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r5, #0
	add	r1, r6, #0
	bl	CopyItemName
	str	r6, [r4]
	str	r5, [r4, #0x4]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 PokeMartWriteNameAndIdAt,.Lfe24-PokeMartWriteNameAndIdAt
	.align	2, 0
	.type	 BuyMenuPrintItemDescriptionAndShowItemIcon,function
	.thumb_func
BuyMenuPrintItemDescriptionAndShowItemIcon:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0x1
	beq	.L140	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L140:
	mov	r0, #0x2
	neg	r0, r0
	cmp	r5, r0
	beq	.L141	@cond_branch
	lsl	r0, r5, #0x10
	lsr	r0, r0, #0x10
	bl	ItemId_GetDescription
	add	r7, r0, #0
	b	.L142
.L141:
	ldr	r7, .L147
.L142:
	mov	r0, #0x5
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	ldr	r6, .L147+0x4
	ldrb	r0, [r6, #0x16]
	mov	r4, #0xf
	and	r4, r4, r0
	cmp	r4, #0x1
	beq	.L143	@cond_branch
	ldrb	r1, [r6, #0x17]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1e
	mov	r0, #0x1
	eor	r0, r0, r1
	bl	DestroyItemMenuIcon
	mov	r0, #0x2
	neg	r0, r0
	cmp	r5, r0
	beq	.L144	@cond_branch
	lsl	r0, r5, #0x10
	lsr	r0, r0, #0x10
	ldrb	r1, [r6, #0x17]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1e
	bl	CreateItemMenuIcon
	b	.L145
.L148:
	.align	2, 0
.L147:
	.word	gText_QuitShopping
	.word	sShopData
.L144:
	ldr	r0, .L149
	ldrb	r1, [r6, #0x17]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1e
	bl	CreateItemMenuIcon
.L145:
	ldr	r3, .L149+0x4
	ldrb	r2, [r3, #0x17]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1e
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r0, #0x7
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x17]
	mov	r0, #0x3
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	str	r0, [sp, #0xc]
	str	r0, [sp, #0x10]
	mov	r0, #0x5
	mov	r1, #0x2
	add	r2, r7, #0
	mov	r3, #0x0
	bl	BuyMenuPrint
	b	.L146
.L150:
	.align	2, 0
.L149:
	.word	0x177
	.word	sShopData
.L143:
	mov	r0, #0x6
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r5, #0
	bl	LoadTmHmNameInMart
	mov	r0, #0x3
	str	r0, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	str	r0, [sp, #0xc]
	str	r0, [sp, #0x10]
	mov	r0, #0x5
	mov	r1, #0x2
	add	r2, r7, #0
	mov	r3, #0x2
	bl	BuyMenuPrint
.L146:
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 BuyMenuPrintItemDescriptionAndShowItemIcon,.Lfe25-BuyMenuPrintItemDescriptionAndShowItemIcon
	.align	2, 0
	.type	 BuyMenuPrintPriceInList,function
	.thumb_func
BuyMenuPrintPriceInList:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	mov	r0, #0x2
	neg	r0, r0
	cmp	r1, r0
	beq	.L152	@cond_branch
	ldr	r4, .L157
	lsl	r0, r1, #0x10
	lsr	r0, r0, #0x10
	bl	ItemId_GetPrice
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	add	r0, r4, #0
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x4
	sub	r1, r1, r0
	ldr	r2, .L157+0x4
	add	r0, r1, #0
	sub	r1, r1, #0x1
	cmp	r0, #0
	beq	.L154	@cond_branch
	mov	r3, #0x0
.L155:
	strb	r3, [r2]
	add	r2, r2, #0x1
	add	r0, r1, #0
	sub	r1, r1, #0x1
	cmp	r0, #0
	bne	.L155	@cond_branch
.L154:
	ldr	r1, .L157+0x8
	add	r0, r2, #0
	bl	StringExpandPlaceholders
	ldr	r2, .L157+0x4
	str	r5, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	mov	r0, #0xff
	str	r0, [sp, #0xc]
	mov	r0, #0x1
	str	r0, [sp, #0x10]
	add	r0, r6, #0
	mov	r1, #0x0
	mov	r3, #0x69
	bl	BuyMenuPrint
.L152:
	add	sp, sp, #0x14
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L158:
	.align	2, 0
.L157:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_PokedollarVar1
.Lfe26:
	.size	 BuyMenuPrintPriceInList,.Lfe26-BuyMenuPrintPriceInList
	.align	2, 0
	.type	 LoadTmHmNameInMart,function
	.thumb_func
LoadTmHmNameInMart:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	add	r7, r0, #0
	mov	r0, #0x2
	neg	r0, r0
	cmp	r7, r0
	beq	.L160	@cond_branch
	ldr	r4, .L162
	ldr	r0, .L162+0x4
	add	r1, r7, r0
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r5, .L162+0x8
	ldr	r1, .L162+0xc
	add	r0, r5, #0
	bl	StringCopy
	add	r0, r5, #0
	add	r1, r4, #0
	bl	StringAppend
	mov	r4, #0x0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0xff
	str	r0, [sp, #0xc]
	mov	r6, #0x1
	str	r6, [sp, #0x10]
	mov	r0, #0x6
	mov	r1, #0x0
	add	r2, r5, #0
	mov	r3, #0x0
	bl	BuyMenuPrint
	lsl	r0, r7, #0x10
	lsr	r0, r0, #0x10
	bl	ItemIdToBattleMoveId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xd
	mul	r1, r1, r0
	ldr	r0, .L162+0x10
	add	r1, r1, r0
	add	r0, r5, #0
	bl	StringCopy
	mov	r0, #0x10
	str	r0, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	str	r4, [sp, #0xc]
	str	r6, [sp, #0x10]
	mov	r0, #0x6
	mov	r1, #0x2
	add	r2, r5, #0
	mov	r3, #0x0
	bl	BuyMenuPrint
	b	.L161
.L163:
	.align	2, 0
.L162:
	.word	gStringVar1
	.word	-0x120
	.word	gStringVar4
	.word	gText_NumberClear01
	.word	gMoveNames
.L160:
	ldr	r2, .L164
	mov	r4, #0x0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0xff
	str	r0, [sp, #0xc]
	mov	r5, #0x1
	str	r5, [sp, #0x10]
	mov	r0, #0x6
	mov	r1, #0x0
	mov	r3, #0x0
	bl	BuyMenuPrint
	ldr	r2, .L164+0x4
	mov	r0, #0x10
	str	r0, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	str	r4, [sp, #0xc]
	str	r5, [sp, #0x10]
	mov	r0, #0x6
	mov	r1, #0x2
	mov	r3, #0x0
	bl	BuyMenuPrint
.L161:
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L165:
	.align	2, 0
.L164:
	.word	gText_ThreeHyphens
	.word	gText_SevenHyphens
.Lfe27:
	.size	 LoadTmHmNameInMart,.Lfe27-LoadTmHmNameInMart
	.align	2, 0
	.globl	GetMartFontId
	.type	 GetMartFontId,function
	.thumb_func
GetMartFontId:
	ldr	r0, .L167
	ldrh	r0, [r0, #0x16]
	lsl	r0, r0, #0x17
	lsr	r0, r0, #0x1b
	bx	lr
.L168:
	.align	2, 0
.L167:
	.word	sShopData
.Lfe28:
	.size	 GetMartFontId,.Lfe28-GetMartFontId
	.align	2, 0
	.type	 BuyMenuPrintCursor,function
	.thumb_func
BuyMenuPrintCursor:
	push	{r4, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	ListMenuGetYCoordForPrintingArrowCursor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	BuyMenuPrintCursorAtYPosition
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe29:
	.size	 BuyMenuPrintCursor,.Lfe29-BuyMenuPrintCursor
	.align	2, 0
	.type	 BuyMenuPrintCursorAtYPosition,function
	.thumb_func
BuyMenuPrintCursorAtYPosition:
	push	{r4, r5, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0xff
	bne	.L171	@cond_branch
	mov	r0, #0x2
	mov	r1, #0x0
	bl	GetFontAttribute
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x2
	mov	r1, #0x1
	bl	GetFontAttribute
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r4, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x4
	mov	r1, #0x0
	mov	r2, #0x1
	add	r3, r5, #0
	bl	FillWindowPixelRect
	mov	r0, #0x4
	mov	r1, #0x2
	bl	CopyWindowToVram
	b	.L172
.L171:
	ldr	r2, .L173
	str	r5, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	str	r0, [sp, #0xc]
	str	r1, [sp, #0x10]
	mov	r0, #0x4
	mov	r1, #0x2
	mov	r3, #0x1
	bl	BuyMenuPrint
.L172:
	add	sp, sp, #0x14
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L174:
	.align	2, 0
.L173:
	.word	gText_SelectorArrow2
.Lfe30:
	.size	 BuyMenuPrintCursorAtYPosition,.Lfe30-BuyMenuPrintCursorAtYPosition
	.align	2, 0
	.type	 BuyMenuFreeMemory,function
	.thumb_func
BuyMenuFreeMemory:
	push	{lr}
	ldr	r0, .L182
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L176	@cond_branch
	bl	Free
.L176:
	ldr	r0, .L182+0x4
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L177	@cond_branch
	bl	Free
.L177:
	ldr	r0, .L182+0x8
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L178	@cond_branch
	bl	Free
.L178:
	ldr	r0, .L182+0xc
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L179	@cond_branch
	bl	Free
.L179:
	ldr	r0, .L182+0x10
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L180	@cond_branch
	bl	Free
.L180:
	ldr	r0, .L182+0x14
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L181	@cond_branch
	bl	Free
.L181:
	bl	FreeAllWindowBuffers
	pop	{r0}
	bx	r0
.L183:
	.align	2, 0
.L182:
	.word	gShopTilemapBuffer1
	.word	gShopTilemapBuffer2
	.word	gShopTilemapBuffer3
	.word	gShopTilemapBuffer4
	.word	sShopMenuListMenu
	.word	sShopMenuItemStrings
.Lfe31:
	.size	 BuyMenuFreeMemory,.Lfe31-BuyMenuFreeMemory
	.align	2, 0
	.type	 SetShopExitCallback,function
	.thumb_func
SetShopExitCallback:
	push	{lr}
	ldr	r0, .L185
	ldr	r1, .L185+0x4
	str	r1, [r0]
	ldr	r0, .L185+0x8
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L186:
	.align	2, 0
.L185:
	.word	gFieldCallback
	.word	MapPostLoadHook_ReturnToShopMenu
	.word	CB2_ReturnToField
.Lfe32:
	.size	 SetShopExitCallback,.Lfe32-SetShopExitCallback
	.align	2, 0
	.type	 BuyMenuAddScrollIndicatorArrows,function
	.thumb_func
BuyMenuAddScrollIndicatorArrows:
	push	{r4, lr}
	add	sp, sp, #-0x10
	ldr	r4, .L191
	ldrb	r1, [r4, #0x16]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	beq	.L188	@cond_branch
	ldrh	r0, [r4, #0x10]
	ldrh	r1, [r4, #0x12]
	sub	r0, r0, r1
	add	r0, r0, #0x1
	str	r0, [sp]
	mov	r0, #0x6e
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r0, r4, #0
	add	r0, r0, #0xe
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0xa0
	mov	r2, #0x8
	mov	r3, #0x68
	b	.L190
.L192:
	.align	2, 0
.L191:
	.word	sShopData
.L188:
	ldrh	r0, [r4, #0x10]
	ldrh	r1, [r4, #0x12]
	sub	r0, r0, r1
	add	r0, r0, #0x1
	str	r0, [sp]
	mov	r0, #0x6e
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r0, r4, #0
	add	r0, r0, #0xe
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0xa0
	mov	r2, #0x8
	mov	r3, #0x58
.L190:
	bl	AddScrollIndicatorArrowPairParameterized
	lsl	r0, r0, #0x3
	ldrb	r2, [r4, #0x17]
	mov	r1, #0x7
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x17]
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 BuyMenuAddScrollIndicatorArrows,.Lfe33-BuyMenuAddScrollIndicatorArrows
	.align	2, 0
	.type	 BuyQuantityAddScrollIndicatorArrows,function
	.thumb_func
BuyQuantityAddScrollIndicatorArrows:
	push	{r4, lr}
	add	sp, sp, #-0x10
	ldr	r4, .L194
	mov	r0, #0x1
	strh	r0, [r4, #0x18]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x6e
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	add	r0, r4, #0
	add	r0, r0, #0x18
	str	r0, [sp, #0xc]
	mov	r0, #0x2
	mov	r1, #0x98
	mov	r2, #0x48
	mov	r3, #0x68
	bl	AddScrollIndicatorArrowPairParameterized
	lsl	r0, r0, #0x3
	ldrb	r2, [r4, #0x17]
	mov	r1, #0x7
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x17]
	add	sp, sp, #0x10
	pop	{r4}
	pop	{r0}
	bx	r0
.L195:
	.align	2, 0
.L194:
	.word	sShopData
.Lfe34:
	.size	 BuyQuantityAddScrollIndicatorArrows,.Lfe34-BuyQuantityAddScrollIndicatorArrows
	.align	2, 0
	.type	 BuyMenuRemoveScrollIndicatorArrows,function
	.thumb_func
BuyMenuRemoveScrollIndicatorArrows:
	push	{r4, lr}
	ldr	r4, .L198
	ldrb	r1, [r4, #0x17]
	mov	r0, #0xf8
	and	r0, r0, r1
	cmp	r0, #0xf8
	beq	.L196	@cond_branch
	lsr	r0, r1, #0x3
	bl	RemoveScrollIndicatorArrowPair
	ldrb	r0, [r4, #0x17]
	mov	r1, #0xf8
	orr	r0, r0, r1
	strb	r0, [r4, #0x17]
.L196:
	pop	{r4}
	pop	{r0}
	bx	r0
.L199:
	.align	2, 0
.L198:
	.word	sShopData
.Lfe35:
	.size	 BuyMenuRemoveScrollIndicatorArrows,.Lfe35-BuyMenuRemoveScrollIndicatorArrows
	.align	2, 0
	.type	 BuyMenuDrawMapView,function
	.thumb_func
BuyMenuDrawMapView:
	push	{lr}
	bl	BuyMenuCollectObjectEventData
	bl	BuyMenuDrawObjectEvents
	bl	BuyMenuDrawMapBg
	pop	{r0}
	bx	r0
.Lfe36:
	.size	 BuyMenuDrawMapView,.Lfe36-BuyMenuDrawMapView
	.align	2, 0
	.type	 BuyMenuDrawMapBg,function
	.thumb_func
BuyMenuDrawMapBg:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	ldr	r0, .L214
	ldr	r0, [r0]
	mov	r9, r0
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r1, sp
	mov	r0, sp
	ldrh	r0, [r0]
	sub	r0, r0, #0x2
	strh	r0, [r1]
	ldrh	r0, [r4]
	sub	r0, r0, #0x3
	strh	r0, [r4]
	mov	r1, #0x0
	mov	sl, r4
.L205:
	mov	r4, #0x0
	lsl	r1, r1, #0x10
	mov	r8, r1
	asr	r7, r1, #0x10
.L209:
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	lsl	r4, r4, #0x10
	asr	r6, r4, #0x10
	add	r0, r0, r6
	mov	r2, sl
	mov	r3, #0x0
	ldrsh	r1, [r2, r3]
	add	r1, r1, r7
	bl	MapGridGetMetatileIdAt
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	mov	r0, sp
	ldrh	r0, [r0]
	add	r0, r6, r0
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r2, sl
	ldrh	r1, [r2]
	add	r1, r7, r1
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	MapGridGetMetatileLayerTypeAt
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r0, .L214+0x4
	cmp	r5, r0
	bhi	.L210	@cond_branch
	mov	r1, r9
	ldr	r0, [r1, #0x10]
	lsl	r1, r5, #0x4
	ldr	r2, [r0, #0xc]
	add	r2, r2, r1
	add	r0, r6, #0
	add	r1, r7, #0
	bl	BuyMenuDrawMapMetatile
	b	.L208
.L215:
	.align	2, 0
.L214:
	.word	gMapHeader
	.word	0x27f
.L210:
	mov	r2, r9
	ldr	r0, [r2, #0x14]
	ldr	r2, .L216
	add	r1, r5, r2
	lsl	r1, r1, #0x4
	ldr	r2, [r0, #0xc]
	add	r2, r2, r1
	add	r0, r6, #0
	add	r1, r7, #0
	bl	BuyMenuDrawMapMetatile
.L208:
	mov	r3, #0x80
	lsl	r3, r3, #0x9
	add	r0, r4, r3
	lsr	r4, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	ble	.L209	@cond_branch
	add	r0, r3, #0
	add	r0, r0, r8
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x9
	ble	.L205	@cond_branch
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L217:
	.align	2, 0
.L216:
	.word	-0x280
.Lfe37:
	.size	 BuyMenuDrawMapBg,.Lfe37-BuyMenuDrawMapBg
	.align	2, 0
	.type	 BuyMenuDrawMapMetatile,function
	.thumb_func
BuyMenuDrawMapMetatile:
	push	{r4, r5, r6, lr}
	add	r6, r2, #0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	add	r2, r3, #0
	lsl	r0, r0, #0x11
	lsr	r5, r0, #0x10
	lsl	r1, r1, #0x16
	mov	r0, #0x80
	lsl	r0, r0, #0xf
	add	r1, r1, r0
	lsr	r1, r1, #0x10
	cmp	r3, #0x1
	beq	.L221	@cond_branch
	cmp	r3, #0x1
	bgt	.L225	@cond_branch
	cmp	r3, #0
	beq	.L220	@cond_branch
	b	.L219
.L225:
	cmp	r2, #0x2
	beq	.L222	@cond_branch
	b	.L219
.L220:
	ldr	r0, .L227
	ldr	r0, [r0]
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	lsl	r4, r1, #0x10
	asr	r4, r4, #0x10
	add	r1, r5, #0
	add	r2, r4, #0
	add	r3, r6, #0
	bl	BuyMenuDrawMapMetatileLayer
	ldr	r0, .L227+0x4
	b	.L226
.L228:
	.align	2, 0
.L227:
	.word	gShopTilemapBuffer4
	.word	gShopTilemapBuffer2
.L221:
	ldr	r0, .L229
	ldr	r0, [r0]
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	lsl	r4, r1, #0x10
	asr	r4, r4, #0x10
	add	r1, r5, #0
	add	r2, r4, #0
	add	r3, r6, #0
	bl	BuyMenuDrawMapMetatileLayer
	ldr	r0, .L229+0x4
.L226:
	ldr	r0, [r0]
	add	r3, r6, #0
	add	r3, r3, #0x8
	add	r1, r5, #0
	add	r2, r4, #0
	bl	BuyMenuDrawMapMetatileLayer
	b	.L219
.L230:
	.align	2, 0
.L229:
	.word	gShopTilemapBuffer3
	.word	gShopTilemapBuffer4
.L222:
	ldr	r0, .L231
	ldr	r0, [r0]
	lsl	r5, r5, #0x10
	asr	r5, r5, #0x10
	lsl	r4, r1, #0x10
	asr	r4, r4, #0x10
	add	r1, r5, #0
	add	r2, r4, #0
	add	r3, r6, #0
	bl	BuyMenuDrawMapMetatileLayer
	ldr	r0, .L231+0x4
	ldr	r0, [r0]
	add	r3, r6, #0
	add	r3, r3, #0x8
	add	r1, r5, #0
	add	r2, r4, #0
	bl	BuyMenuDrawMapMetatileLayer
.L219:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L232:
	.align	2, 0
.L231:
	.word	gShopTilemapBuffer3
	.word	gShopTilemapBuffer2
.Lfe38:
	.size	 BuyMenuDrawMapMetatile,.Lfe38-BuyMenuDrawMapMetatile
	.align	2, 0
	.type	 BuyMenuDrawMapMetatileLayer,function
	.thumb_func
BuyMenuDrawMapMetatileLayer:
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	add	r1, r1, r2
	lsl	r1, r1, #0x1
	add	r1, r1, r0
	ldrh	r0, [r3]
	strh	r0, [r1]
	ldrh	r0, [r3, #0x2]
	strh	r0, [r1, #0x2]
	add	r2, r1, #0
	add	r2, r2, #0x40
	ldrh	r0, [r3, #0x4]
	strh	r0, [r2]
	add	r1, r1, #0x42
	ldrh	r0, [r3, #0x6]
	strh	r0, [r1]
	bx	lr
.Lfe39:
	.size	 BuyMenuDrawMapMetatileLayer,.Lfe39-BuyMenuDrawMapMetatileLayer
	.align	2, 0
	.type	 BuyMenuCollectObjectEventData,function
	.thumb_func
BuyMenuCollectObjectEventData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	mov	r0, #0x0
	mov	r9, r0
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	bl	PlayerGetElevation
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	mov	r5, #0x0
	ldr	r2, .L260
	mov	r1, #0x10
.L238:
	lsl	r0, r5, #0x3
	add	r0, r0, r2
	strh	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0xf
	bls	.L238	@cond_branch
	mov	r5, #0x0
	ldr	r6, .L260+0x4
	sub	r1, r6, #0x6
	mov	r8, r1
.L243:
	mov	r4, #0x0
	add	r2, r5, #0x1
	mov	sl, r2
.L247:
	mov	r1, sp
	ldr	r3, .L260+0x8
	add	r0, r3, #0
	ldrh	r1, [r1]
	add	r0, r0, r1
	add	r0, r0, r4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L260+0xc
	add	r1, r2, #0
	mov	r3, sp
	ldrh	r3, [r3, #0x2]
	add	r1, r1, r3
	add	r1, r1, r5
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r2, [sp, #0x4]
	bl	GetObjectEventIdByPosition
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x10
	beq	.L246	@cond_branch
	mov	r0, r9
	lsl	r2, r0, #0x3
	mov	r1, r8
	add	r0, r2, r1
	mov	r7, #0x0
	strh	r3, [r0]
	mov	r0, r8
	add	r0, r0, #0x2
	add	r0, r2, r0
	strh	r4, [r0]
	ldr	r1, .L260+0x10
	add	r0, r2, r1
	strh	r5, [r0]
	ldr	r1, .L260+0x14
	lsl	r0, r3, #0x3
	add	r0, r0, r3
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0, #0x18]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r0, #0x2
	beq	.L251	@cond_branch
	cmp	r0, #0x2
	bgt	.L256	@cond_branch
	cmp	r0, #0x1
	beq	.L250	@cond_branch
	b	.L254
.L261:
	.align	2, 0
.L260:
	.word	sViewportObjectEvents
	.word	sViewportObjectEvents+0x6
	.word	0xfffd
	.word	0xfffe
	.word	sViewportObjectEvents+0x4
	.word	gObjectEvents
.L256:
	cmp	r0, #0x3
	beq	.L252	@cond_branch
	b	.L254
.L250:
	add	r0, r2, r6
	strh	r7, [r0]
	b	.L249
.L251:
	add	r1, r2, r6
	mov	r0, #0x1
	b	.L259
.L252:
	add	r1, r2, r6
	mov	r0, #0x2
	b	.L259
.L254:
	add	r1, r2, r6
	mov	r0, #0x3
.L259:
	strh	r0, [r1]
.L249:
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
.L246:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x6
	bls	.L247	@cond_branch
	mov	r2, sl
	lsl	r0, r2, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x4
	bls	.L243	@cond_branch
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 BuyMenuCollectObjectEventData,.Lfe40-BuyMenuCollectObjectEventData
	.align	2, 0
	.type	 BuyMenuDrawObjectEvents,function
	.thumb_func
BuyMenuDrawObjectEvents:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	mov	r6, #0x0
	ldr	r7, .L269
	ldr	r0, .L269+0x4
	mov	r8, r0
	add	r1, r7, #0x6
	mov	r9, r1
.L266:
	lsl	r5, r6, #0x3
	add	r4, r5, r7
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x10
	beq	.L265	@cond_branch
	add	r1, r0, #0
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	ldrb	r0, [r0, #0x5]
	bl	GetObjectEventGraphicsInfo
	mov	r1, #0x0
	ldrsh	r2, [r4, r1]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	ldrb	r4, [r1, #0x5]
	add	r1, r7, #0x2
	add	r1, r5, r1
	ldrh	r2, [r1]
	lsl	r2, r2, #0x14
	ldr	r1, .L269+0x8
	add	r2, r2, r1
	asr	r2, r2, #0x10
	add	r1, r7, #0x4
	add	r1, r5, r1
	ldrh	r3, [r1]
	lsl	r3, r3, #0x4
	mov	r1, #0xa
	ldrsh	r0, [r0, r1]
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	asr	r0, r0, #0x1
	sub	r0, r0, #0x30
	sub	r3, r3, r0
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	mov	r0, #0x2
	str	r0, [sp]
	add	r0, r4, #0
	ldr	r1, .L269+0xc
	bl	CreateObjectGraphicsSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L269+0x10
	add	r2, r2, r0
	mov	r1, r9
	add	r0, r5, r1
	ldrb	r1, [r0]
	add	r0, r2, #0
	bl	StartSpriteAnim
.L265:
	add	r0, r6, #0x1
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0xf
	bls	.L266	@cond_branch
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L270:
	.align	2, 0
.L269:
	.word	sViewportObjectEvents
	.word	gObjectEvents
	.word	-0x80000
	.word	SpriteCallbackDummy
	.word	gSprites
.Lfe41:
	.size	 BuyMenuDrawObjectEvents,.Lfe41-BuyMenuDrawObjectEvents
	.align	2, 0
	.type	 BuyMenuCopyTilemapData,function
	.thumb_func
BuyMenuCopyTilemapData:
	push	{r4, r5, r6, lr}
	ldr	r0, .L278
	ldr	r4, [r0]
	ldr	r0, .L278+0x4
	ldr	r3, [r0]
	mov	r1, #0x0
	ldr	r0, .L278+0x8
	add	r6, r0, #0
	ldr	r5, .L278+0xc
.L275:
	lsl	r0, r1, #0x10
	asr	r2, r0, #0x10
	lsl	r1, r2, #0x1
	add	r0, r1, r3
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L274	@cond_branch
	add	r1, r1, r4
	add	r0, r0, r6
	strh	r0, [r1]
.L274:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r5
	ble	.L275	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L279:
	.align	2, 0
.L278:
	.word	gShopTilemapBuffer2
	.word	gShopTilemapBuffer1
	.word	0xb3dc
	.word	0x3ff
.Lfe42:
	.size	 BuyMenuCopyTilemapData,.Lfe42-BuyMenuCopyTilemapData
	.align	2, 0
	.type	 BuyMenuPrintItemQuantityAndPrice,function
	.thumb_func
BuyMenuPrintItemQuantityAndPrice:
	push	{r4, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r4, r0, #0x2
	add	r4, r4, r0
	lsl	r4, r4, #0x3
	ldr	r0, .L281
	add	r4, r4, r0
	mov	r0, #0x3
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r0, .L281+0x4
	ldr	r3, [r0, #0x8]
	mov	r0, #0xff
	str	r0, [sp]
	mov	r0, #0x3
	mov	r1, #0x36
	mov	r2, #0xa
	bl	PrintMoneyAmount
	ldr	r0, .L281+0x8
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L281+0xc
	ldr	r1, .L281+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0xa
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	str	r0, [sp, #0xc]
	mov	r0, #0x1
	str	r0, [sp, #0x10]
	mov	r0, #0x3
	mov	r1, #0x0
	add	r2, r4, #0
	mov	r3, #0x2
	bl	BuyMenuPrint
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r0}
	bx	r0
.L282:
	.align	2, 0
.L281:
	.word	gTasks+0x8
	.word	sShopData
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_TimesStrVar1
.Lfe43:
	.size	 BuyMenuPrintItemQuantityAndPrice,.Lfe43-BuyMenuPrintItemQuantityAndPrice
	.align	2, 0
	.type	 Task_BuyMenu,function
	.thumb_func
Task_BuyMenu:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	ldr	r1, .L292
	add	r5, r0, r1
	ldr	r0, .L292+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L284	@cond_branch
	ldrb	r0, [r5, #0xe]
	bl	ListMenu_ProcessInput
	add	r4, r0, #0
	ldrb	r0, [r5, #0xe]
	ldr	r7, .L292+0x8
	sub	r2, r7, #0x2
	add	r1, r7, #0
	bl	ListMenuGetScrollAndRow
	mov	r0, #0x2
	neg	r0, r0
	cmp	r4, r0
	beq	.L287	@cond_branch
	add	r0, r0, #0x1
	cmp	r4, r0
	bne	.L288	@cond_branch
	b	.L284
.L293:
	.align	2, 0
.L292:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	sShopData+0xe
.L287:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r6, #0
	bl	ExitBuyMenu
	b	.L284
.L288:
	mov	r0, #0x5
	bl	PlaySE
	strh	r4, [r5, #0xa]
	mov	r0, #0x5
	bl	ClearWindowTilemap
	bl	BuyMenuRemoveScrollIndicatorArrows
	ldrb	r0, [r5, #0xe]
	mov	r1, #0x2
	bl	BuyMenuPrintCursor
	mov	r0, #0x1
	bl	RecolorItemDescriptionBox
	lsl	r0, r4, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	ItemId_GetPrice
	add	r1, r0, #0
	add	r0, r7, #0
	sub	r0, r0, #0xe
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r1, [r0, #0x8]
	ldr	r0, .L294
	ldr	r0, [r0]
	mov	r2, #0xa4
	lsl	r2, r2, #0x2
	add	r0, r0, r2
	bl	IsEnoughMoney
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L289	@cond_branch
	ldr	r1, .L294+0x4
	ldr	r2, .L294+0x8
	add	r0, r6, #0
	bl	BuyMenuDisplayMessage
	b	.L284
.L295:
	.align	2, 0
.L294:
	.word	gSaveBlock1Ptr
	.word	gText_YouDontHaveMoney
	.word	BuyMenuReturnToItemList
.L289:
	ldr	r1, .L296
	add	r0, r4, #0
	bl	CopyItemName
	ldr	r1, .L296+0x4
	ldr	r2, .L296+0x8
	add	r0, r6, #0
	bl	BuyMenuDisplayMessage
.L284:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L297:
	.align	2, 0
.L296:
	.word	gStringVar1
	.word	gText_Var1CertainlyHowMany
	.word	Task_BuyHowManyDialogueInit
.Lfe44:
	.size	 Task_BuyMenu,.Lfe44-Task_BuyMenu
	.align	2, 0
	.type	 Task_BuyHowManyDialogueInit,function
	.thumb_func
Task_BuyHowManyDialogueInit:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r5, r7, #0x2
	add	r5, r5, r7
	lsl	r5, r5, #0x3
	ldr	r0, .L303
	add	r5, r5, r0
	ldrh	r0, [r5, #0xa]
	bl	BagGetQuantityByItemId
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	mov	r0, #0x1
	mov	r1, #0x0
	bl	BuyMenuQuantityBoxThinBorder
	ldr	r0, .L303+0x4
	add	r1, r4, #0
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r6, .L303+0x8
	ldr	r1, .L303+0xc
	add	r0, r6, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	str	r0, [sp, #0x8]
	str	r0, [sp, #0xc]
	mov	r4, #0x1
	str	r4, [sp, #0x10]
	mov	r0, #0x1
	mov	r1, #0x2
	add	r2, r6, #0
	mov	r3, #0x0
	bl	BuyMenuPrint
	strh	r4, [r5, #0x2]
	mov	r0, #0x3
	mov	r1, #0x0
	bl	BuyMenuQuantityBoxNormalBorder
	add	r0, r7, #0
	bl	BuyMenuPrintItemQuantityAndPrice
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	ldr	r0, .L303+0x10
	ldr	r0, [r0]
	mov	r1, #0xa4
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	bl	GetMoney
	add	r4, r0, #0
	ldrh	r0, [r5, #0xa]
	bl	ItemId_GetPrice
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	__udivsi3
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r2, #0x63
	bls	.L299	@cond_branch
	ldr	r1, .L303+0x14
	mov	r0, #0x63
	b	.L302
.L304:
	.align	2, 0
.L303:
	.word	gTasks+0x8
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_InBagVar1
	.word	gSaveBlock1Ptr
	.word	sShopData
.L299:
	ldr	r1, .L305
	lsl	r0, r2, #0x18
	lsr	r0, r0, #0x18
.L302:
	strh	r0, [r1, #0x14]
	cmp	r2, #0x1
	beq	.L301	@cond_branch
	bl	BuyQuantityAddScrollIndicatorArrows
.L301:
	ldr	r0, .L305+0x4
	lsl	r1, r7, #0x2
	add	r1, r1, r7
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	ldr	r0, .L305+0x8
	str	r0, [r1]
	add	sp, sp, #0x14
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L306:
	.align	2, 0
.L305:
	.word	sShopData
	.word	gTasks
	.word	Task_BuyHowManyDialogueHandleInput
.Lfe45:
	.size	 Task_BuyHowManyDialogueInit,.Lfe45-Task_BuyHowManyDialogueInit
	.align	2, 0
	.type	 Task_BuyHowManyDialogueHandleInput,function
	.thumb_func
Task_BuyHowManyDialogueHandleInput:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r7, r5, #0
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L313
	add	r4, r0, r1
	add	r0, r4, #0x2
	ldr	r6, .L313+0x4
	ldrh	r1, [r6, #0x14]
	bl	AdjustQuantityAccordingToDPadInput
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L308	@cond_branch
	ldrh	r0, [r4, #0xa]
	bl	ItemId_GetPrice
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	mul	r0, r0, r1
	str	r0, [r6, #0x8]
	add	r0, r5, #0
	bl	BuyMenuPrintItemQuantityAndPrice
	b	.L309
.L314:
	.align	2, 0
.L313:
	.word	gTasks+0x8
	.word	sShopData
.L308:
	ldr	r0, .L315
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L310	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	BuyMenuRemoveScrollIndicatorArrows
	mov	r0, #0x3
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x1
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x3
	bl	ClearWindowTilemap
	mov	r0, #0x1
	bl	ClearWindowTilemap
	mov	r0, #0x4
	bl	PutWindowTilemap
	ldrh	r0, [r4, #0xa]
	ldr	r1, .L315+0x4
	bl	CopyItemName
	ldr	r0, .L315+0x8
	mov	r2, #0x2
	ldrsh	r1, [r4, r2]
	mov	r2, #0x0
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L315+0xc
	ldr	r1, [r6, #0x8]
	mov	r2, #0x0
	mov	r3, #0x8
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L315+0x10
	ldr	r2, .L315+0x14
	add	r0, r5, #0
	bl	BuyMenuDisplayMessage
	b	.L309
.L316:
	.align	2, 0
.L315:
	.word	gMain
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gText_Var1AndYouWantedVar2
	.word	CreateBuyMenuConfirmPurchaseWindow
.L310:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L309	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	BuyMenuRemoveScrollIndicatorArrows
	mov	r0, #0x3
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x1
	mov	r1, #0x0
	bl	ClearStdWindowAndFrameToTransparent
	mov	r0, #0x3
	bl	ClearWindowTilemap
	mov	r0, #0x1
	bl	ClearWindowTilemap
	add	r0, r7, #0
	bl	BuyMenuReturnToItemList
.L309:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe46:
	.size	 Task_BuyHowManyDialogueHandleInput,.Lfe46-Task_BuyHowManyDialogueHandleInput
	.align	2, 0
	.type	 CreateBuyMenuConfirmPurchaseWindow,function
	.thumb_func
CreateBuyMenuConfirmPurchaseWindow:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L318
	bl	BuyMenuConfirmPurchase
	pop	{r0}
	bx	r0
.L319:
	.align	2, 0
.L318:
	.word	sShopMenuActions_BuyQuit
.Lfe47:
	.size	 CreateBuyMenuConfirmPurchaseWindow,.Lfe47-CreateBuyMenuConfirmPurchaseWindow
	.align	2, 0
	.type	 BuyMenuTryMakePurchase,function
	.thumb_func
BuyMenuTryMakePurchase:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L323
	add	r4, r0, r1
	mov	r0, #0x4
	bl	PutWindowTilemap
	ldrh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0x2]
	bl	AddBagItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L321	@cond_branch
	ldr	r1, .L323+0x4
	ldr	r2, .L323+0x8
	add	r0, r5, #0
	bl	BuyMenuDisplayMessage
	add	r0, r5, #0
	bl	DebugFunc_PrintPurchaseDetails
	ldrh	r0, [r4, #0xa]
	ldrh	r1, [r4, #0x2]
	mov	r2, #0x1
	bl	RecordItemTransaction
	b	.L322
.L324:
	.align	2, 0
.L323:
	.word	gTasks+0x8
	.word	gText_HereYouGoThankYou
	.word	BuyMenuSubtractMoney
.L321:
	ldr	r1, .L325
	ldr	r2, .L325+0x4
	add	r0, r5, #0
	bl	BuyMenuDisplayMessage
.L322:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L326:
	.align	2, 0
.L325:
	.word	gText_NoMoreRoomForThis
	.word	BuyMenuReturnToItemList
.Lfe48:
	.size	 BuyMenuTryMakePurchase,.Lfe48-BuyMenuTryMakePurchase
	.align	2, 0
	.type	 BuyMenuSubtractMoney,function
	.thumb_func
BuyMenuSubtractMoney:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x26
	bl	IncrementGameStat
	ldr	r6, .L328
	ldr	r0, [r6]
	mov	r5, #0xa4
	lsl	r5, r5, #0x2
	add	r0, r0, r5
	ldr	r1, .L328+0x4
	ldr	r1, [r1, #0x8]
	bl	RemoveMoney
	mov	r0, #0xf8
	bl	PlaySE
	ldr	r0, [r6]
	add	r0, r0, r5
	bl	GetMoney
	add	r1, r0, #0
	mov	r0, #0x0
	mov	r2, #0x0
	bl	PrintMoneyAmountInMoneyBox
	ldr	r1, .L328+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L328+0xc
	str	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L329:
	.align	2, 0
.L328:
	.word	gSaveBlock1Ptr
	.word	sShopData
	.word	gTasks
	.word	Task_ReturnToItemListAfterItemPurchase
.Lfe49:
	.size	 BuyMenuSubtractMoney,.Lfe49-BuyMenuSubtractMoney
	.align	2, 0
	.type	 Task_ReturnToItemListAfterItemPurchase,function
	.thumb_func
Task_ReturnToItemListAfterItemPurchase:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L333
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L332	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L331	@cond_branch
.L332:
	mov	r0, #0x5
	bl	PlaySE
	add	r0, r4, #0
	bl	BuyMenuReturnToItemList
.L331:
	pop	{r4}
	pop	{r0}
	bx	r0
.L334:
	.align	2, 0
.L333:
	.word	gMain
.Lfe50:
	.size	 Task_ReturnToItemListAfterItemPurchase,.Lfe50-Task_ReturnToItemListAfterItemPurchase
	.align	2, 0
	.type	 BuyMenuReturnToItemList,function
	.thumb_func
BuyMenuReturnToItemList:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r5, r1, #0x3
	ldr	r6, .L337
	add	r4, r5, r6
	mov	r0, #0x2
	mov	r1, #0x0
	bl	ClearDialogWindowAndFrameToTransparent
	ldrb	r0, [r4, #0xe]
	mov	r1, #0x1
	bl	BuyMenuPrintCursor
	mov	r0, #0x0
	bl	RecolorItemDescriptionBox
	mov	r0, #0x4
	bl	PutWindowTilemap
	mov	r0, #0x5
	bl	PutWindowTilemap
	ldr	r0, .L337+0x4
	ldrb	r1, [r0, #0x16]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L336	@cond_branch
	mov	r0, #0x6
	bl	PutWindowTilemap
.L336:
	mov	r0, #0x0
	bl	ScheduleBgCopyTilemapToVram
	bl	BuyMenuAddScrollIndicatorArrows
	add	r0, r6, #0
	sub	r0, r0, #0x8
	add	r0, r5, r0
	ldr	r1, .L337+0x8
	str	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L338:
	.align	2, 0
.L337:
	.word	gTasks+0x8
	.word	sShopData
	.word	Task_BuyMenu
.Lfe51:
	.size	 BuyMenuReturnToItemList,.Lfe51-BuyMenuReturnToItemList
	.align	2, 0
	.type	 ExitBuyMenu,function
	.thumb_func
ExitBuyMenu:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L340
	ldr	r0, .L340+0x4
	str	r0, [r1]
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r1, .L340+0x8
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	ldr	r1, .L340+0xc
	str	r1, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L341:
	.align	2, 0
.L340:
	.word	gFieldCallback
	.word	MapPostLoadHook_ReturnToShopMenu
	.word	gTasks
	.word	Task_ExitBuyMenu
.Lfe52:
	.size	 ExitBuyMenu,.Lfe52-ExitBuyMenu
	.align	2, 0
	.type	 Task_ExitBuyMenu,function
	.thumb_func
Task_ExitBuyMenu:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L344
	add	r2, r0, r1
	ldr	r0, .L344+0x4
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L343	@cond_branch
	ldrb	r0, [r2, #0xe]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	bl	BuyMenuFreeMemory
	ldr	r0, .L344+0x8
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L343:
	pop	{r4}
	pop	{r0}
	bx	r0
.L345:
	.align	2, 0
.L344:
	.word	gTasks+0x8
	.word	gPaletteFade
	.word	CB2_ReturnToField
.Lfe53:
	.size	 Task_ExitBuyMenu,.Lfe53-Task_ExitBuyMenu
	.align	2, 0
	.type	 DebugFunc_PrintPurchaseDetails,function
	.thumb_func
DebugFunc_PrintPurchaseDetails:
	bx	lr
.Lfe54:
	.size	 DebugFunc_PrintPurchaseDetails,.Lfe54-DebugFunc_PrintPurchaseDetails
	.align	2, 0
	.type	 DebugFunc_PrintShopMenuHistoryBeforeClearMaybe,function
	.thumb_func
DebugFunc_PrintShopMenuHistoryBeforeClearMaybe:
	bx	lr
.Lfe55:
	.size	 DebugFunc_PrintShopMenuHistoryBeforeClearMaybe,.Lfe55-DebugFunc_PrintShopMenuHistoryBeforeClearMaybe
	.align	2, 0
	.globl	RecordItemTransaction
	.type	 RecordItemTransaction,function
	.thumb_func
RecordItemTransaction:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	ldr	r1, .L360
	ldrb	r2, [r1, #0xa]
	cmp	r2, r5
	bne	.L349	@cond_branch
	add	r4, r1, #0
	b	.L350
.L361:
	.align	2, 0
.L360:
	.word	sHistory
.L349:
	ldrb	r0, [r1, #0x16]
	cmp	r0, r5
	bne	.L351	@cond_branch
	add	r4, r1, #0
	add	r4, r4, #0xc
	b	.L350
.L351:
	add	r4, r1, #0
	add	r4, r4, #0xc
	cmp	r2, #0
	bne	.L353	@cond_branch
	add	r4, r1, #0
.L353:
	strb	r5, [r4, #0xa]
.L350:
	ldrh	r0, [r4, #0x4]
	cmp	r0, #0
	beq	.L355	@cond_branch
	mov	r0, #0x1
	strb	r0, [r4, #0x9]
.L355:
	strh	r3, [r4, #0x4]
	ldrh	r1, [r4, #0x6]
	ldr	r0, .L362
	cmp	r1, r0
	bhi	.L356	@cond_branch
	add	r0, r6, r1
	strh	r0, [r4, #0x6]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L362+0x4
	cmp	r0, r1
	bls	.L356	@cond_branch
	strh	r1, [r4, #0x6]
.L356:
	ldr	r1, [r4]
	ldr	r0, .L362+0x8
	cmp	r1, r0
	bhi	.L358	@cond_branch
	add	r0, r3, #0
	bl	ItemId_GetPrice
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	sub	r1, r5, #0x1
	asr	r0, r0, r1
	mov	r1, r0
	mul	r1, r1, r6
	ldr	r0, [r4]
	add	r0, r0, r1
	str	r0, [r4]
	ldr	r1, .L362+0xc
	cmp	r0, r1
	bls	.L358	@cond_branch
	str	r1, [r4]
.L358:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L363:
	.align	2, 0
.L362:
	.word	0x3e6
	.word	0x3e7
	.word	0xf423e
	.word	0xf423f
.Lfe56:
	.size	 RecordItemTransaction,.Lfe56-RecordItemTransaction
	.align	2, 0
	.type	 RecordTransactionForQuestLog,function
	.thumb_func
RecordTransactionForQuestLog:
	push	{r4, lr}
	ldr	r4, .L367
	ldrb	r0, [r4, #0xa]
	cmp	r0, #0
	beq	.L365	@cond_branch
	add	r0, r0, #0x24
	add	r1, r4, #0
	bl	SetQuestLogEvent
.L365:
	ldrb	r0, [r4, #0x16]
	cmp	r0, #0
	beq	.L366	@cond_branch
	add	r0, r0, #0x24
	add	r1, r4, #0
	add	r1, r1, #0xc
	bl	SetQuestLogEvent
.L366:
	pop	{r4}
	pop	{r0}
	bx	r0
.L368:
	.align	2, 0
.L367:
	.word	sHistory
.Lfe57:
	.size	 RecordTransactionForQuestLog,.Lfe57-RecordTransactionForQuestLog
	.align	2, 0
	.globl	CreatePokemartMenu
	.type	 CreatePokemartMenu,function
	.thumb_func
CreatePokemartMenu:
	push	{r4, lr}
	bl	SetShopItemsForSale
	mov	r0, #0x0
	bl	CreateShopMenu
	ldr	r0, .L370
	bl	SetShopMenuCallback
	bl	DebugFunc_PrintShopMenuHistoryBeforeClearMaybe
	ldr	r4, .L370+0x4
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x18
	bl	memset
	ldr	r0, .L370+0x8
	ldrb	r0, [r0, #0x14]
	strb	r0, [r4, #0x8]
	strb	r0, [r4, #0x14]
	pop	{r4}
	pop	{r0}
	bx	r0
.L371:
	.align	2, 0
.L370:
	.word	ScriptContext_Enable
	.word	sHistory
	.word	gMapHeader
.Lfe58:
	.size	 CreatePokemartMenu,.Lfe58-CreatePokemartMenu
	.align	2, 0
	.globl	CreateDecorationShop1Menu
	.type	 CreateDecorationShop1Menu,function
	.thumb_func
CreateDecorationShop1Menu:
	push	{lr}
	bl	SetShopItemsForSale
	mov	r0, #0x2
	bl	CreateShopMenu
	ldr	r0, .L373
	bl	SetShopMenuCallback
	pop	{r0}
	bx	r0
.L374:
	.align	2, 0
.L373:
	.word	ScriptContext_Enable
.Lfe59:
	.size	 CreateDecorationShop1Menu,.Lfe59-CreateDecorationShop1Menu
	.align	2, 0
	.globl	CreateDecorationShop2Menu
	.type	 CreateDecorationShop2Menu,function
	.thumb_func
CreateDecorationShop2Menu:
	push	{lr}
	bl	SetShopItemsForSale
	mov	r0, #0x3
	bl	CreateShopMenu
	ldr	r0, .L376
	bl	SetShopMenuCallback
	pop	{r0}
	bx	r0
.L377:
	.align	2, 0
.L376:
	.word	ScriptContext_Enable
.Lfe60:
	.size	 CreateDecorationShop2Menu,.Lfe60-CreateDecorationShop2Menu
.text
	.align	2, 0 @ Don't pad with nop

