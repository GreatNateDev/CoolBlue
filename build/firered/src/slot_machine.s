@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sSlotMachineState,object
	.size	 sSlotMachineState,4
sSlotMachineState:
	.word	0x0
	.align	2, 0
	.type	 sSlotMachineGfxManager,object
	.size	 sSlotMachineGfxManager,4
sSlotMachineGfxManager:
	.word	0x0
	.section .rodata
	.type	 sSecondReelBiasCheckIndices,object
sSecondReelBiasCheckIndices:
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x6
	.byte	0x3
	.byte	0x6
	.byte	0x1
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0x4
	.byte	0x7
	.byte	0x2
	.byte	0x5
	.byte	0x2
	.byte	0x8
	.byte	0x5
	.byte	0x8
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x8
	.byte	0x4
	.byte	0x8
	.byte	0x2
	.byte	0x4
	.byte	0x2
	.byte	0x6
	.byte	0x4
	.byte	0x6
	.size	 sSecondReelBiasCheckIndices,30
	.type	 sThirdReelBiasCheckIndices,object
	.size	 sThirdReelBiasCheckIndices,15
sThirdReelBiasCheckIndices:
	.byte	0x0
	.byte	0x3
	.byte	0x6
	.byte	0x1
	.byte	0x4
	.byte	0x7
	.byte	0x2
	.byte	0x5
	.byte	0x8
	.byte	0x0
	.byte	0x4
	.byte	0x8
	.byte	0x2
	.byte	0x4
	.byte	0x6
	.type	 sRowAttributes,object
	.size	 sRowAttributes,20
sRowAttributes:
	.byte	0x0
	.byte	0x4
	.byte	0x8
	.byte	0x3
	.byte	0x0
	.byte	0x3
	.byte	0x6
	.byte	0x2
	.byte	0x1
	.byte	0x4
	.byte	0x7
	.byte	0x1
	.byte	0x2
	.byte	0x5
	.byte	0x8
	.byte	0x2
	.byte	0x2
	.byte	0x4
	.byte	0x6
	.byte	0x3
	.align	1, 0
	.type	 sReelBiasChances,object
sReelBiasChances:
	.short	0x1fa1
	.short	0x2eab
	.short	0x3630
	.short	0x39f3
	.short	0x3bd4
	.short	0x3bfc
	.short	0x49
	.short	0x1f97
	.short	0x2ea2
	.short	0x3627
	.short	0x39e9
	.short	0x3bca
	.short	0x3bf8
	.short	0x49
	.short	0x1f91
	.short	0x2e9b
	.short	0x3620
	.short	0x39e3
	.short	0x3bc4
	.short	0x3bf4
	.short	0x49
	.short	0x1f87
	.short	0x2e92
	.short	0x3617
	.short	0x39d9
	.short	0x3bba
	.short	0x3bef
	.short	0x50
	.short	0x1f7f
	.short	0x2e89
	.short	0x360e
	.short	0x39d1
	.short	0x3bb2
	.short	0x3bea
	.short	0x50
	.short	0x1fc9
	.short	0x2efc
	.short	0x3696
	.short	0x3a63
	.short	0x3c49
	.short	0x3c8b
	.short	0x73
	.size	 sReelBiasChances,84
	.type	 sReelIconAnimByReelAndPos,object
	.size	 sReelIconAnimByReelAndPos,63
sReelIconAnimByReelAndPos:
	.byte	0x0
	.byte	0x3
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0x6
	.byte	0x2
	.byte	0x5
	.byte	0x0
	.byte	0x6
	.byte	0x3
	.byte	0x1
	.byte	0x4
	.byte	0x2
	.byte	0x6
	.byte	0x0
	.byte	0x5
	.byte	0x2
	.byte	0x1
	.byte	0x6
	.byte	0x2
	.byte	0x0
	.byte	0x5
	.byte	0x4
	.byte	0x3
	.byte	0x1
	.byte	0x5
	.byte	0x4
	.byte	0x3
	.byte	0x2
	.byte	0x5
	.byte	0x4
	.byte	0x3
	.byte	0x0
	.byte	0x5
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.byte	0x6
	.byte	0x5
	.byte	0x3
	.byte	0x4
	.byte	0x0
	.byte	0x3
	.byte	0x6
	.byte	0x5
	.byte	0x2
	.byte	0x3
	.byte	0x6
	.byte	0x5
	.byte	0x2
	.byte	0x3
	.byte	0x5
	.byte	0x6
	.byte	0x2
	.byte	0x3
	.byte	0x5
	.byte	0x6
	.byte	0x2
	.byte	0x3
	.byte	0x5
	.byte	0x6
	.byte	0x1
	.align	1, 0
	.type	 sPayoutTable,object
sPayoutTable:
	.short	0x0
	.short	0x2
	.short	0x6
	.short	0x8
	.short	0xf
	.short	0x64
	.short	0x12c
	.size	 sPayoutTable,14
	.align	1, 0
	.type	 sReelIcons_Pal,object
sReelIcons_Pal:
	.short	0x7fff
	.short	0x2108
	.short	0x3df
	.short	0x2bf
	.short	0x7fde
	.short	0x6bdf
	.short	0x4f5e
	.short	0x37d
	.short	0x318c
	.short	0x1590
	.short	0x1bf
	.short	0xfb
	.short	0x2da
	.short	0x737b
	.short	0x0
	.short	0x0
	.short	0x7fef
	.short	0x2108
	.short	0x7fde
	.short	0x13e
	.short	0x119
	.short	0x5f3f
	.short	0x737b
	.short	0x0
	.short	0x77bf
	.short	0x94
	.short	0xdf9
	.short	0x3b7f
	.short	0x14f
	.short	0x3df
	.short	0x33c
	.short	0x15f4
	.short	0x47ee
	.short	0x2108
	.short	0x1f
	.short	0x7fff
	.short	0x21f
	.short	0x33f
	.short	0x7c00
	.short	0x7e00
	.short	0x7f20
	.short	0x27b3
	.short	0x7339
	.short	0x1b
	.short	0x260
	.short	0x4a10
	.short	0x5e94
	.short	0x16
	.short	0x727f
	.short	0x2107
	.short	0x6bdf
	.short	0x3f5e
	.short	0x573f
	.short	0x3abf
	.short	0x2e75
	.short	0x7fde
	.short	0x159a
	.short	0x737b
	.short	0x4e52
	.short	0x7ebd
	.short	0x5a1e
	.short	0x3538
	.short	0x6132
	.short	0x7e19
	.short	0x3b9f
	.short	0x2107
	.short	0x39cd
	.short	0x6738
	.short	0x77bc
	.short	0x7fde
	.short	0x56b4
	.short	0x217f
	.short	0x7d68
	.short	0x7f57
	.short	0x5f5f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sReelIcons_Pal,160
	.align	2, 0
	.type	 sReelIcons_Tiles,object
sReelIcons_Tiles:
	.word	0xe0010
	.word	-0xfffffe0
	.word	0x11111001
	.word	0x33011011
	.word	0x53101333
	.word	0x1df03555
	.word	0x130c1
	.word	0x33331122
	.word	0x19f03333
	.word	0x314260ad
	.word	-0xface200
	.word	0x3b201a
	.word	0x1005e00
	.word	0x1135555
	.word	0x445310
	.word	0x44431055
	.word	0x22231044
	.word	0x3f02242
	.word	0x55443222
	.word	0x8440100
	.word	0x22224444
	.word	0x33320140
	.word	0x13320a33
	.word	0x2003111
	.word	0x22020023
	.word	0x1fd0f4
	.word	0x50032036
	.word	0x63004401
	.word	0x130b4444
	.word	-0xfddddff
	.word	-0x7cffddfd
	.word	0x10c4e720
	.word	0x31090
	.word	0x3303100
	.word	0xab2310
	.word	0x3104303
	.word	0x314c0011
	.word	0x572053c0
	.word	0x107300f6
	.word	0x95507a
	.word	0x3901303
	.word	-0x7acbe200
	.word	0x11331f10
	.word	0x5a000111
	.word	0x695c1001
	.word	0x10038001
	.word	0x810130f
	.word	0x43011000
	.word	0xe10107f
	.word	0x1e00310
	.word	0x6b116311
	.word	0x1df00110
	.word	-0x2fe00f11
	.word	0x11631001
	.word	0x1f00340
	.word	-0x596efe10
	.word	-0xff0be05
	.word	-0xf000eff
	.word	0x33e3211f
	.word	0x28d293f0
	.word	0x31000100
	.word	0x31011310
	.word	0x13332010
	.word	0x31330300
	.word	0x183a1100
	.word	0x310031
	.word	0x10031007
	.word	-0x77ffce5f
	.word	0x77888888
	.word	0x777777
	.word	0x33336666
	.word	0x11136666
	.word	0x100370ca
	.word	0x66660f
	.word	0x1e00131e
	.word	0xc008c37
	.word	0x70631136
	.word	0x380f0003
	.word	-0x7999df9a
	.word	0x110fe00
	.word	0x51311001
	.word	0x18d0201
	.word	0x1101b000
	.word	0x2bea01a3
	.word	0x3301333
	.word	0x1014011a
	.word	0x3006710
	.word	0x11a1003f
	.word	0x70ff41f7
	.word	0x30631003
	.word	0x2b7f3001
	.word	0x3207777
	.word	-0x5e89ff5f
	.word	-0x78ffc5fe
	.word	0x300364c
	.word	0x6f101386
	.word	0x77737b20
	.word	0x101a3723
	.word	0x38888303
	.word	0x76002011
	.word	0x1ca00be
	.word	-0x78be9500
	.word	-0xf7ea7bf
	.word	-0xeff9f0
	.word	0x476119f1
	.word	0x19f03f22
	.word	-0x44bd978d
	.word	0x67b001f0
	.word	-0xffe0f11
	.word	-0x71fe4fff
	.word	0x1f076f0
	.word	0x1f001f0
	.word	0x3001f0d0
	.word	0x6300e1bc
	.word	-0x1ffffe78
	.word	0xc18800
	.word	0x2181e0
	.word	0x271e2500
	.word	0x7c100330
	.word	0x51c11d00
	.word	0x95417
	.word	0x3009203
	.word	0x22080022
	.word	-0x6662fe6e
	.word	0x222cc222
	.word	0x6a640327
	.word	0x4003002c
	.word	0x3009049
	.word	0x22060029
	.word	0x29d9990d
	.word	0x1f1022
	.word	0x300721a
	.word	-0x77ef3e00
	.word	-0x7773ff18
	.word	-0x7dfffcf2
	.word	0x72000e18
	.word	0x3106e00
	.word	-0x29ff38a5
	.word	0x87431c
	.word	-0x6e6f2fff
	.word	0x20c00380
	.word	0x224d0017
	.word	0x22784229
	.word	0x7e12002c
	.word	0x27722722
	.word	0x2200aa22
	.word	0x2bbb9222
	.word	0x1bb22c2
	.word	-0x46468dd5
	.word	0xab222a
	.word	0x2292001e
	.word	0x22927842
	.word	-0x3dfb81ee
	.word	0x72277222
	.word	0x22aa7900
	.word	-0x444dd400
	.word	-0x444dd865
	.word	-0x5dddf046
	.word	0x5c800d9b
	.word	0x1790ff93
	.word	-0x7f7efe10
	.word	-0x4ddd36ff
	.word	-0xe670000
	.word	0x14081c2
	.word	0x9c222b
	.word	0x17f09911
	.word	-0xffe0f04
	.word	-0xffe0fff
	.word	0x6001f001
	.word	0x3a008001
	.word	0x3001800
	.word	0x11001f0
	.word	0x18e71008
	.word	-0xfe80f0e
	.word	-0x4efe0fff
	.word	0x281808b
	.word	0x4c10a
	.word	0x10222711
	.word	0x77216c01
	.word	-0x26dd8900
	.word	0x4c274444
	.word	0x74490144
	.word	-0x68bbbbb9
	.word	0x424c0181
	.word	0x22cc018c
	.word	0x1172
	.word	0x2200011e
	.word	0x72127777
	.word	0x9d4444
	.word	-0x3bbb6bb9
	.word	0x74444479
	.word	-0x4ea90f10
	.word	-0x1f0c3e75
	.word	0x7ddd7701
	.word	0x77770049
	.word	-0x6883b967
	.word	-0x3effa99a
	.word	0x10565697
	.word	0x20555691
	.word	0x3006900
	.word	0x554661
	.word	0x444600c1
	.word	0x77ddd795
	.word	0x77009965
	.word	0x79666577
	.word	0x6565c7
	.word	0x65551c79
	.word	0x65550119
	.word	0x55009605
	.word	0x3001665
	.word	-0x180c5ee4
	.word	0x1f001f0
	.word	0x66c105f1
	.word	0x1f01f46
	.word	0x663f0100
	.word	-0xfa4fbe4
	.word	-0xffe0fa4
	.word	-0xffe0fff
	.word	0x1f0f301
	.word	0x1f001f0
	.word	-0x6666dfaa
	.word	-0x643b660e
	.word	0x1d0140ab
	.word	0x416e03
	.word	-0x78fabbfa
	.word	-0x5efd2cfd
	.word	-0x1effff25
	.word	0x42f700b1
	.word	0xde22480
	.word	0x1f249100
	.word	-0x4dff6f00
	.word	-0x443eee05
	.word	0xc1441b
	.word	0x1411d111
	.word	0x1141fb44
	.word	0x1f224300
	.word	-0x3333662f
	.word	0xc94099
	.word	0x19999c67
	.word	0x119911
	.word	-0x33e3f33f
	.word	-0x3eeee634
	.word	0x149ccc00
	.word	0x11c99ccc
	.word	-0x6633ec2f
	.word	-0x66e4fe67
	.word	0x410219
	.word	0x7050f103
	.word	0xe102e11
	.word	0x310
	.word	-0x569cff43
	.word	0x317310
	.word	-0xcface8d
	.word	0x7200a1ad
	.word	0xad05a0
	.word	-0x2ffff900
	.word	0x1b2224
	.word	0x1bb222b1
	.word	-0x44442be
	.word	-0x44e5cc00
	.word	-0x4e1bbdf
	.word	0x11220021
	.word	-0x15dd0eef
	.word	-0x24bf2e23
	.word	-0x442cdaf7
	.word	0x249101fb
	.word	0x101bbb00
	.word	0xdfbb224
	.word	-0x44defde
	.word	-0x22fcefff
	.word	0x7011bbb
	.word	0x1d1b1a3
	.word	0x20f405a3
	.word	0x7f03007f
	.word	-0xd04ba6f
	.word	-0x3ffe0f9c
	.word	-0x6b78e9ff
	.word	0x301a0a3
	.word	0xdaadd
	.word	0x17f0d111
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0x1cfe0fff
	.word	-0xefe0f5d
	.word	-0x12fe0f21
	.word	0x342201f0
	.word	0x6718737
	.word	0x1103100b
	.word	0x380300
	.word	0x10030051
	.word	0x2a0807
	.word	0x7801310
	.word	0x310012a3
	.word	0x53112255
	.word	0x11226402
	.word	0x435644
	.word	0xa82214
	.word	0x20001303
	.word	0x110f1912
	.word	0x34001000
	.word	0x66100133
	.word	0x18211633
	.word	0x10163655
	.word	0x15d8037
	.word	0x1bd3300
	.word	0x34042288
	.word	0x38330320
	.word	0x11fb43
	.word	0x917877
	.word	0x1087162f
	.word	0x22533703
	.word	0x55286331
	.word	0x23030026
	.word	0x31220300
	.word	0x12560033
	.word	0x12661120
	.word	0x61085310
	.word	0x10351001
	.word	0x65551323
	.word	0x51216618
	.word	0x7100300
	.word	0x666655
	.word	0x21166621
	.word	0x13516610
	.word	0x3122100a
	.word	0x11d0015
	.word	-0x28e96ce0
	.word	0x6f009720
	.word	0x710300a1
	.word	-0x2d08fcd0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x3862b6ff
	.word	-0x548eeb10
	.word	-0xfe000ef
	.word	0x1d4017
	.word	0x1fff3239
	.word	0x1ff23ef0
	.word	-0x14fce44f
	.word	0x6b00a0bb
	.word	-0x1efccf02
	.word	-0xeffff41
	.word	0x1000fb00
	.word	0x1000efbf
	.word	0x111e01fb
	.word	-0x10144401
	.word	0x330bb
	.word	-0x10044442
	.word	0x111eeffe
	.word	0x11aaee04
	.word	-0x10fc65ef
	.word	0x17027179
	.word	0x1ffbbb11
	.word	-0x40e5ffef
	.word	-0xfcff80
	.word	-0x1444401
	.word	-0xfd11ef
	.word	-0x155eee42
	.word	-0x1584fb02
	.word	-0x6e88eefb
	.word	-0x7dff44e7
	.word	0x6a0300eb
	.word	0x1069001e
	.word	0xb00ef03
	.word	-0x40fcff05
	.word	-0x146ff5d
	.word	0x10007900
	.word	0x118600ef
	.word	0x104beb
	.word	0xef101e
	.word	0x340ee8f
	.word	0x11019310
	.word	0x11177779
	.word	0x615b7771
	.word	-0x11e2ef00
	.word	-0x232ee2
	.word	-0x2b31ff11
	.word	-0x3bb200ef
	.word	0x4d281100
	.word	0x190c0a44
	.word	0x111d2050
	.word	-0x231effef
	.word	-0x3b1111ef
	.word	-0x10ff0012
	.word	-0x4ee002bc
	.word	0x3d011d44
	.word	0x6700e110
	.word	0x7b100b11
	.word	0xbe2c11
	.word	0x310f00b
	.word	0x1ff39710
	.word	0x1f0
	.word	-0xa21332f
	.word	-0x23fe8f01
	.word	0x1f047f0
	.word	0x16001f0
	.size	 sReelIcons_Tiles,1592
	.align	1, 0
	.type	 sClefairy_Pal,object
sClefairy_Pal:
	.short	0x0
	.short	0x2bd
	.short	0x39d3
	.short	0x673e
	.short	0x2d6f
	.short	0x529b
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x11fb
	.short	0x133f
	.short	0x179
	.size	 sClefairy_Pal,32
	.align	2, 0
	.type	 sClefairy_Tiles,object
sClefairy_Tiles:
	.word	0xc0010
	.word	-0xfffffc1
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x1efe0fff
	.word	0x1f001f0
	.word	0x111101b0
	.word	0x300d111
	.word	0x320dd40
	.word	0x11d22222
	.word	0x53012442
	.word	0x33344211
	.word	0x3302111
	.word	-0x222ff
	.word	-0x200022e3
	.word	-0x20fffa00
	.word	0x2222fd11
	.word	0x3322dd
	.word	0x53232233
	.word	0x23233332
	.word	0x10332331
	.word	0x11370001
	.word	0x3e10dddd
	.word	0x2d111100
	.word	0x35112222
	.word	0x11240b42
	.word	0x3104333
	.word	-0xffcdfee
	.word	0x1b08071
	.word	0x33521221
	.word	0xc522521
	.word	0x34521133
	.word	0x73000700
	.word	0x33043342
	.word	0x22333411
	.word	-0x22ccfd00
	.word	0x4004442
	.word	0x33333222
	.word	0x320100
	.word	0x32232332
	.word	0x52234334
	.word	0x25333314
	.word	0x30231020
	.word	0x253317
	.word	0x25331221
	.word	0x43331252
	.word	0x6f002560
	.word	0x24330700
	.word	0x13332211
	.word	0x10331143
	.word	-0xfbbbcfd
	.word	0x901c07f
	.word	0x3332dddd
	.word	-0xfcf0
	.word	0x5f050310
	.word	0x2ffd1153
	.word	0x2d0f00
	.word	0x244138d7
	.word	0x6430d310
	.word	0x22420170
	.word	0x23242122
	.word	0x11122c00
	.word	0x1f202111
	.word	0xdf2324
	.word	0x1dff03
	.word	0x635ff03
	.word	0x331ffff5
	.word	0xf00f2
	.word	0x147f421c
	.word	0x7ff01221
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf04fe10
	.word	-0xefe0fff
	.word	-0xe00ae01
	.word	-0x64eecc05
	.word	0x1f5ff61
	.word	0x11fbd1db
	.word	0x21ff519b
	.word	0x1111fbf1
	.word	0x71f0ee9b
	.word	-0x4de003f
	.word	0x1fb3132
	.word	0x11fb51ef
	.word	-0xfebea1
	.word	-0xef7ff23
	.word	0x21fb71fb
	.word	0x72f301ff
	.word	0x1fb4123
	.word	0x33fb61ef
	.word	0x1d130014
	.word	-0xe800e17
	.word	0x5fff41ff
	.word	0x332f0300
	.word	0x4440ff81
	.word	0x3335ff91
	.word	0x55435333
	.word	0x53345503
	.word	-0xecaddde
	.word	0x5ff01ff
	.word	0x33fffff5
	.word	0x44ff71f2
	.word	-0xf00000f
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x7efe0fff
	.word	0x2dd1ffc3
	.word	0x52221111
	.word	0x2116ff11
	.word	0x3003344
	.word	0x718b0335
	.word	0x221722ff
	.word	-0xefeddde
	.word	0x31fff133
	.word	0x18f200ff
	.word	0x1222511
	.word	0x33ff110f
	.word	0x33261244
	.word	0x25030053
	.word	-0x2f000fdc
	.word	0x5400217f
	.word	0x42411135
	.word	0x62422133
	.word	0x1030235
	.word	0x533322f7
	.word	0x11330740
	.word	0x31532ddd
	.word	0x525335e2
	.word	0x32810312
	.word	0x3533230c
	.word	0x533223
	.word	0x900850c
	.word	0x45533233
	.word	0x1246702
	.word	0x245323eb
	.word	0x1252fb03
	.word	0x103e0235
	.word	-0x63ff73f9
	.word	-0xbcaccef
	.word	0x2dffe17f
	.word	0x1245e33
	.word	-0xccaa01
	.word	-0x3e74fe
	.word	-0x3ddc96fe
	.word	0x752fb11
	.word	0x55522555
	.word	-0x77bd006f
	.word	0x23556700
	.word	0x25ff0325
	.word	0x530133ff
	.word	0x52331f25
	.word	0x120011d2
	.word	-0xf000e01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0dd01
	.word	0x322fff3
	.word	0x53f301ff
	.word	-0xfcdb01
	.word	-0xcebd81
	.word	-0x5ff03ef
	.word	0xf11fbd1
	.word	0x3a10e310
	.word	-0x45ccca7
	.word	0x13930322
	.word	-0xfebbb69
	.word	-0x2c5c8f
	.word	0x52ff7342
	.word	-0x8ecddcc
	.word	0x25bfff23
	.word	-0x44eab01
	.word	-0xaee7af0
	.word	-0x17fc006d
	.word	0x43780330
	.word	0x7023202
	.word	0xf040320
	.word	0x1a125533
	.word	-0xbabbdcd
	.word	0x4dffe37f
	.word	0x10ddef01
	.word	0x10ffff32
	.word	0x112fff03
	.word	0x2fff2cfd
	.word	0x31fd0f00
	.word	0x35ff85bd
	.word	0x33550033
	.word	0x33422423
	.word	0x55002253
	.word	0x52f23332
	.word	-0x57edbbbf
	.word	0x23ff21
	.word	0x30053f0
	.word	0x432535
	.word	0x435235f2
	.word	0x54335412
	.word	0x4445120f
	.word	0x13130125
	.word	-0xf000eef
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x4102ff21
	.word	0x1411dd44
	.word	0x44030041
	.word	-0x2b0cf966
	.word	0xe024d
	.word	0x700dd07
	.word	-0x5802bf2f
	.word	-0x22220001
	.word	0x651dffff
	.word	0xe0011
	.word	0x5112212
	.word	-0x682dd2
	.word	0x1105308e
	.word	0x7801d11
	.word	0x7fc071f0
	.word	-0x22ddd7bc
	.word	0x324eb01
	.word	0x32114368
	.word	0x11324300
	.word	0x11342341
	.word	0xb028054
	.word	-0x22bbbaac
	.word	0xf55452d
	.word	0x1422222f
	.word	-0x5dc7ced
	.word	0x16020700
	.word	0x3104370
	.word	0x13109303
	.word	0x44221132
	.word	0x438303a0
	.word	0x11234200
	.word	0x10233423
	.word	0x15324311
	.word	0x421145f7
	.word	0x5455a44
	.word	0x7ff01497
	.word	0x444ffe1
	.word	0x34002567
	.word	0x34544fff
	.word	0x7c4fffff
	.word	0xe40044
	.word	0x24ff91e5
	.word	0x330340f5
	.word	0x1a059d44
	.word	0x400ff33
	.word	0x1f46e103
	.word	0x31243
	.word	0x4333431d
	.word	0x423334ff
	.word	0x33331f0f
	.word	-0xcf4fc2c
	.word	-0xffe0f01
	.word	0x1f0fe01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x7f7101f0
	.word	0x41d10014
	.word	0x41dd1411
	.word	-0x2dffbbbf
	.word	-0x2b2ebeef
	.word	-0x5ab2eeef
	.word	0xddd301
	.word	0x9fdd107
	.word	-0xe0dfe
	.word	-0xe000e12
	.word	0x2d0730ff
	.word	0x71f00409
	.word	-0x56be8040
	.word	0x1214001
	.word	0x302214f
	.word	0x39013411
	.word	0xb004160
	.word	0x4554d401
	.word	0x3822dd55
	.word	-0xeeccbb
	.word	-0x14ea10ef
	.word	0x5e333343
	.word	0x54031034
	.word	-0x6ccaedea
	.word	-0x10ecf0fe
	.word	0x3028612
	.word	0x43241112
	.word	0x77018f01
	.word	0x12440344
	.word	0x45455511
	.word	0x7ff68303
	.word	0x4fff1c0
	.word	0x3422dde3
	.word	-0x61aad001
	.word	0x42220300
	.word	0x7622fff1
	.word	-0x5fefc9e
	.word	-0x4e55bc
	.word	0x1d031242
	.word	0x2ff0302
	.word	0x2d01f03
	.word	0x14ff0103
	.word	0xff61
	.size	 sClefairy_Tiles,1208
	.align	1, 0
	.type	 sDigits_Pal,object
sDigits_Pal:
	.short	0x0
	.short	0x2d8c
	.short	0x3ff
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x3e0
	.size	 sDigits_Pal,32
	.align	2, 0
	.type	 sDigits_Tiles,object
sDigits_Tiles:
	.word	0x28010
	.word	-0x3fffffe0
	.word	0x222001
	.word	-0x7f60fe00
	.word	-0x4feeefff
	.word	-0xfe0eff1
	.word	0x10017001
	.word	0x17f2f
	.word	-0xffcafd9
	.word	-0x2fcc0ff1
	.word	0x302f907f
	.word	0x1170ff8f
	.word	0x3ff07ff0
	.word	0xfd03fd0
	.word	-0x404ffe10
	.word	-0xf001030
	.word	-0x4efe0f41
	.word	-0xf504fc1
	.word	-0xffe0f81
	.word	-0xc08fc1
	.word	0x1f07ff1
	.word	-0x408e400f
	.word	0x1f0bff0
	.word	0x6f703ff0
	.word	-0xf800f08
	.word	-0xec00fff
	.word	0xfff03f
	.size	 sDigits_Tiles,108
	.align	2, 0
	.type	 sSpriteSheets,object
sSpriteSheets:
	.word	sReelIcons_Tiles
	.short	0xe00
	.short	0x0
	.word	sClefairy_Tiles
	.short	0xc00
	.short	0x1
	.word	sDigits_Tiles
	.short	0x280
	.short	0x2
	.size	 sSpriteSheets,24
	.align	2, 0
	.type	 sSpritePalettes,object
sSpritePalettes:
	.word	sReelIcons_Pal
	.short	0x0
	.space	2
	.word	sReelIcons_Pal+0x20
	.short	0x1
	.space	2
	.word	sReelIcons_Pal+0x40
	.short	0x2
	.space	2
	.word	sReelIcons_Pal+0x60
	.short	0x3
	.space	2
	.word	sReelIcons_Pal+0x80
	.short	0x4
	.space	2
	.word	sClefairy_Pal
	.short	0x5
	.space	2
	.word	sDigits_Pal
	.short	0x6
	.space	2
	.space	8
	.size	 sSpritePalettes,64
	.align	1, 0
	.type	 sReelIconPaletteTags,object
sReelIconPaletteTags:
	.short	0x2
	.short	0x2
	.short	0x0
	.short	0x0
	.short	0x2
	.short	0x4
	.short	0x3
	.size	 sReelIconPaletteTags,14
	.align	1, 0
	.type	 sReelIconAffineParams,object
sReelIconAffineParams:
	.short	0x120
	.short	0x11f
	.short	0x11e
	.short	0x11d
	.short	0x11c
	.short	0x11b
	.short	0x11a
	.short	0x119
	.short	0x118
	.short	0x117
	.short	0x116
	.short	0x115
	.short	0x114
	.short	0x113
	.short	0x112
	.short	0x111
	.short	0x110
	.short	0x10f
	.short	0x10e
	.short	0x10d
	.short	0x10c
	.short	0x10b
	.short	0x10a
	.short	0x109
	.short	0x108
	.short	0x107
	.short	0x106
	.short	0x105
	.short	0x104
	.short	0x103
	.short	0x102
	.short	0x101
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x100
	.short	0x101
	.short	0x102
	.short	0x103
	.short	0x104
	.short	0x105
	.short	0x106
	.short	0x107
	.short	0x108
	.short	0x109
	.short	0x10a
	.short	0x10b
	.short	0x10c
	.short	0x10d
	.short	0x10e
	.short	0x10f
	.short	0x110
	.short	0x111
	.short	0x112
	.short	0x113
	.short	0x114
	.short	0x115
	.short	0x116
	.short	0x117
	.short	0x118
	.short	0x119
	.short	0x11a
	.short	0x11b
	.short	0x11c
	.short	0x11d
	.short	0x11e
	.short	0x11f
	.short	0x120
	.size	 sReelIconAffineParams,192
	.type	 sReelIconBldY,object
sReelIconBldY:
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0x10
	.byte	0xf
	.byte	0xe
	.byte	0xd
	.byte	0xd
	.byte	0xc
	.byte	0xb
	.byte	0xa
	.byte	0xa
	.byte	0x9
	.byte	0x8
	.byte	0x7
	.byte	0x7
	.byte	0x6
	.byte	0x5
	.byte	0x4
	.byte	0x4
	.byte	0x3
	.byte	0x2
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x3
	.byte	0x4
	.byte	0x5
	.byte	0x6
	.byte	0x6
	.byte	0x7
	.byte	0x8
	.byte	0x9
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0xc
	.byte	0xc
	.byte	0xd
	.byte	0xe
	.byte	0xf
	.byte	0xf
	.byte	0xf
	.byte	0xf
	.byte	0xf
	.byte	0xf
	.size	 sReelIconBldY,96
	.align	2, 0
	.type	 sOamData_ReelIcons,object
	.size	 sOamData_ReelIcons,8
sOamData_ReelIcons:
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0xc
	.short	0x0
	.align	2, 0
	.type	 sAnimCmd_ReelIcon_7,object
sAnimCmd_ReelIcon_7:
	.short	0x0
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnimCmd_ReelIcon_7,8
	.align	2, 0
	.type	 sAnimCmd_ReelIcon_Rocket,object
sAnimCmd_ReelIcon_Rocket:
	.short	0x10
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnimCmd_ReelIcon_Rocket,8
	.align	2, 0
	.type	 sAnimCmd_ReelIcon_Pikachu,object
sAnimCmd_ReelIcon_Pikachu:
	.short	0x20
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnimCmd_ReelIcon_Pikachu,8
	.align	2, 0
	.type	 sAnimCmd_ReelIcon_Psyduck,object
sAnimCmd_ReelIcon_Psyduck:
	.short	0x30
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnimCmd_ReelIcon_Psyduck,8
	.align	2, 0
	.type	 sAnimCmd_ReelIcon_Cherries,object
sAnimCmd_ReelIcon_Cherries:
	.short	0x40
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnimCmd_ReelIcon_Cherries,8
	.align	2, 0
	.type	 sAnimCmd_ReelIcon_Magnemite,object
sAnimCmd_ReelIcon_Magnemite:
	.short	0x50
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnimCmd_ReelIcon_Magnemite,8
	.align	2, 0
	.type	 sAnimCmd_ReelIcon_Shellder,object
sAnimCmd_ReelIcon_Shellder:
	.short	0x60
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnimCmd_ReelIcon_Shellder,8
	.align	2, 0
	.type	 sAnimCmd_ReelIcon_Pikachu_2,object
sAnimCmd_ReelIcon_Pikachu_2:
	.short	0x20
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnimCmd_ReelIcon_Pikachu_2,8
	.align	2, 0
	.type	 sAnimCmd_ReelIcon_Psyduck_2,object
sAnimCmd_ReelIcon_Psyduck_2:
	.short	0x30
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnimCmd_ReelIcon_Psyduck_2,8
	.align	2, 0
	.type	 sAnimCmd_ReelIcon_Cherries_2,object
sAnimCmd_ReelIcon_Cherries_2:
	.short	0x40
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnimCmd_ReelIcon_Cherries_2,8
	.align	2, 0
	.type	 sAnimCmd_ReelIcon_Magnemite_2,object
sAnimCmd_ReelIcon_Magnemite_2:
	.short	0x50
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnimCmd_ReelIcon_Magnemite_2,8
	.align	2, 0
	.type	 sAnimCmd_ReelIcon_Shellder_2,object
sAnimCmd_ReelIcon_Shellder_2:
	.short	0x60
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnimCmd_ReelIcon_Shellder_2,8
	.align	2, 0
	.type	 sAnimTable_ReelIcons,object
sAnimTable_ReelIcons:
	.word	sAnimCmd_ReelIcon_7
	.word	sAnimCmd_ReelIcon_Rocket
	.word	sAnimCmd_ReelIcon_Pikachu
	.word	sAnimCmd_ReelIcon_Psyduck
	.word	sAnimCmd_ReelIcon_Cherries
	.word	sAnimCmd_ReelIcon_Magnemite
	.word	sAnimCmd_ReelIcon_Shellder
	.word	sAnimCmd_ReelIcon_Pikachu_2
	.word	sAnimCmd_ReelIcon_Psyduck_2
	.word	sAnimCmd_ReelIcon_Cherries_2
	.word	sAnimCmd_ReelIcon_Magnemite_2
	.word	sAnimCmd_ReelIcon_Shellder_2
	.size	 sAnimTable_ReelIcons,48
	.align	2, 0
	.type	 sAffineAnimCmd_ReelIcons_Unused,object
sAffineAnimCmd_ReelIcons_Unused:
	.short	0x100
	.short	0x100
	.byte	0x0
	.byte	0x1
	.space	2
	.short	0x7fff
	.space	6
	.size	 sAffineAnimCmd_ReelIcons_Unused,16
	.align	2, 0
	.type	 sAffineAnimTable_ReelIcons_Unused,object
sAffineAnimTable_ReelIcons_Unused:
	.word	sAffineAnimCmd_ReelIcons_Unused
	.size	 sAffineAnimTable_ReelIcons_Unused,4
	.align	2, 0
	.type	 sSpriteTemplate_ReelIcons,object
	.size	 sSpriteTemplate_ReelIcons,24
sSpriteTemplate_ReelIcons:
	.short	0x0
	.short	0x0
	.word	sOamData_ReelIcons
	.word	sAnimTable_ReelIcons
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sOamData_Digits,object
	.size	 sOamData_Digits,8
sOamData_Digits:
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sSpriteAnim_Digit0,object
sSpriteAnim_Digit0:
	.short	0x0
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Digit0,8
	.align	2, 0
	.type	 sSpriteAnim_Digit1,object
sSpriteAnim_Digit1:
	.short	0x2
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Digit1,8
	.align	2, 0
	.type	 sSpriteAnim_Digit2,object
sSpriteAnim_Digit2:
	.short	0x4
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Digit2,8
	.align	2, 0
	.type	 sSpriteAnim_Digit3,object
sSpriteAnim_Digit3:
	.short	0x6
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Digit3,8
	.align	2, 0
	.type	 sSpriteAnim_Digit4,object
sSpriteAnim_Digit4:
	.short	0x8
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Digit4,8
	.align	2, 0
	.type	 sSpriteAnim_Digit5,object
sSpriteAnim_Digit5:
	.short	0xa
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Digit5,8
	.align	2, 0
	.type	 sSpriteAnim_Digit6,object
sSpriteAnim_Digit6:
	.short	0xc
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Digit6,8
	.align	2, 0
	.type	 sSpriteAnim_Digit7,object
sSpriteAnim_Digit7:
	.short	0xe
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Digit7,8
	.align	2, 0
	.type	 sSpriteAnim_Digit8,object
sSpriteAnim_Digit8:
	.short	0x10
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Digit8,8
	.align	2, 0
	.type	 sSpriteAnim_Digit9,object
sSpriteAnim_Digit9:
	.short	0x12
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sSpriteAnim_Digit9,8
	.align	2, 0
	.type	 sAnimTable_Digits,object
sAnimTable_Digits:
	.word	sSpriteAnim_Digit0
	.word	sSpriteAnim_Digit1
	.word	sSpriteAnim_Digit2
	.word	sSpriteAnim_Digit3
	.word	sSpriteAnim_Digit4
	.word	sSpriteAnim_Digit5
	.word	sSpriteAnim_Digit6
	.word	sSpriteAnim_Digit7
	.word	sSpriteAnim_Digit8
	.word	sSpriteAnim_Digit9
	.size	 sAnimTable_Digits,40
	.align	2, 0
	.type	 sSpriteTemplate_Digits,object
	.size	 sSpriteTemplate_Digits,24
sSpriteTemplate_Digits:
	.short	0x2
	.short	0x6
	.word	sOamData_Digits
	.word	sAnimTable_Digits
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sOamData_Clefairy,object
	.size	 sOamData_Clefairy,8
sOamData_Clefairy:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x80
	.byte	0x0
	.byte	0x4
	.short	0x0
	.align	2, 0
	.type	 sAnimCmd_Clefairy_Neutral,object
sAnimCmd_Clefairy_Neutral:
	.short	0x0
	.byte	0x4
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnimCmd_Clefairy_Neutral,8
	.align	2, 0
	.type	 sAnimCmd_Clefairy_Spinning,object
sAnimCmd_Clefairy_Spinning:
	.short	0x0
	.byte	0x18
	.space	1
	.short	0x10
	.byte	0x18
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnimCmd_Clefairy_Spinning,12
	.align	2, 0
	.type	 sAnimCmd_Clefairy_Payout,object
sAnimCmd_Clefairy_Payout:
	.short	0x20
	.byte	0x1c
	.space	1
	.short	0x30
	.byte	0x1c
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnimCmd_Clefairy_Payout,12
	.align	2, 0
	.type	 sAnimCmd_Clefairy_Lose,object
sAnimCmd_Clefairy_Lose:
	.short	0x40
	.byte	0xc
	.space	1
	.short	0x50
	.byte	0xc
	.space	1
	.short	-0x2
	.byte	0x0
	.space	1
	.size	 sAnimCmd_Clefairy_Lose,12
	.align	2, 0
	.type	 sAnimTable_Clefairy,object
sAnimTable_Clefairy:
	.word	sAnimCmd_Clefairy_Neutral
	.word	sAnimCmd_Clefairy_Spinning
	.word	sAnimCmd_Clefairy_Payout
	.word	sAnimCmd_Clefairy_Lose
	.size	 sAnimTable_Clefairy,16
	.align	2, 0
	.type	 sSpriteTemplate_Clefairy,object
	.size	 sSpriteTemplate_Clefairy,24
sSpriteTemplate_Clefairy:
	.short	0x1
	.short	0x5
	.word	sOamData_Clefairy
	.word	sAnimTable_Clefairy
	.word	0x0
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.globl	sSlotMachineSetupTasks
	.align	2, 0
	.type	 sSlotMachineSetupTasks,object
sSlotMachineSetupTasks:
	.word	SlotsTask_GraphicsInit
	.word	SlotsTask_FadeOut
	.word	SlotsTask_UpdateLineStates
	.word	SlotsTask_ClefairyUpdateOnReelsStart
	.word	SlotsTask_StartClefairyDanceAndWinningLineFlash
	.word	SlotsTask_StopWinningLineFlashTask
	.word	SlotsTask_ClefairyFainted
	.word	SlotsTask_ClefairyNeutral
	.word	SlotsTask_UpdateCoinsDisplay
	.word	SlotsTask_MessageOutOfCoins
	.word	SlotsTask_AskQuitPlaying
	.word	SlotsTask_DestroyYesNoMenu
	.word	SlotsTask_PressReelButton
	.word	SlotsTask_ReleaseReelButtons
	.word	SlotsTask_ShowHelp
	.word	SlotsTask_HideHelp
	.size	 sSlotMachineSetupTasks,64
	.align	1, 0
	.type	 sBg_Pal,object
sBg_Pal:
	.short	0x0
	.short	0x18e7
	.short	0x739c
	.short	0x7fff
	.short	0x2bd
	.short	0xd38
	.short	0x179
	.short	0x133f
	.short	0x11fb
	.short	0x169f
	.short	0x7e47
	.short	0x7f74
	.short	0x3cc0
	.short	0x11
	.short	0x2d8c
	.short	0x0
	.short	0x6f7b
	.short	0x7fff
	.short	0x2bd
	.short	0x17f
	.short	0xbb
	.short	0x17f
	.short	0xbb
	.short	0x17f
	.short	0xbb
	.short	0x17f
	.short	0xbb
	.short	0x17f
	.short	0xbb
	.short	0x133f
	.short	0x13
	.short	0x0
	.short	0x0
	.short	0x7fff
	.short	0x6929
	.short	0x7eae
	.short	0x268e
	.short	0x27b3
	.short	0x17f
	.short	0x169f
	.short	0x13bf
	.short	0xbb
	.short	0x5ef7
	.short	0x4e73
	.short	0x3def
	.short	0x2d6b
	.short	0x2108
	.short	0x0
	.short	0x0
	.short	0x2bd
	.short	0x35b5
	.short	0x4e7b
	.short	0x2952
	.short	0x4218
	.short	0x1e1
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x11fb
	.short	0x133f
	.short	0x179
	.short	0x6f7b
	.short	0xfa
	.short	0x179
	.short	0x7fff
	.short	0x2bd
	.short	0x6000
	.short	0x116
	.short	0x116
	.short	0x1a0
	.short	0x1a0
	.short	0x7dea
	.short	0x27e
	.short	0x27e
	.short	0x2ac5
	.short	0x2ac5
	.short	0x0
	.size	 sBg_Pal,160
	.align	2, 0
	.type	 sBg_Tiles,object
sBg_Tiles:
	.word	0x114010
	.word	-0xfffffcd
	.word	0x44019001
	.word	-0xffe0fbc
	.word	0x120a001
	.word	-0x11fdff01
	.word	-0x11110bbc
	.word	-0x1110bc00
	.word	-0x66110b12
	.word	-0x610bff12
	.word	0x2222e9e9
	.word	-0xffddde
	.word	-0x11000001
	.word	0xeeeeee
	.word	-0x66666667
	.word	-0x6cccccc7
	.word	-0x66fcef80
	.word	-0x616ccc67
	.word	-0x16b7cccd
	.word	-0x11bbc380
	.word	-0x1111fc00
	.word	0x300954f
	.word	0x3e0044fe
	.word	0x4f3e004f
	.word	-0x22ffa040
	.word	-0x22220bbc
	.word	0xdddf44
	.word	-0x77220b23
	.word	-0x27720b23
	.word	0x5f50d840
	.word	-0x22222223
	.word	-0x77fd7778
	.word	0x33333888
	.word	-0x77fcef7d
	.word	-0x7ccc77ff
	.word	-0x27cccc73
	.word	-0x22bba070
	.word	-0x2222fc00
	.word	-0x2fcffb1
	.word	0x3e00b844
	.word	-0x6fc1ffb1
	.word	0x44cff05f
	.word	0x10e4aaff
	.word	0x1001d05f
	.word	0xaaaa6f
	.word	0x6c555501
	.word	-0x5fc90f5b
	.word	0x3df0bb3f
	.word	-0x4444c0d0
	.word	0x66bbbb03
	.word	0x10666666
	.word	-0x3ef80fd8
	.word	-0x63fff8d0
	.word	-0x61610b0c
	.word	-0x2b4ee17
	.word	0x5b215311
	.word	-0x31cf9cef
	.word	0x1e000120
	.word	-0xfd4eeb1
	.word	0x3b113321
	.word	-0x7b7f8af0
	.word	-0x2772720c
	.word	0x112b11fd
	.word	0x113b2133
	.word	0x228043
	.word	0xb114f1e
	.word	0x111321e0
	.word	0x443fc01b
	.word	0x44aaaaf4
	.word	-0x55555100
	.word	-0x55aa550c
	.word	-0x5aa5fe0c
	.word	0x5a5af4a5
	.word	-0x3df4ef5b
	.word	0x1b101310
	.word	-0x5acccca6
	.word	0x10350320
	.word	-0xf555acd
	.word	-0x55555afd
	.word	-0x55bbfab1
	.word	0x44faaa
	.word	0x3e004f32
	.word	0x3e004f5c
	.word	0x200b104f
	.word	0x441b0013
	.word	-0x4444ff0c
	.word	-0x444440bc
	.word	0x6600bbf4
	.word	-0x49940b45
	.word	0x386bf4b6
	.word	0xb10b66b
	.word	0x1b101310
	.word	0x40333336
	.word	0x63032063
	.word	0x366b6333
	.word	0x66660933
	.word	0x13006333
	.word	0x17506666
	.word	0x4fbbbb00
	.word	-0x44444bc
	.word	0x3200ab44
	.word	0x4f3e004f
	.word	0x104f3e00
	.word	-0xecdff5
	.word	-0x3eefe500
	.word	0x37003f0
	.word	0x3f08110
	.word	-0x290efc90
	.word	-0x33205e50
	.word	-0x20ce220f
	.word	-0x33333334
	.word	0x77777700
	.word	-0x330bbb89
	.word	-0x30bbff34
	.word	-0x330b3334
	.word	-0xbff3389
	.word	-0xb383884
	.word	-0x1e388384
	.word	0x13100b10
	.word	0x33371b10
	.word	0x3207333
	.word	0x73337300
	.word	0x7733377c
	.word	0x73332477
	.word	0x77771300
	.word	-0x3333e8b0
	.word	-0x33bbb0fe
	.word	0x44fccc
	.word	0xae4f32
	.word	0x3e004f3e
	.word	0x200b104f
	.word	0x661b0013
	.word	-0x994ff80
	.word	-0x9cc0001
	.word	0xfc3fff
	.word	0x35007
	.word	0x7f000f
	.word	0x3f012007
	.word	0x1008233
	.word	0x3fff3f3f
	.word	0x3f0740f3
	.word	0x10333f3f
	.word	0x101e409f
	.word	0x20120017
	.word	0x30033017
	.word	-0x40dfc00d
	.word	0x33661e40
	.word	0x6f35ffff
	.word	0x3c0f3
	.word	0x1b006f1e
	.word	0x77f306f
	.word	-0x90ccd
	.word	0x200300f3
	.word	-0x8f0fff9
	.word	0x7f900300
	.word	0x1301b00
	.word	0x1021003f
	.word	-0x13a05ff3
	.word	0x1f501300
	.word	0x330130
	.word	-0xc805fff
	.word	0x3f6f3eff
	.word	0x3906b00
	.word	0x63107f50
	.word	0x7ee0330
	.word	-0x100902
	.word	0x400360ef
	.word	0x363500f
	.word	-0x111001
	.word	0x180feff
	.word	0x50bf0f50
	.word	0x1200ee1f
	.word	0xf500180
	.word	0x3106310
	.word	0x6f782e00
	.word	0x3602e00
	.word	0x16f20f50
	.word	0x994444
	.word	-0x16bbbbb7
	.word	-0x16bbb662
	.word	-0x66111e8
	.word	0x31073f2
	.word	0x144f884
	.word	-0x7b02277c
	.word	-0xd022228
	.word	-0xbbbff8d
	.word	-0xbbbb661
	.word	0x491c9eef
	.word	0x3f00eff4
	.word	0x3101ff0
	.word	0x4f5af884
	.word	0x8f3f00
	.word	0x76a0103f
	.word	-0x5eb998fe
	.word	0x3465800
	.word	0x447746d9
	.word	0xb0084
	.word	-0x7bbbb9a8
	.word	0x58444655
	.word	0x1f105560
	.word	-0x777b78de
	.word	0x4d558455
	.word	0x45010055
	.word	0x10040044
	.word	0xe204503
	.word	-0xfe8f60
	.word	0x55330200
	.word	0x2233f5
	.word	0x2223f555
	.word	0x22223f55
	.word	0x3004464
	.word	0x33551c80
	.word	-0x1dddfc00
	.word	0x22555f0a
	.word	-0x1fcefde
	.word	0x8440310
	.word	-0x22e222ef
	.word	-0x22e2fcf0
	.word	0x1ddd13d1
	.word	-0x22fcefef
	.word	0x310fd
	.word	0x10ff410a
	.word	0x1dfffd03
	.word	0x7b04fd11
	.word	0x11dfff09
	.word	-0x5beaef
	.word	-0x56f8cfef
	.word	0xf10e00
	.word	0xe00fd16
	.word	0x1000dd11
	.word	-0x5fe00ed6
	.word	0x730111f
	.word	0x111e101d
	.word	0x1111dd1d
	.word	0x9100830
	.word	-0x5ee2f850
	.word	0xb42bfef
	.word	0x15030064
	.word	-0x6e5bdcbc
	.word	0x550180ef
	.word	-0x106e319d
	.word	0x44441ff0
	.word	0xb52ef91
	.word	-0x77b9fd00
	.word	-0x6bbbe1c0
	.word	-0x6b87fa17
	.word	0xe0fee9
	.word	0xebf109
	.word	-0x722227fd
	.word	-0x72f92708
	.word	0x48884448
	.word	0x11027f2
	.word	0x3f00ac9f
	.word	0x4f3f004f
	.word	-0x180ec100
	.word	-0x20bf0bbc
	.word	-0x7220c100
	.word	0x488ff448
	.word	0x101bf0d4
	.word	-0x36feb9fd
	.word	0x46d80146
	.word	0x300bf54
	.word	0x1034058
	.word	0x100320ab
	.word	0x10c31160
	.word	0x22f50003
	.word	0x2ef55622
	.word	0x55026622
	.word	0x5666eeff
	.word	0x55df0055
	.word	0x3105578
	.word	-0x34de3cef
	.word	0x5feed711
	.word	-0x11f39b
	.word	-0x19fe99ab
	.word	0x66661d40
	.word	0x1d441fc
	.word	0x41034069
	.word	0x11011079
	.word	0x71ddd94
	.word	0x11ddfff1
	.word	0x11ae01d1
	.word	0x65b801cb
	.word	0x500320d1
	.word	0x1fd129
	.word	-0x59cd20e5
	.word	0x110b02fe
	.word	0x310e9
	.word	0x10110209
	.word	0x11f6010a
	.word	0x2d00df7b
	.word	0x53200750
	.word	0xdd6440
	.word	0xf4b6146
	.word	0x64f66666
	.word	0x310d405
	.word	0x67d10b10
	.word	-0xa01ff52
	.word	0x10fa6c06
	.word	-0x2ff4effd
	.word	0x770f741f
	.word	0x5c7f777
	.word	0x10031034
	.word	0x6effd50b
	.word	0x653006f
	.word	0x310fb72
	.word	0x67d10b10
	.word	0x5300dd5f
	.word	0x10faf206
	.word	-0x2ff4effd
	.word	0x53007f1f
	.word	-0x32dfa41
	.word	0xb100310
	.word	-0x6cfc608f
	.word	0x3202c02
	.word	0x3406840
	.word	0x68666664
	.word	0x663f6684
	.word	0x52c80064
	.word	0x10bb1807
	.word	0x20e201
	.word	0x474420ac
	.word	-0x22bbfa00
	.word	0x1d48444
	.word	-0x2b7bb2b3
	.word	0x644dd4
	.word	0x10447e0b
	.word	0x23470058
	.word	0x2856f2db
	.word	0x67fb4343
	.word	0x82910ef
	.word	0x770300f9
	.word	0xb100300
	.word	0x1f303910
	.word	0x64646403
	.word	-0xf89899c
	.word	0x11001
	.word	0x47474747
	.word	0x66684864
	.word	-0x7bb7bc00
	.word	0x44864466
	.word	0x64440168
	.word	-0x77777bb8
	.word	0x5fab0066
	.word	-0x7982ef98
	.word	-0x3afffd00
	.word	0x101001b0
	.word	0x66576b04
	.word	0x5086ee12
	.word	0xd0084cf
	.word	0xe100310
	.word	0x300ef
	.word	0x48481044
	.word	-0x6f1070
	.word	0x6332d390
	.word	0x121332fd
	.word	0x3403500f
	.word	0x408bc26d
	.word	0x400df2b
	.word	0x146812f9
	.word	0x27d1277
	.word	-0x2e60fd99
	.word	-0x65fd01
	.word	0x39703140
	.word	0x7b008600
	.word	0x3409f40
	.word	-0x51eee3ff
	.word	0x4001f0fd
	.word	0x501f1001
	.word	-0x4f480ed5
	.word	-0x19ff7bff
	.word	0x40310ea
	.word	-0x7bfcd000
	.word	0x10440340
	.word	-0x77ffbbfd
	.word	-0x43434311
	.word	0x41cbccef
	.word	-0x2f82f35
	.word	-0x2d434332
	.word	-0x43fff800
	.word	-0x34656566
	.word	-0x3f565657
	.word	0x73007f0
	.word	0x78787a9a
	.word	-0x78cf7657
	.word	0x3007f087
	.word	0x56787807
	.word	-0x7878f3aa
	.word	0x7f06565
	.word	0x56560730
	.word	0x65343603
	.word	-0xfbcba9b
	.word	0x73007
	.word	-0x1bbcbcc
	.word	-0x1bcbcbd
	.word	-0x1bf80f69
	.word	0x2d0600df
	.word	-0x417e3cf0
	.word	-0x7e0bf80f
	.word	0x412f3157
	.word	0x2201406f
	.word	-0x2ddd1800
	.word	0x22ceef00
	.word	0x22effd22
	.word	-0xd2dd0de
	.word	-0x6622c1f7
	.word	0x1ce7504b
	.word	-0x18a4c1
	.word	-0x18afe070
	.word	0x1301ff0
	.word	0x1ff0e750
	.word	-0x18affed0
	.word	0x301ff0e0
	.word	0x22e60001
	.word	0x222dfee3
	.word	0x22dffe03
	.word	-0x3fd2d0de
	.word	-0x24feff64
	.word	-0x52e91ddc
	.word	0xd116d1
	.word	0xe10fd0a
	.word	0x72ff0380
	.word	0x25d8649e
	.word	-0xf3a79e2
	.word	0x30e8f601
	.word	-0x548adbc
	.word	0x32173980
	.word	-0x20fdfcc0
	.word	0x101d0340
	.word	0x10f8fd03
	.word	0x675703
	.word	0x707a089
	.word	-0x2000006a
	.word	0x479705ef
	.word	0x110f0067
	.word	0x14002a03
	.word	-0x62eaf900
	.word	-0x20f8ff41
	.word	-0x4f5feff0
	.word	0x46530730
	.word	0x1d00e40
	.word	0x1500d17a
	.word	-0x5ddc57f0
	.word	0x1fdc07
	.word	0x8b7df03
	.word	-0xcdae0f6
	.word	0x1d9013
	.word	0x371661
	.word	0x7400e003
	.word	0x6c003301
	.word	-0x2ee2000f
	.word	0x2b00bffd
	.word	0x102700f1
	.word	0x30007
	.word	0x26406184
	.word	0xf17f21
	.word	0x20031006
	.word	-0xefcbf4c
	.word	0x16df7327
	.word	0x7c61ff8b
	.word	0x424807f0
	.word	0x3a64bf08
	.word	0x69545964
	.word	0xf9b736
	.word	0x50b216af
	.word	0x30571001
	.word	0x30dfdd06
	.word	0x2800ffde
	.word	0x2a100770
	.word	-0x1aef2df0
	.word	0x77e06230
	.word	0xbb0a50
	.word	0x1701f177
	.word	0x740a621
	.word	0x202699d1
	.word	0x6751e8e1
	.word	0x2f871767
	.word	-0x2dcfe0f
	.word	0x1d4fffdf
	.word	-0x20eea5f9
	.word	-0x1eeec200
	.word	0x39106c19
	.word	0x314910fb
	.word	0x8b42d8
	.word	0x11300098
	.word	0x7106701
	.word	0x6711ff
	.word	-0xe30de91
	.word	-0x1f907f29
	.word	-0x5e925e4a
	.word	0x1721fb32
	.word	0x13000360
	.word	0x3002311
	.word	0xa762fd
	.word	-0x67ff0084
	.word	-0x65dffca0
	.word	-0xfbfeeee
	.word	0x173ad720
	.word	0x20ffb815
	.word	-0x6f302e61
	.word	0x217928af
	.word	0x21f31029
	.word	-0x704fd88
	.word	-0x60cefcf0
	.word	0xe00e512
	.word	0x1fff1a01
	.word	-0x2ffd2001
	.word	0x21d2701
	.word	0x116a21f6
	.word	-0x77a85e51
	.word	0x5f40f077
	.word	0x2b621041
	.word	0x11110ec3
	.size	 sBg_Tiles,2052
	.align	2, 0
	.type	 sBg_Tilemap,object
sBg_Tilemap:
	.word	0x50010
	.word	-0xfffffc1
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0x7ffe0fff
	.word	0x44d01f0
	.word	0x105d105c
	.word	0x5f10005e
	.word	0x61106010
	.word	0x405410
	.word	0x1e0110
	.word	0x20001f
	.word	0xb202140
	.word	0x230022
	.word	0x25400024
	.word	0x540b20
	.word	0x14601461
	.word	0x5e145f00
	.word	0x5c145d14
	.word	0x204d4014
	.word	0x64004c3f
	.word	0x106510
	.word	0x10671066
	.word	0x10691068
	.word	0xf004c40
	.word	0x26004c
	.word	0x28120027
	.word	0xb202900
	.word	0xb100429
	.word	0x30044026
	.word	0x68146919
	.word	0x1146714
	.word	0x14651466
	.word	0x404c1464
	.word	0x1107f
	.word	0x1010050
	.word	0x45800
	.word	0x45b045a
	.word	0x8530853
	.word	0x37003600
	.word	0x39003800
	.word	0xb108000
	.word	0x4380439
	.word	-0x7cc9fbc9
	.word	0x5b1720
	.word	0x58005a
	.word	-0x3fd0cfd7
	.word	0x1107f50
	.word	0x40020001
	.word	0x41c4003
	.word	0x67406240
	.word	0x11001f0
	.word	0x5010062
	.word	0x7400640
	.word	0xf400140
	.word	0x6a3f1080
	.word	0x6c306b30
	.word	0x30006d30
	.word	0x4803400d
	.word	0x2a400e
	.word	0x4e044f40
	.word	0x4f004e00
	.word	0xc0010
	.word	0x4c3b09f0
	.word	0x600400f
	.word	0x6d401048
	.word	0x8346c34
	.word	0x346a346b
	.word	0x30743f10
	.word	0x76300075
	.word	0xa307730
	.word	0x40050b40
	.word	0x403a440a
	.word	0x61185751
	.word	0x9709061
	.word	0x25304c2b
	.word	0x34763477
	.word	0x74347510
	.word	0x307e3f20
	.word	-0x7fffcf81
	.word	0x14308130
	.word	0x15401540
	.word	0x60454016
	.word	0x970483f
	.word	0x20095044
	.word	0x25304445
	.word	0x34803481
	.word	0x7e34207f
	.word	0x30863f20
	.word	0x883087
	.word	0xa308930
	.word	0xa480b48
	.word	0x60174c2a
	.word	0x9602c35
	.word	0x1709602d
	.word	0x25304440
	.word	0x34883489
	.word	-0x79bfcb79
	.word	0x30323f20
	.word	0x30343033
	.word	0x8303500
	.word	0x8400940
	.word	0x3f70ac44
	.word	0x3d09603c
	.word	0x25303f80
	.word	0x34043435
	.word	0x32343334
	.word	0x306e3f20
	.word	0x70306f00
	.word	0x11307130
	.word	0x40120540
	.word	0x60464013
	.word	0x970492b
	.word	0x46bf6090
	.word	0x71253044
	.word	0x10347034
	.word	0x206e346f
	.word	0x7930783f
	.word	0x307a0030
	.word	0x4808307b
	.word	0x87c4809
	.word	-0x4a8f4080
	.word	0x7f00c970
	.word	0x347b2520
	.word	0x79347a04
	.word	0x3f207834
	.word	-0x7cffcf7e
	.word	-0x7acf7bd0
	.word	0x1c401930
	.word	-0x7fe6bfe6
	.word	0x70b570bf
	.word	-0x7fbbe837
	.word	0x34852530
	.word	0x34833484
	.word	0x3f208082
	.word	0x30733072
	.word	0x7d307c
	.word	0x1c401b30
	.word	0x47401d40
	.word	0x4a2b60b2
	.word	-0x409ff690
	.word	0x25304447
	.word	0x7c34027d
	.word	0x72347334
	.word	0x413f20
	.word	0x43304230
	.word	0x19304430
	.word	0x481a4803
	.word	-0xed4b3e7
	.word	0x200980ff
	.word	0x25304c3a
	.word	0x34433444
	.word	0x41342242
	.word	0x30553f20
	.word	0x1bd0201
	.word	0x3b994280
	.word	0x2f002e40
	.word	0x4042f00
	.word	0x80c042e
	.word	0x4c2a09f0
	.word	0x30e532d6
	.word	0x3f205531
	.word	0x323f4056
	.word	0x199
	.word	0x30003e
	.word	-0x32c1ffcf
	.word	0x9f05503
	.word	-0x1acdffff
	.word	0x20563130
	.word	0x4057443f
	.word	0x5900013f
	.word	0x11f00
	.word	0x3f004b01
	.word	0x4b004000
	.word	-0xf1df500
	.word	0x40252009
	.word	0x5700012d
	.word	0x114d3f20
	.word	0x10084c04
	.word	0x63000101
	.word	0x51010920
	.word	0x52005200
	.word	0xb005104
	.word	0x1009f0dc
	.word	0x3900631f
	.word	-0x40ccced0
	.size	 sBg_Tilemap,744
	.align	1, 0
	.type	 sBgPal_MatchLines,object
sBgPal_MatchLines:
	.short	0x6f7b
	.short	0xfa
	.short	0x179
	.short	0x7fff
	.short	0x2bd
	.short	0x7680
	.short	0x21d
	.short	0x21d
	.short	0x360
	.short	0x360
	.short	0x7ff1
	.short	0x37bf
	.short	0x37bf
	.short	0x4bf2
	.short	0x4bf2
	.short	0x0
	.size	 sBgPal_MatchLines,32
	.align	1, 0
	.type	 sBgPal_PayoutLight,object
sBgPal_PayoutLight:
	.short	0x6f7b
	.short	0x7fff
	.short	0x2bd
	.short	0x43ff
	.short	0x22df
	.short	0x7fff
	.short	0x43ff
	.short	0x43ff
	.short	0x22df
	.short	0x22df
	.short	0x17f
	.short	0x17f
	.short	0xbb
	.short	0x133f
	.short	0x13
	.short	0x0
	.short	0x6f7b
	.short	0x7fff
	.short	0x2bd
	.short	0x22df
	.short	0x17f
	.short	0x43ff
	.short	0x22df
	.short	0x7fff
	.short	0x43ff
	.short	0x43ff
	.short	0x22df
	.short	0x22df
	.short	0x17f
	.short	0x133f
	.short	0x13
	.short	0x0
	.short	0x6f7b
	.short	0x7fff
	.short	0x2bd
	.short	0x17f
	.short	0xbb
	.short	0x22df
	.short	0x17f
	.short	0x43ff
	.short	0x22df
	.short	0x7fff
	.short	0x43ff
	.short	0x43ff
	.short	0x22df
	.short	0x133f
	.short	0x13
	.short	0x0
	.size	 sBgPal_PayoutLight,96
	.align	2, 0
	.type	 sButtonPressed_Tiles,object
sButtonPressed_Tiles:
	.word	0x8010
	.word	-0x7aaaab00
	.word	0x44855548
	.word	0x48550044
	.word	0x4485ff84
	.word	-0x7aff1101
	.word	0x4822eef4
	.word	0x222ef8
	.word	0x3222ef48
	.word	0x3322ef44
	.word	0x55588400
	.word	0x58444455
	.word	0x48ff0055
	.word	-0x11aa7c
	.word	0x22005844
	.word	0x22584fee
	.word	0x848fe2
	.word	-0x7b01dddd
	.word	0x44fe2233
	.word	0x102310d5
	.word	0x3300462b
	.word	-0x79c4ff7a
	.word	0x66404300
	.word	-0x7999b500
	.word	0x66664444
	.word	0x1048863a
	.word	0x2b1023
	.word	0x3b006433
	.word	0x4300a068
	.word	0x664b0068
	.word	0x66684444
	.word	0x66688400
	.word	0x66
	.size	 sButtonPressed_Tiles,132
	.align	1, 0
	.type	 sCombosWindow_Pal,object
sCombosWindow_Pal:
	.short	0x72fc
	.short	0x2108
	.short	0x7fff
	.short	0x7fb1
	.short	0x7ff5
	.short	0x6f2d
	.short	0x3f7e
	.short	0x5b9f
	.short	0x2efa
	.short	0xdb
	.short	0x3bf
	.short	0x3b3e
	.short	0x167a
	.short	0xde
	.short	0x67fb
	.short	0x739f
	.short	0x7ff8
	.short	0x2108
	.short	0x7bde
	.short	0x295f
	.short	0x7ec6
	.short	0x7f48
	.short	0x2a7f
	.short	0x260
	.short	0x27b3
	.short	0x5e94
	.short	0x3bf
	.short	0x53df
	.short	0x1e98
	.short	0x37d
	.short	0x67fb
	.short	0x739f
	.short	0x7ff8
	.short	0x2108
	.short	0x7bde
	.short	0x420f
	.short	0x6738
	.short	0x3a3f
	.short	0x7deb
	.short	0x7e1a
	.short	0x6132
	.short	0x2177
	.short	0x56df
	.short	0x379e
	.short	0x13e
	.short	0x7ff8
	.short	0x67fb
	.short	0x739f
	.size	 sCombosWindow_Pal,96
	.align	2, 0
	.type	 sCombosWindow_Tiles,object
sCombosWindow_Tiles:
	.word	0x84010
	.word	-0xfffffd0
	.word	0x10019001
	.word	0x111111
	.word	0x44444441
	.word	0x33333341
	.word	0x2303c0aa
	.word	0x220300
	.word	0x1e00111e
	.word	0x1200cd44
	.word	0x222201a0
	.word	0x1e000130
	.word	0x551e0001
	.word	0x15120013
	.word	0x320390
	.word	0x3002203
	.word	0x40ffff20
	.word	-0xeeeeff
	.word	0x662061ff
	.word	0x66030011
	.word	0x333331ff
	.word	0x340e0
	.word	0x11207014
	.word	0x66166611
	.word	0x1666661a
	.word	0x4f103f00
	.word	0x13220013
	.word	0x1f1e60a1
	.word	0x551f4000
	.word	-0x72ffe0ab
	.word	0x44121f08
	.word	0x19032014
	.word	0x70804444
	.word	0x55fff13d
	.word	0x44ff1555
	.word	0x144426
	.word	0x101214b0
	.word	0x190b0003
	.word	0x705f70e0
	.word	0x1f4b0049
	.word	0x113661ff
	.word	0x1031ff30
	.word	-0x7ea18f6c
	.word	0x4f18888
	.word	0x17777888
	.word	0x77890078
	.word	-0xe7fc78
	.word	-0xe888eef
	.word	0x1f03ef0
	.word	0x1001f0ce
	.word	0x201ff1ab
	.word	0x101cf06b
	.word	-0xef00e94
	.word	0x1011ff11
	.word	0x601cf003
	.word	-0xfedfc2
	.word	0x20201cf0
	.word	0x7204310
	.word	0x3f0a311
	.word	-0x58aefc90
	.word	0x4001f0fe
	.word	-0xf58beff
	.word	0x1bf4103
	.word	0x336c000b
	.word	-0x53fe00b1
	.word	-0x44fee001
	.word	0x37710320
	.word	0x1179a701
	.word	0x310a611
	.word	0x300ba01
	.word	0x3200f166
	.word	0x1b760e6
	.word	0x44af11a7
	.word	0x19001ff
	.word	0x30c615bf
	.word	0x443f7003
	.word	-0x58eeeebc
	.word	0x59f1af11
	.word	0x111a0012
	.word	-0x1dffe150
	.word	0x7a001366
	.word	0x21ff3100
	.word	0x1fff3131
	.word	0x32916092
	.word	0x33017048
	.word	0x66f11713
	.word	-0xe0ecd00
	.word	-0xeccca
	.word	-0xedcf9ed
	.word	0x1222ff
	.word	0x1f359121
	.word	-0x7c0ee081
	.word	0x13328cc1
	.word	0x5bb0af11
	.word	-0x58de95bf
	.word	0x1ab21ff
	.word	0x413de0b7
	.word	-0xf54de59
	.word	0x50ab313e
	.word	0x3ff0f003
	.word	0x6b13bf51
	.word	0x55317fa3
	.word	0x13f75555
	.word	-0x4f598e65
	.word	0x551e0001
	.word	-0x5ceeceed
	.word	-0x2c2294ed
	.word	0x151e007f
	.word	-0x700f64ed
	.word	0x13f0190
	.word	0x1f0d8d7
	.word	0x50f35b61
	.word	0x1f2531e3
	.word	-0xff0e2f
	.word	-0xe55ee1
	.word	0x1ad1ff
	.word	-0x222e00ef
	.word	-0x55e00056
	.word	-0x6f4d55ac
	.word	-0x55dcfe2f
	.word	-0xe258a00
	.word	-0x222555fd
	.word	0xaaaaf1
	.word	-0x2bfecfd5
	.word	0x1f00f710
	.word	-0x5ecccfef
	.word	0x22220310
	.word	0x210300b8
	.word	0x1d001c20
	.word	0x1aaa1911
	.word	0x10ff40f1
	.word	-0x555555cd
	.word	0x7222af1
	.word	0x212df1a2
	.word	0x33fff2a2
	.word	-0xe6dc55
	.word	-0x6a3ed85e
	.word	0x3ff35130
	.word	-0x28ee80ad
	.word	0x1df00120
	.word	-0xf809c19
	.word	-0x602cc1
	.word	0x3050f3ff
	.word	-0x23d5afff
	.word	0x14019f0
	.word	-0xfad4f0e
	.word	-0x5554afc1
	.word	0x30084a9
	.word	0x631fffa1
	.word	0x3a633b01
	.word	0x6d6301b3
	.word	0x120b342
	.word	0x2f01a9aa
	.word	-0x52cd6cff
	.word	0x83036a
	.word	-0x3d2299fd
	.word	0x2200d186
	.word	-0x322e003e
	.word	0xd1ffbc
	.word	0x1fffbb61
	.word	-0x444f
	.word	0x300c168
	.word	0x1cc3f70
	.word	-0x22334499
	.word	0x6bbbf100
	.word	-0x44440e2f
	.word	-0x4400e0ef
	.word	0x513fb0cb
	.word	-0x6e200df9
	.word	-0xfcaf95
	.word	0x676120f0
	.word	0x7e733ff3
	.word	-0x30cec2ee
	.word	0xb955ff3
	.word	0x115ef0ef
	.word	-0xdfcffc9
	.word	0xb100300
	.word	0x57010300
	.word	0x200390fe
	.word	-0xef4efdd
	.word	0x4017f67f
	.word	0x441e06b1
	.word	0x41351f01
	.word	0x43111f24
	.word	0x10d88761
	.word	0x149c1079
	.word	0x79060400
	.word	0x6442211
	.word	0x42221631
	.word	0x10907013
	.word	0x10847109
	.word	-0x888754
	.word	-0x77fcdf8f
	.word	0x48160ff
	.word	0x112781f3
	.word	0x78f17111
	.word	-0xe78900
	.word	-0xe878888
	.word	0x78780281
	.word	-0x7bbbee0f
	.word	0x49435003
	.word	0x1f671022
	.word	0x1f6f1036
	.word	-0x3cd8ffcf
	.word	0x57603310
	.word	-0xecbddf
	.word	0x6f006710
	.word	0x34152c
	.word	0x1d001199
	.word	0x121f95a2
	.word	0x11ff1200
	.word	-0x7e00eddc
	.word	-0x6efaef
	.word	0x1518871
	.word	0x77965130
	.word	0x1e101140
	.word	-0x660eebde
	.word	-0xef87eef
	.word	-0xe877ea7
	.word	-0xb4dcbfc
	.word	-0x5f7fa00f
	.word	0x1
	.size	 sCombosWindow_Tiles,888
	.align	2, 0
	.type	 sCombosWindow_Tilemap,object
sCombosWindow_Tilemap:
	.word	0x50010
	.word	-0xf8fffc3
	.word	-0xffe0fff
	.word	0x12001
	.word	-0xf00ff00
	.word	-0xffe0feb
	.word	-0xfc00fff
	.word	-0xffe0fff
	.word	0x1d3f203f
	.word	-0xffd8fff
	.word	-0x7ffe0fff
	.word	0x3fa00301
	.word	0x10700f01
	.word	0x2b702c70
	.word	0x2c1a01c0
	.word	0x17f01074
	.word	-0x3feee8c0
	.word	0x7004373f
	.word	-0x7ffa7ffc
	.word	0x700a0350
	.word	0xc700b00
	.word	0x37700d70
	.word	0x70370274
	.word	-0x6fc56fc7
	.word	0x700a0350
	.word	0x10011070
	.word	0x783fe017
	.word	0x40138012
	.word	0x18035080
	.word	0x1a701970
	.word	0x701b0070
	.word	0x78377c37
	.word	0x3e2b903d
	.word	0x18035090
	.word	0x413f20
	.word	0x53fd017
	.word	0x70387010
	.word	0x3801c02d
	.word	-0xf1e40e0
	.word	-0xfe8efe9
	.word	0x78006bf
	.word	0x4035080
	.word	0x7027700a
	.word	0x3bbf4028
	.word	-0x6fc3c770
	.word	-0x400ffcb0
	.word	-0x7feb4090
	.word	0x50804115
	.word	0x33701803
	.word	-0x40bfcb90
	.word	0x40903f0f
	.word	-0xffcaf70
	.word	-0xf400f41
	.word	0x17f0c0bf
	.word	0x7037bff0
	.word	-0x7fdc7fde
	.word	0x100350c4
	.word	0x26700e65
	.word	-0x7ff740e0
	.word	0x10800922
	.word	0x21802003
	.word	0x300a1720
	.word	-0x400fd590
	.word	-0x7fd14100
	.word	0x50c4802f
	.word	0x1ca71003
	.word	-0x40dfcd90
	.word	0x17218016
	.word	0x20031080
	.word	0x30882188
	.word	-0xfc98341
	.word	-0xf580f41
	.word	-0x5f400f41
	.word	0x3d8024bf
	.word	0x3508025
	.word	-0x44ef4030
	.word	-0xfd64090
	.word	-0x40ff7841
	.word	-0x7fce7fd0
	.word	-0x402ffcb0
	.word	0x70b1bb10
	.word	-0x400fca41
	.word	0x2b78e712
	.word	0x3c01b07c
	.word	-0xdd83d4
	.word	0x170017f0
	.word	0x701d3fb0
	.word	0x1f01e77
	.word	0x18001f0
	.word	-0xf000ce1
	.word	-0x7fe0fff
	.word	0x3ff0fff3
	.word	0x1f001f0
	.word	0x3f80
	.size	 sCombosWindow_Tilemap,376
	.align	2, 0
	.type	 sBgTemplates,object
	.size	 sBgTemplates,16
sBgTemplates:
	.byte	0xd0
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xff
	.byte	0x31
	.byte	0x0
	.space	1
	.byte	0xea
	.byte	0x21
	.byte	0x0
	.space	1
	.byte	0xc5
	.byte	0x1
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sWindowTemplates,object
sWindowTemplates:
	.byte	0x0
	.byte	0x5
	.byte	0xf
	.byte	0x14
	.byte	0x4
	.byte	0xf
	.short	0x4f
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1e
	.byte	0x2
	.byte	0xe
	.short	0x13
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates,24
	.align	1, 0
	.type	 sLineTiles_TLBR,object
sLineTiles_TLBR:
	.short	0xa4
	.short	0xa5
	.short	0xa6
	.short	0xc4
	.short	0xc5
	.short	0xc6
	.short	0xc7
	.short	0xe7
	.short	0x12c
	.short	0x14c
	.short	0x191
	.short	0x1b1
	.short	0x1f6
	.short	0x216
	.short	0x217
	.short	0x218
	.short	0x219
	.short	0x237
	.short	0x238
	.short	0x239
	.size	 sLineTiles_TLBR,40
	.align	1, 0
	.type	 sLineTiles_TopRow,object
sLineTiles_TopRow:
	.short	0xe4
	.short	0xe5
	.short	0xe6
	.short	0xf7
	.short	0xf8
	.short	0xf9
	.short	0x104
	.short	0x105
	.short	0x106
	.short	0x107
	.short	0x10c
	.short	0x111
	.short	0x116
	.short	0x117
	.short	0x118
	.short	0x119
	.short	0x124
	.short	0x125
	.short	0x126
	.short	0x137
	.short	0x138
	.short	0x139
	.size	 sLineTiles_TopRow,44
	.align	1, 0
	.type	 sLineTiles_MiddleRow,object
sLineTiles_MiddleRow:
	.short	0x144
	.short	0x145
	.short	0x146
	.short	0x157
	.short	0x158
	.short	0x159
	.short	0x164
	.short	0x165
	.short	0x166
	.short	0x167
	.short	0x16c
	.short	0x171
	.short	0x176
	.short	0x177
	.short	0x178
	.short	0x179
	.short	0x184
	.short	0x185
	.short	0x186
	.short	0x197
	.short	0x198
	.short	0x199
	.size	 sLineTiles_MiddleRow,44
	.align	1, 0
	.type	 sLineTiles_BottomRow,object
sLineTiles_BottomRow:
	.short	0x1a4
	.short	0x1a5
	.short	0x1a6
	.short	0x1b7
	.short	0x1b8
	.short	0x1b9
	.short	0x1c4
	.short	0x1c5
	.short	0x1c6
	.short	0x1c7
	.short	0x1cc
	.short	0x1d1
	.short	0x1d6
	.short	0x1d7
	.short	0x1d8
	.short	0x1d9
	.short	0x1e4
	.short	0x1e5
	.short	0x1e6
	.short	0x1f7
	.short	0x1f8
	.short	0x1f9
	.size	 sLineTiles_BottomRow,44
	.align	1, 0
	.type	 sLineTiles_BLTR,object
sLineTiles_BLTR:
	.short	0x204
	.short	0x205
	.short	0x206
	.short	0x224
	.short	0x225
	.short	0x226
	.short	0x1e7
	.short	0x207
	.short	0x18c
	.short	0x1ac
	.short	0x131
	.short	0x151
	.short	0xd6
	.short	0xf6
	.short	0xb7
	.short	0xb8
	.short	0xb9
	.short	0xd7
	.short	0xd8
	.short	0xd9
	.size	 sLineTiles_BLTR,40
	.align	2, 0
	.type	 sLineStateTileIdxs,object
	.size	 sLineStateTileIdxs,40
sLineStateTileIdxs:
	.word	sLineTiles_TLBR
	.word	0x14
	.word	sLineTiles_TopRow
	.word	0x16
	.word	sLineTiles_MiddleRow
	.word	0x16
	.word	sLineTiles_BottomRow
	.word	0x16
	.word	sLineTiles_BLTR
	.word	0x14
	.type	 sWinningLineFlashPalIdxs,object
	.size	 sWinningLineFlashPalIdxs,2
sWinningLineFlashPalIdxs:
	.byte	0x2
	.byte	0x4
	.align	2, 0
	.type	 sYesNoWindowTemplate,object
	.size	 sYesNoWindowTemplate,8
sYesNoWindowTemplate:
	.byte	0x0
	.byte	0x13
	.byte	0x9
	.byte	0x6
	.byte	0x4
	.byte	0xf
	.short	0x9f
	.align	1, 0
	.type	 sReelButtonMapTileIdxs,object
	.size	 sReelButtonMapTileIdxs,24
sReelButtonMapTileIdxs:
	.short	0x229
	.short	0x22a
	.short	0x249
	.short	0x24a
	.short	0x22e
	.short	0x22f
	.short	0x24e
	.short	0x24f
	.short	0x233
	.short	0x234
	.short	0x253
	.short	0x254
.text
	.align	2, 0
	.globl	PlaySlotMachine
	.type	 PlaySlotMachine,function
	.thumb_func
PlaySlotMachine:
	push	{r4, r5, r6, lr}
	add	r6, r1, #0
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	bl	ResetTasks
	ldr	r4, .L8
	mov	r0, #0x54
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	bne	.L5	@cond_branch
	add	r0, r6, #0
	bl	SetMainCallback2
	b	.L6
.L9:
	.align	2, 0
.L8:
	.word	sSlotMachineState
.L5:
	cmp	r5, #0x5
	bls	.L7	@cond_branch
	mov	r5, #0x0
.L7:
	strh	r5, [r0, #0x4]
	str	r6, [r0]
	bl	InitSlotMachineState
	ldr	r0, .L10
	bl	SetMainCallback2
.L6:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L11:
	.align	2, 0
.L10:
	.word	CB2_InitSlotMachine
.Lfe1:
	.size	 PlaySlotMachine,.Lfe1-PlaySlotMachine
	.align	2, 0
	.type	 InitSlotMachineState,function
	.thumb_func
InitSlotMachineState:
	push	{r4, r5, r6, lr}
	mov	r1, #0x0
	strh	r1, [r0, #0x6]
	strh	r1, [r0, #0xe]
	add	r0, r0, #0x50
	strh	r1, [r0]
	mov	r3, #0x0
	ldr	r6, .L18
	mov	r4, #0x0
	mov	r5, #0x15
.L16:
	ldr	r2, [r6]
	lsl	r1, r3, #0x2
	add	r0, r2, #0
	add	r0, r0, #0x14
	add	r0, r0, r1
	str	r4, [r0]
	lsl	r1, r3, #0x1
	add	r0, r2, #0
	add	r0, r0, #0x20
	add	r0, r0, r1
	strh	r4, [r0]
	add	r0, r2, #0
	add	r0, r0, #0x26
	add	r0, r0, r1
	strh	r4, [r0]
	add	r0, r2, #0
	add	r0, r0, #0x2c
	add	r0, r0, r1
	strh	r5, [r0]
	add	r3, r3, #0x1
	cmp	r3, #0x2
	ble	.L16	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L19:
	.align	2, 0
.L18:
	.word	sSlotMachineState
.Lfe2:
	.size	 InitSlotMachineState,.Lfe2-InitSlotMachineState
	.align	2, 0
	.type	 CB2_InitSlotMachine,function
	.thumb_func
CB2_InitSlotMachine:
	push	{r4, lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	ldr	r0, .L29
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L22	@cond_branch
	cmp	r0, #0x1
	beq	.L25	@cond_branch
	b	.L21
.L30:
	.align	2, 0
.L29:
	.word	gMain
.L22:
	bl	CreateSlotMachine
	cmp	r0, #0
	beq	.L23	@cond_branch
	ldr	r0, .L31
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	SetMainCallback2
	bl	CleanSupSlotMachineState
	b	.L21
.L32:
	.align	2, 0
.L31:
	.word	sSlotMachineState
.L23:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L21
.L25:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L21	@cond_branch
	ldr	r0, .L33
	mov	r1, #0x0
	bl	CreateTask
	ldr	r4, .L33+0x4
	ldr	r1, [r4]
	strb	r0, [r1, #0x10]
	ldr	r0, .L33+0x8
	mov	r1, #0x1
	bl	CreateTask
	ldr	r1, [r4]
	strb	r0, [r1, #0x11]
	ldr	r0, .L33+0xc
	bl	SetMainCallback2
.L21:
	pop	{r4}
	pop	{r0}
	bx	r0
.L34:
	.align	2, 0
.L33:
	.word	MainTask_SlotsGameLoop
	.word	sSlotMachineState
	.word	Task_SpinReels
	.word	CB2_RunSlotMachine
.Lfe3:
	.size	 CB2_InitSlotMachine,.Lfe3-CB2_InitSlotMachine
	.align	2, 0
	.type	 CleanSupSlotMachineState,function
	.thumb_func
CleanSupSlotMachineState:
	push	{r4, lr}
	bl	DestroySlotMachine
	ldr	r4, .L37
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L36	@cond_branch
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L36:
	pop	{r4}
	pop	{r0}
	bx	r0
.L38:
	.align	2, 0
.L37:
	.word	sSlotMachineState
.Lfe4:
	.size	 CleanSupSlotMachineState,.Lfe4-CleanSupSlotMachineState
	.align	2, 0
	.type	 CB2_RunSlotMachine,function
	.thumb_func
CB2_RunSlotMachine:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 CB2_RunSlotMachine,.Lfe5-CB2_RunSlotMachine
	.align	2, 0
	.type	 MainTask_SlotsGameLoop,function
	.thumb_func
MainTask_SlotsGameLoop:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L75
	add	r6, r1, r0
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	cmp	r0, #0x4
	bls	.LCB263
	b	.L41	@long jump
.LCB263:
	lsl	r0, r0, #0x2
	ldr	r1, .L75+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L76:
	.align	2, 0
.L75:
	.word	gTasks+0x8
	.word	.L72
	.align	2, 0
	.align	2, 0
.L72:
	.word	.L42
	.word	.L56
	.word	.L61
	.word	.L62
	.word	.L65
.L42:
	bl	GetCoins
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L43	@cond_branch
	ldr	r0, .L77
	bl	SetMainTask
	b	.L41
.L78:
	.align	2, 0
.L77:
	.word	MainTask_NoCoinsGameOver
.L43:
	ldr	r1, .L79
	ldrh	r2, [r1, #0x2e]
	mov	r0, #0x80
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L45	@cond_branch
	ldr	r0, .L79+0x4
	ldr	r1, [r0]
	ldrh	r0, [r1, #0xe]
	add	r0, r0, #0x1
	strh	r0, [r1, #0xe]
	mov	r0, #0x1
	bl	RemoveCoins
	mov	r0, #0x58
	bl	PlaySE
	mov	r0, #0x8
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	mov	r0, #0x2
	mov	r1, #0x1
	bl	SetSlotMachineSetupTask
	mov	r0, #0x1
	b	.L74
.L80:
	.align	2, 0
.L79:
	.word	gMain
	.word	sSlotMachineState
.L45:
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L47	@cond_branch
	ldr	r5, .L81
	ldr	r0, [r5]
	ldrh	r0, [r0, #0xe]
	mov	r7, #0x3
	sub	r4, r7, r0
	bl	GetCoins
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r4
	blt	.L48	@cond_branch
	ldr	r0, [r5]
	strh	r7, [r0, #0xe]
	lsl	r0, r4, #0x10
	lsr	r0, r0, #0x10
	bl	RemoveCoins
	b	.L49
.L82:
	.align	2, 0
.L81:
	.word	sSlotMachineState
.L48:
	bl	GetCoins
	ldr	r1, [r5]
	ldrh	r2, [r1, #0xe]
	add	r0, r0, r2
	strh	r0, [r1, #0xe]
	mov	r0, #0x0
	bl	SetCoins
.L49:
	mov	r0, #0x58
	bl	PlaySE
	mov	r0, #0x8
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	mov	r0, #0x2
	mov	r1, #0x1
	bl	SetSlotMachineSetupTask
	mov	r0, #0x1
	b	.L74
.L47:
	mov	r0, #0x1
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L51	@cond_branch
	ldr	r0, .L83
	ldr	r0, [r0]
	ldrh	r0, [r0, #0xe]
	cmp	r0, #0
	beq	.L51	@cond_branch
	mov	r0, #0x2
	b	.L74
.L84:
	.align	2, 0
.L83:
	.word	sSlotMachineState
.L51:
	ldrh	r1, [r1, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L53	@cond_branch
	ldr	r0, .L85
	bl	SetMainTask
	b	.L41
.L86:
	.align	2, 0
.L85:
	.word	MainTask_ConfirmExitGame
.L53:
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB464
	b	.L41	@long jump
.LCB464:
	ldr	r0, .L87
	bl	SetMainTask
	b	.L41
.L88:
	.align	2, 0
.L87:
	.word	MainTask_ShowHelp
.L56:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	beq	.LCB482
	b	.L41	@long jump
.LCB482:
	mov	r0, #0x1
	bl	IsSlotMachineSetupTaskActive
	add	r4, r0, #0
	cmp	r4, #0
	beq	.LCB487
	b	.L41	@long jump
.LCB487:
	ldr	r0, .L89
	ldr	r0, [r0]
	ldrh	r0, [r0, #0xe]
	cmp	r0, #0x3
	beq	.L59	@cond_branch
	bl	GetCoins
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L58	@cond_branch
.L59:
	mov	r0, #0x2
	b	.L74
.L90:
	.align	2, 0
.L89:
	.word	sSlotMachineState
.L58:
	strh	r4, [r6]
	b	.L41
.L61:
	bl	SetQLPlayedTheSlots
	bl	CalcSlotBias
	bl	StartReels
	ldr	r0, .L91
	ldr	r1, [r0]
	mov	r0, #0x0
	strh	r0, [r1, #0x6]
	mov	r0, #0x3
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	b	.L67
.L92:
	.align	2, 0
.L91:
	.word	sSlotMachineState
.L62:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L41	@cond_branch
	ldr	r0, .L93
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L41	@cond_branch
	mov	r0, #0x18
	bl	PlaySE
	ldr	r4, .L93+0x4
	ldr	r0, [r4]
	ldrh	r1, [r0, #0x6]
	add	r0, r1, #0
	bl	StopCurrentReel
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x6]
	mov	r1, #0x0
	bl	PressReelButton
	mov	r0, #0x4
	b	.L74
.L94:
	.align	2, 0
.L93:
	.word	gMain
	.word	sSlotMachineState
.L65:
	ldr	r5, .L95
	ldr	r0, [r5]
	ldrh	r0, [r0, #0x6]
	bl	IsReelSpinning
	cmp	r0, #0
	bne	.L41	@cond_branch
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	add	r4, r0, #0
	cmp	r4, #0
	bne	.L41	@cond_branch
	ldr	r1, [r5]
	ldrh	r0, [r1, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x6]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x2
	bls	.L67	@cond_branch
	bl	CalcPayout
	ldr	r1, [r5]
	strh	r0, [r1, #0xa]
	strh	r4, [r1, #0xe]
	strh	r4, [r1, #0x6]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	bne	.L68	@cond_branch
	ldr	r0, .L95+0x4
	bl	SetMainTask
	b	.L41
.L96:
	.align	2, 0
.L95:
	.word	sSlotMachineState
	.word	MainTask_DarnNoPayout
.L68:
	cmp	r0, #0x6
	bne	.L70	@cond_branch
	mov	r0, #0x1c
	bl	IncrementGameStat
.L70:
	bl	ResetMachineBias
	ldr	r0, .L97
	bl	SetMainTask
	b	.L41
.L98:
	.align	2, 0
.L97:
	.word	MainTask_WinHandlePayout
.L67:
	mov	r0, #0x3
.L74:
	strh	r0, [r6]
.L41:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 MainTask_SlotsGameLoop,.Lfe6-MainTask_SlotsGameLoop
	.align	2, 0
	.type	 MainTask_NoCoinsGameOver,function
	.thumb_func
MainTask_NoCoinsGameOver:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L110
	add	r4, r1, r0
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L102	@cond_branch
	cmp	r0, #0x1
	bgt	.L108	@cond_branch
	cmp	r0, #0
	beq	.L101	@cond_branch
	b	.L100
.L111:
	.align	2, 0
.L110:
	.word	gTasks+0x8
.L108:
	cmp	r0, #0x2
	beq	.L104	@cond_branch
	b	.L100
.L101:
	mov	r0, #0x9
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	b	.L109
.L102:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L100	@cond_branch
.L109:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L100
.L104:
	ldr	r0, .L112
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf3
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L100	@cond_branch
	ldr	r0, .L112+0x4
	bl	SetMainTask
.L100:
	pop	{r4}
	pop	{r0}
	bx	r0
.L113:
	.align	2, 0
.L112:
	.word	gMain
	.word	MainTask_ExitSlots
.Lfe7:
	.size	 MainTask_NoCoinsGameOver,.Lfe7-MainTask_NoCoinsGameOver
	.align	2, 0
	.type	 MainTask_ShowHelp,function
	.thumb_func
MainTask_ShowHelp:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L128
	add	r4, r1, r0
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L117	@cond_branch
	cmp	r0, #0x1
	bgt	.L125	@cond_branch
	cmp	r0, #0
	beq	.L116	@cond_branch
	b	.L115
.L129:
	.align	2, 0
.L128:
	.word	gTasks+0x8
.L125:
	cmp	r0, #0x2
	beq	.L119	@cond_branch
	cmp	r0, #0x3
	beq	.L121	@cond_branch
	b	.L115
.L116:
	mov	r0, #0xe
	b	.L126
.L117:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L115	@cond_branch
	b	.L127
.L119:
	ldr	r0, .L130
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L115	@cond_branch
	mov	r0, #0xf
.L126:
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
.L127:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L115
.L131:
	.align	2, 0
.L130:
	.word	gMain
.L121:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L115	@cond_branch
	ldr	r0, .L132
	bl	SetMainTask
.L115:
	pop	{r4}
	pop	{r0}
	bx	r0
.L133:
	.align	2, 0
.L132:
	.word	MainTask_SlotsGameLoop
.Lfe8:
	.size	 MainTask_ShowHelp,.Lfe8-MainTask_ShowHelp
	.align	2, 0
	.type	 MainTask_ConfirmExitGame,function
	.thumb_func
MainTask_ConfirmExitGame:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L154
	add	r4, r1, r0
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x4
	bhi	.L135	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L154+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L155:
	.align	2, 0
.L154:
	.word	gTasks+0x8
	.word	.L151
	.align	2, 0
	.align	2, 0
.L151:
	.word	.L136
	.word	.L137
	.word	.L139
	.word	.L147
	.word	.L149
.L136:
	mov	r0, #0xa
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	b	.L153
.L137:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L135	@cond_branch
.L153:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L135
.L139:
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L141	@cond_branch
	cmp	r1, #0
	bgt	.L146	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L143	@cond_branch
	b	.L135
.L146:
	cmp	r1, #0x1
	beq	.L143	@cond_branch
	b	.L135
.L141:
	ldr	r0, .L156
	ldr	r0, [r0]
	ldrh	r0, [r0, #0xe]
	bl	AddCoins
	mov	r0, #0x8
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	mov	r0, #0x3
	strh	r0, [r4]
	b	.L135
.L157:
	.align	2, 0
.L156:
	.word	sSlotMachineState
.L143:
	mov	r0, #0xb
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	mov	r0, #0x4
	strh	r0, [r4]
	b	.L135
.L147:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L135	@cond_branch
	ldr	r0, .L158
	bl	SetMainTask
	b	.L135
.L159:
	.align	2, 0
.L158:
	.word	MainTask_ExitSlots
.L149:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L135	@cond_branch
	ldr	r0, .L160
	bl	SetMainTask
.L135:
	pop	{r4}
	pop	{r0}
	bx	r0
.L161:
	.align	2, 0
.L160:
	.word	MainTask_SlotsGameLoop
.Lfe9:
	.size	 MainTask_ConfirmExitGame,.Lfe9-MainTask_ConfirmExitGame
	.align	2, 0
	.type	 MainTask_DarnNoPayout,function
	.thumb_func
MainTask_DarnNoPayout:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L173
	add	r5, r1, r0
	mov	r0, #0x0
	ldrsh	r4, [r5, r0]
	cmp	r4, #0x1
	beq	.L165	@cond_branch
	cmp	r4, #0x1
	bgt	.L171	@cond_branch
	cmp	r4, #0
	beq	.L164	@cond_branch
	b	.L163
.L174:
	.align	2, 0
.L173:
	.word	gTasks+0x8
.L171:
	cmp	r4, #0x2
	beq	.L167	@cond_branch
	b	.L163
.L164:
	mov	r0, #0x6
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	strh	r4, [r5, #0x2]
	b	.L172
.L165:
	ldrh	r0, [r5, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3c
	ble	.L163	@cond_branch
	mov	r0, #0x7
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	mov	r0, #0x2
	mov	r1, #0x1
	bl	SetSlotMachineSetupTask
	mov	r0, #0xd
	mov	r1, #0x2
	bl	SetSlotMachineSetupTask
.L172:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L163
.L167:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L163	@cond_branch
	mov	r0, #0x1
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L163	@cond_branch
	mov	r0, #0x2
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L163	@cond_branch
	ldr	r0, .L175
	bl	SetMainTask
.L163:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L176:
	.align	2, 0
.L175:
	.word	MainTask_SlotsGameLoop
.Lfe10:
	.size	 MainTask_DarnNoPayout,.Lfe10-MainTask_DarnNoPayout
	.align	2, 0
	.type	 MainTask_WinHandlePayout,function
	.thumb_func
MainTask_WinHandlePayout:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L204
	add	r5, r1, r0
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x5
	bls	.LCB1099
	b	.L178	@long jump
.LCB1099:
	lsl	r0, r0, #0x2
	ldr	r1, .L204+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L205:
	.align	2, 0
.L204:
	.word	gTasks+0x8
	.word	.L200
	.align	2, 0
	.align	2, 0
.L200:
	.word	.L179
	.word	.L182
	.word	.L185
	.word	.L194
	.word	.L196
	.word	.L198
.L179:
	ldr	r0, .L206
	ldr	r0, [r0]
	ldrh	r0, [r0, #0xa]
	sub	r0, r0, #0x5
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bhi	.L180	@cond_branch
	mov	r0, #0x86
	lsl	r0, r0, #0x1
	bl	PlayFanfare
	b	.L181
.L207:
	.align	2, 0
.L206:
	.word	sSlotMachineState
.L180:
	ldr	r0, .L208
	bl	PlayFanfare
.L181:
	mov	r0, #0x8
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	mov	r0, #0x4
	mov	r1, #0x1
	bl	SetSlotMachineSetupTask
	mov	r0, #0x8
	strh	r0, [r5, #0x2]
	b	.L202
.L209:
	.align	2, 0
.L208:
	.word	0x10d
.L182:
	ldrh	r0, [r5, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x78
	bgt	.LCB1169
	b	.L178	@long jump
.LCB1169:
	mov	r0, #0x8
	strh	r0, [r5, #0x2]
	ldr	r0, .L210
	ldrh	r1, [r0, #0x2c]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L202	@cond_branch
	mov	r0, #0x2
	strh	r0, [r5, #0x2]
	b	.L202
.L211:
	.align	2, 0
.L210:
	.word	gMain
.L185:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	add	r6, r0, #0
	cmp	r6, #0
	bne	.L178	@cond_branch
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L187	@cond_branch
	ldr	r0, .L212
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L187	@cond_branch
	ldr	r4, .L212+0x4
	ldr	r0, [r4]
	add	r0, r0, #0x50
	ldrh	r0, [r0]
	bl	AddCoins
	ldr	r0, [r4]
	add	r0, r0, #0x50
	strh	r6, [r0]
	b	.L188
.L213:
	.align	2, 0
.L212:
	.word	gMain
	.word	sSlotMachineState
.L187:
	ldrh	r0, [r5, #0x2]
	sub	r0, r0, #0x1
	strh	r0, [r5, #0x2]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L188	@cond_branch
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L190	@cond_branch
	mov	r0, #0x15
	bl	PlaySE
.L190:
	ldr	r4, .L214
	ldr	r0, [r4]
	add	r0, r0, #0x50
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L191	@cond_branch
	mov	r0, #0x1
	bl	AddCoins
	ldr	r1, [r4]
	add	r1, r1, #0x50
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
	strh	r0, [r1]
.L191:
	mov	r0, #0x8
	strh	r0, [r5, #0x2]
	ldr	r0, .L214+0x4
	ldrh	r1, [r0, #0x2c]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L188	@cond_branch
	mov	r0, #0x2
	strh	r0, [r5, #0x2]
.L188:
	mov	r0, #0x8
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	ldr	r0, .L214
	ldr	r0, [r0]
	add	r0, r0, #0x50
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L178	@cond_branch
	b	.L202
.L215:
	.align	2, 0
.L214:
	.word	sSlotMachineState
	.word	gMain
.L194:
	bl	IsFanfareTaskInactive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L178	@cond_branch
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L178	@cond_branch
	mov	r0, #0x5
	mov	r1, #0x0
	b	.L203
.L196:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L178	@cond_branch
	mov	r0, #0x2
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	mov	r0, #0xd
	mov	r1, #0x1
.L203:
	bl	SetSlotMachineSetupTask
.L202:
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L178
.L198:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L178	@cond_branch
	mov	r0, #0x1
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L178	@cond_branch
	ldr	r0, .L216
	bl	SetMainTask
.L178:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L217:
	.align	2, 0
.L216:
	.word	MainTask_SlotsGameLoop
.Lfe11:
	.size	 MainTask_WinHandlePayout,.Lfe11-MainTask_WinHandlePayout
	.align	2, 0
	.type	 MainTask_ExitSlots,function
	.thumb_func
MainTask_ExitSlots:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L225
	add	r4, r1, r0
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L220	@cond_branch
	cmp	r0, #0x1
	beq	.L221	@cond_branch
	b	.L219
.L226:
	.align	2, 0
.L225:
	.word	gTasks+0x8
.L220:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	SetSlotMachineSetupTask
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L219
.L221:
	mov	r0, #0x0
	bl	IsSlotMachineSetupTaskActive
	cmp	r0, #0
	bne	.L219	@cond_branch
	ldr	r0, .L227
	ldr	r0, [r0]
	ldr	r0, [r0]
	bl	SetMainCallback2
	bl	CleanSupSlotMachineState
.L219:
	pop	{r4}
	pop	{r0}
	bx	r0
.L228:
	.align	2, 0
.L227:
	.word	sSlotMachineState
.Lfe12:
	.size	 MainTask_ExitSlots,.Lfe12-MainTask_ExitSlots
	.align	2, 0
	.type	 SetMainTask,function
	.thumb_func
SetMainTask:
	push	{r4, lr}
	ldr	r4, .L230
	ldr	r1, .L230+0x4
	ldr	r3, [r1]
	ldrb	r2, [r3, #0x10]
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	str	r0, [r1]
	ldrb	r1, [r3, #0x10]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	mov	r1, #0x0
	strh	r1, [r0, #0x8]
	pop	{r4}
	pop	{r0}
	bx	r0
.L231:
	.align	2, 0
.L230:
	.word	gTasks
	.word	sSlotMachineState
.Lfe13:
	.size	 SetMainTask,.Lfe13-SetMainTask
	.align	2, 0
	.type	 Task_SpinReels,function
	.thumb_func
Task_SpinReels:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r0, #0x0
	mov	ip, r0
	ldr	r1, .L245
	mov	sl, r1
	mov	r8, sl
	mov	r9, r0
	mov	r6, #0x0
	mov	r7, #0x0
.L236:
	mov	r2, r8
	ldr	r3, [r2]
	add	r0, r3, #0
	add	r0, r0, #0x14
	add	r0, r0, r7
	ldr	r0, [r0]
	mov	r1, ip
	lsl	r4, r1, #0x1
	cmp	r0, #0
	bne	.L238	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0x26
	add	r0, r0, r6
	mov	r2, #0x0
	ldrsh	r0, [r0, r2]
	cmp	r0, #0
	beq	.L235	@cond_branch
.L238:
	add	r0, r3, #0
	add	r0, r0, #0x26
	add	r2, r0, r6
	ldrh	r5, [r2]
	mov	r1, #0x0
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bne	.L240	@cond_branch
	add	r1, r3, #0
	add	r1, r1, #0x20
	add	r1, r1, r4
	add	r0, r3, #0
	add	r0, r0, #0x2c
	add	r0, r0, r4
	mov	r4, #0x0
	ldrsh	r1, [r1, r4]
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp	r1, r0
	beq	.L239	@cond_branch
.L240:
	add	r0, r5, #0x1
	mov	r1, #0x0
	strh	r0, [r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L241	@cond_branch
	strh	r1, [r2]
	add	r0, r3, #0
	add	r0, r0, #0x20
	add	r1, r0, r6
	ldrh	r0, [r1]
	sub	r0, r0, #0x1
	strh	r0, [r1]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bge	.L241	@cond_branch
	mov	r0, #0x14
	strh	r0, [r1]
.L241:
	mov	r1, r8
	ldr	r0, [r1]
	add	r1, r0, #0
	add	r1, r1, #0x20
	add	r1, r1, r6
	add	r0, r0, #0x2c
	add	r0, r0, r6
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	cmp	r1, r0
	bne	.L235	@cond_branch
.L239:
	mov	r1, r8
	ldr	r0, [r1]
	add	r1, r0, #0
	add	r1, r1, #0x2c
	add	r1, r1, r6
	mov	r2, #0x15
	strh	r2, [r1]
	add	r0, r0, #0x14
	add	r0, r0, r7
	mov	r2, r9
	str	r2, [r0]
.L235:
	add	r6, r6, #0x2
	add	r7, r7, #0x4
	mov	r4, #0x1
	add	ip, ip, r4
	mov	r0, ip
	cmp	r0, #0x2
	ble	.L236	@cond_branch
	mov	r2, sl
	ldr	r1, [r2]
	add	r0, r1, #0
	add	r0, r0, #0x20
	add	r1, r1, #0x26
	bl	UpdateReelIconSprites
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L246:
	.align	2, 0
.L245:
	.word	sSlotMachineState
.Lfe14:
	.size	 Task_SpinReels,.Lfe14-Task_SpinReels
	.align	2, 0
	.type	 StartReels,function
	.thumb_func
StartReels:
	push	{r4, lr}
	mov	r2, #0x0
	ldr	r4, .L253
	mov	r3, #0x1
.L251:
	ldr	r0, [r4]
	lsl	r1, r2, #0x2
	add	r0, r0, #0x14
	add	r0, r0, r1
	str	r3, [r0]
	add	r2, r2, #0x1
	cmp	r2, #0x2
	ble	.L251	@cond_branch
	pop	{r4}
	pop	{r0}
	bx	r0
.L254:
	.align	2, 0
.L253:
	.word	sSlotMachineState
.Lfe15:
	.size	 StartReels,.Lfe15-StartReels
	.align	2, 0
	.type	 StopCurrentReel,function
	.thumb_func
StopCurrentReel:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r2, r1, #0
	cmp	r1, #0x1
	beq	.L258	@cond_branch
	cmp	r1, #0x1
	bgt	.L262	@cond_branch
	cmp	r1, #0
	beq	.L257	@cond_branch
	b	.L256
.L262:
	cmp	r2, #0x2
	beq	.L259	@cond_branch
	b	.L256
.L257:
	bl	StopReel1
	b	.L256
.L258:
	bl	StopReel2
	b	.L256
.L259:
	bl	StopReel3
.L256:
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 StopCurrentReel,.Lfe16-StopCurrentReel
	.align	2, 0
	.type	 IsReelSpinning,function
	.thumb_func
IsReelSpinning:
	lsl	r0, r0, #0x10
	ldr	r1, .L264
	ldr	r1, [r1]
	lsr	r0, r0, #0xe
	add	r1, r1, #0x14
	add	r1, r1, r0
	ldr	r0, [r1]
	bx	lr
.L265:
	.align	2, 0
.L264:
	.word	sSlotMachineState
.Lfe17:
	.size	 IsReelSpinning,.Lfe17-IsReelSpinning
	.align	2, 0
	.type	 GetNextReelPosition,function
	.thumb_func
GetNextReelPosition:
	push	{lr}
	lsl	r0, r0, #0x10
	ldr	r1, .L269
	ldr	r2, [r1]
	lsr	r0, r0, #0xf
	add	r1, r2, #0
	add	r1, r1, #0x20
	add	r1, r1, r0
	ldrh	r1, [r1]
	add	r2, r2, #0x26
	add	r2, r2, r0
	mov	r3, #0x0
	ldrsh	r0, [r2, r3]
	cmp	r0, #0
	beq	.L267	@cond_branch
	lsl	r0, r1, #0x10
	ldr	r1, .L269+0x4
	add	r0, r0, r1
	lsr	r1, r0, #0x10
	cmp	r0, #0
	bge	.L267	@cond_branch
	mov	r1, #0x14
.L267:
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.L270:
	.align	2, 0
.L269:
	.word	sSlotMachineState
	.word	-0x10000
.Lfe18:
	.size	 GetNextReelPosition,.Lfe18-GetNextReelPosition
	.align	2, 0
	.type	 StopReel1,function
	.thumb_func
StopReel1:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	bl	GetNextReelPosition
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	mov	r0, #0x0
	mov	r8, r0
	ldr	r0, .L307
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L272	@cond_branch
	mov	r2, r9
	cmp	r2, #0
	bne	.L272	@cond_branch
	mov	r7, #0x0
	lsl	r1, r1, #0x10
	str	r1, [sp, #0xc]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	sl, r0
.L276:
	mov	r6, #0x0
	ldr	r1, [sp, #0xc]
	asr	r0, r1, #0x10
	sub	r0, r0, r7
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	add	r5, r7, #0x1
	b	.L277
.L308:
	.align	2, 0
.L307:
	.word	sSlotMachineState
.L279:
	add	r6, r6, #0x1
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
.L277:
	cmp	r6, #0x2
	bgt	.L278	@cond_branch
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L281	@cond_branch
	mov	r2, #0x0
.L281:
	lsl	r0, r2, #0x10
	asr	r4, r0, #0x10
	mov	r2, sl
	add	r0, r4, r2
	ldr	r1, .L309
	add	r0, r0, r1
	ldrb	r1, [r0]
	mov	r0, #0x1
	bl	TestReelIconAttribute
	cmp	r0, #0
	beq	.L279	@cond_branch
.L278:
	cmp	r6, #0x3
	bne	.L275	@cond_branch
	mov	r0, sp
	add	r0, r0, r8
	strb	r7, [r0]
	mov	r2, #0x1
	add	r8, r8, r2
.L275:
	add	r7, r5, #0
	cmp	r7, #0x4
	ble	.L276	@cond_branch
	b	.L286
.L310:
	.align	2, 0
.L309:
	.word	sReelIconAnimByReelAndPos
.L306:
	mov	r1, sp
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	mov	r8, r0
	b	.L290
.L272:
	ldr	r0, .L311
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x8]
	cmp	r0, #0x1
	bne	.L288	@cond_branch
	lsl	r2, r1, #0x10
	str	r2, [sp, #0xc]
	mov	r0, r9
	lsl	r0, r0, #0x1
	str	r0, [sp, #0x8]
	mov	r2, r9
	cmp	r2, #0
	bne	.L286	@cond_branch
.L288:
	mov	r7, #0x0
	lsl	r1, r1, #0x10
	mov	r2, #0x80
	lsl	r2, r2, #0x9
	add	r0, r1, r2
	lsr	r2, r0, #0x10
	str	r1, [sp, #0xc]
	mov	r0, r9
	lsl	r6, r0, #0x2
	lsl	r0, r0, #0x1
	str	r0, [sp, #0x8]
	ldr	r1, .L311+0x4
	mov	sl, r1
	mov	r1, r9
	add	r0, r6, r1
	lsl	r0, r0, #0x2
	add	r5, r0, r1
.L292:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L293	@cond_branch
	mov	r2, #0x0
.L293:
	ldr	r0, .L311
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x8]
	lsl	r1, r2, #0x10
	asr	r4, r1, #0x10
	add	r1, r4, r5
	add	r1, r1, sl
	ldrb	r1, [r1]
	bl	TestReelIconAttribute
	cmp	r0, #0
	bne	.L306	@cond_branch
	add	r7, r7, #0x1
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r7, #0x2
	ble	.L292	@cond_branch
.L290:
	mov	r7, #0x0
	ldr	r0, [sp, #0xc]
	lsr	r2, r0, #0x10
	ldr	r1, .L311+0x4
	mov	sl, r1
	mov	r1, r9
	add	r0, r6, r1
	lsl	r0, r0, #0x2
	add	r6, r0, r1
.L299:
	lsl	r0, r2, #0x10
	cmp	r0, #0
	bge	.L300	@cond_branch
	mov	r2, #0x14
.L300:
	ldr	r0, .L311
	ldr	r0, [r0]
	ldrh	r0, [r0, #0x8]
	lsl	r1, r2, #0x10
	asr	r4, r1, #0x10
	add	r1, r4, r6
	add	r1, r1, sl
	ldrb	r1, [r1]
	bl	TestReelIconAttribute
	add	r5, r7, #0x1
	cmp	r0, #0
	beq	.L298	@cond_branch
	mov	r0, sp
	add	r0, r0, r8
	strb	r5, [r0]
	mov	r2, #0x1
	add	r8, r8, r2
.L298:
	add	r7, r5, #0
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r7, #0x3
	ble	.L299	@cond_branch
.L286:
	mov	r0, r8
	cmp	r0, #0
	bne	.L303	@cond_branch
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x5
	bl	__umodsi3
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	b	.L304
.L312:
	.align	2, 0
.L311:
	.word	sSlotMachineState
	.word	sReelIconAnimByReelAndPos
.L303:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, r8
	bl	__modsi3
	add	r0, r0, sp
	ldrb	r2, [r0]
.L304:
	ldr	r0, [sp, #0xc]
	asr	r1, r0, #0x10
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	sub	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r2, r1, #0x10
	asr	r0, r1, #0x10
	cmp	r0, #0
	bge	.L305	@cond_branch
	add	r0, r0, #0x15
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
.L305:
	ldr	r0, .L313
	ldr	r0, [r0]
	mov	r1, r9
	strh	r1, [r0, #0x32]
	add	r0, r0, #0x2c
	ldr	r1, [sp, #0x8]
	add	r0, r0, r1
	strh	r2, [r0]
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L314:
	.align	2, 0
.L313:
	.word	sSlotMachineState
.Lfe19:
	.size	 StopReel1,.Lfe19-StopReel1
	.align	2, 0
	.type	 StopReel2,function
	.thumb_func
StopReel2:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	ldr	r0, .L330
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x32]
	lsl	r7, r1, #0x10
	asr	r1, r7, #0xf
	add	r0, r0, #0x20
	add	r0, r0, r1
	ldrh	r0, [r0]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L316	@cond_branch
	mov	r4, #0x0
.L316:
	mov	r0, r8
	bl	GetNextReelPosition
	lsl	r1, r0, #0x10
	mov	r2, #0x80
	lsl	r2, r2, #0x9
	add	r0, r1, r2
	lsr	r2, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x14
	ble	.L317	@cond_branch
	mov	r2, #0x0
.L317:
	mov	r6, #0x0
	mov	r5, #0x0
	mov	sl, r7
	lsl	r4, r4, #0x10
	mov	r9, r4
	str	r1, [sp, #0x10]
	mov	r0, r8
	lsl	r0, r0, #0x1
	str	r0, [sp, #0xc]
.L321:
	lsl	r0, r2, #0x10
	asr	r4, r0, #0x10
	ldr	r7, .L330
	ldr	r0, [r7]
	ldrh	r0, [r0, #0x8]
	str	r0, [sp]
	mov	r1, sl
	asr	r0, r1, #0x10
	mov	r2, r9
	asr	r1, r2, #0x10
	mov	r2, r8
	add	r3, r4, #0
	bl	TwoReelBiasCheck
	cmp	r0, #0
	beq	.L322	@cond_branch
	mov	r0, sp
	add	r0, r0, r6
	add	r0, r0, #0x4
	strb	r5, [r0]
	add	r6, r6, #0x1
.L322:
	sub	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	cmp	r0, #0
	bge	.L320	@cond_branch
	mov	r2, #0x14
.L320:
	add	r5, r5, #0x1
	cmp	r5, #0x4
	ble	.L321	@cond_branch
	cmp	r6, #0
	bne	.L325	@cond_branch
	ldr	r0, [r7]
	str	r6, [r0, #0x38]
	ldrh	r0, [r0, #0x8]
	sub	r0, r0, #0x5
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r2, #0x0
	add	r3, r7, #0
	cmp	r0, #0x1
	bhi	.L328	@cond_branch
	mov	r2, #0x4
	b	.L328
.L331:
	.align	2, 0
.L330:
	.word	sSlotMachineState
.L325:
	ldr	r0, [r7]
	mov	r1, #0x1
	str	r1, [r0, #0x38]
	add	r0, sp, #0x4
	ldrb	r2, [r0]
	add	r3, r7, #0
.L328:
	ldr	r0, [sp, #0x10]
	asr	r1, r0, #0x10
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	sub	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r2, r1, #0x10
	asr	r0, r1, #0x10
	cmp	r0, #0
	bge	.L329	@cond_branch
	add	r0, r0, #0x15
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
.L329:
	ldr	r0, [r3]
	mov	r1, r8
	strh	r1, [r0, #0x34]
	add	r0, r0, #0x2c
	ldr	r1, [sp, #0xc]
	add	r0, r0, r1
	strh	r2, [r0]
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 StopReel2,.Lfe20-StopReel2
	.align	2, 0
	.type	 StopReel3,function
	.thumb_func
StopReel3:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	bl	GetNextReelPosition
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	mov	r9, r0
	mov	r4, r9
	mov	r6, #0x0
	mov	r5, #0x0
.L336:
	ldr	r7, .L345
	ldr	r0, [r7]
	ldrh	r2, [r0, #0x8]
	mov	r0, r8
	add	r1, r4, #0
	bl	OneReelBiasCheck
	cmp	r0, #0
	beq	.L337	@cond_branch
	mov	r1, sp
	add	r0, r1, r6
	strb	r5, [r0]
	add	r6, r6, #0x1
.L337:
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L335	@cond_branch
	mov	r4, #0x14
.L335:
	add	r5, r5, #0x1
	cmp	r5, #0x4
	ble	.L336	@cond_branch
	cmp	r6, #0
	bne	.L340	@cond_branch
	ldr	r0, [r7]
	ldrh	r0, [r0, #0x8]
	sub	r0, r0, #0x5
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r2, #0x0
	add	r1, r7, #0
	cmp	r0, #0x1
	bhi	.L343	@cond_branch
	mov	r2, #0x4
	b	.L343
.L346:
	.align	2, 0
.L345:
	.word	sSlotMachineState
.L340:
	mov	r0, sp
	ldrb	r2, [r0]
	add	r1, r7, #0
.L343:
	mov	r3, r9
	sub	r2, r3, r2
	cmp	r2, #0
	bge	.L344	@cond_branch
	add	r2, r2, #0x15
.L344:
	ldr	r0, [r1]
	mov	r3, r8
	lsl	r1, r3, #0x1
	add	r0, r0, #0x2c
	add	r0, r0, r1
	strh	r2, [r0]
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 StopReel3,.Lfe21-StopReel3
	.align	2, 0
	.type	 TwoReelBiasCheck,function
	.thumb_func
TwoReelBiasCheck:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	add	r7, r0, #0
	add	r6, r1, #0
	mov	r8, r2
	add	r5, r3, #0
	ldr	r0, [sp, #0x34]
	mov	r9, r0
	mov	r0, sp
	mov	r1, #0x0
	mov	r2, #0x9
	bl	memset
	mov	r1, #0x7
	add	r0, sp, #0x8
.L351:
	strb	r1, [r0]
	sub	r0, r0, #0x1
	cmp	r0, sp
	bge	.L351	@cond_branch
	mov	r4, #0x0
	lsl	r2, r7, #0x1
	lsl	r0, r7, #0x2
	mov	r1, r8
	lsl	r1, r1, #0x1
	str	r1, [sp, #0x10]
	mov	r3, r8
	lsl	r1, r3, #0x2
	ldr	r3, .L418
	mov	ip, r3
	add	r0, r0, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	mov	sl, r0
	add	r2, r2, r7
	add	r2, r2, sp
	ldr	r3, [sp, #0x10]
	add	r3, r3, r8
	add	r1, r1, r8
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	str	r1, [sp, #0xc]
	add	r3, r3, sp
.L356:
	mov	r1, sl
	add	r0, r6, r1
	add	r0, r0, ip
	ldrb	r0, [r0]
	strb	r0, [r2]
	ldr	r1, [sp, #0xc]
	add	r0, r5, r1
	add	r0, r0, ip
	ldrb	r0, [r0]
	strb	r0, [r3]
	add	r6, r6, #0x1
	cmp	r6, #0x14
	ble	.L357	@cond_branch
	mov	r6, #0x0
.L357:
	add	r5, r5, #0x1
	cmp	r5, #0x14
	ble	.L355	@cond_branch
	mov	r5, #0x0
.L355:
	add	r2, r2, #0x1
	add	r3, r3, #0x1
	add	r4, r4, #0x1
	cmp	r4, #0x2
	ble	.L356	@cond_branch
	mov	r3, r9
	cmp	r3, #0x1
	beq	.L374	@cond_branch
	cmp	r3, #0x1
	bgt	.L403	@cond_branch
	cmp	r3, #0
	beq	.L361	@cond_branch
	b	.L360
.L419:
	.align	2, 0
.L418:
	.word	sReelIconAnimByReelAndPos
.L403:
	mov	r5, r9
	cmp	r5, #0x2
	beq	.L392	@cond_branch
	b	.L360
.L361:
	mov	r4, #0x0
.L365:
	mov	r1, sp
	add	r0, r1, r4
	ldrb	r1, [r0]
	mov	r0, #0x1
	bl	TestReelIconAttribute
	cmp	r0, #0
	bne	.L417	@cond_branch
	add	r4, r4, #0x1
	cmp	r4, #0x2
	ble	.L365	@cond_branch
	mov	r4, #0x0
	ldr	r3, .L420
.L371:
	ldrb	r0, [r3]
	mov	r5, sp
	add	r2, r5, r0
	ldrb	r0, [r3, #0x1]
	add	r1, r5, r0
	ldrb	r0, [r2]
	ldrb	r1, [r1]
	cmp	r0, r1
	beq	.L416	@cond_branch
	add	r3, r3, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0xe
	ble	.L371	@cond_branch
	b	.L417
.L421:
	.align	2, 0
.L420:
	.word	sSecondReelBiasCheckIndices
.L374:
	cmp	r7, #0
	beq	.L376	@cond_branch
	mov	r0, r8
	cmp	r0, #0
	bne	.L416	@cond_branch
.L376:
	cmp	r7, #0x1
	beq	.L378	@cond_branch
	mov	r1, r8
	cmp	r1, #0x1
	bne	.L377	@cond_branch
.L378:
	mov	r4, #0x0
	ldr	r3, .L422
.L382:
	ldrb	r0, [r3]
	mov	r5, sp
	add	r2, r5, r0
	ldrb	r0, [r3, #0x1]
	add	r1, r5, r0
	ldrb	r0, [r2]
	ldrb	r1, [r1]
	cmp	r0, r1
	beq	.L417	@cond_branch
	add	r3, r3, #0x6
	add	r4, r4, #0x3
	cmp	r4, #0xe
	ble	.L382	@cond_branch
.L377:
	mov	r4, #0x0
.L388:
	mov	r1, sp
	add	r0, r1, r4
	ldrb	r1, [r0]
	mov	r0, r9
	bl	TestReelIconAttribute
	cmp	r0, #0
	bne	.L416	@cond_branch
	add	r4, r4, #0x1
	cmp	r4, #0x2
	ble	.L388	@cond_branch
	b	.L417
.L423:
	.align	2, 0
.L422:
	.word	sSecondReelBiasCheckIndices
.L392:
	cmp	r7, #0x2
	beq	.L394	@cond_branch
	mov	r3, r8
	cmp	r3, #0x2
	bne	.L360	@cond_branch
.L394:
	mov	r4, #0x0
.L398:
	mov	r5, sp
	add	r0, r5, r4
	ldrb	r1, [r0]
	mov	r0, r9
	bl	TestReelIconAttribute
	cmp	r0, #0
	bne	.L415	@cond_branch
	add	r4, r4, #0x1
	cmp	r4, #0x8
	ble	.L398	@cond_branch
	b	.L417
.L415:
.L416:
	mov	r0, #0x1
	b	.L410
.L360:
	mov	r4, #0x0
	ldr	r5, .L424
.L407:
	ldrb	r0, [r5]
	mov	r1, sp
	add	r2, r1, r0
	ldrb	r0, [r5, #0x1]
	add	r1, r1, r0
	ldrb	r0, [r2]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L406	@cond_branch
	add	r1, r0, #0
	mov	r0, r9
	bl	TestReelIconAttribute
	cmp	r0, #0
	bne	.L416	@cond_branch
.L406:
	add	r5, r5, #0x2
	add	r4, r4, #0x1
	cmp	r4, #0xe
	ble	.L407	@cond_branch
.L417:
	mov	r0, #0x0
.L410:
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L425:
	.align	2, 0
.L424:
	.word	sSecondReelBiasCheckIndices
.Lfe22:
	.size	 TwoReelBiasCheck,.Lfe22-TwoReelBiasCheck
	.align	2, 0
	.type	 OneReelBiasCheck,function
	.thumb_func
OneReelBiasCheck:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	add	r7, r0, #0
	add	r5, r1, #0
	mov	r8, r2
	ldr	r0, .L490
	ldr	r2, [r0]
	mov	r1, #0x32
	ldrsh	r0, [r2, r1]
	lsl	r0, r0, #0x1
	add	r1, r2, #0
	add	r1, r1, #0x20
	add	r0, r1, r0
	mov	r3, #0x0
	ldrsh	r0, [r0, r3]
	add	r6, r0, #0x1
	mov	r3, #0x34
	ldrsh	r0, [r2, r3]
	lsl	r0, r0, #0x1
	add	r1, r1, r0
	mov	r3, #0x0
	ldrsh	r0, [r1, r3]
	add	r3, r0, #0x1
	add	r5, r5, #0x1
	cmp	r6, #0x14
	ble	.L427	@cond_branch
	mov	r6, #0x0
.L427:
	cmp	r3, #0x14
	ble	.L428	@cond_branch
	mov	r3, #0x0
.L428:
	cmp	r5, #0x14
	ble	.L429	@cond_branch
	mov	r5, #0x0
.L429:
	mov	r4, #0x0
	lsl	r1, r7, #0x1
	lsl	r0, r7, #0x2
	mov	r9, r2
	ldr	r2, .L490+0x4
	mov	sl, r2
	add	r1, r1, r7
	add	r1, r1, sp
	mov	ip, r1
	add	r0, r0, r7
	lsl	r0, r0, #0x2
	add	r0, r0, r7
	str	r0, [sp, #0xc]
.L433:
	mov	r7, r9
	mov	r0, #0x32
	ldrsh	r1, [r7, r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r4
	mov	r7, sp
	add	r2, r7, r0
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	add	r0, r6, r0
	add	r0, r0, sl
	ldrb	r0, [r0]
	strb	r0, [r2]
	mov	r0, r9
	mov	r2, #0x34
	ldrsh	r1, [r0, r2]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	add	r0, r0, r4
	add	r2, r7, r0
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	add	r0, r3, r0
	add	r0, r0, sl
	ldrb	r0, [r0]
	strb	r0, [r2]
	ldr	r7, [sp, #0xc]
	add	r0, r5, r7
	add	r0, r0, sl
	ldrb	r0, [r0]
	mov	r1, ip
	strb	r0, [r1]
	add	r6, r6, #0x1
	cmp	r6, #0x14
	ble	.L434	@cond_branch
	mov	r6, #0x0
.L434:
	add	r3, r3, #0x1
	cmp	r3, #0x14
	ble	.L435	@cond_branch
	mov	r3, #0x0
.L435:
	add	r5, r5, #0x1
	cmp	r5, #0x14
	ble	.L432	@cond_branch
	mov	r5, #0x0
.L432:
	mov	r2, #0x1
	add	ip, ip, r2
	add	r4, r4, #0x1
	cmp	r4, #0x2
	ble	.L433	@cond_branch
	mov	r3, r8
	cmp	r3, #0x1
	beq	.L452	@cond_branch
	cmp	r3, #0x1
	bgt	.L474	@cond_branch
	cmp	r3, #0
	beq	.L439	@cond_branch
	b	.L438
.L491:
	.align	2, 0
.L490:
	.word	sSlotMachineState
	.word	sReelIconAnimByReelAndPos
.L474:
	mov	r6, r8
	cmp	r6, #0x2
	beq	.L465	@cond_branch
	b	.L438
.L439:
	mov	r4, #0x0
.L443:
	mov	r7, sp
	add	r0, r7, r4
	ldrb	r1, [r0]
	mov	r0, #0x1
	bl	TestReelIconAttribute
	cmp	r0, #0
	bne	.L488	@cond_branch
	add	r4, r4, #0x1
	cmp	r4, #0x2
	ble	.L443	@cond_branch
	mov	r4, #0x0
	ldr	r2, .L492
	mov	r3, #0x0
	add	r5, r2, #0x2
.L449:
	ldrb	r0, [r2]
	mov	r6, sp
	add	r1, r6, r0
	ldrb	r0, [r2, #0x1]
	add	r0, r0, sp
	ldrb	r1, [r1]
	ldrb	r0, [r0]
	cmp	r1, r0
	bne	.L448	@cond_branch
	add	r0, r3, r5
	ldrb	r0, [r0]
	add	r0, r0, sp
	ldrb	r0, [r0]
	cmp	r1, r0
	beq	.L488	@cond_branch
.L448:
	add	r2, r2, #0x3
	add	r3, r3, #0x3
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L449	@cond_branch
.L489:
	mov	r0, #0x1
	b	.L481
.L493:
	.align	2, 0
.L492:
	.word	sThirdReelBiasCheckIndices
.L452:
	mov	r4, #0x0
	ldr	r5, .L494
.L456:
	ldrb	r0, [r5]
	mov	r7, sp
	add	r2, r7, r0
	ldrb	r0, [r5, #0x1]
	add	r1, r7, r0
	ldrb	r0, [r2]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L455	@cond_branch
	add	r1, r0, #0
	mov	r0, r8
	bl	TestReelIconAttribute
	cmp	r0, #0
	bne	.L488	@cond_branch
.L455:
	add	r5, r5, #0x3
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L456	@cond_branch
	mov	r4, #0x0
.L462:
	mov	r1, sp
	add	r0, r1, r4
	ldrb	r1, [r0]
	mov	r0, r8
	bl	TestReelIconAttribute
	cmp	r0, #0
	bne	.L489	@cond_branch
	add	r4, r4, #0x1
	cmp	r4, #0x2
	ble	.L462	@cond_branch
	b	.L488
.L495:
	.align	2, 0
.L494:
	.word	sThirdReelBiasCheckIndices
.L465:
	mov	r4, #0x0
	ldr	r5, .L496
.L469:
	ldrb	r0, [r5]
	mov	r3, sp
	add	r2, r3, r0
	ldrb	r0, [r5, #0x1]
	add	r1, r3, r0
	ldrb	r0, [r2]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L468	@cond_branch
	add	r1, r0, #0
	mov	r0, r8
	bl	TestReelIconAttribute
	cmp	r0, #0
	bne	.L489	@cond_branch
.L468:
	add	r5, r5, #0x3
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L469	@cond_branch
	b	.L488
.L497:
	.align	2, 0
.L496:
	.word	sThirdReelBiasCheckIndices
.L438:
	mov	r4, #0x0
	ldr	r5, .L498
	add	r7, r5, #0
	mov	r6, #0x0
.L478:
	ldrb	r0, [r5]
	mov	r1, sp
	add	r2, r1, r0
	add	r0, r7, #0x1
	add	r0, r6, r0
	ldrb	r0, [r0]
	add	r0, r0, sp
	ldrb	r1, [r2]
	ldrb	r0, [r0]
	cmp	r1, r0
	bne	.L477	@cond_branch
	ldrb	r0, [r5, #0x2]
	add	r0, r0, sp
	ldrb	r0, [r0]
	cmp	r1, r0
	bne	.L477	@cond_branch
	mov	r0, r8
	bl	TestReelIconAttribute
	cmp	r0, #0
	bne	.L489	@cond_branch
.L477:
	add	r5, r5, #0x3
	add	r6, r6, #0x3
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L478	@cond_branch
.L488:
	mov	r0, #0x0
.L481:
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L499:
	.align	2, 0
.L498:
	.word	sThirdReelBiasCheckIndices
.Lfe23:
	.size	 OneReelBiasCheck,.Lfe23-OneReelBiasCheck
	.align	2, 0
	.type	 TestReelIconAttribute,function
	.thumb_func
TestReelIconAttribute:
	push	{lr}
	add	r2, r1, #0
	cmp	r0, #0x6
	bhi	.L515	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L519
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L520:
	.align	2, 0
.L519:
	.word	.L516
	.align	2, 0
	.align	2, 0
.L516:
	.word	.L502
	.word	.L505
	.word	.L505
	.word	.L507
	.word	.L509
	.word	.L511
	.word	.L513
.L502:
	mov	r1, #0x4
	eor	r1, r1, r2
	neg	r0, r1
	orr	r0, r0, r1
	lsr	r0, r0, #0x1f
	b	.L517
.L505:
	mov	r0, #0x0
	cmp	r2, #0x4
	bne	.L517	@cond_branch
	mov	r0, #0x1
	b	.L517
.L507:
	mov	r1, #0x0
	sub	r0, r2, #0x5
	b	.L518
.L509:
	mov	r1, #0x0
	sub	r0, r2, #0x2
.L518:
	cmp	r0, #0x1
	bhi	.L510	@cond_branch
	mov	r1, #0x1
.L510:
	add	r0, r1, #0
	b	.L517
.L511:
	mov	r0, #0x0
	cmp	r2, #0x1
	bne	.L517	@cond_branch
	mov	r0, #0x1
	b	.L517
.L513:
	mov	r0, #0x0
	cmp	r2, #0
	bne	.L517	@cond_branch
	mov	r0, #0x1
	b	.L517
.L515:
	mov	r0, #0x0
.L517:
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 TestReelIconAttribute,.Lfe24-TestReelIconAttribute
	.align	2, 0
	.type	 ReelIconToPayoutRank,function
	.thumb_func
ReelIconToPayoutRank:
	push	{lr}
	cmp	r0, #0x6
	bhi	.L524	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L533
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L534:
	.align	2, 0
.L533:
	.word	.L531
	.align	2, 0
	.align	2, 0
.L531:
	.word	.L530
	.word	.L529
	.word	.L528
	.word	.L528
	.word	.L524
	.word	.L526
	.word	.L526
.L524:
	mov	r0, #0x1
	b	.L532
.L526:
	mov	r0, #0x3
	b	.L532
.L528:
	mov	r0, #0x4
	b	.L532
.L529:
	mov	r0, #0x5
	b	.L532
.L530:
	mov	r0, #0x6
.L532:
	pop	{r1}
	bx	r1
.Lfe25:
	.size	 ReelIconToPayoutRank,.Lfe25-ReelIconToPayoutRank
	.align	2, 0
	.type	 CalcSlotBias,function
	.thumb_func
CalcSlotBias:
	push	{r4, r5, r6, lr}
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x12
	ldr	r0, .L552
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x1
	ldr	r1, .L552+0x4
	add	r4, r0, r1
	mov	r5, #0x0
	ldrh	r0, [r4]
	cmp	r2, r0
	bcc	.L537	@cond_branch
	add	r0, r4, #0
.L538:
	add	r0, r0, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x5
	bgt	.L537	@cond_branch
	ldrh	r1, [r0]
	cmp	r2, r1
	bcs	.L538	@cond_branch
.L537:
	ldr	r6, .L552
	ldr	r1, [r6]
	ldrh	r0, [r1, #0x8]
	cmp	r0, #0x4
	bhi	.L542	@cond_branch
	ldrh	r0, [r1, #0xc]
	cmp	r0, #0
	bne	.L551	@cond_branch
	bl	Random
	ldr	r1, .L552+0x8
	and	r1, r1, r0
	ldrh	r4, [r4, #0xc]
	cmp	r1, r4
	bcs	.L543	@cond_branch
	ldr	r4, [r6]
	bl	Random
	mov	r1, #0x1
	and	r1, r1, r0
	mov	r0, #0x3c
	cmp	r1, #0
	beq	.L545	@cond_branch
	mov	r0, #0x5
.L545:
	strh	r0, [r4, #0xc]
.L543:
	ldr	r0, .L552
	ldr	r1, [r0]
	ldrh	r1, [r1, #0xc]
	cmp	r1, #0
	beq	.L547	@cond_branch
.L551:
	cmp	r5, #0
	bne	.L548	@cond_branch
	bl	Random
	ldr	r1, .L552+0x8
	and	r1, r1, r0
	ldr	r0, .L552+0xc
	cmp	r1, r0
	bhi	.L548	@cond_branch
	ldr	r0, .L552
	ldr	r4, [r0]
	bl	Random
	mov	r1, #0x1
	and	r1, r1, r0
	mov	r0, #0x3c
	cmp	r1, #0
	beq	.L549	@cond_branch
	mov	r0, #0x5
.L549:
	strh	r0, [r4, #0xc]
.L548:
	ldr	r2, .L552
	ldr	r1, [r2]
	ldrh	r0, [r1, #0xc]
	sub	r0, r0, #0x1
	strh	r0, [r1, #0xc]
	add	r0, r2, #0
.L547:
	ldr	r0, [r0]
	strh	r5, [r0, #0x8]
.L542:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L553:
	.align	2, 0
.L552:
	.word	sSlotMachineState
	.word	sReelBiasChances
	.word	0x3fff
	.word	0x2ccb
.Lfe26:
	.size	 CalcSlotBias,.Lfe26-CalcSlotBias
	.align	2, 0
	.type	 ResetMachineBias,function
	.thumb_func
ResetMachineBias:
	ldr	r0, .L555
	ldr	r1, [r0]
	mov	r0, #0x0
	strh	r0, [r1, #0x8]
	bx	lr
.L556:
	.align	2, 0
.L555:
	.word	sSlotMachineState
.Lfe27:
	.size	 ResetMachineBias,.Lfe27-ResetMachineBias
	.align	2, 0
	.type	 CalcPayout,function
	.thumb_func
CalcPayout:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0xc
	mov	r0, sp
	mov	r1, #0x0
	mov	r2, #0x9
	bl	memset
	mov	r5, #0x0
	ldr	r2, .L586
	mov	r3, #0x0
	add	r4, r2, #0
.L561:
	ldr	r0, [r2]
	lsl	r1, r5, #0x2
	add	r0, r0, #0x3c
	add	r0, r0, r1
	str	r3, [r0]
	add	r5, r5, #0x1
	cmp	r5, #0x4
	ble	.L561	@cond_branch
	mov	r0, #0x0
	mov	r9, r0
	ldr	r0, [r4]
	mov	r1, #0x20
	ldrsh	r4, [r0, r1]
	mov	r7, #0x22
	ldrsh	r3, [r0, r7]
	mov	r1, #0x24
	ldrsh	r2, [r0, r1]
	ldr	r6, .L586+0x4
	mov	r7, #0x2a
	add	r7, r7, r6
	mov	r8, r7
	mov	r1, sp
	mov	r0, #0x15
	add	r0, r0, r6
	mov	ip, r0
	mov	r5, #0x2
.L566:
	add	r4, r4, #0x1
	cmp	r4, #0x14
	ble	.L567	@cond_branch
	mov	r4, #0x0
.L567:
	add	r3, r3, #0x1
	cmp	r3, #0x14
	ble	.L568	@cond_branch
	mov	r3, #0x0
.L568:
	add	r2, r2, #0x1
	cmp	r2, #0x14
	ble	.L569	@cond_branch
	mov	r2, #0x0
.L569:
	add	r0, r4, r6
	ldrb	r0, [r0]
	strb	r0, [r1]
	mov	r7, ip
	add	r0, r3, r7
	ldrb	r0, [r0]
	strb	r0, [r1, #0x3]
	mov	r7, r8
	add	r0, r2, r7
	ldrb	r0, [r0]
	strb	r0, [r1, #0x6]
	add	r1, r1, #0x1
	sub	r5, r5, #0x1
	cmp	r5, #0
	bge	.L566	@cond_branch
	ldr	r0, .L586
	ldr	r0, [r0]
	add	r0, r0, #0x50
	mov	r1, #0x0
	strh	r1, [r0]
	ldr	r7, .L586+0x8
	mov	r8, r7
	mov	r6, #0x0
	mov	r5, #0x4
.L574:
	ldr	r0, .L586
	ldr	r1, [r0]
	mov	r0, r8
	add	r0, r0, #0x3
	add	r0, r6, r0
	ldrh	r1, [r1, #0xe]
	ldrb	r0, [r0]
	cmp	r1, r0
	bcc	.L573	@cond_branch
	ldrb	r0, [r7]
	mov	r1, sp
	add	r4, r1, r0
	ldrb	r1, [r4]
	mov	r0, #0x1
	bl	TestReelIconAttribute
	cmp	r0, #0
	beq	.L576	@cond_branch
	mov	r0, r8
	add	r0, r0, #0x1
	add	r0, r6, r0
	ldrb	r0, [r0]
	add	r0, r0, sp
	ldrb	r1, [r0]
	mov	r0, #0x2
	bl	TestReelIconAttribute
	mov	r3, #0x1
	cmp	r0, #0
	beq	.L579	@cond_branch
	mov	r3, #0x2
	b	.L585
.L587:
	.align	2, 0
.L586:
	.word	sSlotMachineState
	.word	sReelIconAnimByReelAndPos
	.word	sRowAttributes
.L576:
	mov	r0, r8
	add	r0, r0, #0x1
	add	r0, r6, r0
	ldrb	r0, [r0]
	add	r0, r0, sp
	ldrb	r1, [r4]
	ldrb	r0, [r0]
	cmp	r1, r0
	bne	.L580	@cond_branch
	ldrb	r0, [r7, #0x2]
	add	r0, r0, sp
	ldrb	r0, [r0]
	cmp	r1, r0
	bne	.L580	@cond_branch
	add	r0, r1, #0
	bl	ReelIconToPayoutRank
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	b	.L579
.L580:
	mov	r3, #0x0
.L579:
	cmp	r3, #0
	beq	.L582	@cond_branch
.L585:
	ldr	r0, .L588
	ldr	r2, [r0]
	add	r0, r2, #0
	add	r0, r0, #0x3c
	add	r0, r0, r6
	mov	r1, #0x1
	str	r1, [r0]
	add	r2, r2, #0x50
	ldr	r1, .L588+0x4
	lsl	r0, r3, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	ldrh	r1, [r2]
	add	r0, r0, r1
	strh	r0, [r2]
.L582:
	cmp	r3, r9
	ble	.L573	@cond_branch
	mov	r9, r3
.L573:
	add	r7, r7, #0x4
	add	r6, r6, #0x4
	sub	r5, r5, #0x1
	cmp	r5, #0
	bge	.L574	@cond_branch
	mov	r7, r9
	lsl	r0, r7, #0x10
	lsr	r0, r0, #0x10
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L589:
	.align	2, 0
.L588:
	.word	sSlotMachineState
	.word	sPayoutTable
.Lfe28:
	.size	 CalcPayout,.Lfe28-CalcPayout
	.align	2, 0
	.type	 GetPayout,function
	.thumb_func
GetPayout:
	ldr	r0, .L591
	ldr	r0, [r0]
	add	r0, r0, #0x50
	ldrh	r0, [r0]
	bx	lr
.L592:
	.align	2, 0
.L591:
	.word	sSlotMachineState
.Lfe29:
	.size	 GetPayout,.Lfe29-GetPayout
	.align	2, 0
	.type	 GetPlayerBet,function
	.thumb_func
GetPlayerBet:
	ldr	r0, .L594
	ldr	r0, [r0]
	ldrb	r0, [r0, #0xe]
	bx	lr
.L595:
	.align	2, 0
.L594:
	.word	sSlotMachineState
.Lfe30:
	.size	 GetPlayerBet,.Lfe30-GetPlayerBet
	.align	2, 0
	.type	 GetWinFlagByLine,function
	.thumb_func
GetWinFlagByLine:
	ldr	r1, .L597
	ldr	r1, [r1]
	lsl	r0, r0, #0x2
	add	r1, r1, #0x3c
	add	r1, r1, r0
	ldr	r0, [r1]
	bx	lr
.L598:
	.align	2, 0
.L597:
	.word	sSlotMachineState
.Lfe31:
	.size	 GetWinFlagByLine,.Lfe31-GetWinFlagByLine
	.align	2, 0
	.type	 LoadSpriteGraphicsAndAllocateManager,function
	.thumb_func
LoadSpriteGraphicsAndAllocateManager:
	push	{r4, r5, lr}
	mov	r5, #0x0
	ldr	r4, .L607
.L603:
	add	r0, r4, #0
	bl	LoadCompressedSpriteSheet
	add	r4, r4, #0x8
	add	r5, r5, #0x1
	cmp	r5, #0x2
	bls	.L603	@cond_branch
	ldr	r0, .L607+0x4
	bl	LoadSpritePalettes
	ldr	r4, .L607+0x8
	mov	r0, #0x74
	bl	Alloc
	str	r0, [r4]
	cmp	r0, #0
	beq	.L605	@cond_branch
	bl	InitGfxManager
	mov	r0, #0x1
	b	.L606
.L608:
	.align	2, 0
.L607:
	.word	sSpriteSheets
	.word	sSpritePalettes
	.word	sSlotMachineGfxManager
.L605:
	mov	r0, #0x0
.L606:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 LoadSpriteGraphicsAndAllocateManager,.Lfe32-LoadSpriteGraphicsAndAllocateManager
	.align	2, 0
	.type	 DestroyGfxManager,function
	.thumb_func
DestroyGfxManager:
	push	{r4, lr}
	ldr	r4, .L611
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L610	@cond_branch
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
.L610:
	pop	{r4}
	pop	{r0}
	bx	r0
.L612:
	.align	2, 0
.L611:
	.word	sSlotMachineGfxManager
.Lfe33:
	.size	 DestroyGfxManager,.Lfe33-DestroyGfxManager
	.align	2, 0
	.type	 InitGfxManager,function
	.thumb_func
InitGfxManager:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	mov	r2, #0x0
	mov	r5, #0x0
	add	r6, r4, #0
	add	r6, r6, #0xc
.L617:
	lsl	r0, r2, #0x2
	add	r1, r4, r0
	str	r5, [r1]
	add	r3, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	mov	r1, #0x4
	add	r0, r0, r6
	add	r0, r0, #0x10
.L621:
	str	r5, [r0]
	sub	r0, r0, #0x4
	sub	r1, r1, #0x1
	cmp	r1, #0
	bge	.L621	@cond_branch
	add	r2, r3, #0
	cmp	r2, #0x2
	ble	.L617	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe34:
	.size	 InitGfxManager,.Lfe34-InitGfxManager
	.align	2, 0
	.type	 CreateReelIconSprites,function
	.thumb_func
CreateReelIconSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	r7, #0x0
.L628:
	mov	r6, #0x0
	lsl	r0, r7, #0x2
	add	r1, r7, #0x1
	str	r1, [sp]
	add	r0, r0, r7
	mov	sl, r0
	mov	r2, sl
	lsl	r2, r2, #0x2
	mov	r8, r2
	mov	r3, #0xb0
	lsl	r3, r3, #0xe
	mov	r9, r3
.L632:
	mov	r0, sl
	lsl	r1, r0, #0x13
	mov	r2, #0xa0
	lsl	r2, r2, #0xf
	add	r1, r1, r2
	mov	r3, r9
	asr	r2, r3, #0x10
	ldr	r0, .L635
	asr	r1, r1, #0x10
	mov	r3, #0x2
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L635+0x4
	mov	r3, r8
	add	r1, r3, r7
	add	r1, r6, r1
	add	r1, r1, r2
	ldrb	r4, [r1]
	lsl	r5, r0, #0x4
	add	r5, r5, r0
	lsl	r5, r5, #0x2
	ldr	r0, .L635+0x8
	add	r5, r5, r0
	add	r0, r5, #0
	add	r1, r4, #0
	bl	StartSpriteAnim
	ldr	r0, .L635+0xc
	lsl	r4, r4, #0x1
	add	r4, r4, r0
	ldrh	r0, [r4]
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x4
	ldrb	r2, [r5, #0x5]
	mov	r1, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r5, #0x5]
	mov	r0, #0x0
	strh	r7, [r5, #0x2e]
	strh	r6, [r5, #0x30]
	strh	r6, [r5, #0x32]
	strh	r0, [r5, #0x34]
	ldrb	r0, [r5, #0x3]
	mov	r2, #0x3f
	neg	r2, r2
	add	r1, r2, #0
	and	r0, r0, r1
	strb	r0, [r5, #0x3]
	ldr	r0, .L635+0x10
	ldr	r2, [r0]
	lsl	r1, r6, #0x2
	add	r1, r1, r8
	add	r0, r2, #0
	add	r0, r0, #0xc
	add	r0, r0, r1
	str	r5, [r0]
	ldr	r0, .L635+0x14
	str	r0, [r2, #0x70]
	mov	r3, #0xc0
	lsl	r3, r3, #0xd
	add	r9, r9, r3
	add	r6, r6, #0x1
	cmp	r6, #0x4
	ble	.L632	@cond_branch
	ldr	r7, [sp]
	cmp	r7, #0x2
	ble	.L628	@cond_branch
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L636:
	.align	2, 0
.L635:
	.word	sSpriteTemplate_ReelIcons
	.word	sReelIconAnimByReelAndPos
	.word	gSprites
	.word	sReelIconPaletteTags
	.word	sSlotMachineGfxManager
	.word	0x7000006
.Lfe35:
	.size	 CreateReelIconSprites,.Lfe35-CreateReelIconSprites
	.align	2, 0
	.type	 UpdateReelIconSprites,function
	.thumb_func
UpdateReelIconSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	add	r3, r0, #0
	mov	r2, #0x0
	ldr	r0, .L649
	mov	r8, r0
.L641:
	mov	r4, #0x0
	ldrsh	r6, [r3, r4]
	mov	r4, #0x0
	ldrsh	r0, [r1, r4]
	lsl	r0, r0, #0x3
	mov	sl, r0
	lsl	r0, r2, #0x2
	add	r3, r3, #0x2
	str	r3, [sp]
	add	r1, r1, #0x2
	str	r1, [sp, #0x4]
	add	r1, r2, #0x1
	str	r1, [sp, #0x8]
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	mov	r9, r2
	add	r5, r0, #0
	mov	r7, #0x4
.L645:
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, #0xc
	add	r1, r1, r5
	ldr	r0, [r1]
	mov	r3, sl
	strh	r3, [r0, #0x26]
	ldr	r2, .L649+0x4
	mov	r4, r9
	add	r0, r6, r4
	add	r0, r0, r2
	ldrb	r4, [r0]
	ldr	r0, [r1]
	add	r1, r4, #0
	bl	StartSpriteAnim
	mov	r1, r8
	ldr	r0, [r1]
	add	r0, r0, #0xc
	add	r0, r0, r5
	ldr	r0, [r0]
	add	r1, r4, #0
	bl	StartSpriteAnim
	ldr	r0, .L649+0x8
	lsl	r4, r4, #0x1
	add	r4, r4, r0
	ldrh	r0, [r4]
	bl	IndexOfSpritePaletteTag
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, #0xc
	add	r1, r1, r5
	ldr	r3, [r1]
	lsl	r0, r0, #0x4
	ldrb	r2, [r3, #0x5]
	mov	r1, #0xf
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r3, #0x5]
	add	r6, r6, #0x1
	cmp	r6, #0x14
	ble	.L644	@cond_branch
	mov	r6, #0x0
.L644:
	add	r5, r5, #0x4
	sub	r7, r7, #0x1
	cmp	r7, #0
	bge	.L645	@cond_branch
	ldr	r3, [sp]
	ldr	r1, [sp, #0x4]
	ldr	r2, [sp, #0x8]
	cmp	r2, #0x2
	ble	.L641	@cond_branch
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L650:
	.align	2, 0
.L649:
	.word	sSlotMachineGfxManager
	.word	sReelIconAnimByReelAndPos
	.word	sReelIconPaletteTags
.Lfe36:
	.size	 UpdateReelIconSprites,.Lfe36-UpdateReelIconSprites
	.align	2, 0
	.type	 HBlankCB_SlotMachine,function
	.thumb_func
HBlankCB_SlotMachine:
	push	{lr}
	ldr	r0, .L655
	ldrh	r0, [r0]
	add	r3, r0, #0
	sub	r3, r3, #0x2b
	cmp	r3, #0x53
	bhi	.L652	@cond_branch
	ldr	r0, .L655+0x4
	ldr	r0, [r0]
	ldr	r2, [r0, #0x70]
	ldr	r1, .L655+0x8
	lsl	r0, r3, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	strh	r0, [r2]
	ldr	r1, .L655+0xc
	ldr	r0, .L655+0x10
	add	r0, r3, r0
	ldrb	r0, [r0]
	b	.L654
.L656:
	.align	2, 0
.L655:
	.word	0x4000006
	.word	sSlotMachineGfxManager
	.word	sReelIconAffineParams
	.word	0x4000054
	.word	sReelIconBldY
.L652:
	ldr	r0, .L657
	ldr	r0, [r0]
	ldr	r1, [r0, #0x70]
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r0, r2, #0
	strh	r0, [r1]
	ldr	r1, .L657+0x4
	mov	r0, #0x0
.L654:
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L658:
	.align	2, 0
.L657:
	.word	sSlotMachineGfxManager
	.word	0x4000054
.Lfe37:
	.size	 HBlankCB_SlotMachine,.Lfe37-HBlankCB_SlotMachine
	.align	2, 0
	.type	 CreateScoreDigitSprites,function
	.thumb_func
CreateScoreDigitSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	r5, #0x0
	ldr	r0, .L665
	mov	sl, r0
	ldr	r0, .L665+0x4
	mov	r9, r0
	ldr	r0, .L665+0x8
	mov	r8, r0
	mov	r7, #0x85
	lsl	r7, r7, #0x10
	mov	r6, #0xaa
	lsl	r6, r6, #0xf
.L663:
	asr	r1, r6, #0x10
	mov	r0, sl
	mov	r2, #0x1e
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r0, r9
	ldr	r1, [r0]
	lsl	r4, r5, #0x2
	add	r1, r1, #0x48
	add	r1, r1, r4
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	str	r0, [r1]
	asr	r1, r7, #0x10
	mov	r0, sl
	mov	r2, #0x1e
	mov	r3, #0x0
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r0, r9
	ldr	r1, [r0]
	add	r1, r1, #0x58
	add	r1, r1, r4
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	str	r0, [r1]
	mov	r0, #0xe0
	lsl	r0, r0, #0xb
	add	r7, r7, r0
	add	r6, r6, r0
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L663	@cond_branch
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L666:
	.align	2, 0
.L665:
	.word	sSpriteTemplate_Digits
	.word	sSlotMachineGfxManager
	.word	gSprites
.Lfe38:
	.size	 CreateScoreDigitSprites,.Lfe38-CreateScoreDigitSprites
	.align	2, 0
	.type	 UpdateCoinsDisplay,function
	.thumb_func
UpdateCoinsDisplay:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	bl	GetCoins
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r9, r0
	bl	GetPayout
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	mov	r6, #0xfa
	lsl	r6, r6, #0x2
	mov	r7, #0x0
	ldr	r0, .L673
	mov	sl, r0
.L671:
	mov	r0, r9
	add	r1, r6, #0
	bl	__divsi3
	add	r4, r0, #0
	mov	r1, sl
	ldr	r0, [r1]
	lsl	r5, r7, #0x2
	add	r0, r0, #0x48
	add	r0, r0, r5
	ldr	r0, [r0]
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	mov	r0, r4
	mul	r0, r0, r6
	mov	r1, r9
	sub	r1, r1, r0
	mov	r9, r1
	mov	r0, r8
	add	r1, r6, #0
	bl	__divsi3
	add	r4, r0, #0
	mov	r1, sl
	ldr	r0, [r1]
	add	r0, r0, #0x58
	add	r0, r0, r5
	ldr	r0, [r0]
	lsl	r1, r4, #0x18
	lsr	r1, r1, #0x18
	bl	StartSpriteAnim
	mov	r0, r4
	mul	r0, r0, r6
	mov	r1, r8
	sub	r1, r1, r0
	mov	r8, r1
	add	r0, r6, #0
	mov	r1, #0xa
	bl	__divsi3
	add	r6, r0, #0
	add	r7, r7, #0x1
	cmp	r7, #0x3
	ble	.L671	@cond_branch
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L674:
	.align	2, 0
.L673:
	.word	sSlotMachineGfxManager
.Lfe39:
	.size	 UpdateCoinsDisplay,.Lfe39-UpdateCoinsDisplay
	.align	2, 0
	.type	 CreateClefairySprites,function
	.thumb_func
CreateClefairySprites:
	push	{r4, r5, r6, lr}
	ldr	r6, .L676
	add	r0, r6, #0
	mov	r1, #0x10
	mov	r2, #0x88
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r5, .L676+0x4
	ldr	r1, [r5]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	ldr	r4, .L676+0x8
	add	r0, r0, r4
	str	r0, [r1, #0x68]
	add	r0, r6, #0
	mov	r1, #0xe0
	mov	r2, #0x88
	mov	r3, #0x1
	bl	CreateSprite
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r1, [r5]
	lsl	r0, r2, #0x4
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	str	r0, [r1, #0x6c]
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r2, #0x1
	orr	r1, r1, r2
	strb	r1, [r0]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L677:
	.align	2, 0
.L676:
	.word	sSpriteTemplate_Clefairy
	.word	sSlotMachineGfxManager
	.word	gSprites
.Lfe40:
	.size	 CreateClefairySprites,.Lfe40-CreateClefairySprites
	.align	2, 0
	.type	 SetClefairySpriteAnim,function
	.thumb_func
SetClefairySpriteAnim:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	mov	r4, #0x0
	ldr	r6, .L684
.L682:
	ldr	r0, [r6]
	lsl	r1, r4, #0x2
	add	r0, r0, #0x68
	add	r0, r0, r1
	ldr	r0, [r0]
	add	r1, r5, #0
	bl	StartSpriteAnim
	add	r4, r4, #0x1
	cmp	r4, #0x1
	ble	.L682	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L685:
	.align	2, 0
.L684:
	.word	sSlotMachineGfxManager
.Lfe41:
	.size	 SetClefairySpriteAnim,.Lfe41-SetClefairySpriteAnim
	.align	2, 0
	.type	 CreateSlotMachine,function
	.thumb_func
CreateSlotMachine:
	push	{r4, lr}
	ldr	r0, .L695
	bl	Alloc
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L694	@cond_branch
	ldr	r2, .L695+0x4
	mov	r1, #0x0
	add	r0, r4, #0
	add	r0, r0, #0x1c
.L691:
	strb	r1, [r0, #0x3]
	sub	r0, r0, #0x4
	cmp	r0, r4
	bge	.L691	@cond_branch
	mov	r0, #0x0
	str	r0, [r4, #0x28]
	add	r0, r2, #0
	mov	r1, #0x2
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	add	r2, r4, #0
	bl	SetWordTaskArg
.L694:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L696:
	.align	2, 0
.L695:
	.word	0x285c
	.word	Task_SlotMachine
.Lfe42:
	.size	 CreateSlotMachine,.Lfe42-CreateSlotMachine
	.align	2, 0
	.type	 DestroySlotMachine,function
	.thumb_func
DestroySlotMachine:
	push	{r4, lr}
	ldr	r4, .L699
	add	r0, r4, #0
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L698	@cond_branch
	bl	GetSlotMachineSetupTaskDataPtr
	bl	Free
	add	r0, r4, #0
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
.L698:
	bl	DestroyGfxManager
	bl	FreeAllWindowBuffers
	pop	{r4}
	pop	{r0}
	bx	r0
.L700:
	.align	2, 0
.L699:
	.word	Task_SlotMachine
.Lfe43:
	.size	 DestroySlotMachine,.Lfe43-DestroySlotMachine
	.align	2, 0
	.type	 Task_SlotMachine,function
	.thumb_func
Task_SlotMachine:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	GetWordTaskArg
	add	r6, r0, #0
	ldr	r0, .L708
	mov	r8, r0
	add	r4, r6, #0x2
	add	r5, r6, #0
	mov	r7, #0x7
.L705:
	ldrb	r0, [r4, #0x1]
	cmp	r0, #0
	beq	.L704	@cond_branch
	ldrh	r0, [r5]
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	ldr	r2, [r0]
	add	r0, r4, #0
	add	r1, r6, #0
	bl	_call_via_r2
	strb	r0, [r4, #0x1]
.L704:
	add	r4, r4, #0x4
	add	r5, r5, #0x4
	sub	r7, r7, #0x1
	cmp	r7, #0
	bge	.L705	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L709:
	.align	2, 0
.L708:
	.word	sSlotMachineSetupTasks
.Lfe44:
	.size	 Task_SlotMachine,.Lfe44-Task_SlotMachine
	.align	2, 0
	.type	 VBlankCB_SlotMachine,function
	.thumb_func
VBlankCB_SlotMachine:
	push	{lr}
	bl	TransferPlttBuffer
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 VBlankCB_SlotMachine,.Lfe45-VBlankCB_SlotMachine
	.align	2, 0
	.type	 GetSlotMachineSetupTaskDataPtr,function
	.thumb_func
GetSlotMachineSetupTaskDataPtr:
	push	{lr}
	ldr	r0, .L712
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	bl	GetWordTaskArg
	pop	{r1}
	bx	r1
.L713:
	.align	2, 0
.L712:
	.word	Task_SlotMachine
.Lfe46:
	.size	 GetSlotMachineSetupTaskDataPtr,.Lfe46-GetSlotMachineSetupTaskDataPtr
	.align	2, 0
	.type	 SetSlotMachineSetupTask,function
	.thumb_func
SetSlotMachineSetupTask:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	bl	GetSlotMachineSetupTaskDataPtr
	add	r1, r0, #0
	lsl	r5, r5, #0x2
	add	r5, r1, r5
	mov	r0, #0x0
	strh	r4, [r5]
	strb	r0, [r5, #0x2]
	ldr	r0, .L715
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	add	r0, r5, #0x2
	ldr	r2, [r4]
	bl	_call_via_r2
	strb	r0, [r5, #0x3]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L716:
	.align	2, 0
.L715:
	.word	sSlotMachineSetupTasks
.Lfe47:
	.size	 SetSlotMachineSetupTask,.Lfe47-SetSlotMachineSetupTask
	.align	2, 0
	.type	 IsSlotMachineSetupTaskActive,function
	.thumb_func
IsSlotMachineSetupTaskActive:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	GetSlotMachineSetupTaskDataPtr
	lsl	r4, r4, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0, #0x3]
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe48:
	.size	 IsSlotMachineSetupTaskActive,.Lfe48-IsSlotMachineSetupTaskActive
	.align	2, 0
	.type	 SlotsTask_GraphicsInit,function
	.thumb_func
SlotsTask_GraphicsInit:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x14
	add	r7, r0, #0
	mov	r8, r1
	ldrb	r6, [r7]
	cmp	r6, #0x1
	beq	.L723	@cond_branch
	cmp	r6, #0x1
	bgt	.L732	@cond_branch
	cmp	r6, #0
	beq	.L722	@cond_branch
	b	.L721
.L732:
	cmp	r6, #0x2
	bne	.LCB4736
	b	.L726	@long jump
.LCB4736:
	cmp	r6, #0x3
	bne	.LCB4738
	b	.L728	@long jump
.LCB4738:
	b	.L721
.L722:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	b	.L734
.L723:
	mov	r0, #0x0
	bl	SetVBlankCallback
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	mov	r1, #0xe0
	lsl	r1, r1, #0x13
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	mov	r0, #0x0
	mov	r3, #0x1
	bl	RequestDma3Fill
	mov	r1, #0xc0
	lsl	r1, r1, #0x13
	mov	r0, #0x0
	mov	r2, #0x20
	mov	r3, #0x1
	bl	RequestDma3Fill
	ldr	r1, .L735
	mov	r0, #0x0
	mov	r2, #0x20
	mov	r3, #0x1
	bl	RequestDma3Fill
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	bl	ResetBgPositions
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L735+0x4
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	ldr	r0, .L735+0x8
	bl	InitWindows
	ldr	r1, .L735+0xc
	add	r1, r1, r8
	mov	r0, #0x3
	bl	SetBgTilemapBuffer
	mov	r4, #0x20
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	bl	ResetTempTileDataBuffers
	ldr	r1, .L735+0x10
	mov	r5, #0x0
	str	r5, [sp]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r1, .L735+0x14
	str	r5, [sp]
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0xc0
	bl	DecompressAndCopyTileDataToVram
	ldr	r1, .L735+0x18
	add	r1, r1, r8
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	ldr	r1, .L735+0x1c
	mov	r0, #0x2
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBuffer
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	ldr	r0, .L735+0x20
	mov	r1, #0x0
	mov	r2, #0xa0
	bl	LoadPalette
	ldr	r0, .L735+0x24
	mov	r1, #0x50
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L735+0x28
	mov	r1, #0x70
	mov	r2, #0x60
	bl	LoadPalette
	ldr	r1, .L735+0x2c
	add	r0, sp, #0xc
	strh	r1, [r0]
	mov	r1, #0x0
	mov	r2, #0x2
	bl	LoadPalette
	mov	r0, #0x0
	mov	r1, #0xa
	mov	r2, #0xd0
	bl	LoadUserWindowGfx2
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xf0
	bl	LoadStdWindowGfxOnBg
	ldr	r1, .L735+0x30
	add	r1, r1, r8
	mov	r0, #0x0
	bl	SetBgTilemapBuffer
	str	r4, [sp]
	mov	r0, #0x1e
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x2
	bl	FillBgTilemapBufferRect_Palette0
	ldr	r1, .L735+0x34
	str	r5, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	ldr	r1, .L735+0x38
	str	r6, [sp]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DecompressAndCopyTileDataToVram
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x2
	bl	GetTextWindowPalette
	mov	r1, #0xe0
	mov	r2, #0x20
	bl	LoadPalette
	mov	r0, #0x1
	mov	r1, #0xff
	bl	FillWindowPixelBuffer
	mov	r0, #0x1
	bl	PutWindowTilemap
	ldr	r4, .L735+0x3c
	mov	r0, #0x0
	add	r1, r4, #0
	mov	r2, #0x0
	bl	GetStringWidth
	mov	r2, #0xec
	sub	r2, r2, r0
	add	r1, sp, #0x10
	mov	r0, #0xf
	strb	r0, [r1]
	strb	r6, [r1, #0x1]
	mov	r0, #0x2
	strb	r0, [r1, #0x2]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r1, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized3
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r1, #0x83
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuRegBits
	mov	r0, #0x50
	mov	r1, #0xf8
	bl	SetGpuReg
	bl	LoadSpriteGraphicsAndAllocateManager
	bl	CreateReelIconSprites
	bl	CreateScoreDigitSprites
	bl	CreateClefairySprites
	bl	UpdateCoinsDisplay
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	ldr	r0, .L735+0x40
	bl	SetVBlankCallback
	ldr	r0, .L735+0x44
	bl	SetHBlankCallback
	b	.L734
.L736:
	.align	2, 0
.L735:
	.word	0x600c000
	.word	sBgTemplates
	.word	sWindowTemplates
	.word	0x205c
	.word	sBg_Tiles
	.word	sButtonPressed_Tiles
	.word	0x185c
	.word	sBg_Tilemap
	.word	sBg_Pal
	.word	sBgPal_MatchLines
	.word	sCombosWindow_Pal
	.word	0x7fde
	.word	0x85c
	.word	sCombosWindow_Tiles
	.word	sCombosWindow_Tilemap
	.word	gString_SlotMachineControls
	.word	VBlankCB_SlotMachine
	.word	HBlankCB_SlotMachine
.L726:
	bl	FreeTempTileDataBuffersIfPossible
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0
	bne	.L721	@cond_branch
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x1
	bl	HideBg
	bl	InitReelButtonTileMem
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	str	r5, [sp]
	add	r0, r4, #0
	add	r1, r4, #0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	mov	r0, #0x3
	bl	EnableInterrupts
.L734:
	ldrb	r0, [r7]
	add	r0, r0, #0x1
	strb	r0, [r7]
	b	.L721
.L728:
	bl	UpdatePaletteFade
	ldr	r0, .L737
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L721	@cond_branch
	mov	r0, #0x0
	b	.L733
.L738:
	.align	2, 0
.L737:
	.word	gPaletteFade
.L721:
	mov	r0, #0x1
.L733:
	add	sp, sp, #0x14
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe49:
	.size	 SlotsTask_GraphicsInit,.Lfe49-SlotsTask_GraphicsInit
	.align	2, 0
	.type	 SlotsTask_FadeOut,function
	.thumb_func
SlotsTask_FadeOut:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L741	@cond_branch
	cmp	r0, #0x1
	beq	.L742	@cond_branch
	b	.L740
.L741:
	mov	r1, #0x1
	neg	r1, r1
	str	r0, [sp]
	add	r0, r1, #0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L740
.L742:
	ldr	r0, .L747
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L740	@cond_branch
	mov	r0, #0x0
	b	.L746
.L748:
	.align	2, 0
.L747:
	.word	gPaletteFade
.L740:
	mov	r0, #0x1
.L746:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe50:
	.size	 SlotsTask_FadeOut,.Lfe50-SlotsTask_FadeOut
	.align	2, 0
	.type	 SlotsTask_UpdateLineStates,function
	.thumb_func
SlotsTask_UpdateLineStates:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L751	@cond_branch
	cmp	r0, #0x1
	beq	.L752	@cond_branch
	b	.L750
.L751:
	mov	r0, #0x2
	bl	GetBgTilemapBuffer
	bl	SetLineStatesByBet
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L750
.L752:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L750	@cond_branch
	mov	r0, #0x0
	b	.L756
.L750:
	mov	r0, #0x1
.L756:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 SlotsTask_UpdateLineStates,.Lfe51-SlotsTask_UpdateLineStates
	.align	2, 0
	.type	 SlotsTask_ClefairyUpdateOnReelsStart,function
	.thumb_func
SlotsTask_ClefairyUpdateOnReelsStart:
	push	{lr}
	mov	r0, #0x1
	bl	SetClefairySpriteAnim
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.Lfe52:
	.size	 SlotsTask_ClefairyUpdateOnReelsStart,.Lfe52-SlotsTask_ClefairyUpdateOnReelsStart
	.align	2, 0
	.type	 SlotsTask_StartClefairyDanceAndWinningLineFlash,function
	.thumb_func
SlotsTask_StartClefairyDanceAndWinningLineFlash:
	push	{lr}
	mov	r0, #0x2
	bl	SetClefairySpriteAnim
	ldr	r0, .L759
	mov	r1, #0x3
	bl	CreateTask
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L760:
	.align	2, 0
.L759:
	.word	Task_FlashWinningLine
.Lfe53:
	.size	 SlotsTask_StartClefairyDanceAndWinningLineFlash,.Lfe53-SlotsTask_StartClefairyDanceAndWinningLineFlash
	.align	2, 0
	.type	 SlotsTask_StopWinningLineFlashTask,function
	.thumb_func
SlotsTask_StopWinningLineFlashTask:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L763	@cond_branch
	cmp	r0, #0x1
	beq	.L764	@cond_branch
	b	.L762
.L763:
	bl	SignalStopWinningLineFlashTask
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L762
.L764:
	ldr	r0, .L769
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L762	@cond_branch
	mov	r0, #0x0
	bl	SetClefairySpriteAnim
	mov	r0, #0x0
	b	.L768
.L770:
	.align	2, 0
.L769:
	.word	Task_FlashWinningLine
.L762:
	mov	r0, #0x1
.L768:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe54:
	.size	 SlotsTask_StopWinningLineFlashTask,.Lfe54-SlotsTask_StopWinningLineFlashTask
	.align	2, 0
	.type	 SlotsTask_ClefairyFainted,function
	.thumb_func
SlotsTask_ClefairyFainted:
	push	{lr}
	mov	r0, #0x3
	bl	SetClefairySpriteAnim
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.Lfe55:
	.size	 SlotsTask_ClefairyFainted,.Lfe55-SlotsTask_ClefairyFainted
	.align	2, 0
	.type	 SlotsTask_ClefairyNeutral,function
	.thumb_func
SlotsTask_ClefairyNeutral:
	push	{lr}
	mov	r0, #0x0
	bl	SetClefairySpriteAnim
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.Lfe56:
	.size	 SlotsTask_ClefairyNeutral,.Lfe56-SlotsTask_ClefairyNeutral
	.align	2, 0
	.type	 SlotsTask_UpdateCoinsDisplay,function
	.thumb_func
SlotsTask_UpdateCoinsDisplay:
	push	{lr}
	bl	UpdateCoinsDisplay
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.Lfe57:
	.size	 SlotsTask_UpdateCoinsDisplay,.Lfe57-SlotsTask_UpdateCoinsDisplay
	.align	2, 0
	.type	 SlotsTask_MessageOutOfCoins,function
	.thumb_func
SlotsTask_MessageOutOfCoins:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L776	@cond_branch
	cmp	r0, #0x1
	beq	.L777	@cond_branch
	b	.L775
.L776:
	ldr	r0, .L782
	bl	Slot_PrintOnWindow0
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L775
.L783:
	.align	2, 0
.L782:
	.word	gString_OutOfCoins
.L777:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L775	@cond_branch
	mov	r0, #0x0
	b	.L781
.L775:
	mov	r0, #0x1
.L781:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe58:
	.size	 SlotsTask_MessageOutOfCoins,.Lfe58-SlotsTask_MessageOutOfCoins
	.align	2, 0
	.type	 SlotsTask_AskQuitPlaying,function
	.thumb_func
SlotsTask_AskQuitPlaying:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L786	@cond_branch
	cmp	r0, #0x1
	beq	.L787	@cond_branch
	b	.L785
.L786:
	ldr	r0, .L792
	bl	Slot_PrintOnWindow0
	mov	r0, #0x0
	bl	Slot_CreateYesNoMenu
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L785
.L793:
	.align	2, 0
.L792:
	.word	gString_QuitPlaying
.L787:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L785	@cond_branch
	mov	r0, #0x0
	b	.L791
.L785:
	mov	r0, #0x1
.L791:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe59:
	.size	 SlotsTask_AskQuitPlaying,.Lfe59-SlotsTask_AskQuitPlaying
	.align	2, 0
	.type	 SlotsTask_DestroyYesNoMenu,function
	.thumb_func
SlotsTask_DestroyYesNoMenu:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L796	@cond_branch
	cmp	r0, #0x1
	beq	.L797	@cond_branch
	b	.L795
.L796:
	bl	Slot_ClearWindow0
	bl	Slot_DestroyYesNoMenu
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L795
.L797:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L795	@cond_branch
	mov	r0, #0x0
	b	.L801
.L795:
	mov	r0, #0x1
.L801:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe60:
	.size	 SlotsTask_DestroyYesNoMenu,.Lfe60-SlotsTask_DestroyYesNoMenu
	.align	2, 0
	.type	 SlotsTask_PressReelButton,function
	.thumb_func
SlotsTask_PressReelButton:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r2, [r4]
	cmp	r2, #0
	beq	.L804	@cond_branch
	cmp	r2, #0x1
	beq	.L805	@cond_branch
	b	.L803
.L804:
	add	r0, r1, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	bl	SetReelButtonPressed
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L803
.L805:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L803	@cond_branch
	mov	r0, #0x0
	b	.L809
.L803:
	mov	r0, #0x1
.L809:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe61:
	.size	 SlotsTask_PressReelButton,.Lfe61-SlotsTask_PressReelButton
	.align	2, 0
	.type	 SlotsTask_ReleaseReelButtons,function
	.thumb_func
SlotsTask_ReleaseReelButtons:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L812	@cond_branch
	cmp	r0, #0x1
	beq	.L813	@cond_branch
	b	.L811
.L812:
	bl	ReleaseReelButtons
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L811
.L813:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L811	@cond_branch
	mov	r0, #0x0
	b	.L817
.L811:
	mov	r0, #0x1
.L817:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe62:
	.size	 SlotsTask_ReleaseReelButtons,.Lfe62-SlotsTask_ReleaseReelButtons
	.align	2, 0
	.type	 SlotsTask_ShowHelp,function
	.thumb_func
SlotsTask_ShowHelp:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r5, r1, #0
	ldrb	r4, [r6]
	cmp	r4, #0x1
	beq	.L821	@cond_branch
	cmp	r4, #0x1
	bgt	.L826	@cond_branch
	cmp	r4, #0
	beq	.L820	@cond_branch
	b	.L819
.L826:
	cmp	r4, #0x2
	beq	.L823	@cond_branch
	b	.L819
.L820:
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	SetGpuRegBits
	mov	r0, #0x48
	mov	r1, #0x3f
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x3d
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x42
	mov	r1, #0xa0
	bl	SetGpuReg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x6
	bl	PlaySE
	str	r4, [r5, #0x24]
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	strb	r0, [r6]
	b	.L819
.L821:
	ldr	r0, [r5, #0x24]
	add	r0, r0, #0x10
	str	r0, [r5, #0x24]
	cmp	r0, #0xff
	ble	.L822	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	str	r0, [r5, #0x24]
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	strb	r0, [r6]
.L822:
	ldr	r0, [r5, #0x24]
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	sub	r1, r1, r0
	lsl	r1, r1, #0x8
	mov	r0, #0x1
	mov	r2, #0x0
	bl	ChangeBgX
	ldrh	r1, [r5, #0x24]
	mov	r0, #0x40
	bl	SetGpuReg
	b	.L819
.L823:
	mov	r0, #0x0
	b	.L827
.L819:
	mov	r0, #0x1
.L827:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe63:
	.size	 SlotsTask_ShowHelp,.Lfe63-SlotsTask_ShowHelp
	.align	2, 0
	.type	 SlotsTask_HideHelp,function
	.thumb_func
SlotsTask_HideHelp:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldrb	r0, [r4]
	cmp	r0, #0x1
	beq	.L831	@cond_branch
	cmp	r0, #0x1
	bgt	.L837	@cond_branch
	cmp	r0, #0
	beq	.L830	@cond_branch
	b	.L829
.L837:
	cmp	r0, #0x2
	beq	.L833	@cond_branch
	cmp	r0, #0x3
	beq	.L834	@cond_branch
	b	.L829
.L830:
	mov	r0, #0x6
	bl	PlaySE
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
.L831:
	ldr	r0, [r5, #0x24]
	sub	r0, r0, #0x10
	str	r0, [r5, #0x24]
	cmp	r0, #0
	bgt	.L832	@cond_branch
	mov	r0, #0x0
	str	r0, [r5, #0x24]
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
.L832:
	ldr	r0, [r5, #0x24]
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	sub	r1, r1, r0
	lsl	r1, r1, #0x8
	mov	r0, #0x1
	mov	r2, #0x0
	bl	ChangeBgX
	ldrh	r1, [r5, #0x24]
	mov	r0, #0x40
	bl	SetGpuReg
	b	.L829
.L833:
	mov	r0, #0x1
	bl	HideBg
	mov	r1, #0x80
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	ClearGpuRegBits
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L829
.L834:
	mov	r0, #0x0
	b	.L838
.L829:
	mov	r0, #0x1
.L838:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe64:
	.size	 SlotsTask_HideHelp,.Lfe64-SlotsTask_HideHelp
	.align	2, 0
	.type	 Slot_PrintOnWindow0,function
	.thumb_func
Slot_PrintOnWindow0:
	push	{r4, lr}
	add	sp, sp, #-0x14
	add	r4, r0, #0
	mov	r0, #0x0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x1
	mov	r2, #0xf
	bl	DrawTextBorderOuter
	mov	r1, #0x2
	str	r1, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	str	r0, [sp, #0xc]
	str	r1, [sp, #0x10]
	mov	r0, #0x0
	add	r2, r4, #0
	mov	r3, #0x1
	bl	AddTextPrinterParameterized5
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe65:
	.size	 Slot_PrintOnWindow0,.Lfe65-Slot_PrintOnWindow0
	.align	2, 0
	.type	 Slot_ClearWindow0,function
	.thumb_func
Slot_ClearWindow0:
	push	{lr}
	mov	r0, #0x0
	bl	rbox_fill_rectangle
	pop	{r0}
	bx	r0
.Lfe66:
	.size	 Slot_ClearWindow0,.Lfe66-Slot_ClearWindow0
	.align	2, 0
	.type	 SetLineStatesByBet,function
	.thumb_func
SetLineStatesByBet:
	push	{r4, lr}
	add	r4, r0, #0
	bl	GetPlayerBet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L846	@cond_branch
	cmp	r0, #0x1
	bgt	.L849	@cond_branch
	cmp	r0, #0
	beq	.L843	@cond_branch
	b	.L842
.L849:
	cmp	r0, #0x2
	beq	.L845	@cond_branch
	cmp	r0, #0x3
	beq	.L844	@cond_branch
	b	.L842
.L843:
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x4
	bl	SetLineState
	add	r0, r4, #0
	mov	r1, #0x1
	mov	r2, #0x4
	bl	SetLineState
	add	r0, r4, #0
	mov	r1, #0x2
	mov	r2, #0x4
	bl	SetLineState
	add	r0, r4, #0
	mov	r1, #0x3
	mov	r2, #0x4
	bl	SetLineState
	add	r0, r4, #0
	mov	r1, #0x4
	mov	r2, #0x4
	bl	SetLineState
	b	.L842
.L844:
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x5
	bl	SetLineState
	add	r0, r4, #0
	mov	r1, #0x4
	mov	r2, #0x5
	bl	SetLineState
.L845:
	add	r0, r4, #0
	mov	r1, #0x1
	mov	r2, #0x5
	bl	SetLineState
	add	r0, r4, #0
	mov	r1, #0x3
	mov	r2, #0x5
	bl	SetLineState
.L846:
	add	r0, r4, #0
	mov	r1, #0x2
	mov	r2, #0x5
	bl	SetLineState
.L842:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe67:
	.size	 SetLineStatesByBet,.Lfe67-SetLineStatesByBet
	.align	2, 0
	.type	 SetLineState,function
	.thumb_func
SetLineState:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	lsl	r1, r1, #0x10
	ldr	r3, .L856
	lsr	r1, r1, #0xd
	add	r0, r1, r3
	ldr	r4, [r0]
	lsl	r2, r2, #0x1c
	lsr	r7, r2, #0x10
	mov	r5, #0x0
	add	r3, r3, #0x4
	add	r1, r1, r3
	ldr	r1, [r1]
	cmp	r5, r1
	bcs	.L852	@cond_branch
	ldr	r0, .L856+0x4
	mov	ip, r0
	add	r3, r1, #0
.L854:
	ldrh	r1, [r4]
	lsl	r1, r1, #0x1
	add	r1, r1, r6
	ldrh	r2, [r1]
	mov	r0, ip
	and	r0, r0, r2
	strh	r0, [r1]
	ldrh	r1, [r4]
	lsl	r1, r1, #0x1
	add	r1, r1, r6
	ldrh	r2, [r1]
	add	r0, r7, #0
	orr	r0, r0, r2
	strh	r0, [r1]
	add	r4, r4, #0x2
	add	r5, r5, #0x1
	cmp	r5, r3
	bcc	.L854	@cond_branch
.L852:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L857:
	.align	2, 0
.L856:
	.word	sLineStateTileIdxs
	.word	0xfff
.Lfe68:
	.size	 SetLineState,.Lfe68-SetLineState
	.align	2, 0
	.type	 Task_FlashWinningLine,function
	.thumb_func
Task_FlashWinningLine:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L892
	add	r5, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L867	@cond_branch
	cmp	r0, #0x1
	bgt	.L889	@cond_branch
	cmp	r0, #0
	beq	.L860	@cond_branch
	b	.L859
.L893:
	.align	2, 0
.L892:
	.word	gTasks+0x8
.L889:
	cmp	r0, #0x2
	bne	.LCB5954
	b	.L878	@long jump
.LCB5954:
	cmp	r0, #0x3
	bne	.LCB5956
	b	.L885	@long jump
.LCB5956:
	b	.L859
.L860:
	ldr	r0, .L894
	mov	r1, #0x60
	mov	r2, #0x20
	bl	LoadPalette
	mov	r4, #0x0
.L864:
	add	r0, r4, #0
	bl	GetWinFlagByLine
	cmp	r0, #0
	beq	.L863	@cond_branch
	mov	r0, #0x2
	bl	GetBgTilemapBuffer
	lsl	r1, r4, #0x10
	lsr	r1, r1, #0x10
	mov	r2, #0x6
	bl	SetLineState
.L863:
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L864	@cond_branch
	b	.L890
.L895:
	.align	2, 0
.L894:
	.word	sBgPal_MatchLines
.L867:
	ldrh	r1, [r5, #0x2]
	mov	r2, #0x2
	ldrsh	r0, [r5, r2]
	cmp	r0, #0
	bne	.L868	@cond_branch
	ldr	r1, .L896
	mov	r2, #0x4
	ldrsh	r0, [r5, r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x17
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0xb
	ldr	r1, .L896+0x4
	add	r0, r0, r1
	mov	r1, #0x10
	mov	r2, #0x20
	bl	LoadPalette
	ldrh	r0, [r5, #0x4]
	add	r0, r0, #0x20
	mov	r1, #0x7f
	and	r0, r0, r1
	strh	r0, [r5, #0x4]
	mov	r0, #0x8
	b	.L891
.L897:
	.align	2, 0
.L896:
	.word	gSineTable
	.word	sBgPal_PayoutLight
.L868:
	sub	r0, r1, #0x1
.L891:
	strh	r0, [r5, #0x2]
	mov	r1, #0x6
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	bne	.L870	@cond_branch
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x8
	mov	r1, #0x7f
	and	r0, r0, r1
	strh	r0, [r5, #0x8]
	ldr	r1, .L898
	mov	r2, #0x8
	ldrsh	r0, [r5, r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r1, [r0]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x15
	strh	r1, [r5, #0xa]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x40
	mov	r2, #0x0
	bl	BlendPalettes
	b	.L871
.L899:
	.align	2, 0
.L898:
	.word	gSineTable
.L870:
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1
	ble	.L871	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5, #0x8]
	ldrh	r0, [r5, #0xa]
	add	r0, r0, #0x1
	mov	r1, #0x1
	and	r0, r0, r1
	strh	r0, [r5, #0xa]
	mov	r0, #0xa
	ldrsh	r1, [r5, r0]
	lsl	r1, r1, #0x1b
	lsr	r1, r1, #0x18
	mov	r0, #0x40
	mov	r2, #0x0
	bl	BlendPalettes
.L871:
	mov	r4, #0x0
	ldr	r5, .L900
	ldr	r3, .L900+0x4
	ldr	r2, .L900+0x8
.L876:
	add	r0, r4, r3
	ldrb	r0, [r0]
	add	r0, r0, #0x60
	lsl	r0, r0, #0x1
	add	r1, r0, r5
	add	r0, r0, r2
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r4, r4, #0x1
	cmp	r4, #0x1
	bls	.L876	@cond_branch
	b	.L859
.L901:
	.align	2, 0
.L900:
	.word	gPlttBufferFaded
	.word	sWinningLineFlashPalIdxs
	.word	gPlttBufferUnfaded
.L878:
	mov	r4, #0x0
.L882:
	add	r0, r4, #0
	bl	GetWinFlagByLine
	cmp	r0, #0
	beq	.L881	@cond_branch
	mov	r0, #0x2
	bl	GetBgTilemapBuffer
	lsl	r1, r4, #0x10
	lsr	r1, r1, #0x10
	mov	r2, #0x4
	bl	SetLineState
.L881:
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L882	@cond_branch
	ldr	r0, .L902
	mov	r1, #0x10
	mov	r2, #0x20
	bl	LoadPalette
.L890:
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	ldrh	r0, [r5]
	add	r0, r0, #0x1
	strh	r0, [r5]
	b	.L859
.L903:
	.align	2, 0
.L902:
	.word	sBg_Pal+0x20
.L885:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L859	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
.L859:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe69:
	.size	 Task_FlashWinningLine,.Lfe69-Task_FlashWinningLine
	.align	2, 0
	.type	 SignalStopWinningLineFlashTask,function
	.thumb_func
SignalStopWinningLineFlashTask:
	push	{lr}
	ldr	r0, .L905
	bl	FindTaskIdByFunc
	ldr	r2, .L905+0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x2
	strh	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L906:
	.align	2, 0
.L905:
	.word	Task_FlashWinningLine
	.word	gTasks
.Lfe70:
	.size	 SignalStopWinningLineFlashTask,.Lfe70-SignalStopWinningLineFlashTask
	.align	2, 0
	.type	 Slot_CreateYesNoMenu,function
	.thumb_func
Slot_CreateYesNoMenu:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L908
	mov	r1, #0xa
	str	r1, [sp]
	mov	r1, #0xd
	str	r1, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r1, #0x2
	mov	r2, #0x0
	mov	r3, #0x2
	bl	CreateYesNoMenu
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	add	r0, r4, #0
	bl	Menu_MoveCursorNoWrapAround
	bl	GetSlotMachineSetupTaskDataPtr
	mov	r1, #0x1
	str	r1, [r0, #0x28]
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L909:
	.align	2, 0
.L908:
	.word	sYesNoWindowTemplate
.Lfe71:
	.size	 Slot_CreateYesNoMenu,.Lfe71-Slot_CreateYesNoMenu
	.align	2, 0
	.type	 Slot_DestroyYesNoMenu,function
	.thumb_func
Slot_DestroyYesNoMenu:
	push	{r4, lr}
	bl	GetSlotMachineSetupTaskDataPtr
	add	r4, r0, #0
	ldr	r0, [r4, #0x28]
	cmp	r0, #0
	beq	.L911	@cond_branch
	bl	DestroyYesNoMenu
	mov	r0, #0x0
	str	r0, [r4, #0x28]
.L911:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe72:
	.size	 Slot_DestroyYesNoMenu,.Lfe72-Slot_DestroyYesNoMenu
	.align	2, 0
	.type	 InitReelButtonTileMem,function
	.thumb_func
InitReelButtonTileMem:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	bl	GetSlotMachineSetupTaskDataPtr
	add	r4, r0, #0
	mov	r0, #0x2
	bl	GetBgTilemapBuffer
	mov	ip, r0
	mov	r1, #0x0
	mov	r0, #0x44
	add	r0, r0, r4
	mov	r8, r0
	add	r7, r4, #0
	add	r7, r7, #0x2c
	ldr	r0, .L923
	mov	r9, r0
.L916:
	mov	r5, #0x0
	lsl	r0, r1, #0x3
	add	r6, r1, #0x1
	mov	r1, r8
	add	r4, r0, r1
	mov	r1, r9
	add	r3, r0, r1
	add	r2, r0, #0
.L920:
	ldrh	r0, [r3]
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	ldrh	r0, [r0]
	strh	r0, [r4]
	add	r1, r7, r2
	add	r0, r5, #0
	add	r0, r0, #0xc0
	strh	r0, [r1]
	add	r4, r4, #0x2
	add	r3, r3, #0x2
	add	r2, r2, #0x2
	add	r5, r5, #0x1
	cmp	r5, #0x3
	ble	.L920	@cond_branch
	add	r1, r6, #0
	cmp	r1, #0x2
	ble	.L916	@cond_branch
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L924:
	.align	2, 0
.L923:
	.word	sReelButtonMapTileIdxs
.Lfe73:
	.size	 InitReelButtonTileMem,.Lfe73-InitReelButtonTileMem
	.align	2, 0
	.type	 SetReelButtonPressed,function
	.thumb_func
SetReelButtonPressed:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x2
	bhi	.L926	@cond_branch
	bl	GetSlotMachineSetupTaskDataPtr
	add	r4, r0, #0
	mov	r0, #0x2
	bl	GetBgTilemapBuffer
	add	r6, r0, #0
	lsl	r0, r5, #0x3
	ldr	r1, .L932
	add	r4, r4, #0x2c
	add	r3, r0, r4
	add	r2, r0, r1
	mov	r4, #0x3
.L930:
	ldrh	r0, [r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	ldrh	r1, [r3]
	strh	r1, [r0]
	add	r3, r3, #0x2
	add	r2, r2, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L930	@cond_branch
.L926:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L933:
	.align	2, 0
.L932:
	.word	sReelButtonMapTileIdxs
.Lfe74:
	.size	 SetReelButtonPressed,.Lfe74-SetReelButtonPressed
	.align	2, 0
	.type	 ReleaseReelButtons,function
	.thumb_func
ReleaseReelButtons:
	push	{r4, r5, r6, r7, lr}
	bl	GetSlotMachineSetupTaskDataPtr
	add	r4, r0, #0
	mov	r0, #0x2
	bl	GetBgTilemapBuffer
	add	r6, r0, #0
	mov	r1, #0x0
	add	r7, r4, #0
	add	r7, r7, #0x44
	ldr	r0, .L945
	mov	ip, r0
.L938:
	lsl	r0, r1, #0x3
	add	r5, r1, #0x1
	add	r3, r0, r7
	mov	r1, ip
	add	r2, r0, r1
	mov	r4, #0x3
.L942:
	ldrh	r0, [r2]
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	ldrh	r1, [r3]
	strh	r1, [r0]
	add	r3, r3, #0x2
	add	r2, r2, #0x2
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L942	@cond_branch
	add	r1, r5, #0
	cmp	r1, #0x2
	ble	.L938	@cond_branch
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L946:
	.align	2, 0
.L945:
	.word	sReelButtonMapTileIdxs
.Lfe75:
	.size	 ReleaseReelButtons,.Lfe75-ReleaseReelButtons
	.align	2, 0
	.type	 PressReelButton,function
	.thumb_func
PressReelButton:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	bl	GetSlotMachineSetupTaskDataPtr
	add	r0, r0, #0x20
	strb	r4, [r0]
	mov	r0, #0xc
	add	r1, r5, #0
	bl	SetSlotMachineSetupTask
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 PressReelButton,.Lfe76-PressReelButton
.text
	.align	2, 0 @ Don't pad with nop

