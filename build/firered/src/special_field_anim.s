@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 sEscalatorTaskId,object
	.size	 sEscalatorTaskId,1
sEscalatorTaskId:
	.byte	0x0
	.section .rodata
	.align	1, 0
	.type	 sEscalatorMetatiles_BottomNextRail,object
	.size	 sEscalatorMetatiles_BottomNextRail,6
sEscalatorMetatiles_BottomNextRail:
	.short	0x308
	.short	0x30a
	.short	0x2d0
	.align	1, 0
	.type	 sEscalatorMetatiles_BottomRail,object
	.size	 sEscalatorMetatiles_BottomRail,6
sEscalatorMetatiles_BottomRail:
	.short	0x309
	.short	0x30b
	.short	0x2d1
	.align	1, 0
	.type	 sEscalatorMetatiles_BottomNext,object
	.size	 sEscalatorMetatiles_BottomNext,6
sEscalatorMetatiles_BottomNext:
	.short	0x310
	.short	0x312
	.short	0x2d8
	.align	1, 0
	.type	 sEscalatorMetatiles_Bottom,object
	.size	 sEscalatorMetatiles_Bottom,6
sEscalatorMetatiles_Bottom:
	.short	0x311
	.short	0x313
	.short	0x2d9
	.align	1, 0
	.type	 sEscalatorMetatiles_TopNext,object
	.size	 sEscalatorMetatiles_TopNext,6
sEscalatorMetatiles_TopNext:
	.short	0x2e3
	.short	0x316
	.short	0x314
	.align	1, 0
	.type	 sEscalatorMetatiles_Top,object
	.size	 sEscalatorMetatiles_Top,6
sEscalatorMetatiles_Top:
	.short	0x2e4
	.short	0x317
	.short	0x315
	.align	1, 0
	.type	 sEscalatorMetatiles_TopNextRail,object
	.size	 sEscalatorMetatiles_TopNextRail,6
sEscalatorMetatiles_TopNextRail:
	.short	0x2eb
	.short	0x31e
	.short	0x31c
.text
	.align	2, 0
	.type	 SetEscalatorMetatile,function
	.thumb_func
SetEscalatorMetatile:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	mov	r9, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	mov	sl, r2
	ldr	r2, .L31
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	ldrh	r0, [r1, #0x10]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldrh	r0, [r1, #0x12]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	ldrh	r4, [r1, #0xa]
	mov	r2, #0xc
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L3	@cond_branch
	mov	r2, #0x0
	lsl	r5, r5, #0x10
	str	r5, [sp, #0xc]
	lsl	r0, r3, #0x10
	lsl	r1, r4, #0x10
	asr	r0, r0, #0x10
	str	r0, [sp]
	asr	r1, r1, #0x10
	str	r1, [sp, #0x4]
	lsl	r0, r1, #0x1
	mov	r1, r9
	add	r7, r0, r1
.L7:
	mov	r4, #0x0
	lsl	r2, r2, #0x10
	mov	r8, r2
	asr	r0, r2, #0x10
	ldr	r2, [sp]
	add	r6, r2, r0
.L11:
	ldr	r0, [sp, #0xc]
	asr	r1, r0, #0x10
	lsl	r4, r4, #0x10
	asr	r0, r4, #0x10
	add	r5, r1, r0
	add	r0, r5, #0
	add	r1, r6, #0
	bl	MapGridGetMetatileIdAt
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r1, r0
	bne	.L10	@cond_branch
	ldr	r0, [sp, #0x4]
	cmp	r0, #0x2
	beq	.L13	@cond_branch
	ldrh	r0, [r7, #0x2]
	mov	r2, sl
	orr	r2, r2, r0
	add	r0, r5, #0
	add	r1, r6, #0
	bl	MapGridSetMetatileIdAt
	b	.L10
.L32:
	.align	2, 0
.L31:
	.word	gTasks
.L13:
	mov	r1, r9
	ldrh	r0, [r1]
	mov	r2, sl
	orr	r2, r2, r0
	add	r0, r5, #0
	add	r1, r6, #0
	bl	MapGridSetMetatileIdAt
.L10:
	mov	r2, #0x80
	lsl	r2, r2, #0x9
	add	r0, r4, r2
	lsr	r4, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L11	@cond_branch
	add	r0, r2, #0
	add	r0, r0, r8
	lsr	r2, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L7	@cond_branch
	b	.L17
.L3:
	mov	r2, #0x0
	lsl	r5, r5, #0x10
	str	r5, [sp, #0xc]
	lsl	r0, r3, #0x10
	lsl	r1, r4, #0x10
	asr	r0, r0, #0x10
	str	r0, [sp, #0x8]
	asr	r7, r1, #0x10
.L21:
	mov	r4, #0x0
	lsl	r2, r2, #0x10
	mov	r8, r2
	asr	r0, r2, #0x10
	ldr	r1, [sp, #0x8]
	add	r6, r1, r0
.L25:
	ldr	r2, [sp, #0xc]
	asr	r1, r2, #0x10
	lsl	r4, r4, #0x10
	asr	r0, r4, #0x10
	add	r5, r1, r0
	add	r0, r5, #0
	add	r1, r6, #0
	bl	MapGridGetMetatileIdAt
	mov	r1, #0x2
	sub	r1, r1, r7
	lsl	r1, r1, #0x1
	add	r1, r1, r9
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r1, r0
	bne	.L24	@cond_branch
	cmp	r7, #0x2
	beq	.L27	@cond_branch
	mov	r0, #0x1
	sub	r0, r0, r7
	lsl	r0, r0, #0x1
	add	r0, r0, r9
	ldrh	r0, [r0]
	mov	r2, sl
	orr	r2, r2, r0
	add	r0, r5, #0
	add	r1, r6, #0
	bl	MapGridSetMetatileIdAt
	b	.L24
.L27:
	mov	r1, r9
	ldrh	r0, [r1, #0x4]
	mov	r2, sl
	orr	r2, r2, r0
	add	r0, r5, #0
	add	r1, r6, #0
	bl	MapGridSetMetatileIdAt
.L24:
	mov	r2, #0x80
	lsl	r2, r2, #0x9
	add	r0, r4, r2
	lsr	r4, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L25	@cond_branch
	add	r0, r2, #0
	add	r0, r0, r8
	lsr	r2, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	ble	.L21	@cond_branch
.L17:
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 SetEscalatorMetatile,.Lfe1-SetEscalatorMetatile
	.align	2, 0
	.type	 Task_DrawEscalator,function
	.thumb_func
Task_DrawEscalator:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	ldr	r1, .L47
	add	r4, r0, r1
	mov	r0, #0x1
	strh	r0, [r4, #0x6]
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x6
	bhi	.L34	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L47+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L48:
	.align	2, 0
.L47:
	.word	gTasks+0x8
	.word	.L43
	.align	2, 0
	.align	2, 0
.L43:
	.word	.L35
	.word	.L36
	.word	.L37
	.word	.L38
	.word	.L39
	.word	.L40
	.word	.L41
.L35:
	ldr	r1, .L49
	b	.L45
.L50:
	.align	2, 0
.L49:
	.word	sEscalatorMetatiles_BottomNextRail
.L36:
	ldr	r1, .L51
	b	.L45
.L52:
	.align	2, 0
.L51:
	.word	sEscalatorMetatiles_BottomRail
.L37:
	ldr	r1, .L53
	b	.L46
.L54:
	.align	2, 0
.L53:
	.word	sEscalatorMetatiles_BottomNext
.L38:
	ldr	r1, .L55
	b	.L45
.L56:
	.align	2, 0
.L55:
	.word	sEscalatorMetatiles_Bottom
.L39:
	ldr	r1, .L57
.L46:
	mov	r2, #0xc0
	lsl	r2, r2, #0x4
	add	r0, r3, #0
	bl	SetEscalatorMetatile
	b	.L34
.L58:
	.align	2, 0
.L57:
	.word	sEscalatorMetatiles_TopNext
.L40:
	ldr	r1, .L59
.L45:
	add	r0, r3, #0
	mov	r2, #0x0
	bl	SetEscalatorMetatile
	b	.L34
.L60:
	.align	2, 0
.L59:
	.word	sEscalatorMetatiles_Top
.L41:
	ldr	r1, .L61
	add	r0, r3, #0
	mov	r2, #0x0
	bl	SetEscalatorMetatile
.L34:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	mov	r1, #0x7
	and	r0, r0, r1
	strh	r0, [r4]
	add	r5, r0, #0
	cmp	r5, #0
	bne	.L44	@cond_branch
	bl	DrawWholeMapView
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	add	r0, r0, #0x1
	mov	r1, #0x3
	bl	__modsi3
	strh	r0, [r4, #0x2]
	strh	r5, [r4, #0x6]
.L44:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L62:
	.align	2, 0
.L61:
	.word	sEscalatorMetatiles_TopNextRail
.Lfe2:
	.size	 Task_DrawEscalator,.Lfe2-Task_DrawEscalator
	.align	2, 0
	.type	 CreateEscalatorTask,function
	.thumb_func
CreateEscalatorTask:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r6, .L64
	add	r0, r6, #0
	mov	r1, #0x0
	bl	CreateTask
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L64+0x4
	add	r7, r0, r1
	add	r0, r7, #0
	add	r0, r0, #0x8
	add	r1, r7, #0
	add	r1, r1, #0xa
	bl	PlayerGetDestCoords
	mov	r0, #0x0
	strh	r0, [r7]
	strh	r0, [r7, #0x2]
	strh	r5, [r7, #0x4]
	add	r0, r4, #0
	bl	_call_via_r6
	add	r0, r4, #0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L65:
	.align	2, 0
.L64:
	.word	Task_DrawEscalator
	.word	gTasks+0x8
.Lfe3:
	.size	 CreateEscalatorTask,.Lfe3-CreateEscalatorTask
	.align	2, 0
	.globl	StartEscalator
	.type	 StartEscalator,function
	.thumb_func
StartEscalator:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	CreateEscalatorTask
	ldr	r1, .L67
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L68:
	.align	2, 0
.L67:
	.word	sEscalatorTaskId
.Lfe4:
	.size	 StartEscalator,.Lfe4-StartEscalator
	.align	2, 0
	.globl	StopEscalator
	.type	 StopEscalator,function
	.thumb_func
StopEscalator:
	push	{lr}
	ldr	r0, .L70
	ldrb	r0, [r0]
	bl	DestroyTask
	pop	{r0}
	bx	r0
.L71:
	.align	2, 0
.L70:
	.word	sEscalatorTaskId
.Lfe5:
	.size	 StopEscalator,.Lfe5-StopEscalator
	.align	2, 0
	.globl	IsEscalatorMoving
	.type	 IsEscalatorMoving,function
	.thumb_func
IsEscalatorMoving:
	push	{lr}
	ldr	r2, .L77
	ldr	r0, .L77+0x4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r1, r0, r2
	mov	r2, #0xe
	ldrsh	r0, [r1, r2]
	cmp	r0, #0
	bne	.L73	@cond_branch
	mov	r2, #0xa
	ldrsh	r0, [r1, r2]
	cmp	r0, #0x2
	bne	.L73	@cond_branch
	mov	r0, #0x0
	b	.L76
.L78:
	.align	2, 0
.L77:
	.word	gTasks
	.word	sEscalatorTaskId
.L73:
	mov	r0, #0x1
.L76:
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 IsEscalatorMoving,.Lfe6-IsEscalatorMoving
	.align	2, 0
	.globl	AnimateTeleporterHousing
	.type	 AnimateTeleporterHousing,function
	.thumb_func
AnimateTeleporterHousing:
	push	{r4, lr}
	ldr	r0, .L83
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L83+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
	mov	r0, #0x0
	strh	r0, [r4, #0x8]
	strh	r0, [r4, #0xa]
	add	r2, r2, #0x8
	add	r1, r1, r2
	add	r0, r1, #0x4
	add	r1, r1, #0x6
	bl	PlayerGetDestCoords
	ldr	r0, .L83+0x8
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L80	@cond_branch
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x6
	b	.L82
.L84:
	.align	2, 0
.L83:
	.word	Task_DrawTeleporterHousing
	.word	gTasks
	.word	gSpecialVar_0x8004
.L80:
	ldrh	r0, [r4, #0xc]
	sub	r0, r0, #0x1
.L82:
	strh	r0, [r4, #0xc]
	ldrh	r0, [r4, #0xe]
	sub	r0, r0, #0x5
	strh	r0, [r4, #0xe]
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 AnimateTeleporterHousing,.Lfe7-AnimateTeleporterHousing
	.align	2, 0
	.type	 Task_DrawTeleporterHousing,function
	.thumb_func
Task_DrawTeleporterHousing:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L91
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L86	@cond_branch
	ldrh	r1, [r4, #0x2]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L87	@cond_branch
	mov	r2, #0x4
	ldrsh	r0, [r4, r2]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	ldr	r2, .L91+0x4
	bl	MapGridSetMetatileIdAt
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	add	r1, r1, #0x2
	ldr	r2, .L91+0x8
	bl	MapGridSetMetatileIdAt
	b	.L88
.L92:
	.align	2, 0
.L91:
	.word	gTasks+0x8
	.word	0xeb5
	.word	0xeb7
.L87:
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	ldr	r2, .L93
	bl	MapGridSetMetatileIdAt
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	add	r1, r1, #0x2
	ldr	r2, .L93+0x4
	bl	MapGridSetMetatileIdAt
.L88:
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	bl	CurrentMapDrawMetatileAt
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	add	r1, r1, #0x2
	bl	CurrentMapDrawMetatileAt
.L86:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x10
	bne	.L85	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4]
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0xd
	bne	.L85	@cond_branch
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	ldr	r2, .L93+0x8
	bl	MapGridSetMetatileIdAt
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	add	r1, r1, #0x2
	ldr	r2, .L93+0xc
	bl	MapGridSetMetatileIdAt
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	bl	CurrentMapDrawMetatileAt
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	add	r1, r1, #0x2
	bl	CurrentMapDrawMetatileAt
	add	r0, r5, #0
	bl	DestroyTask
.L85:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L94:
	.align	2, 0
.L93:
	.word	0xeb6
	.word	0xeb8
	.word	0xe8a
	.word	0xe96
.Lfe8:
	.size	 Task_DrawTeleporterHousing,.Lfe8-Task_DrawTeleporterHousing
	.align	2, 0
	.globl	AnimateTeleporterCable
	.type	 AnimateTeleporterCable,function
	.thumb_func
AnimateTeleporterCable:
	push	{r4, lr}
	ldr	r0, .L96
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L96+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
	mov	r0, #0x0
	strh	r0, [r4, #0x8]
	strh	r0, [r4, #0xa]
	add	r2, r2, #0x8
	add	r1, r1, r2
	add	r0, r1, #0x4
	add	r1, r1, #0x6
	bl	PlayerGetDestCoords
	ldrh	r0, [r4, #0xc]
	add	r0, r0, #0x4
	strh	r0, [r4, #0xc]
	ldrh	r0, [r4, #0xe]
	sub	r0, r0, #0x5
	strh	r0, [r4, #0xe]
	pop	{r4}
	pop	{r0}
	bx	r0
.L97:
	.align	2, 0
.L96:
	.word	Task_DrawTeleporterCable
	.word	gTasks
.Lfe9:
	.size	 AnimateTeleporterCable,.Lfe9-AnimateTeleporterCable
	.align	2, 0
	.type	 Task_DrawTeleporterCable,function
	.thumb_func
Task_DrawTeleporterCable:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L103
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L99	@cond_branch
	mov	r2, #0x2
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	beq	.L100	@cond_branch
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	ldr	r2, .L103+0x4
	bl	MapGridSetMetatileIdAt
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	add	r1, r1, #0x1
	ldr	r2, .L103+0x8
	bl	MapGridSetMetatileIdAt
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	bl	CurrentMapDrawMetatileAt
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	add	r1, r1, #0x1
	bl	CurrentMapDrawMetatileAt
	mov	r1, #0x2
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x4
	bne	.L101	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
	b	.L98
.L104:
	.align	2, 0
.L103:
	.word	gTasks+0x8
	.word	0xe85
	.word	0xeb4
.L101:
	ldrh	r0, [r4, #0x4]
	sub	r0, r0, #0x1
	strh	r0, [r4, #0x4]
.L100:
	mov	r2, #0x4
	ldrsh	r0, [r4, r2]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	ldr	r2, .L105
	bl	MapGridSetMetatileIdAt
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	add	r1, r1, #0x1
	ldr	r2, .L105+0x4
	bl	MapGridSetMetatileIdAt
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	bl	CurrentMapDrawMetatileAt
	mov	r1, #0x4
	ldrsh	r0, [r4, r1]
	mov	r2, #0x6
	ldrsh	r1, [r4, r2]
	add	r1, r1, #0x1
	bl	CurrentMapDrawMetatileAt
.L99:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x4
	bne	.L98	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4]
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
.L98:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L106:
	.align	2, 0
.L105:
	.word	0xeb9
	.word	0xeba
.Lfe10:
	.size	 Task_DrawTeleporterCable,.Lfe10-Task_DrawTeleporterCable
.text
	.align	2, 0 @ Don't pad with nop

