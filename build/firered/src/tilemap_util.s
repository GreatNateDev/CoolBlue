@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sTilemapUtil,object
	.size	 sTilemapUtil,4
sTilemapUtil:
	.word	0x0
	.align	1, 0
	.type	 sNumTilemapUtilIds,object
	.size	 sNumTilemapUtilIds,2
sNumTilemapUtilIds:
	.short	0x0
	.section .rodata
	.align	2, 0
	.type	 sTilemapDimensions,object
	.size	 sTilemapDimensions,32
sTilemapDimensions:
	.short	0x100
	.short	0x100
	.short	0x200
	.short	0x100
	.short	0x100
	.short	0x200
	.short	0x200
	.short	0x200
	.short	0x80
	.short	0x80
	.short	0x100
	.short	0x100
	.short	0x200
	.short	0x200
	.short	0x400
	.short	0x400
.text
	.align	2, 0
	.globl	TilemapUtil_Init
	.type	 TilemapUtil_Init,function
	.thumb_func
TilemapUtil_Init:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r6, .L10
	lsl	r0, r4, #0x1
	add	r0, r0, r4
	lsl	r0, r0, #0x4
	bl	Alloc
	str	r0, [r6]
	ldr	r5, .L10+0x4
	mov	r1, #0x0
	cmp	r0, #0
	beq	.L3	@cond_branch
	add	r1, r4, #0
.L3:
	strh	r1, [r5]
	mov	r2, #0x0
	cmp	r2, r1
	bcs	.L6	@cond_branch
	mov	r3, #0x0
	add	r4, r5, #0
.L8:
	ldr	r0, [r6]
	lsl	r1, r2, #0x1
	add	r1, r1, r2
	lsl	r1, r1, #0x4
	add	r1, r1, r0
	str	r3, [r1, #0x18]
	add	r1, r1, #0x2c
	strb	r3, [r1]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldrh	r0, [r4]
	cmp	r2, r0
	bcc	.L8	@cond_branch
.L6:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L11:
	.align	2, 0
.L10:
	.word	sTilemapUtil
	.word	sNumTilemapUtilIds
.Lfe1:
	.size	 TilemapUtil_Init,.Lfe1-TilemapUtil_Init
	.align	2, 0
	.globl	TilemapUtil_Free
	.type	 TilemapUtil_Free,function
	.thumb_func
TilemapUtil_Free:
	push	{lr}
	ldr	r0, .L13
	ldr	r0, [r0]
	bl	Free
	pop	{r0}
	bx	r0
.L14:
	.align	2, 0
.L13:
	.word	sTilemapUtil
.Lfe2:
	.size	 TilemapUtil_Free,.Lfe2-TilemapUtil_Free
	.align	2, 0
	.globl	TilemapUtil_UpdateAll
	.type	 TilemapUtil_UpdateAll,function
	.thumb_func
TilemapUtil_UpdateAll:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r0, .L22
	ldrh	r0, [r0]
	cmp	r4, r0
	bge	.L17	@cond_branch
	mov	r5, #0x0
.L19:
	ldr	r0, .L22+0x4
	ldr	r0, [r0]
	add	r0, r5, r0
	add	r0, r0, #0x2c
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L18	@cond_branch
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	bl	TilemapUtil_Update
.L18:
	add	r5, r5, #0x30
	add	r4, r4, #0x1
	ldr	r0, .L22
	ldrh	r0, [r0]
	cmp	r4, r0
	blt	.L19	@cond_branch
.L17:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L23:
	.align	2, 0
.L22:
	.word	sNumTilemapUtilIds
	.word	sTilemapUtil
.Lfe3:
	.size	 TilemapUtil_UpdateAll,.Lfe3-TilemapUtil_UpdateAll
	.align	2, 0
	.globl	TilemapUtil_SetTilemap
	.type	 TilemapUtil_SetTilemap,function
	.thumb_func
TilemapUtil_SetTilemap:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	add	r4, r2, #0
	ldr	r2, [sp, #0x24]
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	mov	sl, r3
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	str	r2, [sp]
	ldr	r0, .L29
	ldrh	r0, [r0]
	cmp	r6, r0
	bcs	.L25	@cond_branch
	ldr	r0, .L29+0x4
	mov	r9, r0
	ldr	r0, [r0]
	lsl	r1, r6, #0x1
	mov	r8, r1
	add	r5, r1, r6
	lsl	r5, r5, #0x4
	add	r0, r5, r0
	mov	r1, #0x0
	str	r1, [r0, #0x18]
	str	r4, [r0, #0x1c]
	add	r0, r0, #0x2b
	strb	r7, [r0]
	mov	r2, r9
	ldr	r0, [r2]
	add	r0, r5, r0
	mov	r3, sl
	strh	r3, [r0, #0x24]
	mov	r1, sp
	ldrh	r1, [r1]
	strh	r1, [r0, #0x26]
	add	r0, r7, #0
	mov	r1, #0x3
	bl	GetBgAttribute
	add	r4, r0, #0
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	add	r0, r7, #0
	mov	r1, #0x9
	bl	GetBgAttribute
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r2, r9
	ldr	r1, [r2]
	add	r5, r5, r1
	ldr	r2, .L29+0x8
	lsl	r4, r4, #0x2
	lsl	r1, r0, #0x4
	add	r4, r4, r1
	add	r4, r4, r2
	ldrh	r1, [r4]
	strh	r1, [r5, #0x20]
	ldrh	r1, [r4, #0x2]
	strh	r1, [r5, #0x22]
	mov	r2, r8
	cmp	r0, #0
	beq	.L26	@cond_branch
	add	r1, r5, #0
	add	r1, r1, #0x2a
	mov	r0, #0x1
	b	.L28
.L30:
	.align	2, 0
.L29:
	.word	sNumTilemapUtilIds
	.word	sTilemapUtil
	.word	sTilemapDimensions
.L26:
	add	r1, r5, #0
	add	r1, r1, #0x2a
	mov	r0, #0x2
.L28:
	strb	r0, [r1]
	ldr	r4, .L31
	ldr	r1, [r4]
	add	r2, r2, r6
	lsl	r2, r2, #0x4
	add	r1, r2, r1
	add	r0, r1, #0
	add	r0, r0, #0x2a
	ldrb	r0, [r0]
	mov	r3, sl
	mul	r3, r3, r0
	mov	r0, #0x0
	strh	r3, [r1, #0x28]
	mov	r3, sl
	strh	r3, [r1, #0x10]
	mov	r5, sp
	ldrh	r5, [r5]
	strh	r5, [r1, #0x12]
	strh	r0, [r1, #0xc]
	strh	r0, [r1, #0xe]
	strh	r0, [r1, #0x14]
	strh	r0, [r1, #0x16]
	add	r0, r1, #0
	add	r0, r0, #0xc
	ldmia	r0!, {r3, r5, r6}
	stmia	r1!, {r3, r5, r6}
	ldr	r0, [r4]
	add	r2, r2, r0
	add	r2, r2, #0x2c
	mov	r0, #0x1
	strb	r0, [r2]
.L25:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L32:
	.align	2, 0
.L31:
	.word	sTilemapUtil
.Lfe4:
	.size	 TilemapUtil_SetTilemap,.Lfe4-TilemapUtil_SetTilemap
	.align	2, 0
	.globl	TilemapUtil_SetSavedMap
	.type	 TilemapUtil_SetSavedMap,function
	.thumb_func
TilemapUtil_SetSavedMap:
	push	{lr}
	add	r3, r1, #0
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r0, .L35
	ldrh	r0, [r0]
	cmp	r2, r0
	bcs	.L34	@cond_branch
	ldr	r0, .L35+0x4
	ldr	r1, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	str	r3, [r0, #0x18]
	add	r0, r0, #0x2c
	mov	r1, #0x1
	strb	r1, [r0]
.L34:
	pop	{r0}
	bx	r0
.L36:
	.align	2, 0
.L35:
	.word	sNumTilemapUtilIds
	.word	sTilemapUtil
.Lfe5:
	.size	 TilemapUtil_SetSavedMap,.Lfe5-TilemapUtil_SetSavedMap
	.align	2, 0
	.globl	TilemapUtil_SetPos
	.type	 TilemapUtil_SetPos,function
	.thumb_func
TilemapUtil_SetPos:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r4, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r0, .L39
	ldrh	r0, [r0]
	cmp	r3, r0
	bcs	.L38	@cond_branch
	ldr	r0, .L39+0x4
	ldr	r1, [r0]
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	strh	r4, [r0, #0x14]
	strh	r2, [r0, #0x16]
	add	r0, r0, #0x2c
	mov	r1, #0x1
	strb	r1, [r0]
.L38:
	pop	{r4}
	pop	{r0}
	bx	r0
.L40:
	.align	2, 0
.L39:
	.word	sNumTilemapUtilIds
	.word	sTilemapUtil
.Lfe6:
	.size	 TilemapUtil_SetPos,.Lfe6-TilemapUtil_SetPos
	.align	2, 0
	.globl	TilemapUtil_SetRect
	.type	 TilemapUtil_SetRect,function
	.thumb_func
TilemapUtil_SetRect:
	push	{r4, r5, r6, lr}
	ldr	r4, [sp, #0x10]
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x10
	lsr	r6, r1, #0x10
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	ldr	r0, .L43
	ldrh	r0, [r0]
	cmp	r5, r0
	bcs	.L42	@cond_branch
	ldr	r0, .L43+0x4
	ldr	r1, [r0]
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	strh	r6, [r0, #0xc]
	strh	r2, [r0, #0xe]
	strh	r3, [r0, #0x10]
	strh	r4, [r0, #0x12]
	add	r0, r0, #0x2c
	mov	r1, #0x1
	strb	r1, [r0]
.L42:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L44:
	.align	2, 0
.L43:
	.word	sNumTilemapUtilIds
	.word	sTilemapUtil
.Lfe7:
	.size	 TilemapUtil_SetRect,.Lfe7-TilemapUtil_SetRect
	.align	2, 0
	.globl	TilemapUtil_Move
	.type	 TilemapUtil_Move,function
	.thumb_func
TilemapUtil_Move:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldr	r0, .L59
	ldrh	r0, [r0]
	cmp	r5, r0
	bcc	.LCB451
	b	.L46	@long jump
.LCB451:
	ldr	r4, .L59+0x4
	lsl	r2, r5, #0x1
	cmp	r1, #0x5
	bls	.LCB456
	b	.L47	@long jump
.LCB456:
	lsl	r0, r1, #0x2
	ldr	r1, .L59+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L60:
	.align	2, 0
.L59:
	.word	sNumTilemapUtilIds
	.word	sTilemapUtil
	.word	.L54
	.align	2, 0
	.align	2, 0
.L54:
	.word	.L48
	.word	.L49
	.word	.L50
	.word	.L51
	.word	.L52
	.word	.L53
.L48:
	ldr	r4, .L61
	ldr	r0, [r4]
	lsl	r3, r5, #0x1
	add	r1, r3, r5
	lsl	r1, r1, #0x4
	add	r1, r1, r0
	lsl	r2, r6, #0x18
	asr	r2, r2, #0x18
	ldrh	r0, [r1, #0x14]
	add	r0, r0, r2
	strh	r0, [r1, #0x14]
	ldrh	r0, [r1, #0x10]
	sub	r0, r0, r2
	b	.L56
.L62:
	.align	2, 0
.L61:
	.word	sTilemapUtil
.L49:
	ldr	r4, .L63
	ldr	r0, [r4]
	lsl	r3, r5, #0x1
	add	r1, r3, r5
	lsl	r1, r1, #0x4
	add	r1, r1, r0
	lsl	r2, r6, #0x18
	asr	r2, r2, #0x18
	ldrh	r0, [r1, #0xc]
	add	r0, r0, r2
	strh	r0, [r1, #0xc]
	ldrh	r0, [r1, #0x10]
	add	r0, r0, r2
.L56:
	strh	r0, [r1, #0x10]
	add	r2, r3, #0
	b	.L47
.L64:
	.align	2, 0
.L63:
	.word	sTilemapUtil
.L50:
	ldr	r4, .L65
	ldr	r0, [r4]
	lsl	r3, r5, #0x1
	add	r1, r3, r5
	lsl	r1, r1, #0x4
	add	r1, r1, r0
	lsl	r2, r6, #0x18
	asr	r2, r2, #0x18
	ldrh	r0, [r1, #0x16]
	add	r0, r0, r2
	strh	r0, [r1, #0x16]
	ldrh	r0, [r1, #0x12]
	sub	r0, r0, r2
	b	.L57
.L66:
	.align	2, 0
.L65:
	.word	sTilemapUtil
.L51:
	ldr	r4, .L67
	ldr	r0, [r4]
	lsl	r3, r5, #0x1
	add	r1, r3, r5
	lsl	r1, r1, #0x4
	add	r1, r1, r0
	lsl	r2, r6, #0x18
	asr	r2, r2, #0x18
	ldrh	r0, [r1, #0xe]
	sub	r0, r0, r2
	strh	r0, [r1, #0xe]
	ldrh	r0, [r1, #0x12]
	add	r0, r0, r2
.L57:
	strh	r0, [r1, #0x12]
	add	r2, r3, #0
	b	.L47
.L68:
	.align	2, 0
.L67:
	.word	sTilemapUtil
.L52:
	ldr	r3, .L69
	ldr	r0, [r3]
	lsl	r2, r5, #0x1
	add	r1, r2, r5
	lsl	r1, r1, #0x4
	add	r1, r1, r0
	lsl	r0, r6, #0x18
	asr	r0, r0, #0x18
	ldrh	r4, [r1, #0x14]
	add	r0, r0, r4
	strh	r0, [r1, #0x14]
	b	.L58
.L70:
	.align	2, 0
.L69:
	.word	sTilemapUtil
.L53:
	ldr	r3, .L71
	ldr	r0, [r3]
	lsl	r2, r5, #0x1
	add	r1, r2, r5
	lsl	r1, r1, #0x4
	add	r1, r1, r0
	lsl	r0, r6, #0x18
	asr	r0, r0, #0x18
	ldrh	r4, [r1, #0x16]
	add	r0, r0, r4
	strh	r0, [r1, #0x16]
.L58:
	add	r4, r3, #0
.L47:
	ldr	r0, [r4]
	add	r1, r2, r5
	lsl	r1, r1, #0x4
	add	r1, r1, r0
	add	r1, r1, #0x2c
	mov	r0, #0x1
	strb	r0, [r1]
.L46:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L72:
	.align	2, 0
.L71:
	.word	sTilemapUtil
.Lfe8:
	.size	 TilemapUtil_Move,.Lfe8-TilemapUtil_Move
	.align	2, 0
	.globl	TilemapUtil_Update
	.type	 TilemapUtil_Update,function
	.thumb_func
TilemapUtil_Update:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r6, r2, #0
	ldr	r0, .L76
	ldrh	r0, [r0]
	cmp	r2, r0
	bcs	.L74	@cond_branch
	ldr	r5, .L76+0x4
	ldr	r0, [r5]
	lsl	r1, r2, #0x1
	add	r1, r1, r2
	lsl	r4, r1, #0x4
	add	r0, r4, r0
	ldr	r0, [r0, #0x18]
	cmp	r0, #0
	beq	.L75	@cond_branch
	add	r0, r2, #0
	bl	TilemapUtil_DrawPrev
.L75:
	add	r0, r6, #0
	bl	TilemapUtil_Draw
	ldr	r1, [r5]
	add	r1, r4, r1
	add	r0, r1, #0
	add	r0, r0, #0xc
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
.L74:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L77:
	.align	2, 0
.L76:
	.word	sNumTilemapUtilIds
	.word	sTilemapUtil
.Lfe9:
	.size	 TilemapUtil_Update,.Lfe9-TilemapUtil_Update
	.align	2, 0
	.type	 TilemapUtil_DrawPrev,function
	.thumb_func
TilemapUtil_DrawPrev:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r4, .L84
	ldr	r1, [r4]
	lsl	r5, r0, #0x1
	add	r0, r5, r0
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	add	r1, r0, #0
	add	r1, r1, #0x2a
	ldrb	r3, [r1]
	ldrh	r1, [r0, #0x20]
	mov	r2, r3
	mul	r2, r2, r1
	mov	r9, r2
	mov	r6, #0xa
	ldrsh	r1, [r0, r6]
	mov	r2, r9
	mul	r2, r2, r1
	ldr	r1, [r0, #0x18]
	add	r1, r1, r2
	mov	r6, #0x8
	ldrsh	r2, [r0, r6]
	mul	r2, r2, r3
	add	r7, r1, r2
	mov	r6, #0x0
	ldrh	r0, [r0, #0x6]
	cmp	r6, r0
	bge	.L80	@cond_branch
	mov	sl, r4
.L82:
	mov	r0, sl
	ldr	r1, [r0]
	mov	r2, r8
	add	r4, r5, r2
	lsl	r4, r4, #0x4
	add	r1, r4, r1
	add	r0, r1, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	ldrb	r2, [r1, #0x8]
	ldrb	r3, [r1, #0xa]
	add	r3, r3, r6
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldrb	r1, [r1, #0x4]
	str	r1, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	add	r1, r7, #0
	bl	CopyToBgTilemapBufferRect
	add	r7, r7, r9
	add	r6, r6, #0x1
	mov	r1, sl
	ldr	r0, [r1]
	add	r4, r4, r0
	ldrh	r4, [r4, #0x6]
	cmp	r6, r4
	blt	.L82	@cond_branch
.L80:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L85:
	.align	2, 0
.L84:
	.word	sTilemapUtil
.Lfe10:
	.size	 TilemapUtil_DrawPrev,.Lfe10-TilemapUtil_DrawPrev
	.align	2, 0
	.type	 TilemapUtil_Draw,function
	.thumb_func
TilemapUtil_Draw:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r4, .L92
	ldr	r1, [r4]
	lsl	r5, r0, #0x1
	add	r0, r5, r0
	lsl	r0, r0, #0x4
	add	r0, r0, r1
	add	r1, r0, #0
	add	r1, r1, #0x2a
	ldrb	r3, [r1]
	ldrh	r1, [r0, #0x24]
	mov	r2, r3
	mul	r2, r2, r1
	mov	r9, r2
	mov	r6, #0xe
	ldrsh	r1, [r0, r6]
	mov	r2, r9
	mul	r2, r2, r1
	ldr	r1, [r0, #0x1c]
	add	r1, r1, r2
	mov	r6, #0xc
	ldrsh	r2, [r0, r6]
	mul	r2, r2, r3
	add	r7, r1, r2
	mov	r6, #0x0
	ldrh	r0, [r0, #0x12]
	cmp	r6, r0
	bge	.L88	@cond_branch
	mov	sl, r4
.L90:
	mov	r0, sl
	ldr	r1, [r0]
	mov	r2, r8
	add	r4, r5, r2
	lsl	r4, r4, #0x4
	add	r1, r4, r1
	add	r0, r1, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	ldrb	r2, [r1, #0x14]
	ldrb	r3, [r1, #0x16]
	add	r3, r3, r6
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldrb	r1, [r1, #0x10]
	str	r1, [sp]
	mov	r1, #0x1
	str	r1, [sp, #0x4]
	add	r1, r7, #0
	bl	CopyToBgTilemapBufferRect
	add	r7, r7, r9
	add	r6, r6, #0x1
	mov	r1, sl
	ldr	r0, [r1]
	add	r4, r4, r0
	ldrh	r4, [r4, #0x12]
	cmp	r6, r4
	blt	.L90	@cond_branch
.L88:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L93:
	.align	2, 0
.L92:
	.word	sTilemapUtil
.Lfe11:
	.size	 TilemapUtil_Draw,.Lfe11-TilemapUtil_Draw
.text
	.align	2, 0 @ Don't pad with nop

