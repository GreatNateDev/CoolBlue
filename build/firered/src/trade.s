@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sMenuTextTileBuffer,object
	.size	 sMenuTextTileBuffer,4
sMenuTextTileBuffer:
	.word	0x0
	.align	2, 0
	.type	 sMenuTextTileBuffers,object
	.size	 sMenuTextTileBuffers,56
sMenuTextTileBuffers:
	.space	56
	.globl	gLinkPartnerMail
	.align	2, 0
	.type	 gLinkPartnerMail,object
	.size	 gLinkPartnerMail,216
gLinkPartnerMail:
	.space	216
	.globl	gSelectedTradeMonPositions
	.type	 gSelectedTradeMonPositions,object
	.size	 gSelectedTradeMonPositions,2
gSelectedTradeMonPositions:
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sTradeMenu,object
	.size	 sTradeMenu,4
sTradeMenu:
	.word	0x0
	.section .rodata
	.align	2, 0
	.type	 sSizesAndOffsets,object
sSizesAndOffsets:
	.word	0xf24
	.word	0x3d7c
	.word	0x1c
	.word	0x530
	.word	0x34
	.word	0x24
	.word	0x64
	.word	0x528
	.size	 sSizesAndOffsets,32
	.align	1, 0
	.type	 sTradeMovesBoxTilemap,object
sTradeMovesBoxTilemap:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x9
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xd
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2
	.short	0x3
	.short	0x3
	.short	0xc
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xe
	.short	0x3
	.short	0x3
	.short	0x402
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x7
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x6
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x20
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x21
	.short	0x22
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x30
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0x31
	.short	0xc30
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0xc22
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc21
	.short	0xc20
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.size	 sTradeMovesBoxTilemap,510
	.align	1, 0
	.type	 sTradePartyBoxTilemap,object
sTradePartyBoxTilemap:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x9
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xa
	.short	0xd
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x2
	.short	0x3
	.short	0x3
	.short	0xc
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xb
	.short	0xe
	.short	0x3
	.short	0x3
	.short	0x402
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x7
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x8
	.short	0x6
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.short	0x4
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x5
	.short	0x404
	.size	 sTradePartyBoxTilemap,510
	.type	 sTradeStripesBG2Tilemap,object
sTradeStripesBG2Tilemap:
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x45
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x47
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4f
	.byte	0x10
	.byte	0x4e
	.byte	0x10
	.byte	0x4d
	.byte	0x10
	.byte	0x4c
	.byte	0x10
	.byte	0x4b
	.byte	0x10
	.byte	0x4a
	.byte	0x10
	.byte	0x49
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x48
	.byte	0x10
	.byte	0x46
	.byte	0x10
	.byte	0x44
	.byte	0x10
	.byte	0x43
	.byte	0x10
	.byte	0x42
	.byte	0x10
	.byte	0x41
	.byte	0x10
	.byte	0x40
	.byte	0x10
	.size	 sTradeStripesBG2Tilemap,2048
	.type	 sTradeStripesBG3Tilemap,object
sTradeStripesBG3Tilemap:
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5f
	.byte	0x20
	.byte	0x5e
	.byte	0x20
	.byte	0x5d
	.byte	0x20
	.byte	0x5c
	.byte	0x20
	.byte	0x5b
	.byte	0x20
	.byte	0x5a
	.byte	0x20
	.byte	0x59
	.byte	0x20
	.byte	0x58
	.byte	0x20
	.byte	0x57
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x56
	.byte	0x20
	.byte	0x55
	.byte	0x20
	.byte	0x54
	.byte	0x20
	.byte	0x53
	.byte	0x20
	.byte	0x52
	.byte	0x20
	.byte	0x51
	.byte	0x20
	.byte	0x50
	.byte	0x20
	.size	 sTradeStripesBG3Tilemap,2048
	.align	2, 0
	.type	 sOamData_MenuText,object
	.size	 sOamData_MenuText,8
sOamData_MenuText:
	.space	1
	.byte	0x40
	.space	1
	.byte	0x80
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 sOamData_Cursor,object
	.size	 sOamData_Cursor,8
sOamData_Cursor:
	.space	1
	.byte	0x40
	.space	1
	.byte	0xc0
	.space	1
	.byte	0x4
	.space	2
	.align	2, 0
	.type	 sAnim_Cursor_Normal,object
sAnim_Cursor_Normal:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Cursor_Normal,8
	.align	2, 0
	.type	 sAnim_Cursor_OnCancel,object
sAnim_Cursor_OnCancel:
	.short	0x20
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_Cursor_OnCancel,8
	.align	2, 0
	.type	 sAnims_Cursor,object
sAnims_Cursor:
	.word	sAnim_Cursor_Normal
	.word	sAnim_Cursor_OnCancel
	.size	 sAnims_Cursor,8
	.align	2, 0
	.type	 sCursor_SpriteSheet,object
	.size	 sCursor_SpriteSheet,8
sCursor_SpriteSheet:
	.word	gTradeCursor_Gfx
	.short	0x800
	.short	0x12c
	.align	2, 0
	.type	 sCursor_SpritePalette,object
	.size	 sCursor_SpritePalette,8
sCursor_SpritePalette:
	.word	gTradeCursor_Pal
	.short	0x929
	.space	2
	.align	2, 0
	.type	 sAnim_MenuText_0,object
sAnim_MenuText_0:
	.short	0x0
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_MenuText_0,8
	.align	2, 0
	.type	 sAnim_MenuText_1,object
sAnim_MenuText_1:
	.short	0x8
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_MenuText_1,8
	.align	2, 0
	.type	 sAnim_MenuText_2,object
sAnim_MenuText_2:
	.short	0x10
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_MenuText_2,8
	.align	2, 0
	.type	 sAnim_MenuText_3,object
sAnim_MenuText_3:
	.short	0x18
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_MenuText_3,8
	.align	2, 0
	.type	 sAnim_MenuText_4,object
sAnim_MenuText_4:
	.short	0x20
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_MenuText_4,8
	.align	2, 0
	.type	 sAnim_MenuText_5,object
sAnim_MenuText_5:
	.short	0x28
	.byte	0x5
	.space	1
	.short	-0x1
	.space	2
	.size	 sAnim_MenuText_5,8
	.align	2, 0
	.type	 sAnims_MenuText,object
sAnims_MenuText:
	.word	sAnim_MenuText_0
	.word	sAnim_MenuText_1
	.word	sAnim_MenuText_2
	.word	sAnim_MenuText_3
	.word	sAnim_MenuText_4
	.word	sAnim_MenuText_5
	.size	 sAnims_MenuText,24
	.align	2, 0
	.type	 sSpriteTemplate_Cursor,object
	.size	 sSpriteTemplate_Cursor,24
sSpriteTemplate_Cursor:
	.short	0x12c
	.short	0x929
	.word	sOamData_Cursor
	.word	sAnims_Cursor
	.space	4
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	2, 0
	.type	 sSpriteTemplate_MenuText,object
	.size	 sSpriteTemplate_MenuText,24
sSpriteTemplate_MenuText:
	.short	0xc8
	.short	0x133d
	.word	sOamData_MenuText
	.word	sAnims_MenuText
	.space	4
	.word	gDummySpriteAffineAnimTable
	.word	SpriteCallbackDummy
	.align	1, 0
	.type	 sMenuText_Pal,object
sMenuText_Pal:
	.short	0x0
	.short	0x2529
	.short	0x1f
	.short	0x3e0
	.short	0x7c00
	.short	0x3ff
	.short	0x7fe0
	.short	0x7c1f
	.short	0x675a
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x7fff
	.short	0x0
	.short	0x39ce
	.short	0x7fff
	.size	 sMenuText_Pal,32
	.align	2, 0
	.type	 sSpritePalette_MenuText,object
	.size	 sSpritePalette_MenuText,8
sSpritePalette_MenuText:
	.word	sMenuText_Pal
	.short	0x133d
	.space	2
	.type	 sCursorMoveDestinations,object
	.size	 sCursorMoveDestinations,312
sCursorMoveDestinations:
	.byte	0x4
	.byte	0x2
	.byte	0xc
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.byte	0xc
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0x6
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x6
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x5
	.byte	0x3
	.byte	0xc
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x5
	.byte	0xc
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0x6
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x6
	.byte	0x7
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.byte	0x8
	.byte	0x7
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x5
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x9
	.byte	0x8
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x9
	.byte	0x6
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xb
	.byte	0xa
	.byte	0x9
	.byte	0x8
	.byte	0x7
	.byte	0x6
	.byte	0x5
	.byte	0x3
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x4
	.byte	0x0
	.byte	0x0
	.byte	0xa
	.byte	0x8
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xa
	.byte	0x8
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0xa
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xa
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x3
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xb
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x5
	.byte	0x4
	.byte	0x3
	.byte	0x2
	.byte	0x1
	.byte	0x0
	.byte	0xb
	.byte	0x9
	.byte	0x7
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x9
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xa
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x4
	.byte	0x2
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xb
	.byte	0x9
	.byte	0x7
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x7
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.type	 sTradeMonSpriteCoords,object
	.size	 sTradeMonSpriteCoords,26
sTradeMonSpriteCoords:
	.byte	0x1
	.byte	0x5
	.byte	0x8
	.byte	0x5
	.byte	0x1
	.byte	0xa
	.byte	0x8
	.byte	0xa
	.byte	0x1
	.byte	0xf
	.byte	0x8
	.byte	0xf
	.byte	0x10
	.byte	0x5
	.byte	0x17
	.byte	0x5
	.byte	0x10
	.byte	0xa
	.byte	0x17
	.byte	0xa
	.byte	0x10
	.byte	0xf
	.byte	0x17
	.byte	0xf
	.byte	0x17
	.byte	0x12
	.type	 sTradeMonLevelCoords,object
	.size	 sTradeMonLevelCoords,24
sTradeMonLevelCoords:
	.byte	0x5
	.byte	0x4
	.byte	0xc
	.byte	0x4
	.byte	0x5
	.byte	0x9
	.byte	0xc
	.byte	0x9
	.byte	0x5
	.byte	0xe
	.byte	0xc
	.byte	0xe
	.byte	0x14
	.byte	0x4
	.byte	0x1b
	.byte	0x4
	.byte	0x14
	.byte	0x9
	.byte	0x1b
	.byte	0x9
	.byte	0x14
	.byte	0xe
	.byte	0x1b
	.byte	0xe
	.type	 sTradeMonBoxCoords,object
	.size	 sTradeMonBoxCoords,24
sTradeMonBoxCoords:
	.byte	0x1
	.byte	0x3
	.byte	0x8
	.byte	0x3
	.byte	0x1
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x1
	.byte	0xd
	.byte	0x8
	.byte	0xd
	.byte	0x10
	.byte	0x3
	.byte	0x17
	.byte	0x3
	.byte	0x10
	.byte	0x8
	.byte	0x17
	.byte	0x8
	.byte	0x10
	.byte	0xd
	.byte	0x17
	.byte	0xd
	.type	 sPlayerNameCoords,object
sPlayerNameCoords:
	.byte	0x3c
	.byte	0x9
	.byte	0xb4
	.byte	0x9
	.byte	0x30
	.byte	0x9
	.byte	0xa8
	.byte	0x9
	.size	 sPlayerNameCoords,8
	.type	 sUnusedCoords,object
sUnusedCoords:
	.byte	0x0
	.byte	0xe
	.byte	0xf
	.byte	0x1d
	.byte	0x3
	.byte	0x5
	.byte	0x3
	.byte	0x7
	.byte	0x12
	.byte	0x5
	.byte	0x12
	.byte	0x7
	.byte	0x8
	.byte	0x7
	.byte	0x16
	.byte	0xc
	.byte	0x8
	.byte	0x7
	.byte	0x16
	.byte	0xc
	.byte	0x6
	.byte	0x7
	.byte	0x18
	.byte	0xc
	.byte	0x6
	.byte	0x7
	.byte	0x18
	.byte	0xc
	.byte	0x8
	.byte	0x7
	.byte	0x16
	.byte	0xc
	.byte	0x7
	.byte	0x7
	.byte	0x17
	.byte	0xc
	.size	 sUnusedCoords,36
	.type	 sText_Dummy,object
sText_Dummy:
	.byte	0xff
	.size	 sText_Dummy,1
	.type	 sText_ClrWhtHltTranspShdwDrkGry,object
sText_ClrWhtHltTranspShdwDrkGry:
	.byte	0xfc
	.byte	0x1
	.byte	0x1
	.byte	0xfc
	.byte	0x2
	.byte	0x0
	.byte	0xfc
	.byte	0x3
	.byte	0x2
	.byte	0xff
	.size	 sText_ClrWhtHltTranspShdwDrkGry,10
	.globl	gText_MaleSymbol4
	.type	 gText_MaleSymbol4,object
gText_MaleSymbol4:
	.byte	0xb5
	.byte	0xff
	.size	 gText_MaleSymbol4,2
	.globl	gText_FemaleSymbol4
	.type	 gText_FemaleSymbol4,object
gText_FemaleSymbol4:
	.byte	0xb6
	.byte	0xff
	.size	 gText_FemaleSymbol4,2
	.globl	gText_GenderlessSymbol
	.type	 gText_GenderlessSymbol,object
gText_GenderlessSymbol:
	.byte	0xff
	.size	 gText_GenderlessSymbol,1
	.type	 sText_Dummy2,object
sText_Dummy2:
	.byte	0xff
	.size	 sText_Dummy2,1
	.type	 sText_Newline,object
sText_Newline:
	.byte	0xfe
	.byte	0xff
	.size	 sText_Newline,2
	.type	 sText_Slash,object
sText_Slash:
	.byte	0xba
	.byte	0xff
	.size	 sText_Slash,2
	.align	2, 0
	.type	 sActionTexts,object
sActionTexts:
	.word	gTradeText_Cancel
	.word	gTradeText_ChooseAPokemon
	.word	gTradeText_Summary
	.word	gTradeText_Trade
	.word	gText_CancelTrade
	.word	gTradeText_PressBButtonToExit
	.size	 sActionTexts,24
	.align	2, 0
	.type	 sMenuAction_SummaryTrade,object
sMenuAction_SummaryTrade:
	.word	gText_TradeAction_Summary
	.word	Task_DrawSelectionSummary
	.word	gText_TradeAction_Trade
	.word	Task_DrawSelectionTrade
	.size	 sMenuAction_SummaryTrade,16
	.align	2, 0
	.type	 sMessages,object
sMessages:
	.word	gText_Trade_CommunicationStandby
	.word	gText_TradeHasBeenCanceled
	.word	gText_Trade_OnlyPkmnForBattle
	.word	gText_OnlyPkmnForBattle
	.word	gText_WaitingForFriendToFinish
	.word	gText_FriendWantsToTrade
	.word	gText_PkmnCantBeTradedNow
	.word	gText_EggCantBeTradedNow
	.word	gText_OtherTrainersPkmnCantBeTraded
	.size	 sMessages,36
	.type	 sTextColor_PartyMonNickname,object
sTextColor_PartyMonNickname:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.size	 sTextColor_PartyMonNickname,3
	.align	2, 0
	.type	 sBgTemplates,object
	.size	 sBgTemplates,16
sBgTemplates:
	.byte	0xf8
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0x51
	.byte	0x10
	.byte	0x0
	.space	1
	.byte	0x62
	.byte	0x20
	.byte	0x0
	.space	1
	.byte	0x73
	.byte	0x30
	.byte	0x0
	.space	1
	.align	2, 0
	.type	 sWindowTemplates,object
sWindowTemplates:
	.byte	0x0
	.byte	0x4
	.byte	0x7
	.byte	0x16
	.byte	0x4
	.byte	0xf
	.short	0x1e
	.byte	0x0
	.byte	0x11
	.byte	0xf
	.byte	0xc
	.byte	0x4
	.byte	0xf
	.short	0x76
	.byte	0x0
	.byte	0x0
	.byte	0x5
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0xa6
	.byte	0x0
	.byte	0x7
	.byte	0x5
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0xb6
	.byte	0x0
	.byte	0x0
	.byte	0xa
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0xc6
	.byte	0x0
	.byte	0x7
	.byte	0xa
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0xd6
	.byte	0x0
	.byte	0x0
	.byte	0xf
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0xe6
	.byte	0x0
	.byte	0x7
	.byte	0xf
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0xf6
	.byte	0x0
	.byte	0xf
	.byte	0x5
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0x106
	.byte	0x0
	.byte	0x16
	.byte	0x5
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0x116
	.byte	0x0
	.byte	0xf
	.byte	0xa
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0x126
	.byte	0x0
	.byte	0x16
	.byte	0xa
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0x136
	.byte	0x0
	.byte	0xf
	.byte	0xf
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0x146
	.byte	0x0
	.byte	0x16
	.byte	0xf
	.byte	0x8
	.byte	0x2
	.byte	0xd
	.short	0x156
	.byte	0x0
	.byte	0x2
	.byte	0x5
	.byte	0xe
	.byte	0x2
	.byte	0xd
	.short	0x166
	.byte	0x0
	.byte	0x3
	.byte	0x8
	.byte	0xb
	.byte	0x8
	.byte	0xf
	.short	0x182
	.byte	0x0
	.byte	0x11
	.byte	0x5
	.byte	0xe
	.byte	0x2
	.byte	0xf
	.short	0x1da
	.byte	0x0
	.byte	0x12
	.byte	0x8
	.byte	0xb
	.byte	0x8
	.byte	0xf
	.short	0x1f6
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sWindowTemplates,152
	.align	2, 0
	.type	 sWindowTemplate_YesNo,object
	.size	 sWindowTemplate_YesNo,8
sWindowTemplate_YesNo:
	.byte	0x0
	.byte	0x15
	.byte	0xd
	.byte	0x6
	.byte	0x4
	.byte	0xf
	.short	0x24e
	.type	 sDebug_Messages,object
sDebug_Messages:
	.byte	0x6
	.byte	0x2
	.byte	0x22
	.byte	0x19
	.byte	0x0
	.byte	0xf
	.byte	0x3
	.byte	0xc
	.byte	0x2e
	.byte	0xff
	.space	3
	.byte	0x6
	.byte	0x2
	.byte	0x22
	.byte	0x19
	.byte	0x0
	.byte	0x3d
	.byte	0x35
	.byte	0xc
	.byte	0x2e
	.byte	0xff
	.space	3
	.byte	0x9f
	.byte	0x59
	.byte	0x73
	.byte	0x7e
	.byte	0x51
	.byte	0x52
	.byte	0x5a
	.byte	0x7e
	.byte	0x5e
	.byte	0xa0
	.byte	0x64
	.byte	0xff
	.space	1
	.byte	0xc9
	.byte	0xbc
	.byte	0xc4
	.byte	0x63
	.byte	0x57
	.byte	0x5d
	.byte	0x64
	.byte	0x5e
	.byte	0xa0
	.byte	0x64
	.byte	0xff
	.space	2
	.byte	0x5e
	.byte	0x79
	.byte	0x5e
	.byte	0xa0
	.byte	0x64
	.byte	0xff
	.space	7
	.byte	0xc9
	.byte	0xbc
	.byte	0xc4
	.byte	0x63
	.byte	0x57
	.byte	0x5d
	.byte	0x64
	.byte	0xbb
	.byte	0xbe
	.byte	0xbe
	.byte	0xff
	.space	2
	.byte	0x5c
	.byte	0x5d
	.byte	0x63
	.byte	0x71
	.byte	0x72
	.byte	0xa0
	.byte	0x5e
	.byte	0xae
	.byte	0x8d
	.byte	0xbb
	.byte	0xbe
	.byte	0xbe
	.byte	0xff
	.byte	0x1a
	.byte	0x2
	.byte	0x9
	.byte	0x2
	.byte	0x5e
	.byte	0xa0
	.byte	0x64
	.byte	0xff
	.space	5
	.size	 sDebug_Messages,104
	.type	 sText_ShedinjaJP,object
sText_ShedinjaJP:
	.byte	0x67
	.byte	0x59
	.byte	0x66
	.byte	0x7e
	.byte	0xff
	.size	 sText_ShedinjaJP,5
	.type	 sDebug_TradeResultTexts,object
sDebug_TradeResultTexts:
	.byte	0xa
	.byte	0x3
	.byte	0x6
	.byte	0x2e
	.byte	0xe
	.byte	0x2
	.byte	0x28
	.byte	0x12
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x41
	.byte	0x22
	.byte	0x41
	.byte	0x10
	.byte	0x27
	.byte	0xc
	.byte	0x2
	.byte	0x26
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.size	 sDebug_TradeResultTexts,28
	.type	 sSelectedMonLevelGenderCoords,object
sSelectedMonLevelGenderCoords:
	.byte	0x4
	.byte	0x3
	.byte	0x13
	.byte	0x3
	.size	 sSelectedMonLevelGenderCoords,4

	.lcomm	dummy.9,2
.text
	.align	2, 0
	.type	 InitTradeMenu,function
	.thumb_func
InitTradeMenu:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	bl	ResetSpriteData
	bl	FreeAllSpritePalettes
	bl	ResetTasks
	bl	ResetPaletteFade
	ldr	r2, .L11
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x80
	orr	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldr	r0, .L11+0x4
	bl	SetVBlankCallback
	ldr	r4, .L11+0x8
	add	r0, r4, #0
	mov	r1, #0xf0
	mov	r2, #0x14
	bl	LoadPalette
	add	r0, r4, #0
	mov	r1, #0xd0
	mov	r2, #0x14
	bl	LoadPalette
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L11+0xc
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	ldr	r0, .L11+0x10
	ldr	r1, [r0]
	mov	r0, #0x8f
	lsl	r0, r0, #0x4
	add	r1, r1, r0
	mov	r0, #0x1
	bl	SetBgTilemapBuffer
	ldr	r0, .L11+0x14
	bl	InitWindows
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L5	@cond_branch
	bl	DeactivateAllTextPrinters
	ldr	r1, .L11+0x18
	ldr	r2, .L11+0x1c
	add	r0, r2, #0
	strh	r0, [r1]
	mov	r5, #0x0
.L9:
	lsl	r4, r5, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	ClearWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r5, r5, #0x1
	cmp	r5, #0x11
	bls	.L9	@cond_branch
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0xf
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r0, #0x0
	mov	r1, #0x14
	mov	r2, #0xc0
	bl	LoadStdWindowGfx
	mov	r0, #0x2
	mov	r1, #0x1
	mov	r2, #0xe0
	bl	LoadUserWindowGfx
	bl	LoadMonIconPalettes
	ldr	r2, .L11+0x10
	ldr	r0, [r2]
	add	r0, r0, #0x69
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x6f
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x70
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x74
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x75
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x7a
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0x7b
	strb	r1, [r0]
	ldr	r0, [r2]
	add	r0, r0, #0xa8
	strb	r1, [r0]
.L5:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L12:
	.align	2, 0
.L11:
	.word	gPaletteFade
	.word	VBlankCB_TradeMenu
	.word	gStandardMenuPalette
	.word	sBgTemplates
	.word	sTradeMenu
	.word	sWindowTemplates
	.word	dummy.9
	.word	0x24e
.Lfe1:
	.size	 InitTradeMenu,.Lfe1-InitTradeMenu
	.align	2, 0
	.globl	CB2_StartCreateTradeMenu
	.type	 CB2_StartCreateTradeMenu,function
	.thumb_func
CB2_StartCreateTradeMenu:
	push	{lr}
	ldr	r0, .L14
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L15:
	.align	2, 0
.L14:
	.word	CB2_CreateTradeMenu
.Lfe2:
	.size	 CB2_StartCreateTradeMenu,.Lfe2-CB2_StartCreateTradeMenu
	.align	2, 0
	.type	 CB2_CreateTradeMenu,function
	.thumb_func
CB2_CreateTradeMenu:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x28
	ldr	r1, .L98
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r3, r1, #0
	cmp	r0, #0x16
	bls	.LCB177
	b	.L17	@long jump
.LCB177:
	lsl	r0, r0, #0x2
	ldr	r1, .L98+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L99:
	.align	2, 0
.L98:
	.word	gMain
	.word	.L94
	.align	2, 0
	.align	2, 0
.L94:
	.word	.L18
	.word	.L24
	.word	.L35
	.word	.L37
	.word	.L42
	.word	.L45
	.word	.L49
	.word	.L51
	.word	.L62
	.word	.L63
	.word	.L64
	.word	.L65
	.word	.L67
	.word	.L78
	.word	.L84
	.word	.L85
	.word	.L86
	.word	.L87
	.word	.L88
	.word	.L89
	.word	.L90
	.word	.L91
	.word	.L92
.L18:
	ldr	r4, .L100
	ldr	r0, .L100+0x4
	bl	AllocZeroed
	str	r0, [r4]
	bl	InitTradeMenu
	ldr	r4, .L100+0x8
	mov	r0, #0xe0
	lsl	r0, r0, #0x4
	bl	AllocZeroed
	str	r0, [r4]
	mov	r6, #0x0
	ldr	r2, .L100+0xc
.L22:
	lsl	r1, r6, #0x8
	ldr	r0, [r4]
	add	r0, r0, r1
	stmia	r2!, {r0}
	add	r6, r6, #0x1
	cmp	r6, #0xd
	ble	.L22	@cond_branch
	ldr	r1, .L100+0x10
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L96
.L101:
	.align	2, 0
.L100:
	.word	sTradeMenu
	.word	0x10f0
	.word	sMenuTextTileBuffer
	.word	sMenuTextTileBuffers
	.word	gMain
.L24:
	ldr	r2, .L102
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
	mov	r6, #0x0
	mov	r4, #0x0
.L28:
	mov	r0, #0x64
	mul	r0, r0, r6
	ldr	r1, .L102+0x4
	add	r0, r0, r1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	str	r4, [sp, #0xc]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x20
	bl	CreateMon
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L28	@cond_branch
	mov	r0, #0x0
	bl	PrintTradeMessage
	mov	r0, #0x0
	bl	ShowBg
	ldr	r0, .L102+0x8
	ldrb	r2, [r0]
	cmp	r2, #0
	bne	.L30	@cond_branch
	ldr	r1, .L102+0xc
	ldr	r5, .L102+0x10
	add	r0, r5, #0
	strh	r0, [r1]
	ldr	r0, .L102+0x14
	ldr	r0, [r0]
	add	r0, r0, #0xa8
	strb	r2, [r0]
	ldr	r0, .L102+0x18
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L31	@cond_branch
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	CreateTask_RfuIdle
	b	.L32
.L103:
	.align	2, 0
.L102:
	.word	gPaletteFade
	.word	gEnemyParty
	.word	gReceivedRemoteLinkPlayers
	.word	gLinkType
	.word	0x1122
	.word	sTradeMenu
	.word	gWirelessCommType
.L31:
	bl	OpenLink
	ldr	r1, .L104
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r1, r7
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L32:
	ldr	r0, .L104+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.LCB338
	b	.L17	@long jump
.LCB338:
	ldr	r0, .L104+0x8
	mov	r1, #0x1
	bl	CreateTask
	b	.L17
.L105:
	.align	2, 0
.L104:
	.word	gMain
	.word	gWirelessCommType
	.word	Task_WaitForLinkPlayerConnection
.L30:
	ldr	r0, .L106
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	mov	r1, #0x4
	strb	r1, [r0]
	b	.L17
.L107:
	.align	2, 0
.L106:
	.word	gMain
.L35:
	ldr	r2, .L108
	ldr	r1, [r2]
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	add	r1, r0, #0
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	cmp	r0, #0xb
	bhi	.LCB385
	b	.L17	@long jump
.LCB385:
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r3, r2
	b	.L96
.L109:
	.align	2, 0
.L108:
	.word	sTradeMenu
.L37:
	bl	GetLinkPlayerCount_2
	add	r4, r0, #0
	bl	GetSavedPlayerCount
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bcs	.LCB412
	b	.L17	@long jump
.LCB412:
	bl	IsLinkMaster
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L39	@cond_branch
	ldr	r0, .L110
	ldr	r1, [r0]
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1e
	bhi	.LCB432
	b	.L17	@long jump
.LCB432:
	bl	CheckShouldAdvanceLinkState
	ldr	r1, .L110+0x4
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L96
.L111:
	.align	2, 0
.L110:
	.word	sTradeMenu
	.word	gMain
.L39:
	ldr	r1, .L112
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L96
.L113:
	.align	2, 0
.L112:
	.word	gMain
.L42:
	ldr	r0, .L114
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.LCB470
	b	.L17	@long jump
.LCB470:
	bl	IsLinkPlayerDataExchangeComplete
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.LCB476
	b	.L17	@long jump
.LCB476:
	bl	DestroyTask_RfuIdle
	bl	CalculatePlayerPartyCount
	ldr	r1, .L114+0x4
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r1, r7
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r0, .L114+0x8
	ldr	r0, [r0]
	add	r0, r0, #0xa8
	strb	r2, [r0]
	ldr	r0, .L114+0xc
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB498
	b	.L17	@long jump
.LCB498:
	mov	r0, #0x1
	bl	Rfu_SetLinkRecovery
	bl	SetLinkStandbyCallback
	b	.L17
.L115:
	.align	2, 0
.L114:
	.word	gReceivedRemoteLinkPlayers
	.word	gMain
	.word	sTradeMenu
	.word	gWirelessCommType
.L45:
	ldr	r0, .L116
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L46	@cond_branch
	bl	IsLinkRfuTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB527
	b	.L17	@long jump
.LCB527:
	ldr	r1, .L116+0x4
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	b	.L17
.L117:
	.align	2, 0
.L116:
	.word	gWirelessCommType
	.word	gMain
.L46:
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r3, r2
	b	.L96
.L49:
	bl	BufferTradeParties
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB565
	b	.L17	@long jump
.LCB565:
	bl	SaveTradeGiftRibbons
	ldr	r1, .L118
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L96
.L119:
	.align	2, 0
.L118:
	.word	gMain
.L51:
	bl	CalculateEnemyPartyCount
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0x0
	bl	SetGpuReg
	ldr	r2, .L120
	ldr	r0, [r2]
	ldr	r1, .L120+0x4
	ldrb	r1, [r1]
	add	r0, r0, #0x36
	strb	r1, [r0]
	ldr	r0, [r2]
	ldr	r1, .L120+0x8
	ldrb	r1, [r1]
	add	r0, r0, #0x37
	strb	r1, [r0]
	mov	r6, #0x0
	ldr	r0, [r2]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L53	@cond_branch
	mov	r8, r2
	ldr	r7, .L120+0xc
.L55:
	mov	r0, #0x64
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, .L120+0x10
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	ldrb	r2, [r7]
	lsl	r2, r2, #0x13
	mov	r1, #0xe0
	lsl	r1, r1, #0xc
	add	r2, r2, r1
	asr	r2, r2, #0x10
	ldrb	r3, [r7, #0x1]
	lsl	r3, r3, #0x13
	ldr	r1, .L120+0x14
	add	r3, r3, r1
	asr	r3, r3, #0x10
	mov	r1, #0x1
	str	r1, [sp]
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	add	r0, r5, #0
	ldr	r1, .L120+0x18
	bl	CreateMonIcon
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, #0x28
	add	r1, r1, r6
	strb	r0, [r1]
	add	r7, r7, #0x2
	add	r6, r6, #0x1
	ldr	r0, [r2]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r6, r0
	blt	.L55	@cond_branch
.L53:
	mov	r6, #0x0
	ldr	r1, .L120
	ldr	r0, [r1]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L58	@cond_branch
	ldr	r0, .L120+0xc
	mov	r8, r1
	add	r7, r0, #0
	add	r7, r7, #0xc
.L60:
	mov	r0, #0x64
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, .L120+0x1c
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	ldrb	r2, [r7]
	lsl	r2, r2, #0x13
	mov	r3, #0xe0
	lsl	r3, r3, #0xc
	add	r2, r2, r3
	asr	r2, r2, #0x10
	ldrb	r3, [r7, #0x1]
	lsl	r3, r3, #0x13
	ldr	r1, .L120+0x14
	add	r3, r3, r1
	asr	r3, r3, #0x10
	mov	r1, #0x1
	str	r1, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	add	r0, r5, #0
	ldr	r1, .L120+0x18
	bl	CreateMonIcon
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, #0x2e
	add	r1, r1, r6
	strb	r0, [r1]
	add	r7, r7, #0x2
	add	r6, r6, #0x1
	ldr	r0, [r2]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r6, r0
	blt	.L60	@cond_branch
.L58:
	ldr	r1, .L120+0x20
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L96
.L121:
	.align	2, 0
.L120:
	.word	sTradeMenu
	.word	gPlayerPartyCount
	.word	gEnemyPartyCount
	.word	sTradeMonSpriteCoords
	.word	gPlayerParty
	.word	-0xc0000
	.word	SpriteCB_MonIcon
	.word	gEnemyParty
	.word	gMain
.L62:
	bl	LoadHeldItemIcons
	ldr	r0, .L122
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x36
	add	r1, r1, #0x28
	mov	r2, #0x0
	bl	DrawHeldItemIconsForTrade
	ldr	r1, .L122+0x4
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L96
.L123:
	.align	2, 0
.L122:
	.word	sTradeMenu
	.word	gMain
.L63:
	ldr	r0, .L124
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x36
	add	r1, r1, #0x28
	mov	r2, #0x1
	bl	DrawHeldItemIconsForTrade
	ldr	r1, .L124+0x4
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r1, r7
	b	.L96
.L125:
	.align	2, 0
.L124:
	.word	sTradeMenu
	.word	gMain
.L64:
	ldr	r0, .L126
	ldr	r0, [r0]
	ldr	r6, .L126+0x4
	ldr	r1, [r6]
	ldr	r5, .L126+0x8
	str	r5, [sp]
	mov	r4, #0x3
	str	r4, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	eor	r1, r1, r0
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L126+0xc
	add	r0, r0, r1
	ldr	r1, [r6, #0xc]
	str	r5, [sp]
	str	r4, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	ldr	r4, .L126+0x10
	ldr	r0, [r4]
	ldr	r1, [r6, #0x18]
	str	r5, [sp]
	mov	r2, #0x2
	str	r2, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	ldr	r0, [r4, #0x4]
	ldr	r1, [r6, #0x20]
	mov	r2, #0x18
	bl	DrawBottomRowText
	ldr	r1, .L126+0x14
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r0, .L126+0x18
	ldr	r0, [r0]
	add	r0, r0, #0xa8
	strb	r2, [r0]
	b	.L17
.L127:
	.align	2, 0
.L126:
	.word	gSaveBlock2Ptr
	.word	sMenuTextTileBuffers
	.word	gDecompressionBuffer
	.word	gLinkPlayers+0x8
	.word	sActionTexts
	.word	gMain
	.word	sTradeMenu
.L65:
	bl	LoadUISpriteGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB900
	b	.L17	@long jump
.LCB900:
	b	.L97
.L67:
	ldr	r0, .L128
	ldr	r1, [r0]
	mov	r0, #0x1
	mov	r2, #0x0
	bl	GetStringWidth
	add	r1, r0, #0
	mov	r0, #0x38
	sub	r0, r0, r1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	mov	r6, #0x0
	add	r5, sp, #0x10
	ldr	r3, .L128+0x4
	mov	r8, r3
	asr	r0, r0, #0x1
	ldrb	r7, [r3, #0x4]
	add	r4, r0, r7
.L71:
	add	r1, sp, #0x10
	ldr	r0, .L128+0x8
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldrh	r0, [r5]
	add	r0, r0, r6
	strh	r0, [r5]
	lsl	r1, r4, #0x10
	asr	r1, r1, #0x10
	add	r0, sp, #0x10
	mov	r3, r8
	ldrb	r2, [r3, #0x5]
	mov	r3, #0x1
	bl	CreateSprite
	add	r4, r4, #0x20
	add	r6, r6, #0x1
	cmp	r6, #0x2
	ble	.L71	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	eor	r1, r1, r0
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L128+0xc
	add	r1, r0, r1
	mov	r0, #0x1
	mov	r2, #0x0
	bl	GetStringWidth
	add	r1, r0, #0
	mov	r0, #0x38
	sub	r0, r0, r1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	mov	r6, #0x0
	add	r5, sp, #0x10
	ldr	r7, .L128+0x4
	mov	r8, r7
	asr	r0, r0, #0x1
	mov	r1, r8
	ldrb	r1, [r1, #0x6]
	add	r4, r0, r1
.L76:
	add	r1, sp, #0x10
	ldr	r0, .L128+0x8
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	add	r0, r6, #0x3
	ldrh	r1, [r5]
	add	r0, r0, r1
	strh	r0, [r5]
	lsl	r1, r4, #0x10
	asr	r1, r1, #0x10
	add	r0, sp, #0x10
	mov	r3, r8
	ldrb	r2, [r3, #0x7]
	mov	r3, #0x1
	bl	CreateSprite
	add	r4, r4, #0x20
	add	r6, r6, #0x1
	cmp	r6, #0x2
	ble	.L76	@cond_branch
	ldr	r1, .L128+0x10
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L96
.L129:
	.align	2, 0
.L128:
	.word	gSaveBlock2Ptr
	.word	sPlayerNameCoords
	.word	sSpriteTemplate_MenuText
	.word	gLinkPlayers+0x8
	.word	gMain
.L78:
	ldr	r4, .L130
	add	r1, sp, #0x10
	add	r0, r4, #0
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r5, r7}
	stmia	r1!, {r2, r5, r7}
	add	r1, sp, #0x10
	add	r0, r1, #0
	ldrh	r0, [r0]
	add	r0, r0, #0x6
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xd7
	mov	r2, #0x97
	mov	r3, #0x1
	bl	CreateSprite
	add	r0, sp, #0x10
	ldmia	r4!, {r3, r5, r7}
	stmia	r0!, {r3, r5, r7}
	ldmia	r4!, {r1, r2, r3}
	stmia	r0!, {r1, r2, r3}
	add	r1, sp, #0x10
	add	r0, r1, #0
	ldrh	r0, [r0]
	add	r0, r0, #0x7
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xf7
	mov	r2, #0x97
	mov	r3, #0x1
	bl	CreateSprite
	mov	r6, #0x0
	add	r4, sp, #0x10
	mov	r5, #0xc0
	lsl	r5, r5, #0xd
.L82:
	add	r1, sp, #0x10
	ldr	r0, .L130
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	add	r0, r6, #0
	add	r0, r0, #0x8
	ldrh	r7, [r4]
	add	r0, r0, r7
	strh	r0, [r4]
	asr	r1, r5, #0x10
	add	r0, sp, #0x10
	mov	r2, #0x96
	mov	r3, #0x1
	bl	CreateSprite
	mov	r0, #0x80
	lsl	r0, r0, #0xe
	add	r5, r5, r0
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L82	@cond_branch
	ldr	r0, .L130+0x4
	ldr	r2, .L130+0x8
	ldrb	r1, [r2]
	lsl	r1, r1, #0x13
	mov	r3, #0x80
	lsl	r3, r3, #0xe
	add	r1, r1, r3
	asr	r1, r1, #0x10
	ldrb	r2, [r2, #0x1]
	lsl	r2, r2, #0x3
	mov	r3, #0x2
	bl	CreateSprite
	ldr	r2, .L130+0xc
	ldr	r1, [r2]
	add	r1, r1, #0x34
	mov	r3, #0x0
	strb	r0, [r1]
	ldr	r0, [r2]
	add	r0, r0, #0x35
	strb	r3, [r0]
	ldr	r1, .L130+0x10
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x0
	bl	rbox_fill_rectangle
	b	.L17
.L131:
	.align	2, 0
.L130:
	.word	sSpriteTemplate_MenuText
	.word	sSpriteTemplate_Cursor
	.word	sTradeMonSpriteCoords
	.word	sTradeMenu
	.word	gMain
.L84:
	mov	r0, #0x0
	bl	ComputePartyTradeableFlags
	mov	r0, #0x0
	bl	PrintPartyNicknames
	ldr	r2, .L132
	ldr	r0, [r2]
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	strb	r1, [r0, #0x1]
	bl	SetActiveMenuOptions
	ldr	r1, .L132+0x4
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r1, r7
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, .L132+0x8
	bl	PlayBGM
	b	.L17
.L133:
	.align	2, 0
.L132:
	.word	sTradeMenu
	.word	gMain
	.word	0x111
.L85:
	mov	r0, #0x1
	bl	ComputePartyTradeableFlags
	mov	r0, #0x1
	bl	PrintPartyNicknames
	ldr	r1, .L134
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L86:
	mov	r0, #0x0
	bl	LoadTradeBgGfx
	b	.L97
.L135:
	.align	2, 0
.L134:
	.word	gMain
.L87:
	mov	r0, #0x1
	bl	LoadTradeBgGfx
	ldr	r1, .L136
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L96
.L137:
	.align	2, 0
.L136:
	.word	gMain
.L88:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r1, .L138
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L96
.L139:
	.align	2, 0
.L138:
	.word	gMain
.L89:
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x2
	bl	LoadTradeBgGfx
	ldr	r1, .L140
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r1, r7
	b	.L96
.L141:
	.align	2, 0
.L140:
	.word	gMain
.L90:
	mov	r0, #0x0
	bl	ComputePartyHPBarLevels
	ldr	r1, .L142
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L96
.L143:
	.align	2, 0
.L142:
	.word	gMain
.L91:
	mov	r0, #0x1
	bl	ComputePartyHPBarLevels
	bl	SetTradePartyHPBarSprites
.L97:
	ldr	r1, .L144
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
.L96:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L17
.L145:
	.align	2, 0
.L144:
	.word	gMain
.L92:
	ldr	r0, .L146
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L17	@cond_branch
	ldr	r0, .L146+0x4
	str	r0, [r3]
	ldr	r0, .L146+0x8
	bl	SetMainCallback2
.L17:
	bl	RunTextPrinters
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	add	sp, sp, #0x28
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L147:
	.align	2, 0
.L146:
	.word	gPaletteFade
	.word	CB1_UpdateLink
	.word	CB2_TradeMenu
.Lfe3:
	.size	 CB2_CreateTradeMenu,.Lfe3-CB2_CreateTradeMenu
	.align	2, 0
	.globl	CB2_ReturnToTradeMenuFromSummary
	.type	 CB2_ReturnToTradeMenuFromSummary,function
	.thumb_func
CB2_ReturnToTradeMenuFromSummary:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x24
	ldr	r1, .L207
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0x16
	bls	.LCB1360
	b	.L149	@long jump
.LCB1360:
	lsl	r0, r0, #0x2
	ldr	r1, .L207+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L208:
	.align	2, 0
.L207:
	.word	gMain
	.word	.L201
	.align	2, 0
	.align	2, 0
.L201:
	.word	.L150
	.word	.L151
	.word	.L152
	.word	.L153
	.word	.L154
	.word	.L155
	.word	.L157
	.word	.L158
	.word	.L169
	.word	.L170
	.word	.L171
	.word	.L172
	.word	.L174
	.word	.L185
	.word	.L149
	.word	.L149
	.word	.L193
	.word	.L194
	.word	.L195
	.word	.L196
	.word	.L197
	.word	.L198
	.word	.L199
.L150:
	bl	InitTradeMenu
	ldr	r1, .L209
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L203
.L210:
	.align	2, 0
.L209:
	.word	gMain
.L151:
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r2, r5
	b	.L204
.L152:
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r2, r7
	b	.L203
.L153:
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r2, r0
	b	.L203
.L154:
	bl	CalculatePlayerPartyCount
	ldr	r1, .L211
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L203
.L212:
	.align	2, 0
.L211:
	.word	gMain
.L155:
	ldr	r0, .L213
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L156	@cond_branch
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
.L156:
	ldr	r1, .L213+0x4
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L203
.L214:
	.align	2, 0
.L213:
	.word	gWirelessCommType
	.word	gMain
.L157:
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r2, r5
	b	.L203
.L158:
	bl	CalculateEnemyPartyCount
	ldr	r4, .L215
	ldr	r0, [r4]
	ldr	r1, .L215+0x4
	ldrb	r1, [r1]
	add	r0, r0, #0x36
	strb	r1, [r0]
	ldr	r0, [r4]
	ldr	r1, .L215+0x8
	ldrb	r1, [r1]
	add	r0, r0, #0x37
	strb	r1, [r0]
	mov	r0, #0x0
	bl	ClearWindowTilemap
	mov	r0, #0x0
	bl	PrintPartyNicknames
	mov	r0, #0x1
	bl	PrintPartyNicknames
	mov	r6, #0x0
	ldr	r0, [r4]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L160	@cond_branch
	mov	r8, r4
	ldr	r7, .L215+0xc
.L162:
	mov	r0, #0x64
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, .L215+0x10
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	ldrb	r2, [r7]
	lsl	r2, r2, #0x13
	mov	r1, #0xe0
	lsl	r1, r1, #0xc
	add	r2, r2, r1
	asr	r2, r2, #0x10
	ldrb	r3, [r7, #0x1]
	lsl	r3, r3, #0x13
	ldr	r1, .L215+0x14
	add	r3, r3, r1
	asr	r3, r3, #0x10
	mov	r1, #0x1
	str	r1, [sp]
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	add	r0, r5, #0
	ldr	r1, .L215+0x18
	bl	CreateMonIcon
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, #0x28
	add	r1, r1, r6
	strb	r0, [r1]
	add	r7, r7, #0x2
	add	r6, r6, #0x1
	ldr	r0, [r2]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r6, r0
	blt	.L162	@cond_branch
.L160:
	mov	r6, #0x0
	ldr	r1, .L215
	ldr	r0, [r1]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L165	@cond_branch
	ldr	r0, .L215+0xc
	mov	r8, r1
	add	r7, r0, #0
	add	r7, r7, #0xc
.L167:
	mov	r0, #0x64
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, .L215+0x1c
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	add	r5, r0, #0
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	ldrb	r2, [r7]
	lsl	r2, r2, #0x13
	mov	r3, #0xe0
	lsl	r3, r3, #0xc
	add	r2, r2, r3
	asr	r2, r2, #0x10
	ldrb	r3, [r7, #0x1]
	lsl	r3, r3, #0x13
	ldr	r1, .L215+0x14
	add	r3, r3, r1
	asr	r3, r3, #0x10
	mov	r1, #0x1
	str	r1, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	add	r0, r5, #0
	ldr	r1, .L215+0x18
	bl	CreateMonIcon
	mov	r2, r8
	ldr	r1, [r2]
	add	r1, r1, #0x2e
	add	r1, r1, r6
	strb	r0, [r1]
	add	r7, r7, #0x2
	add	r6, r6, #0x1
	ldr	r0, [r2]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r6, r0
	blt	.L167	@cond_branch
.L165:
	ldr	r1, .L215+0x20
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L203
.L216:
	.align	2, 0
.L215:
	.word	sTradeMenu
	.word	gPlayerPartyCount
	.word	gEnemyPartyCount
	.word	sTradeMonSpriteCoords
	.word	gPlayerParty
	.word	-0xc0000
	.word	SpriteCB_MonIcon
	.word	gEnemyParty
	.word	gMain
.L169:
	bl	LoadHeldItemIcons
	ldr	r0, .L217
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x36
	add	r1, r1, #0x28
	mov	r2, #0x0
	bl	DrawHeldItemIconsForTrade
	ldr	r1, .L217+0x4
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L203
.L218:
	.align	2, 0
.L217:
	.word	sTradeMenu
	.word	gMain
.L170:
	ldr	r0, .L219
	ldr	r1, [r0]
	add	r0, r1, #0
	add	r0, r0, #0x36
	add	r1, r1, #0x28
	mov	r2, #0x1
	bl	DrawHeldItemIconsForTrade
	ldr	r1, .L219+0x4
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r1, r7
	b	.L203
.L220:
	.align	2, 0
.L219:
	.word	sTradeMenu
	.word	gMain
.L171:
	ldr	r0, .L221
	ldr	r0, [r0]
	ldr	r6, .L221+0x4
	ldr	r1, [r6]
	ldr	r5, .L221+0x8
	str	r5, [sp]
	mov	r4, #0x3
	str	r4, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	eor	r1, r1, r0
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L221+0xc
	add	r0, r0, r1
	ldr	r1, [r6, #0xc]
	str	r5, [sp]
	str	r4, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	ldr	r4, .L221+0x10
	ldr	r0, [r4]
	ldr	r1, [r6, #0x18]
	str	r5, [sp]
	mov	r2, #0x2
	str	r2, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	ldr	r0, [r4, #0x4]
	ldr	r1, [r6, #0x20]
	mov	r2, #0x18
	bl	DrawBottomRowText
	ldr	r1, .L221+0x14
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
.L204:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r0, .L221+0x18
	ldr	r0, [r0]
	add	r0, r0, #0xa8
	strb	r2, [r0]
	b	.L149
.L222:
	.align	2, 0
.L221:
	.word	gSaveBlock2Ptr
	.word	sMenuTextTileBuffers
	.word	gDecompressionBuffer
	.word	gLinkPlayers+0x8
	.word	sActionTexts
	.word	gMain
	.word	sTradeMenu
.L172:
	bl	LoadUISpriteGfx
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1788
	b	.L149	@long jump
.LCB1788:
	ldr	r1, .L223
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L203
.L224:
	.align	2, 0
.L223:
	.word	gMain
.L174:
	ldr	r0, .L225
	ldr	r1, [r0]
	mov	r0, #0x1
	mov	r2, #0x0
	bl	GetStringWidth
	add	r1, r0, #0
	mov	r0, #0x38
	sub	r0, r0, r1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	mov	r6, #0x0
	add	r5, sp, #0xc
	ldr	r3, .L225+0x4
	mov	r8, r3
	asr	r0, r0, #0x1
	ldrb	r7, [r3, #0x4]
	add	r4, r0, r7
.L178:
	add	r1, sp, #0xc
	ldr	r0, .L225+0x8
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldrh	r0, [r5]
	add	r0, r0, r6
	strh	r0, [r5]
	lsl	r1, r4, #0x10
	asr	r1, r1, #0x10
	add	r0, sp, #0xc
	mov	r3, r8
	ldrb	r2, [r3, #0x5]
	mov	r3, #0x1
	bl	CreateSprite
	add	r4, r4, #0x20
	add	r6, r6, #0x1
	cmp	r6, #0x2
	ble	.L178	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	mov	r1, #0x80
	lsl	r1, r1, #0x11
	eor	r1, r1, r0
	lsr	r1, r1, #0x18
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L225+0xc
	add	r1, r0, r1
	mov	r0, #0x1
	mov	r2, #0x0
	bl	GetStringWidth
	add	r1, r0, #0
	mov	r0, #0x38
	sub	r0, r0, r1
	lsr	r1, r0, #0x1f
	add	r0, r0, r1
	mov	r6, #0x0
	add	r5, sp, #0xc
	ldr	r7, .L225+0x4
	mov	r8, r7
	asr	r0, r0, #0x1
	mov	r1, r8
	ldrb	r1, [r1, #0x6]
	add	r4, r0, r1
.L183:
	add	r1, sp, #0xc
	ldr	r0, .L225+0x8
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	add	r0, r6, #0x3
	ldrh	r1, [r5]
	add	r0, r0, r1
	strh	r0, [r5]
	lsl	r1, r4, #0x10
	asr	r1, r1, #0x10
	add	r0, sp, #0xc
	mov	r3, r8
	ldrb	r2, [r3, #0x7]
	mov	r3, #0x1
	bl	CreateSprite
	add	r4, r4, #0x20
	add	r6, r6, #0x1
	cmp	r6, #0x2
	ble	.L183	@cond_branch
	ldr	r1, .L225+0x10
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L203
.L226:
	.align	2, 0
.L225:
	.word	gSaveBlock2Ptr
	.word	sPlayerNameCoords
	.word	sSpriteTemplate_MenuText
	.word	gLinkPlayers+0x8
	.word	gMain
.L185:
	ldr	r4, .L227
	add	r1, sp, #0xc
	add	r0, r4, #0
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r5, r7}
	stmia	r1!, {r2, r5, r7}
	add	r1, sp, #0xc
	add	r0, r1, #0
	ldrh	r0, [r0]
	add	r0, r0, #0x6
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xd7
	mov	r2, #0x97
	mov	r3, #0x1
	bl	CreateSprite
	add	r0, sp, #0xc
	ldmia	r4!, {r3, r5, r7}
	stmia	r0!, {r3, r5, r7}
	ldmia	r4!, {r1, r2, r3}
	stmia	r0!, {r1, r2, r3}
	add	r1, sp, #0xc
	add	r0, r1, #0
	ldrh	r0, [r0]
	add	r0, r0, #0x7
	strh	r0, [r1]
	add	r0, r1, #0
	mov	r1, #0xf7
	mov	r2, #0x97
	mov	r3, #0x1
	bl	CreateSprite
	mov	r6, #0x0
	add	r4, sp, #0xc
	mov	r5, #0xc0
	lsl	r5, r5, #0xd
.L189:
	add	r1, sp, #0xc
	ldr	r0, .L227
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	ldmia	r0!, {r2, r3, r7}
	stmia	r1!, {r2, r3, r7}
	add	r0, r6, #0
	add	r0, r0, #0x8
	ldrh	r7, [r4]
	add	r0, r0, r7
	strh	r0, [r4]
	asr	r1, r5, #0x10
	add	r0, sp, #0xc
	mov	r2, #0x96
	mov	r3, #0x1
	bl	CreateSprite
	mov	r0, #0x80
	lsl	r0, r0, #0xe
	add	r5, r5, r0
	add	r6, r6, #0x1
	cmp	r6, #0x5
	ble	.L189	@cond_branch
	ldr	r4, .L227+0x4
	ldr	r0, [r4]
	add	r0, r0, #0x35
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bhi	.L191	@cond_branch
	bl	GetLastViewedMonIndex
	ldr	r1, [r4]
	b	.L205
.L228:
	.align	2, 0
.L227:
	.word	sSpriteTemplate_MenuText
	.word	sTradeMenu
.L191:
	bl	GetLastViewedMonIndex
	ldr	r1, [r4]
	add	r0, r0, #0x6
.L205:
	add	r1, r1, #0x35
	strb	r0, [r1]
	ldr	r0, .L229
	ldr	r3, .L229+0x4
	ldr	r4, .L229+0x8
	ldr	r1, [r4]
	add	r1, r1, #0x35
	ldrb	r2, [r1]
	lsl	r2, r2, #0x1
	add	r1, r2, r3
	ldrb	r1, [r1]
	lsl	r1, r1, #0x13
	mov	r5, #0x80
	lsl	r5, r5, #0xe
	add	r1, r1, r5
	asr	r1, r1, #0x10
	add	r3, r3, #0x1
	add	r2, r2, r3
	ldrb	r2, [r2]
	lsl	r2, r2, #0x3
	mov	r3, #0x2
	bl	CreateSprite
	ldr	r1, [r4]
	add	r1, r1, #0x34
	strb	r0, [r1]
	ldr	r0, .L229+0xc
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r0, r0, r7
	mov	r1, #0x10
	strb	r1, [r0]
	b	.L149
.L230:
	.align	2, 0
.L229:
	.word	sSpriteTemplate_Cursor
	.word	sTradeMonSpriteCoords
	.word	sTradeMenu
	.word	gMain
.L193:
	mov	r0, #0x0
	bl	LoadTradeBgGfx
	b	.L206
.L194:
	mov	r0, #0x1
	bl	LoadTradeBgGfx
	ldr	r2, .L231
	ldr	r0, [r2]
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, [r2]
	strb	r1, [r0, #0x1]
	bl	SetActiveMenuOptions
	ldr	r1, .L231+0x4
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L203
.L232:
	.align	2, 0
.L231:
	.word	sTradeMenu
	.word	gMain
.L195:
	ldr	r2, .L233
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x7f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
	mov	r4, #0x1
	neg	r4, r4
	add	r0, r4, #0
	mov	r1, #0x10
	mov	r2, #0x0
	bl	BlendPalettes
	mov	r0, #0x0
	str	r0, [sp]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r1, .L233+0x4
	mov	r3, #0x87
	lsl	r3, r3, #0x3
	add	r1, r1, r3
	b	.L203
.L234:
	.align	2, 0
.L233:
	.word	gPaletteFade
	.word	gMain
.L196:
	mov	r1, #0x82
	lsl	r1, r1, #0x5
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x2
	bl	LoadTradeBgGfx
	ldr	r1, .L235
	mov	r5, #0x87
	lsl	r5, r5, #0x3
	add	r1, r1, r5
	b	.L203
.L236:
	.align	2, 0
.L235:
	.word	gMain
.L197:
	mov	r7, #0x87
	lsl	r7, r7, #0x3
	add	r1, r2, r7
	b	.L203
.L198:
	bl	SetTradePartyHPBarSprites
.L206:
	ldr	r1, .L237
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
.L203:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L149
.L238:
	.align	2, 0
.L237:
	.word	gMain
.L199:
	ldr	r0, .L239
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L149	@cond_branch
	ldr	r0, .L239+0x4
	bl	SetMainCallback2
.L149:
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	add	sp, sp, #0x24
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L240:
	.align	2, 0
.L239:
	.word	gPaletteFade
	.word	CB2_TradeMenu
.Lfe4:
	.size	 CB2_ReturnToTradeMenuFromSummary,.Lfe4-CB2_ReturnToTradeMenuFromSummary
	.align	2, 0
	.type	 VBlankCB_TradeMenu,function
	.thumb_func
VBlankCB_TradeMenu:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	pop	{r0}
	bx	r0
.Lfe5:
	.size	 VBlankCB_TradeMenu,.Lfe5-VBlankCB_TradeMenu
	.align	2, 0
	.type	 CB_FadeToStartTrade,function
	.thumb_func
CB_FadeToStartTrade:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r4, .L244
	ldr	r1, [r4]
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xf
	bls	.L243	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0xa
	strb	r1, [r0]
.L243:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L245:
	.align	2, 0
.L244:
	.word	sTradeMenu
.Lfe6:
	.size	 CB_FadeToStartTrade,.Lfe6-CB_FadeToStartTrade
	.align	2, 0
	.type	 CB_WaitToStartTrade,function
	.thumb_func
CB_WaitToStartTrade:
	push	{r4, lr}
	ldr	r0, .L250
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L247	@cond_branch
	ldr	r1, .L250+0x4
	ldr	r4, .L250+0x8
	ldr	r2, [r4]
	add	r0, r2, #0
	add	r0, r0, #0x35
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r0, r2, #0
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	strb	r0, [r1, #0x1]
	ldr	r0, .L250+0xc
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L248	@cond_branch
	add	r1, r2, #0
	add	r1, r1, #0x6f
	mov	r0, #0x10
	strb	r0, [r1]
	b	.L247
.L251:
	.align	2, 0
.L250:
	.word	gPaletteFade
	.word	gSelectedTradeMonPositions
	.word	sTradeMenu
	.word	gWirelessCommType
.L248:
	mov	r0, #0x20
	bl	SetCloseLinkCallbackAndType
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0xd
	strb	r1, [r0]
.L247:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 CB_WaitToStartTrade,.Lfe7-CB_WaitToStartTrade
	.align	2, 0
	.type	 CB_StartLinkTrade,function
	.thumb_func
CB_StartLinkTrade:
	push	{r4, r5, lr}
	ldr	r5, .L257
	ldr	r0, .L257+0x4
	str	r0, [r5, #0x8]
	ldr	r0, .L257+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L253	@cond_branch
	bl	IsLinkRfuTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L255	@cond_branch
	ldr	r0, .L257+0xc
	ldr	r0, [r0]
	bl	Free
	bl	FreeAllWindowBuffers
	ldr	r0, .L257+0x10
	ldr	r0, [r0]
	bl	Free
	mov	r0, #0x0
	str	r0, [r5]
	bl	DestroyWirelessStatusIndicatorSprite
	ldr	r0, .L257+0x14
	bl	SetMainCallback2
	b	.L255
.L258:
	.align	2, 0
.L257:
	.word	gMain
	.word	CB2_StartCreateTradeMenu
	.word	gWirelessCommType
	.word	sMenuTextTileBuffer
	.word	sTradeMenu
	.word	CB2_LinkTrade
.L253:
	ldr	r0, .L259
	ldrb	r4, [r0]
	cmp	r4, #0
	bne	.L255	@cond_branch
	ldr	r0, .L259+0x4
	ldr	r0, [r0]
	bl	Free
	bl	FreeAllWindowBuffers
	ldr	r0, .L259+0x8
	ldr	r0, [r0]
	bl	Free
	str	r4, [r5]
	ldr	r0, .L259+0xc
	bl	SetMainCallback2
.L255:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L260:
	.align	2, 0
.L259:
	.word	gReceivedRemoteLinkPlayers
	.word	sMenuTextTileBuffer
	.word	sTradeMenu
	.word	CB2_LinkTrade
.Lfe8:
	.size	 CB_StartLinkTrade,.Lfe8-CB_StartLinkTrade
	.align	2, 0
	.type	 CB2_TradeMenu,function
	.thumb_func
CB2_TradeMenu:
	push	{r4, lr}
	bl	RunTradeMenuCallback
	bl	DoQueuedActions
	mov	r0, #0x0
	bl	DrawSelectedMonScreen
	mov	r0, #0x1
	bl	DrawSelectedMonScreen
	ldr	r4, .L262
	ldr	r2, [r4]
	ldrb	r1, [r2]
	add	r0, r1, #0x1
	strb	r0, [r2]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x18
	bl	SetGpuReg
	ldr	r2, [r4]
	ldrb	r1, [r2, #0x1]
	add	r0, r1, #0
	add	r0, r0, #0xff
	strb	r0, [r2, #0x1]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x1c
	bl	SetGpuReg
	bl	RunTextPrinters_CheckPrinter0Active
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r4}
	pop	{r0}
	bx	r0
.L263:
	.align	2, 0
.L262:
	.word	sTradeMenu
.Lfe9:
	.size	 CB2_TradeMenu,.Lfe9-CB2_TradeMenu
	.align	2, 0
	.type	 LoadTradeBgGfx,function
	.thumb_func
LoadTradeBgGfx:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	beq	.L267	@cond_branch
	cmp	r4, #0x1
	bgt	.L276	@cond_branch
	cmp	r4, #0
	beq	.L266	@cond_branch
	b	.L265
.L276:
	cmp	r4, #0x2
	beq	.L268	@cond_branch
	b	.L265
.L266:
	ldr	r0, .L277
	mov	r1, #0x0
	mov	r2, #0x60
	bl	LoadPalette
	ldr	r1, .L277+0x4
	mov	r2, #0x94
	lsl	r2, r2, #0x5
	mov	r0, #0x1
	mov	r3, #0x0
	bl	LoadBgTiles
	ldr	r1, .L277+0x8
	mov	r0, #0x20
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	ldr	r1, .L277+0xc
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	mov	r0, #0x2
	mov	r3, #0x0
	bl	LoadBgTilemap
	b	.L265
.L278:
	.align	2, 0
.L277:
	.word	gTradeMenu_Pal
	.word	gTradeMenu_Gfx
	.word	gTradeMenu_Tilemap
	.word	sTradeStripesBG2Tilemap
.L267:
	ldr	r1, .L279
	mov	r2, #0x80
	lsl	r2, r2, #0x4
	mov	r0, #0x3
	mov	r3, #0x0
	bl	LoadBgTilemap
	mov	r0, #0x0
	bl	PrintPartyLevelsAndGenders
	mov	r0, #0x1
	bl	PrintPartyLevelsAndGenders
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	b	.L265
.L280:
	.align	2, 0
.L279:
	.word	sTradeStripesBG3Tilemap
.L268:
	mov	r5, #0x80
	lsl	r5, r5, #0x15
	mov	r4, #0x3
.L272:
	lsr	r0, r5, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x80
	lsl	r0, r0, #0x12
	add	r5, r5, r0
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L272	@cond_branch
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
.L265:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 LoadTradeBgGfx,.Lfe10-LoadTradeBgGfx
	.align	2, 0
	.type	 SetActiveMenuOptions,function
	.thumb_func
SetActiveMenuOptions:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r3, #0x0
	ldr	r5, .L291
	mov	r8, r5
	ldr	r0, .L291+0x4
	mov	ip, r0
	mov	r1, #0x5
	neg	r1, r1
	mov	r9, r1
	mov	r4, #0x6
	mov	r7, #0x1
	mov	r6, #0x0
.L285:
	mov	r1, r8
	ldr	r0, [r1]
	add	r1, r0, #0
	add	r1, r1, #0x36
	ldrb	r1, [r1]
	cmp	r3, r1
	bge	.L286	@cond_branch
	add	r0, r0, #0x28
	add	r0, r0, r3
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, ip
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, r9
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, #0x38
	add	r0, r0, r3
	strb	r7, [r0]
	b	.L287
.L292:
	.align	2, 0
.L291:
	.word	sTradeMenu
	.word	gSprites
.L286:
	add	r0, r0, #0x38
	add	r0, r0, r3
	strb	r6, [r0]
.L287:
	mov	r1, r8
	ldr	r0, [r1]
	add	r1, r0, #0
	add	r1, r1, #0x37
	ldrb	r1, [r1]
	cmp	r3, r1
	bge	.L288	@cond_branch
	add	r0, r0, #0x2e
	add	r0, r0, r3
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, ip
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, r9
	and	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, [r5]
	add	r0, r0, #0x38
	add	r0, r0, r4
	strb	r7, [r0]
	b	.L284
.L288:
	add	r0, r0, #0x38
	add	r0, r0, r4
	strb	r6, [r0]
.L284:
	add	r4, r4, #0x1
	add	r3, r3, #0x1
	cmp	r3, #0x5
	ble	.L285	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, #0x44
	mov	r1, #0x1
	strb	r1, [r0]
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe11:
	.size	 SetActiveMenuOptions,.Lfe11-SetActiveMenuOptions
	.align	2, 0
	.type	 Trade_Memcpy,function
	.thumb_func
Trade_Memcpy:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	mov	r3, #0x0
	cmp	r3, r2
	bcs	.L295	@cond_branch
.L297:
	add	r0, r5, r3
	add	r1, r4, r3
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r3, r3, #0x1
	cmp	r3, r2
	bcc	.L297	@cond_branch
.L295:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 Trade_Memcpy,.Lfe12-Trade_Memcpy
	.align	2, 0
	.type	 BufferTradeParties,function
	.thumb_func
BufferTradeParties:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L349
	ldr	r0, [r0]
	add	r0, r0, #0x69
	ldrb	r0, [r0]
	cmp	r0, #0x15
	bls	.LCB2766
	b	.L300	@long jump
.LCB2766:
	lsl	r0, r0, #0x2
	ldr	r1, .L349+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L350:
	.align	2, 0
.L349:
	.word	sTradeMenu
	.word	.L345
	.align	2, 0
	.align	2, 0
.L345:
	.word	.L301
	.word	.L302
	.word	.L343
	.word	.L306
	.word	.L308
	.word	.L310
	.word	.L343
	.word	.L311
	.word	.L313
	.word	.L315
	.word	.L343
	.word	.L316
	.word	.L318
	.word	.L320
	.word	.L343
	.word	.L321
	.word	.L323
	.word	.L325
	.word	.L343
	.word	.L326
	.word	.L328
	.word	.L330
.L301:
	ldr	r0, .L351
	ldr	r1, .L351+0x4
	mov	r2, #0xc8
	bl	Trade_Memcpy
	ldr	r3, .L351+0x8
	ldr	r1, [r3]
	add	r1, r1, #0x69
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r2, #0x0
	strb	r0, [r1]
	ldr	r0, [r3]
	add	r0, r0, #0xa8
	strb	r2, [r0]
	b	.L300
.L352:
	.align	2, 0
.L351:
	.word	gBlockSendBuffer
	.word	gPlayerParty
	.word	sTradeMenu
.L302:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2818
	b	.L300	@long jump
.LCB2818:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L304	@cond_branch
	ldr	r0, .L353
	ldr	r1, [r0]
	b	.L348
.L354:
	.align	2, 0
.L353:
	.word	sTradeMenu
.L304:
	bl	ResetBlockReceivedFlags
	ldr	r0, .L355
	ldr	r1, [r0]
	b	.L348
.L356:
	.align	2, 0
.L355:
	.word	sTradeMenu
.L306:
	cmp	r5, #0
	bne	.L307	@cond_branch
	mov	r0, #0x1
	bl	SendBlockRequest
.L307:
	ldr	r0, .L357
	ldr	r1, [r0]
	b	.L348
.L358:
	.align	2, 0
.L357:
	.word	sTradeMenu
.L308:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.LCB2873
	b	.L300	@long jump
.LCB2873:
	ldr	r0, .L359
	mov	r2, #0x1
	add	r1, r5, #0
	eor	r1, r1, r2
	lsl	r1, r1, #0x8
	ldr	r2, .L359+0x4
	add	r1, r1, r2
	mov	r2, #0xc8
	bl	Trade_Memcpy
	bl	ResetBlockReceivedFlags
	ldr	r0, .L359+0x8
	ldr	r1, [r0]
	b	.L348
.L360:
	.align	2, 0
.L359:
	.word	gEnemyParty
	.word	gBlockRecvBuffer
	.word	sTradeMenu
.L310:
	ldr	r0, .L361
	ldr	r1, .L361+0x4
	mov	r2, #0xc8
	bl	Trade_Memcpy
	ldr	r0, .L361+0x8
	ldr	r1, [r0]
	b	.L348
.L362:
	.align	2, 0
.L361:
	.word	gBlockSendBuffer
	.word	gPlayerParty+0xc8
	.word	sTradeMenu
.L311:
	cmp	r5, #0
	bne	.L312	@cond_branch
	mov	r0, #0x1
	bl	SendBlockRequest
.L312:
	ldr	r0, .L363
	ldr	r1, [r0]
	b	.L348
.L364:
	.align	2, 0
.L363:
	.word	sTradeMenu
.L313:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.LCB2943
	b	.L300	@long jump
.LCB2943:
	ldr	r0, .L365
	mov	r2, #0x1
	add	r1, r5, #0
	eor	r1, r1, r2
	lsl	r1, r1, #0x8
	ldr	r2, .L365+0x4
	add	r1, r1, r2
	mov	r2, #0xc8
	bl	Trade_Memcpy
	bl	ResetBlockReceivedFlags
	ldr	r0, .L365+0x8
	ldr	r1, [r0]
	b	.L348
.L366:
	.align	2, 0
.L365:
	.word	gEnemyParty+0xc8
	.word	gBlockRecvBuffer
	.word	sTradeMenu
.L315:
	ldr	r0, .L367
	ldr	r1, .L367+0x4
	mov	r2, #0xc8
	bl	Trade_Memcpy
	ldr	r0, .L367+0x8
	ldr	r1, [r0]
	b	.L348
.L368:
	.align	2, 0
.L367:
	.word	gBlockSendBuffer
	.word	gPlayerParty+0x190
	.word	sTradeMenu
.L316:
	cmp	r5, #0
	bne	.L317	@cond_branch
	mov	r0, #0x1
	bl	SendBlockRequest
.L317:
	ldr	r0, .L369
	ldr	r1, [r0]
	b	.L348
.L370:
	.align	2, 0
.L369:
	.word	sTradeMenu
.L318:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.LCB3013
	b	.L300	@long jump
.LCB3013:
	ldr	r0, .L371
	mov	r2, #0x1
	add	r1, r5, #0
	eor	r1, r1, r2
	lsl	r1, r1, #0x8
	ldr	r2, .L371+0x4
	add	r1, r1, r2
	mov	r2, #0xc8
	bl	Trade_Memcpy
	bl	ResetBlockReceivedFlags
	ldr	r0, .L371+0x8
	ldr	r1, [r0]
	b	.L348
.L372:
	.align	2, 0
.L371:
	.word	gEnemyParty+0x190
	.word	gBlockRecvBuffer
	.word	sTradeMenu
.L320:
	ldr	r0, .L373
	ldr	r1, .L373+0x4
	ldr	r1, [r1]
	ldr	r2, .L373+0x8
	add	r1, r1, r2
	mov	r2, #0xdc
	bl	Trade_Memcpy
	ldr	r0, .L373+0xc
	ldr	r1, [r0]
	b	.L348
.L374:
	.align	2, 0
.L373:
	.word	gBlockSendBuffer
	.word	gSaveBlock1Ptr
	.word	0x2ce4
	.word	sTradeMenu
.L321:
	cmp	r5, #0
	bne	.L322	@cond_branch
	mov	r0, #0x3
	bl	SendBlockRequest
.L322:
	ldr	r0, .L375
	ldr	r1, [r0]
	b	.L348
.L376:
	.align	2, 0
.L375:
	.word	sTradeMenu
.L323:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	beq	.LCB3088
	b	.L300	@long jump
.LCB3088:
	ldr	r0, .L377
	mov	r2, #0x1
	add	r1, r5, #0
	eor	r1, r1, r2
	lsl	r1, r1, #0x8
	ldr	r2, .L377+0x4
	add	r1, r1, r2
	mov	r2, #0xd8
	bl	Trade_Memcpy
	bl	ResetBlockReceivedFlags
	ldr	r0, .L377+0x8
	ldr	r1, [r0]
	b	.L348
.L378:
	.align	2, 0
.L377:
	.word	gLinkPartnerMail
	.word	gBlockRecvBuffer
	.word	sTradeMenu
.L325:
	ldr	r0, .L379
	ldr	r1, .L379+0x4
	ldr	r1, [r1]
	ldr	r2, .L379+0x8
	add	r1, r1, r2
	mov	r2, #0xb
	bl	Trade_Memcpy
	ldr	r0, .L379+0xc
	ldr	r1, [r0]
	b	.L348
.L380:
	.align	2, 0
.L379:
	.word	gBlockSendBuffer
	.word	gSaveBlock1Ptr
	.word	0x30b0
	.word	sTradeMenu
.L326:
	cmp	r5, #0
	bne	.L327	@cond_branch
	mov	r0, #0x4
	bl	SendBlockRequest
.L327:
	ldr	r0, .L381
	ldr	r1, [r0]
	b	.L348
.L382:
	.align	2, 0
.L381:
	.word	sTradeMenu
.L328:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L300	@cond_branch
	ldr	r4, .L383
	ldr	r0, [r4]
	add	r0, r0, #0xa9
	mov	r2, #0x1
	add	r1, r5, #0
	eor	r1, r1, r2
	lsl	r1, r1, #0x8
	ldr	r2, .L383+0x4
	add	r1, r1, r2
	mov	r2, #0xb
	bl	Trade_Memcpy
	bl	ResetBlockReceivedFlags
	ldr	r1, [r4]
	b	.L348
.L384:
	.align	2, 0
.L383:
	.word	sTradeMenu
	.word	gBlockRecvBuffer
.L330:
	ldr	r4, .L385
	ldr	r6, .L385+0x4
	mov	r5, #0x5
.L334:
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	beq	.L333	@cond_branch
	cmp	r0, r6
	bne	.L333	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x3
	bl	GetMonData
	cmp	r0, #0x1
	beq	.L333	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2
	mov	r2, sp
	bl	GetMonData
	mov	r0, sp
	ldr	r1, .L385+0x8
	bl	StringCompareWithoutExtCtrlCodes
	cmp	r0, #0
	bne	.L333	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x2
	ldr	r2, .L385+0xc
	bl	SetMonData
.L333:
	add	r4, r4, #0x64
	sub	r5, r5, #0x1
	cmp	r5, #0
	bge	.L334	@cond_branch
	mov	r0, #0x1
	b	.L347
.L386:
	.align	2, 0
.L385:
	.word	gEnemyParty
	.word	0x12f
	.word	sText_ShedinjaJP
	.word	gSpeciesNames+0xd05
.L343:
	ldr	r2, .L387
	ldr	r1, [r2]
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	add	r1, r0, #0
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	cmp	r0, #0xa
	bls	.L300	@cond_branch
	mov	r0, #0x0
	strb	r0, [r1]
	ldr	r1, [r2]
.L348:
	add	r1, r1, #0x69
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L300:
	mov	r0, #0x0
.L347:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L388:
	.align	2, 0
.L387:
	.word	sTradeMenu
.Lfe13:
	.size	 BufferTradeParties,.Lfe13-BufferTradeParties
	.align	2, 0
	.type	 PrintIsThisTradeOkay,function
	.thumb_func
PrintIsThisTradeOkay:
	push	{lr}
	ldr	r0, .L390
	ldr	r1, .L390+0x4
	ldr	r1, [r1]
	add	r1, r1, #0x72
	ldrh	r1, [r1]
	lsl	r1, r1, #0x5
	ldr	r2, .L390+0x8
	add	r1, r1, r2
	mov	r2, #0x18
	bl	DrawBottomRowText
	pop	{r0}
	bx	r0
.L391:
	.align	2, 0
.L390:
	.word	gText_IsThisTradeOkay
	.word	sTradeMenu
	.word	0x6010000
.Lfe14:
	.size	 PrintIsThisTradeOkay,.Lfe14-PrintIsThisTradeOkay
	.align	2, 0
	.type	 Leader_ReadLinkBuffer,function
	.thumb_func
Leader_ReadLinkBuffer:
	push	{r4, lr}
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	mov	r2, #0x1
	add	r0, r4, #0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L393	@cond_branch
	ldr	r0, .L414
	ldrh	r1, [r0]
	ldr	r0, .L414+0x4
	cmp	r1, r0
	beq	.L397	@cond_branch
	cmp	r1, r0
	bgt	.L401	@cond_branch
	ldr	r0, .L414+0x8
	cmp	r1, r0
	beq	.L396	@cond_branch
	b	.L394
.L415:
	.align	2, 0
.L414:
	.word	gBlockRecvBuffer
	.word	0xbbbb
	.word	0xaabb
.L401:
	ldr	r0, .L416
	cmp	r1, r0
	beq	.L398	@cond_branch
	ldr	r0, .L416+0x4
	cmp	r1, r0
	bne	.L394	@cond_branch
	ldr	r0, .L416+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x78
	b	.L411
.L417:
	.align	2, 0
.L416:
	.word	0xbbcc
	.word	0xeeaa
	.word	sTradeMenu
.L396:
	ldr	r0, .L418
	ldr	r0, [r0]
	add	r0, r0, #0x78
	strb	r2, [r0]
	b	.L394
.L419:
	.align	2, 0
.L418:
	.word	sTradeMenu
.L397:
	ldr	r0, .L420
	ldr	r0, [r0]
	add	r0, r0, #0x7a
	strb	r2, [r0]
	b	.L394
.L421:
	.align	2, 0
.L420:
	.word	sTradeMenu
.L398:
	ldr	r0, .L422
	ldr	r0, [r0]
	add	r0, r0, #0x7a
.L411:
	mov	r1, #0x2
	strb	r1, [r0]
.L394:
	mov	r0, #0x0
	bl	ResetBlockReceivedFlag
.L393:
	mov	r2, #0x2
	add	r0, r4, #0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L402	@cond_branch
	ldr	r3, .L422+0x4
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	add	r0, r3, r1
	ldrh	r1, [r0]
	ldr	r0, .L422+0x8
	cmp	r1, r0
	beq	.L406	@cond_branch
	cmp	r1, r0
	bgt	.L410	@cond_branch
	ldr	r0, .L422+0xc
	cmp	r1, r0
	beq	.L405	@cond_branch
	b	.L403
.L423:
	.align	2, 0
.L422:
	.word	sTradeMenu
	.word	gBlockRecvBuffer
	.word	0xbbbb
	.word	0xaabb
.L410:
	ldr	r0, .L424
	cmp	r1, r0
	beq	.L407	@cond_branch
	ldr	r0, .L424+0x4
	cmp	r1, r0
	bne	.L403	@cond_branch
	ldr	r0, .L424+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x79
	b	.L412
.L425:
	.align	2, 0
.L424:
	.word	0xbbcc
	.word	0xeeaa
	.word	sTradeMenu
.L405:
	ldr	r2, .L426
	ldr	r1, [r2]
	mov	r4, #0x81
	lsl	r4, r4, #0x1
	add	r0, r3, r4
	ldrb	r0, [r0]
	add	r0, r0, #0x6
	add	r1, r1, #0x7e
	strb	r0, [r1]
	ldr	r0, [r2]
	add	r0, r0, #0x79
	b	.L413
.L427:
	.align	2, 0
.L426:
	.word	sTradeMenu
.L406:
	ldr	r0, .L428
	ldr	r0, [r0]
	add	r0, r0, #0x7b
.L413:
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L403
.L429:
	.align	2, 0
.L428:
	.word	sTradeMenu
.L407:
	ldr	r0, .L430
	ldr	r0, [r0]
	add	r0, r0, #0x7b
.L412:
	strb	r2, [r0]
.L403:
	mov	r0, #0x1
	bl	ResetBlockReceivedFlag
.L402:
	pop	{r4}
	pop	{r0}
	bx	r0
.L431:
	.align	2, 0
.L430:
	.word	sTradeMenu
.Lfe15:
	.size	 Leader_ReadLinkBuffer,.Lfe15-Leader_ReadLinkBuffer
	.align	2, 0
	.type	 Follower_ReadLinkBuffer,function
	.thumb_func
Follower_ReadLinkBuffer:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	mov	r0, #0x1
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L433	@cond_branch
	ldr	r2, .L446
	ldrh	r1, [r2]
	ldr	r0, .L446+0x4
	cmp	r1, r0
	beq	.L439	@cond_branch
	cmp	r1, r0
	bgt	.L442	@cond_branch
	ldr	r0, .L446+0x8
	cmp	r1, r0
	beq	.L438	@cond_branch
	ldr	r0, .L446+0xc
	cmp	r1, r0
	beq	.L437	@cond_branch
	b	.L434
.L447:
	.align	2, 0
.L446:
	.word	gBlockRecvBuffer
	.word	0xddee
	.word	0xccdd
	.word	0xdddd
.L442:
	ldr	r0, .L448
	cmp	r1, r0
	beq	.L435	@cond_branch
	add	r0, r0, #0x11
	cmp	r1, r0
	beq	.L436	@cond_branch
	b	.L434
.L449:
	.align	2, 0
.L448:
	.word	0xeebb
.L435:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x4
	bl	PrintTradeMessage
	ldr	r0, .L450
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0xb
	b	.L444
.L451:
	.align	2, 0
.L450:
	.word	sTradeMenu
.L436:
	mov	r0, #0x5
	b	.L445
.L437:
	ldr	r4, .L452
	ldr	r1, [r4]
	ldrb	r0, [r2, #0x2]
	add	r0, r0, #0x6
	add	r1, r1, #0x7e
	strb	r0, [r1]
	mov	r0, #0x0
	bl	rbox_fill_rectangle
	ldr	r0, [r4]
	add	r0, r0, #0x35
	ldrb	r0, [r0]
	bl	SetSelectedMon
	ldr	r0, [r4]
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	bl	SetSelectedMon
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x7
	b	.L444
.L453:
	.align	2, 0
.L452:
	.word	sTradeMenu
.L438:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L454
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0xa
	b	.L444
.L455:
	.align	2, 0
.L454:
	.word	sTradeMenu
.L439:
	mov	r0, #0x1
.L445:
	bl	PrintTradeMessage
	ldr	r0, .L456
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0x8
.L444:
	strb	r1, [r0]
.L434:
	mov	r0, #0x0
	bl	ResetBlockReceivedFlag
.L433:
	mov	r0, #0x2
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L443	@cond_branch
	mov	r0, #0x1
	bl	ResetBlockReceivedFlag
.L443:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L457:
	.align	2, 0
.L456:
	.word	sTradeMenu
.Lfe16:
	.size	 Follower_ReadLinkBuffer,.Lfe16-Follower_ReadLinkBuffer
	.align	2, 0
	.type	 Leader_HandleCommunication,function
	.thumb_func
Leader_HandleCommunication:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	ldr	r6, .L472
	ldr	r2, [r6]
	add	r1, r2, #0
	add	r1, r1, #0x78
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.LCB3728
	b	.L459	@long jump
.LCB3728:
	add	r0, r2, #0
	add	r0, r0, #0x79
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB3735
	b	.L459	@long jump
.LCB3735:
	ldrh	r1, [r1]
	ldr	r0, .L472+0x4
	cmp	r1, r0
	bne	.L460	@cond_branch
	add	r1, r2, #0
	add	r1, r1, #0x6f
	mov	r0, #0x6
	strb	r0, [r1]
	ldr	r2, [r6]
	add	r1, r2, #0
	add	r1, r1, #0x80
	mov	r4, #0x0
	ldr	r0, .L472+0x8
	strh	r0, [r1]
	add	r0, r2, #0
	add	r0, r0, #0x35
	ldrb	r1, [r0]
	add	r0, r0, #0x4d
	strh	r1, [r0]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	QueueAction
	ldr	r0, [r6]
	add	r2, r0, #0
	add	r2, r2, #0x79
	strb	r4, [r2]
	add	r0, r0, #0x78
	strb	r4, [r0]
	b	.L459
.L473:
	.align	2, 0
.L472:
	.word	sTradeMenu
	.word	0x101
	.word	0xdddd
.L460:
	ldr	r0, .L474
	cmp	r1, r0
	bne	.L462	@cond_branch
	mov	r0, #0x1
	bl	PrintTradeMessage
	ldr	r1, [r6]
	add	r2, r1, #0
	add	r2, r2, #0x80
	mov	r4, #0x0
	mov	r3, #0x0
	ldr	r0, .L474+0x4
	strh	r0, [r2]
	add	r1, r1, #0x82
	strh	r3, [r1]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	QueueAction
	ldr	r0, [r6]
	add	r1, r0, #0
	add	r1, r1, #0x7b
	strb	r4, [r1]
	add	r0, r0, #0x7a
	strb	r4, [r0]
	ldr	r0, [r6]
	add	r1, r0, #0
	add	r1, r1, #0x79
	strb	r4, [r1]
	add	r0, r0, #0x78
	strb	r4, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x6f
	mov	r1, #0x8
	b	.L471
.L475:
	.align	2, 0
.L474:
	.word	0x201
	.word	0xeecc
.L462:
	mov	r0, #0x81
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L464	@cond_branch
	mov	r0, #0x5
	bl	PrintTradeMessage
	ldr	r1, [r6]
	add	r2, r1, #0
	add	r2, r2, #0x80
	mov	r4, #0x0
	mov	r3, #0x0
	ldr	r0, .L476
	strh	r0, [r2]
	add	r1, r1, #0x82
	strh	r3, [r1]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	QueueAction
	ldr	r0, [r6]
	add	r1, r0, #0
	add	r1, r1, #0x7b
	strb	r4, [r1]
	add	r0, r0, #0x7a
	strb	r4, [r0]
	ldr	r0, [r6]
	add	r1, r0, #0
	add	r1, r1, #0x79
	strb	r4, [r1]
	add	r0, r0, #0x78
	strb	r4, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x6f
	mov	r1, #0x8
	b	.L471
.L477:
	.align	2, 0
.L476:
	.word	0xddee
.L464:
	ldr	r0, .L478
	cmp	r1, r0
	bne	.L459	@cond_branch
	add	r1, r2, #0
	add	r1, r1, #0x80
	mov	r5, #0x0
	mov	r4, #0x0
	ldr	r0, .L478+0x4
	strh	r0, [r1]
	add	r0, r2, #0
	add	r0, r0, #0x82
	strh	r4, [r0]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	QueueAction
	mov	r0, #0x1
	neg	r0, r0
	str	r4, [sp]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, [r6]
	add	r1, r0, #0
	add	r1, r1, #0x79
	strb	r5, [r1]
	add	r0, r0, #0x78
	strb	r5, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x6f
	mov	r1, #0xb
.L471:
	strb	r1, [r0]
.L459:
	ldr	r5, .L478+0x8
	ldr	r3, [r5]
	add	r1, r3, #0
	add	r1, r1, #0x7a
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L467	@cond_branch
	add	r0, r3, #0
	add	r0, r0, #0x7b
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L467	@cond_branch
	ldrh	r1, [r1]
	ldr	r0, .L478+0xc
	cmp	r1, r0
	bne	.L468	@cond_branch
	add	r1, r3, #0
	add	r1, r1, #0x80
	mov	r4, #0x0
	mov	r2, #0x0
	ldr	r0, .L478+0x10
	strh	r0, [r1]
	add	r0, r3, #0
	add	r0, r0, #0x82
	strh	r2, [r0]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	QueueAction
	ldr	r0, [r5]
	add	r0, r0, #0x7a
	strb	r4, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x7b
	strb	r4, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x6f
	mov	r1, #0x9
	strb	r1, [r0]
.L468:
	ldr	r1, [r5]
	add	r0, r1, #0
	add	r0, r0, #0x7a
	ldrb	r0, [r0]
	cmp	r0, #0x2
	beq	.L470	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0x7b
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L467	@cond_branch
.L470:
	mov	r0, #0x1
	bl	PrintTradeMessage
	ldr	r1, [r5]
	add	r2, r1, #0
	add	r2, r2, #0x80
	mov	r4, #0x0
	mov	r3, #0x0
	ldr	r0, .L478+0x14
	strh	r0, [r2]
	add	r1, r1, #0x82
	strh	r3, [r1]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	QueueAction
	ldr	r0, [r5]
	add	r0, r0, #0x7a
	strb	r4, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x7b
	strb	r4, [r0]
	ldr	r0, [r5]
	add	r0, r0, #0x6f
	mov	r1, #0x8
	strb	r1, [r0]
.L467:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L479:
	.align	2, 0
.L478:
	.word	0x202
	.word	0xeebb
	.word	sTradeMenu
	.word	0x101
	.word	0xccdd
	.word	0xddee
.Lfe17:
	.size	 Leader_HandleCommunication,.Lfe17-Leader_HandleCommunication
	.align	2, 0
	.type	 CB1_UpdateLink,function
	.thumb_func
CB1_UpdateLink:
	push	{r4, lr}
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L481	@cond_branch
	cmp	r4, #0
	bne	.L482	@cond_branch
	mov	r0, #0x0
	bl	Leader_ReadLinkBuffer
	b	.L481
.L482:
	add	r0, r4, #0
	bl	Follower_ReadLinkBuffer
.L481:
	cmp	r4, #0
	bne	.L484	@cond_branch
	bl	Leader_HandleCommunication
.L484:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 CB1_UpdateLink,.Lfe18-CB1_UpdateLink
	.align	2, 0
	.type	 GetNewCursorPosition,function
	.thumb_func
GetNewCursorPosition:
	push	{r4, r5, r6, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r6, #0x0
	mov	r5, #0x0
	ldr	r2, .L492
	ldr	r3, [r2]
	ldr	r4, .L492+0x4
	lsl	r2, r1, #0x1
	add	r2, r2, r1
	lsl	r2, r2, #0x1
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r3, r3, #0x38
	add	r2, r2, r1
	add	r2, r2, r4
.L489:
	ldrb	r1, [r2]
	add	r0, r3, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L488	@cond_branch
	add	r6, r1, #0
	b	.L487
.L493:
	.align	2, 0
.L492:
	.word	sTradeMenu
	.word	sCursorMoveDestinations
.L488:
	add	r2, r2, #0x1
	add	r5, r5, #0x1
	cmp	r5, #0x5
	ble	.L489	@cond_branch
.L487:
	add	r0, r6, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 GetNewCursorPosition,.Lfe19-GetNewCursorPosition
	.align	2, 0
	.type	 TradeMenuMoveCursor,function
	.thumb_func
TradeMenuMoveCursor:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrb	r0, [r7]
	bl	GetNewCursorPosition
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	cmp	r6, #0xc
	bne	.L495	@cond_branch
	ldr	r5, .L498
	ldr	r0, [r5]
	add	r0, r0, #0x34
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r4, .L498+0x4
	add	r0, r0, r4
	mov	r1, #0x1
	bl	StartSpriteAnim
	ldr	r2, [r5]
	add	r2, r2, #0x34
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0xe0
	strh	r1, [r0, #0x20]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	mov	r1, #0xa0
	strh	r1, [r0, #0x22]
	b	.L496
.L499:
	.align	2, 0
.L498:
	.word	sTradeMenu
	.word	gSprites
.L495:
	ldr	r4, .L500
	ldr	r0, [r4]
	add	r0, r0, #0x34
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r5, .L500+0x4
	add	r0, r0, r5
	mov	r1, #0x0
	bl	StartSpriteAnim
	ldr	r4, [r4]
	add	r4, r4, #0x34
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldr	r2, .L500+0x8
	lsl	r3, r6, #0x1
	add	r0, r3, r2
	ldrb	r0, [r0]
	lsl	r0, r0, #0x3
	add	r0, r0, #0x20
	strh	r0, [r1, #0x20]
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	add	r2, r2, #0x1
	add	r3, r3, r2
	ldrb	r0, [r3]
	lsl	r0, r0, #0x3
	strh	r0, [r1, #0x22]
.L496:
	ldrb	r0, [r7]
	cmp	r0, r6
	beq	.L497	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
.L497:
	strb	r6, [r7]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L501:
	.align	2, 0
.L500:
	.word	sTradeMenu
	.word	gSprites
	.word	sTradeMonSpriteCoords
.Lfe20:
	.size	 TradeMenuMoveCursor,.Lfe20-TradeMenuMoveCursor
	.align	2, 0
	.type	 SetReadyToTrade,function
	.thumb_func
SetReadyToTrade:
	push	{r4, lr}
	mov	r0, #0x0
	bl	PrintTradeMessage
	ldr	r4, .L505
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x5
	strb	r1, [r0]
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L503	@cond_branch
	ldr	r2, [r4]
	add	r1, r2, #0
	add	r1, r1, #0x80
	ldr	r0, .L505+0x4
	strh	r0, [r1]
	add	r0, r2, #0
	add	r0, r0, #0x35
	ldrb	r1, [r0]
	add	r0, r0, #0x4d
	strh	r1, [r0]
	bl	BitmaskAllOtherLinkPlayers
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, [r4]
	add	r1, r1, #0x80
	mov	r2, #0x14
	bl	SendBlock
	b	.L504
.L506:
	.align	2, 0
.L505:
	.word	sTradeMenu
	.word	0xaabb
.L503:
	ldr	r0, [r4]
	add	r0, r0, #0x78
	mov	r1, #0x1
	strb	r1, [r0]
.L504:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe21:
	.size	 SetReadyToTrade,.Lfe21-SetReadyToTrade
	.align	2, 0
	.type	 CB_ProcessMenuInput,function
	.thumb_func
CB_ProcessMenuInput:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r0, .L527
	ldrh	r1, [r0, #0x30]
	mov	r0, #0x40
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L508	@cond_branch
	ldr	r0, .L527+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x35
	mov	r1, #0x0
	bl	TradeMenuMoveCursor
	b	.L509
.L528:
	.align	2, 0
.L527:
	.word	gMain
	.word	sTradeMenu
.L508:
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L510	@cond_branch
	ldr	r0, .L529
	ldr	r0, [r0]
	add	r0, r0, #0x35
	mov	r1, #0x1
	bl	TradeMenuMoveCursor
	b	.L509
.L530:
	.align	2, 0
.L529:
	.word	sTradeMenu
.L510:
	mov	r0, #0x20
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L512	@cond_branch
	ldr	r0, .L531
	ldr	r0, [r0]
	add	r0, r0, #0x35
	mov	r1, #0x2
	bl	TradeMenuMoveCursor
	b	.L509
.L532:
	.align	2, 0
.L531:
	.word	sTradeMenu
.L512:
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L509	@cond_branch
	ldr	r0, .L533
	ldr	r0, [r0]
	add	r0, r0, #0x35
	mov	r1, #0x3
	bl	TradeMenuMoveCursor
.L509:
	ldr	r0, .L533+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r5, #0x1
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L515	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	ldr	r4, .L533
	ldr	r0, [r4]
	add	r0, r0, #0x35
	ldrb	r0, [r0]
	cmp	r0, #0x5
	bhi	.L516	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x1
	mov	r2, #0xe
	bl	DrawTextBorderOuter
	mov	r0, #0x1
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r0, .L533+0x8
	str	r0, [sp]
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x10
	mov	r3, #0x2
	bl	PrintMenuTable
	mov	r0, #0x10
	str	r0, [sp]
	mov	r0, #0x2
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x3
	mov	r2, #0x0
	mov	r3, #0x0
	bl	Menu_InitCursor
	mov	r0, #0x1
	bl	PutWindowTilemap
	mov	r0, #0x1
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L515
.L534:
	.align	2, 0
.L533:
	.word	sTradeMenu
	.word	gMain
	.word	sMenuAction_SummaryTrade
.L516:
	cmp	r0, #0xb
	bhi	.L518	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x2
	strb	r1, [r0]
	b	.L515
.L518:
	cmp	r0, #0xc
	bne	.L515	@cond_branch
	ldr	r0, .L535
	str	r5, [sp]
	mov	r1, #0xe
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	mov	r1, #0x3
	mov	r2, #0x0
	mov	r3, #0x2
	bl	CreateYesNoMenu
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x4
	strb	r1, [r0]
	ldr	r0, .L535+0x4
	ldr	r0, [r0, #0x10]
	ldr	r1, [r4]
	add	r1, r1, #0x72
	ldrh	r1, [r1]
	lsl	r1, r1, #0x5
	ldr	r2, .L535+0x8
	add	r1, r1, r2
	mov	r2, #0x18
	bl	DrawBottomRowText
.L515:
	ldr	r0, .L535+0xc
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L521	@cond_branch
	mov	r2, #0x0
	ldr	r3, .L535+0x10
.L525:
	ldr	r0, [r3]
	lsl	r1, r2, #0x1
	add	r0, r0, #0x80
	add	r0, r0, r1
	strh	r2, [r0]
	add	r2, r2, #0x1
	cmp	r2, #0x9
	ble	.L525	@cond_branch
	bl	BitmaskAllOtherLinkPlayers
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L535+0x10
	ldr	r1, [r1]
	add	r1, r1, #0x80
	mov	r2, #0x14
	bl	SendBlock
.L521:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L536:
	.align	2, 0
.L535:
	.word	sWindowTemplate_YesNo
	.word	sActionTexts
	.word	0x6010000
	.word	gMain
	.word	sTradeMenu
.Lfe22:
	.size	 CB_ProcessMenuInput,.Lfe22-CB_ProcessMenuInput
	.align	2, 0
	.type	 RedrawChooseAPokemonWindow,function
	.thumb_func
RedrawChooseAPokemonWindow:
	push	{lr}
	bl	PrintTradePartnerPartyNicknames
	ldr	r3, .L538
	ldr	r0, [r3]
	add	r0, r0, #0x6f
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r2, .L538+0x4
	ldr	r0, [r3]
	add	r0, r0, #0x34
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, .L538+0x8
	ldr	r0, [r0, #0x4]
	ldr	r1, [r3]
	add	r1, r1, #0x72
	ldrh	r1, [r1]
	lsl	r1, r1, #0x5
	ldr	r2, .L538+0xc
	add	r1, r1, r2
	mov	r2, #0x18
	bl	DrawBottomRowText
	pop	{r0}
	bx	r0
.L539:
	.align	2, 0
.L538:
	.word	sTradeMenu
	.word	gSprites
	.word	sActionTexts
	.word	0x6010000
.Lfe23:
	.size	 RedrawChooseAPokemonWindow,.Lfe23-RedrawChooseAPokemonWindow
	.align	2, 0
	.type	 CB_ProcessSelectedMonInput,function
	.thumb_func
CB_ProcessSelectedMonInput:
	push	{lr}
	add	sp, sp, #-0x4
	bl	Menu_ProcessInputNoWrapAround
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r1, #0x1
	neg	r1, r1
	cmp	r0, r1
	beq	.L542	@cond_branch
	cmp	r0, r1
	ble	.L541	@cond_branch
	cmp	r0, #0
	beq	.L544	@cond_branch
	cmp	r0, #0x1
	beq	.L545	@cond_branch
	b	.L541
.L542:
	mov	r0, #0x5
	bl	PlaySE
	bl	RedrawChooseAPokemonWindow
	b	.L541
.L544:
	str	r0, [sp]
	add	r0, r1, #0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L560
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0x2
	b	.L558
.L561:
	.align	2, 0
.L560:
	.word	sTradeMenu
.L545:
	ldr	r0, .L562
	ldr	r1, .L562+0x4
	ldrb	r1, [r1]
	ldr	r2, .L562+0x8
	ldr	r2, [r2]
	add	r2, r2, #0x35
	ldrb	r2, [r2]
	bl	CanTradeSelectedMon
	cmp	r0, #0x5
	bhi	.L541	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L562+0xc
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L563:
	.align	2, 0
.L562:
	.word	gPlayerParty
	.word	gPlayerPartyCount
	.word	sTradeMenu
	.word	.L553
	.align	2, 0
	.align	2, 0
.L553:
	.word	.L547
	.word	.L548
	.word	.L550
	.word	.L552
	.word	.L550
	.word	.L552
.L547:
	bl	SetReadyToTrade
	ldr	r2, .L564
	ldr	r0, .L564+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x34
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	b	.L558
.L565:
	.align	2, 0
.L564:
	.word	gSprites
	.word	sTradeMenu
.L548:
	mov	r0, #0x3
	mov	r1, #0x3
	b	.L559
.L550:
	mov	r0, #0x3
	mov	r1, #0x6
	b	.L559
.L552:
	mov	r0, #0x3
	mov	r1, #0x7
.L559:
	bl	QueueAction
	ldr	r0, .L566
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0x8
.L558:
	strb	r1, [r0]
.L541:
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L567:
	.align	2, 0
.L566:
	.word	sTradeMenu
.Lfe24:
	.size	 CB_ProcessSelectedMonInput,.Lfe24-CB_ProcessSelectedMonInput
	.align	2, 0
	.type	 CB_ChooseMonAfterButtonPress,function
	.thumb_func
CB_ChooseMonAfterButtonPress:
	push	{lr}
	ldr	r0, .L571
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L570	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L569	@cond_branch
.L570:
	mov	r0, #0x5
	bl	PlaySE
	bl	RedrawChooseAPokemonWindow
.L569:
	pop	{r0}
	bx	r0
.L572:
	.align	2, 0
.L571:
	.word	gMain
.Lfe25:
	.size	 CB_ChooseMonAfterButtonPress,.Lfe25-CB_ChooseMonAfterButtonPress
	.align	2, 0
	.type	 CB_ShowTradeMonSummaryScreen,function
	.thumb_func
CB_ShowTradeMonSummaryScreen:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L577
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L574	@cond_branch
	ldr	r0, .L577+0x4
	ldr	r2, [r0]
	add	r3, r2, #0
	add	r3, r3, #0x35
	ldrb	r1, [r3]
	cmp	r1, #0x5
	bhi	.L575	@cond_branch
	ldr	r0, .L577+0x8
	ldrb	r1, [r3]
	add	r2, r2, #0x36
	ldrb	r2, [r2]
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r3, .L577+0xc
	mov	r4, #0x4
	str	r4, [sp]
	bl	ShowPokemonSummaryScreen
	b	.L576
.L578:
	.align	2, 0
.L577:
	.word	gPaletteFade
	.word	sTradeMenu
	.word	gPlayerParty
	.word	CB2_ReturnToTradeMenuFromSummary
.L575:
	ldr	r0, .L579
	sub	r1, r1, #0x6
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r2, #0x37
	ldrb	r2, [r2]
	sub	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r3, .L579+0x4
	mov	r4, #0x4
	str	r4, [sp]
	bl	ShowPokemonSummaryScreen
.L576:
	bl	FreeAllWindowBuffers
.L574:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L580:
	.align	2, 0
.L579:
	.word	gEnemyParty
	.word	CB2_ReturnToTradeMenuFromSummary
.Lfe26:
	.size	 CB_ShowTradeMonSummaryScreen,.Lfe26-CB_ShowTradeMonSummaryScreen
	.align	2, 0
	.type	 CheckValidityOfTradeMons,function
	.thumb_func
CheckValidityOfTradeMons:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r4, #0x0
	mov	r3, #0x0
	ldr	r6, .L592
	ldr	r7, .L592+0x4
	cmp	r4, r1
	bge	.L583	@cond_branch
.L585:
	cmp	r2, r3
	beq	.L584	@cond_branch
	add	r0, r5, r3
	ldrb	r0, [r0]
	add	r0, r4, r0
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
.L584:
	add	r3, r3, #0x1
	cmp	r3, r1
	blt	.L585	@cond_branch
.L583:
	ldr	r0, [r6]
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	mov	r1, #0x6
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r5, #0x64
	mul	r0, r0, r5
	add	r0, r0, r7
	mov	r1, #0xb
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	mov	r0, #0xcd
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L589	@cond_branch
	cmp	r1, #0x97
	bne	.L588	@cond_branch
.L589:
	ldr	r0, [r6]
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	mov	r1, #0x6
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mul	r0, r0, r5
	add	r0, r0, r7
	mov	r1, #0x50
	bl	GetMonData
	cmp	r0, #0
	bne	.L588	@cond_branch
	mov	r0, #0x2
	b	.L591
.L593:
	.align	2, 0
.L592:
	.word	sTradeMenu
	.word	gEnemyParty
.L588:
	cmp	r4, #0
	beq	.L590	@cond_branch
	mov	r4, #0x1
.L590:
	add	r0, r4, #0
.L591:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 CheckValidityOfTradeMons,.Lfe27-CheckValidityOfTradeMons
	.align	2, 0
	.type	 CommunicateWhetherMonCanBeTraded,function
	.thumb_func
CommunicateWhetherMonCanBeTraded:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	mov	r2, #0x0
	ldr	r0, .L608
	ldr	r1, [r0]
	add	r3, r1, #0
	add	r3, r3, #0x36
	add	r5, r0, #0
	ldrb	r0, [r3]
	cmp	r2, r0
	bge	.L596	@cond_branch
	add	r4, r1, #0
	add	r4, r4, #0x45
.L598:
	mov	r1, sp
	add	r0, r1, r2
	add	r1, r4, r2
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r2, r2, #0x1
	ldrb	r0, [r3]
	cmp	r2, r0
	blt	.L598	@cond_branch
.L596:
	add	r4, r5, #0
	ldr	r0, [r4]
	add	r1, r0, #0
	add	r1, r1, #0x36
	ldrb	r1, [r1]
	add	r0, r0, #0x35
	ldrb	r2, [r0]
	mov	r0, sp
	bl	CheckValidityOfTradeMons
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L602	@cond_branch
	cmp	r0, #0x1
	bgt	.L607	@cond_branch
	cmp	r0, #0
	beq	.L601	@cond_branch
	b	.L600
.L609:
	.align	2, 0
.L608:
	.word	sTradeMenu
.L607:
	cmp	r0, #0x2
	beq	.L604	@cond_branch
	b	.L600
.L601:
	mov	r0, #0x3
	mov	r1, #0x3
	bl	QueueAction
	ldr	r0, [r4]
	add	r0, r0, #0x80
	ldr	r1, .L610
	strh	r1, [r0]
	mov	r0, #0xb4
	mov	r1, #0x0
	bl	QueueAction
	b	.L600
.L611:
	.align	2, 0
.L610:
	.word	0xbbcc
.L602:
	mov	r0, #0x3
	mov	r1, #0x1
	bl	QueueAction
	ldr	r0, [r4]
	add	r0, r0, #0x80
	ldr	r1, .L612
	strh	r1, [r0]
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L600	@cond_branch
	bl	BitmaskAllOtherLinkPlayers
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, [r4]
	add	r1, r1, #0x80
	mov	r2, #0x14
	bl	SendBlock
	b	.L600
.L613:
	.align	2, 0
.L612:
	.word	0xbbbb
.L604:
	mov	r0, #0x3
	mov	r1, #0x8
	bl	QueueAction
	ldr	r0, [r5]
	add	r0, r0, #0x80
	ldr	r1, .L614
	strh	r1, [r0]
	mov	r0, #0xb4
	mov	r1, #0x0
	bl	QueueAction
.L600:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L615:
	.align	2, 0
.L614:
	.word	0xbbcc
.Lfe28:
	.size	 CommunicateWhetherMonCanBeTraded,.Lfe28-CommunicateWhetherMonCanBeTraded
	.align	2, 0
	.type	 CB_ProcessConfirmTradeInput,function
	.thumb_func
CB_ProcessConfirmTradeInput:
	push	{r4, lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L618	@cond_branch
	cmp	r1, #0
	bgt	.L624	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L620	@cond_branch
	b	.L617
.L624:
	cmp	r1, #0x1
	beq	.L620	@cond_branch
	b	.L617
.L618:
	bl	CommunicateWhetherMonCanBeTraded
	ldr	r0, .L625
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0x64
	strb	r1, [r0]
	mov	r0, #0x11
	bl	PutWindowTilemap
	b	.L617
.L626:
	.align	2, 0
.L625:
	.word	sTradeMenu
.L620:
	mov	r0, #0x3
	mov	r1, #0x1
	bl	QueueAction
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L621	@cond_branch
	ldr	r4, .L627
	ldr	r0, [r4]
	add	r0, r0, #0x80
	ldr	r1, .L627+0x4
	strh	r1, [r0]
	bl	BitmaskAllOtherLinkPlayers
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, [r4]
	add	r1, r1, #0x80
	mov	r2, #0x14
	bl	SendBlock
.L621:
	ldr	r0, .L627
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0x64
	strb	r1, [r0]
	mov	r0, #0x11
	bl	PutWindowTilemap
.L617:
	pop	{r4}
	pop	{r0}
	bx	r0
.L628:
	.align	2, 0
.L627:
	.word	sTradeMenu
	.word	0xbbcc
.Lfe29:
	.size	 CB_ProcessConfirmTradeInput,.Lfe29-CB_ProcessConfirmTradeInput
	.align	2, 0
	.type	 RestoreNicknamesCoveredByYesNo,function
	.thumb_func
RestoreNicknamesCoveredByYesNo:
	push	{r4, r5, r6, lr}
	mov	r5, #0x0
	ldr	r0, .L635
	ldr	r0, [r0]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	sub	r0, r0, #0x4
	cmp	r5, r0
	bge	.L631	@cond_branch
	mov	r6, #0xc0
	lsl	r6, r6, #0x14
.L633:
	lsr	r4, r6, #0x18
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x1
	bl	CopyWindowToVram
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	add	r6, r6, r0
	add	r5, r5, #0x1
	ldr	r0, .L635
	ldr	r0, [r0]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	sub	r0, r0, #0x4
	cmp	r5, r0
	blt	.L633	@cond_branch
.L631:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L636:
	.align	2, 0
.L635:
	.word	sTradeMenu
.Lfe30:
	.size	 RestoreNicknamesCoveredByYesNo,.Lfe30-RestoreNicknamesCoveredByYesNo
	.align	2, 0
	.type	 CB_ProcessCancelTradeInput,function
	.thumb_func
CB_ProcessCancelTradeInput:
	push	{r4, r5, lr}
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r5, r0, #0x18
	cmp	r5, #0
	beq	.L639	@cond_branch
	cmp	r5, #0
	bgt	.L644	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	beq	.L641	@cond_branch
	b	.L638
.L644:
	cmp	r5, #0x1
	beq	.L641	@cond_branch
	b	.L638
.L639:
	mov	r0, #0x4
	bl	PrintTradeMessage
	ldr	r4, .L645
	ldr	r0, [r4]
	add	r2, r0, #0
	add	r2, r2, #0x80
	ldr	r1, .L645+0x4
	strh	r1, [r2]
	add	r0, r0, #0x82
	strh	r5, [r0]
	mov	r0, #0x5
	mov	r1, #0x0
	bl	QueueAction
	ldr	r2, .L645+0x8
	ldr	r0, [r4]
	add	r0, r0, #0x34
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x64
	strb	r1, [r0]
	bl	RestoreNicknamesCoveredByYesNo
	b	.L638
.L646:
	.align	2, 0
.L645:
	.word	sTradeMenu
	.word	0xeeaa
	.word	gSprites
.L641:
	mov	r0, #0x5
	bl	PlaySE
	bl	RedrawChooseAPokemonWindow
.L638:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe31:
	.size	 CB_ProcessCancelTradeInput,.Lfe31-CB_ProcessCancelTradeInput
	.align	2, 0
	.type	 CB_SetSelectedMons,function
	.thumb_func
CB_SetSelectedMons:
	push	{r4, lr}
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L648	@cond_branch
	mov	r0, #0x0
	bl	rbox_fill_rectangle
	ldr	r4, .L649
	ldr	r0, [r4]
	add	r0, r0, #0x35
	ldrb	r0, [r0]
	bl	SetSelectedMon
	ldr	r0, [r4]
	add	r0, r0, #0x7e
	ldrb	r0, [r0]
	bl	SetSelectedMon
.L648:
	ldr	r0, .L649
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0x7
	strb	r1, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L650:
	.align	2, 0
.L649:
	.word	sTradeMenu
.Lfe32:
	.size	 CB_SetSelectedMons,.Lfe32-CB_SetSelectedMons
	.align	2, 0
	.type	 CB_PrintIsThisTradeOkay,function
	.thumb_func
CB_PrintIsThisTradeOkay:
	push	{r4, lr}
	ldr	r4, .L653
	ldr	r0, [r4]
	add	r0, r0, #0x74
	ldrh	r1, [r0]
	ldr	r0, .L653+0x4
	cmp	r1, r0
	bne	.L652	@cond_branch
	bl	PrintIsThisTradeOkay
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0xe
	strb	r1, [r0]
.L652:
	pop	{r4}
	pop	{r0}
	bx	r0
.L654:
	.align	2, 0
.L653:
	.word	sTradeMenu
	.word	0x505
.Lfe33:
	.size	 CB_PrintIsThisTradeOkay,.Lfe33-CB_PrintIsThisTradeOkay
	.align	2, 0
	.type	 CB_InitConfirmTradePrompt,function
	.thumb_func
CB_InitConfirmTradePrompt:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r4, .L657
	ldr	r1, [r4]
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	mov	r5, #0x0
	strb	r0, [r1]
	ldr	r0, [r4]
	add	r0, r0, #0xa8
	ldrb	r0, [r0]
	cmp	r0, #0x78
	bls	.L656	@cond_branch
	ldr	r0, .L657+0x4
	mov	r1, #0x1
	str	r1, [sp]
	mov	r1, #0xe
	str	r1, [sp, #0x4]
	str	r5, [sp, #0x8]
	mov	r1, #0x3
	mov	r2, #0x0
	mov	r3, #0x2
	bl	CreateYesNoMenu
	ldr	r0, [r4]
	add	r0, r0, #0xa8
	strb	r5, [r0]
	ldr	r0, [r4]
	add	r0, r0, #0x6f
	mov	r1, #0x3
	strb	r1, [r0]
.L656:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L658:
	.align	2, 0
.L657:
	.word	sTradeMenu
	.word	sWindowTemplate_YesNo
.Lfe34:
	.size	 CB_InitConfirmTradePrompt,.Lfe34-CB_InitConfirmTradePrompt
	.align	2, 0
	.type	 CB_HandleTradeCanceled,function
	.thumb_func
CB_HandleTradeCanceled:
	push	{r4, r5, r6, lr}
	ldr	r0, .L666
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L660	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	mov	r0, #0x0
	bl	rbox_fill_rectangle
	mov	r0, #0x1
	bl	rbox_fill_rectangle
	mov	r6, #0x0
	mov	r5, #0xe0
	lsl	r5, r5, #0x14
.L664:
	lsr	r4, r5, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	add	r0, r4, #0
	bl	rbox_fill_rectangle
	mov	r0, #0x80
	lsl	r0, r0, #0x11
	add	r5, r5, r0
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L664	@cond_branch
	mov	r0, #0x0
	bl	RedrawPartyWindow
	mov	r0, #0x1
	bl	RedrawPartyWindow
	ldr	r2, .L666+0x4
	ldr	r0, [r2]
	add	r0, r0, #0x6f
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r3, .L666+0x8
	ldr	r0, [r2]
	add	r0, r0, #0x34
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
.L660:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L667:
	.align	2, 0
.L666:
	.word	gMain
	.word	sTradeMenu
	.word	gSprites
.Lfe35:
	.size	 CB_HandleTradeCanceled,.Lfe35-CB_HandleTradeCanceled
	.align	2, 0
	.type	 CB_InitExitCanceledTrade,function
	.thumb_func
CB_InitExitCanceledTrade:
	push	{lr}
	ldr	r0, .L672
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L669	@cond_branch
	ldr	r0, .L672+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L670	@cond_branch
	bl	SetLinkStandbyCallback
	b	.L671
.L673:
	.align	2, 0
.L672:
	.word	gPaletteFade
	.word	gWirelessCommType
.L670:
	mov	r0, #0xc
	bl	SetCloseLinkCallbackAndType
.L671:
	ldr	r0, .L674
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0xc
	strb	r1, [r0]
.L669:
	pop	{r0}
	bx	r0
.L675:
	.align	2, 0
.L674:
	.word	sTradeMenu
.Lfe36:
	.size	 CB_InitExitCanceledTrade,.Lfe36-CB_InitExitCanceledTrade
	.align	2, 0
	.type	 CB_ExitCanceledTrade,function
	.thumb_func
CB_ExitCanceledTrade:
	push	{lr}
	ldr	r0, .L681
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L677	@cond_branch
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L679	@cond_branch
	ldr	r0, .L681+0x4
	ldr	r0, [r0]
	bl	Free
	ldr	r0, .L681+0x8
	ldr	r0, [r0]
	bl	Free
	bl	FreeAllWindowBuffers
	bl	DestroyWirelessStatusIndicatorSprite
	ldr	r0, .L681+0xc
	bl	SetMainCallback2
	b	.L679
.L682:
	.align	2, 0
.L681:
	.word	gWirelessCommType
	.word	sMenuTextTileBuffer
	.word	sTradeMenu
	.word	CB2_ReturnToFieldFromMultiplayer
.L677:
	ldr	r0, .L683
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L679	@cond_branch
	ldr	r0, .L683+0x4
	ldr	r0, [r0]
	bl	Free
	ldr	r0, .L683+0x8
	ldr	r0, [r0]
	bl	Free
	bl	FreeAllWindowBuffers
	ldr	r0, .L683+0xc
	bl	SetMainCallback2
.L679:
	pop	{r0}
	bx	r0
.L684:
	.align	2, 0
.L683:
	.word	gReceivedRemoteLinkPlayers
	.word	sMenuTextTileBuffer
	.word	sTradeMenu
	.word	CB2_ReturnToFieldFromMultiplayer
.Lfe37:
	.size	 CB_ExitCanceledTrade,.Lfe37-CB_ExitCanceledTrade
	.align	2, 0
	.type	 CB_WaitToStartRfuTrade,function
	.thumb_func
CB_WaitToStartRfuTrade:
	push	{lr}
	mov	r0, #0x0
	bl	Rfu_SetLinkRecovery
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L686	@cond_branch
	bl	SetLinkStandbyCallback
	ldr	r0, .L687
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	mov	r1, #0xd
	strb	r1, [r0]
.L686:
	pop	{r0}
	bx	r0
.L688:
	.align	2, 0
.L687:
	.word	sTradeMenu
.Lfe38:
	.size	 CB_WaitToStartRfuTrade,.Lfe38-CB_WaitToStartRfuTrade
	.align	2, 0
	.type	 RunTradeMenuCallback,function
	.thumb_func
RunTradeMenuCallback:
	push	{lr}
	ldr	r0, .L710
	ldr	r0, [r0]
	add	r0, r0, #0x6f
	ldrb	r0, [r0]
	cmp	r0, #0x10
	bhi	.L690	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L710+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L711:
	.align	2, 0
.L710:
	.word	sTradeMenu
	.word	.L708
	.align	2, 0
	.align	2, 0
.L708:
	.word	.L691
	.word	.L692
	.word	.L693
	.word	.L694
	.word	.L695
	.word	.L690
	.word	.L697
	.word	.L698
	.word	.L699
	.word	.L700
	.word	.L701
	.word	.L702
	.word	.L703
	.word	.L704
	.word	.L705
	.word	.L706
	.word	.L707
.L691:
	bl	CB_ProcessMenuInput
	b	.L690
.L692:
	bl	CB_ProcessSelectedMonInput
	b	.L690
.L693:
	bl	CB_ShowTradeMonSummaryScreen
	b	.L690
.L694:
	bl	CB_ProcessConfirmTradeInput
	b	.L690
.L695:
	bl	CB_ProcessCancelTradeInput
	b	.L690
.L697:
	bl	CB_SetSelectedMons
	b	.L690
.L698:
	bl	CB_PrintIsThisTradeOkay
	b	.L690
.L699:
	bl	CB_HandleTradeCanceled
	b	.L690
.L700:
	bl	CB_FadeToStartTrade
	b	.L690
.L701:
	bl	CB_WaitToStartTrade
	b	.L690
.L702:
	bl	CB_InitExitCanceledTrade
	b	.L690
.L703:
	bl	CB_ExitCanceledTrade
	b	.L690
.L704:
	bl	CB_StartLinkTrade
	b	.L690
.L705:
	bl	CB_InitConfirmTradePrompt
	b	.L690
.L706:
	bl	CB_ChooseMonAfterButtonPress
	b	.L690
.L707:
	bl	CB_WaitToStartRfuTrade
.L690:
	pop	{r0}
	bx	r0
.Lfe39:
	.size	 RunTradeMenuCallback,.Lfe39-RunTradeMenuCallback
	.align	2, 0
	.type	 SetSelectedMon,function
	.thumb_func
SetSelectedMon:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	mov	r1, #0x6
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	ldr	r3, .L714
	ldr	r0, [r3]
	add	r0, r0, #0x74
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L713	@cond_branch
	mov	r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r3]
	add	r0, r0, #0x76
	add	r0, r0, r2
	strb	r4, [r0]
.L713:
	pop	{r4}
	pop	{r0}
	bx	r0
.L715:
	.align	2, 0
.L714:
	.word	sTradeMenu
.Lfe40:
	.size	 SetSelectedMon,.Lfe40-SetSelectedMon
	.align	2, 0
	.type	 DrawSelectedMonScreen,function
	.thumb_func
DrawSelectedMonScreen:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x68
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L739
	ldr	r4, [r0]
	add	r0, r4, #0
	add	r0, r0, #0x76
	add	r0, r0, r7
	ldrb	r0, [r0]
	mov	r1, #0x1
	str	r1, [sp, #0x60]
	cmp	r0, #0x5
	bhi	.L717	@cond_branch
	mov	r2, #0x0
	str	r2, [sp, #0x60]
.L717:
	mov	r1, #0x6
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	mov	r0, #0x0
	mov	r8, r0
	add	r0, r4, #0
	add	r0, r0, #0x74
	add	r3, r0, r7
	ldrb	r0, [r3]
	cmp	r0, #0x2
	bne	.LCB5974
	b	.L732	@long jump
.LCB5974:
	cmp	r0, #0x2
	bgt	.L737	@cond_branch
	cmp	r0, #0x1
	beq	.L720	@cond_branch
	b	.L718
.L740:
	.align	2, 0
.L739:
	.word	sTradeMenu
.L737:
	cmp	r0, #0x3
	bne	.LCB5989
	b	.L734	@long jump
.LCB5989:
	cmp	r0, #0x4
	bne	.LCB5991
	b	.L735	@long jump
.LCB5991:
	b	.L718
.L720:
	mov	r5, #0x0
	add	r0, r4, #0
	add	r0, r0, #0x36
	add	r0, r0, r7
	ldr	r1, [sp, #0x60]
	lsl	r1, r1, #0x1
	mov	r9, r1
	lsl	r6, r7, #0x1
	lsl	r2, r7, #0x4
	str	r2, [sp, #0x64]
	ldrb	r0, [r0]
	cmp	r8, r0
	bcs	.L722	@cond_branch
	ldr	r0, .L741
	mov	r8, r0
	ldr	r4, .L741+0x4
	ldr	r0, [sp, #0x60]
	add	r0, r0, r9
	lsl	r2, r0, #0x1
	mov	r3, #0x4
.L724:
	ldr	r0, [r4]
	add	r1, r5, r2
	add	r0, r0, #0x28
	add	r0, r0, r1
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	orr	r1, r1, r3
	strb	r1, [r0]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, [r4]
	add	r0, r0, #0x36
	add	r0, r0, r7
	ldrb	r0, [r0]
	cmp	r5, r0
	bcc	.L724	@cond_branch
.L722:
	mov	r5, #0x0
	add	r0, r6, r7
	lsl	r0, r0, #0x1
	add	r4, r0, #0x2
.L729:
	lsl	r0, r5, #0x18
	asr	r0, r0, #0x18
	add	r0, r0, r4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	ClearWindowTilemap
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x5
	bls	.L729	@cond_branch
	ldr	r1, .L741
	mov	r8, r1
	ldr	r2, .L741+0x4
	ldr	r0, [r2]
	ldr	r6, [sp, #0x60]
	add	r6, r6, r9
	lsl	r3, r6, #0x1
	add	sl, sl, r3
	add	r0, r0, #0x28
	add	r0, r0, sl
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	add	r0, r0, #0x3e
	ldrb	r2, [r0]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	ldr	r0, .L741+0x4
	ldr	r4, [r0]
	add	r4, r4, #0x28
	add	r4, r4, sl
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	mov	r1, #0x14
	strh	r1, [r0, #0x2e]
	ldrb	r0, [r4]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r8
	ldr	r5, .L741+0x8
	lsl	r6, r6, #0x2
	add	r0, r6, r5
	ldrb	r0, [r0]
	add	r3, r3, #0x1
	lsl	r3, r3, #0x1
	add	r3, r3, r5
	ldrb	r1, [r3]
	add	r0, r0, r1
	asr	r0, r0, #0x1
	lsl	r0, r0, #0x3
	add	r0, r0, #0xe
	strh	r0, [r2, #0x32]
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r8
	add	r5, r5, #0x1
	add	r6, r6, r5
	ldrb	r0, [r6]
	lsl	r0, r0, #0x3
	sub	r0, r0, #0xc
	strh	r0, [r1, #0x36]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	ldr	r1, .L741+0xc
	bl	StoreSpriteCallbackInData6
	ldr	r2, .L741+0x4
	ldr	r1, [r2]
	add	r1, r1, #0x74
	add	r1, r1, r7
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	ldr	r0, [r2]
	add	r0, r0, #0x28
	add	r0, r0, sl
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	bl	Trade_MoveSelectedMonToTarget
	ldr	r1, .L741+0x10
	ldr	r0, [sp, #0x64]
	sub	r2, r0, r7
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0xf
	str	r0, [sp]
	mov	r0, #0x11
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldr	r1, [sp, #0x60]
	cmp	r1, #0
	beq	.LCB6193
	b	.L718	@long jump
.LCB6193:
	bl	PrintTradePartnerPartyNicknames
	b	.L718
.L742:
	.align	2, 0
.L741:
	.word	gSprites
	.word	sTradeMenu
	.word	sTradeMonSpriteCoords
	.word	SpriteCB_MonIcon
	.word	sTradePartyBoxTilemap
.L732:
	ldr	r2, .L743
	ldr	r1, [sp, #0x60]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x1
	add	r0, r0, sl
	add	r1, r4, #0
	add	r1, r1, #0x28
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, #0x1c
	add	r0, r0, r2
	ldr	r1, [r0]
	ldr	r0, .L743+0x4
	cmp	r1, r0
	beq	.LCB6226
	b	.L718	@long jump
.LCB6226:
	mov	r0, #0x3
	strb	r0, [r3]
	b	.L718
.L744:
	.align	2, 0
.L743:
	.word	gSprites
	.word	SpriteCB_MonIcon
.L734:
	ldr	r1, .L745
	ldr	r0, [sp, #0x60]
	lsl	r2, r0, #0x4
	sub	r2, r2, r0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0xf
	str	r0, [sp]
	mov	r0, #0x11
	str	r0, [sp, #0x4]
	mov	r0, r8
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	ldr	r6, .L745+0x4
	ldr	r1, .L745+0x8
	ldr	r4, [r1]
	ldr	r2, [sp, #0x60]
	lsl	r3, r2, #0x1
	add	r3, r3, r2
	lsl	r1, r3, #0x1
	mov	r2, sl
	add	r0, r2, r1
	add	r4, r4, #0x28
	add	r4, r4, r0
	ldrb	r0, [r4]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r6
	ldr	r5, .L745+0xc
	lsl	r3, r3, #0x2
	add	r0, r3, r5
	ldrb	r0, [r0]
	add	r1, r1, #0x1
	lsl	r1, r1, #0x1
	add	r1, r1, r5
	ldrb	r1, [r1]
	add	r0, r0, r1
	asr	r0, r0, #0x1
	lsl	r0, r0, #0x3
	add	r0, r0, #0xe
	strh	r0, [r2, #0x20]
	ldrb	r0, [r4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	add	r5, r5, #0x1
	add	r3, r3, r5
	ldrb	r0, [r3]
	lsl	r0, r0, #0x3
	sub	r0, r0, #0xc
	strh	r0, [r1, #0x22]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, r8
	strh	r1, [r0, #0x24]
	ldrb	r1, [r4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r2, r8
	strh	r2, [r0, #0x26]
	add	r0, sp, #0x14
	ldr	r1, [sp, #0x60]
	mov	r2, sl
	bl	GetMonNicknameWidth
	lsl	r4, r7, #0x1
	add	r5, r4, #0
	add	r5, r5, #0xe
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r2, #0x50
	sub	r2, r2, r0
	lsr	r0, r2, #0x1f
	add	r2, r2, r0
	asr	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L745+0x10
	mov	r8, r0
	str	r0, [sp]
	mov	r1, #0x0
	str	r1, [sp, #0x4]
	add	r0, sp, #0x14
	str	r0, [sp, #0x8]
	add	r0, r5, #0
	mov	r3, #0x4
	bl	AddTextPrinterParameterized3
	add	r6, sp, #0x28
	add	r0, r6, #0
	ldr	r1, [sp, #0x60]
	mov	r2, sl
	bl	BufferMovesString
	add	r4, r4, #0xf
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r1, #0x0
	str	r1, [sp]
	str	r1, [sp, #0x4]
	mov	r2, r8
	str	r2, [sp, #0x8]
	str	r1, [sp, #0xc]
	str	r6, [sp, #0x10]
	add	r0, r4, #0
	mov	r1, #0x1
	mov	r2, #0x0
	mov	r3, #0x0
	bl	AddTextPrinterParameterized4
	add	r0, r5, #0
	bl	PutWindowTilemap
	add	r0, r5, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L745+0x8
	ldr	r1, [r0]
	b	.L738
.L746:
	.align	2, 0
.L745:
	.word	sTradeMovesBoxTilemap
	.word	gSprites
	.word	sTradeMenu
	.word	sTradeMonSpriteCoords
	.word	sTextColor_PartyMonNickname
.L735:
	ldr	r0, .L747
	lsl	r1, r7, #0x1
	add	r4, r1, r0
	ldrb	r2, [r4]
	add	r2, r2, #0x4
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r0, #0x1
	add	r1, r1, r0
	ldrb	r3, [r1]
	add	r3, r3, #0x1
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	ldrb	r0, [r4]
	str	r0, [sp]
	ldrb	r0, [r1]
	str	r0, [sp, #0x4]
	add	r0, r7, #0
	mov	r1, sl
	bl	PrintLevelAndGender
	ldr	r2, .L747+0x4
	ldr	r1, [r2]
.L738:
	add	r1, r1, #0x74
	add	r1, r1, r7
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L718:
	add	sp, sp, #0x68
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L748:
	.align	2, 0
.L747:
	.word	sSelectedMonLevelGenderCoords
	.word	sTradeMenu
.Lfe41:
	.size	 DrawSelectedMonScreen,.Lfe41-DrawSelectedMonScreen
	.align	2, 0
	.type	 GetMonNicknameWidth,function
	.thumb_func
GetMonNicknameWidth:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r1, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	cmp	r1, #0
	bne	.L750	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r1, .L752
	add	r0, r0, r1
	mov	r1, #0x2
	mov	r2, sp
	bl	GetMonData
	b	.L751
.L753:
	.align	2, 0
.L752:
	.word	gPlayerParty
.L750:
	mov	r0, #0x64
	mul	r0, r0, r2
	ldr	r1, .L754
	add	r0, r0, r1
	mov	r1, #0x2
	mov	r2, sp
	bl	GetMonData
.L751:
	add	r0, r4, #0
	mov	r1, sp
	bl	StringCopy_Nickname
	mov	r0, #0x0
	mov	r1, #0x2
	bl	GetFontAttribute
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x0
	add	r1, r4, #0
	bl	GetStringWidth
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r1}
	bx	r1
.L755:
	.align	2, 0
.L754:
	.word	gEnemyParty
.Lfe42:
	.size	 GetMonNicknameWidth,.Lfe42-GetMonNicknameWidth
	.align	2, 0
	.type	 BufferMovesString,function
	.thumb_func
BufferMovesString:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x8
	add	r6, r0, #0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L773
	ldr	r1, [r0]
	lsl	r0, r7, #0x1
	add	r0, r0, r7
	lsl	r0, r0, #0x1
	add	r0, r2, r0
	add	r1, r1, #0x51
	add	r1, r1, r0
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L757	@cond_branch
	mov	r4, #0x0
	mov	r0, #0x64
	mov	r5, r2
	mul	r5, r5, r0
	ldr	r0, .L773+0x4
	mov	r9, r0
	ldr	r2, .L773+0x8
	mov	r8, r2
.L761:
	cmp	r7, #0
	bne	.L762	@cond_branch
	add	r1, r4, #0
	add	r1, r1, #0xd
	mov	r2, r9
	b	.L772
.L774:
	.align	2, 0
.L773:
	.word	sTradeMenu
	.word	gPlayerParty
	.word	gEnemyParty
.L762:
	add	r1, r4, #0
	add	r1, r1, #0xd
	mov	r2, r8
.L772:
	add	r0, r5, r2
	mov	r2, #0x0
	bl	GetMonData
	lsl	r1, r4, #0x1
	add	r1, r1, sp
	strh	r0, [r1]
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x3
	bls	.L761	@cond_branch
	ldr	r1, .L775
	add	r0, r6, #0
	bl	StringCopy
	mov	r4, #0x0
.L768:
	lsl	r0, r4, #0x1
	mov	r2, sp
	add	r1, r2, r0
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L769	@cond_branch
	add	r1, r0, #0
	mov	r0, #0xd
	mul	r1, r1, r0
	ldr	r0, .L775+0x4
	add	r1, r1, r0
	add	r0, r6, #0
	bl	StringAppend
.L769:
	add	r0, r6, #0
	ldr	r1, .L775+0x8
	bl	StringAppend
	add	r0, r4, #0x1
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x3
	bls	.L768	@cond_branch
	b	.L771
.L776:
	.align	2, 0
.L775:
	.word	sText_Dummy
	.word	gMoveNames
	.word	sText_Newline
.L757:
	ldr	r1, .L777
	add	r0, r6, #0
	bl	StringCopy
	ldr	r1, .L777+0x4
	add	r0, r6, #0
	bl	StringAppend
.L771:
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L778:
	.align	2, 0
.L777:
	.word	sText_Dummy
	.word	gText_4Qmark
.Lfe43:
	.size	 BufferMovesString,.Lfe43-BufferMovesString
	.align	2, 0
	.type	 PrintPartyMonNickname,function
	.thumb_func
PrintPartyMonNickname:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r4, r1, #0
	add	r6, r2, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r1, r1, #0x2
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	add	r4, r4, r1
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r5, #0x0
	mov	r0, #0x0
	mov	r1, #0x2
	bl	GetFontAttribute
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x0
	add	r1, r6, #0
	bl	GetStringWidth
	mov	r2, #0x40
	sub	r2, r2, r0
	lsr	r2, r2, #0x1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L780
	str	r0, [sp]
	str	r5, [sp, #0x4]
	str	r6, [sp, #0x8]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r3, #0x4
	bl	AddTextPrinterParameterized3
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L781:
	.align	2, 0
.L780:
	.word	sTextColor_PartyMonNickname
.Lfe44:
	.size	 PrintPartyMonNickname,.Lfe44-PrintPartyMonNickname
	.align	2, 0
	.type	 PrintPartyNicknames,function
	.thumb_func
PrintPartyNicknames:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x34
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r7, .L790
	cmp	r6, #0
	bne	.L783	@cond_branch
	ldr	r7, .L790+0x4
.L783:
	mov	r4, #0x0
	ldr	r0, .L790+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x36
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r4, r0
	bcs	.L786	@cond_branch
	add	r5, sp, #0x14
.L788:
	mov	r0, #0x64
	mul	r0, r0, r4
	add	r0, r7, r0
	mov	r1, #0x2
	mov	r2, sp
	bl	GetMonData
	add	r0, r5, #0
	mov	r1, sp
	bl	StringCopy_Nickname
	add	r0, r6, #0
	add	r1, r4, #0
	add	r2, r5, #0
	bl	PrintPartyMonNickname
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L790+0x8
	ldr	r0, [r0]
	add	r0, r0, #0x36
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r4, r0
	bcc	.L788	@cond_branch
.L786:
	add	sp, sp, #0x34
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L791:
	.align	2, 0
.L790:
	.word	gEnemyParty
	.word	gPlayerParty
	.word	sTradeMenu
.Lfe45:
	.size	 PrintPartyNicknames,.Lfe45-PrintPartyNicknames
	.align	2, 0
	.type	 PrintLevelAndGender,function
	.thumb_func
PrintLevelAndGender:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x1c
	ldr	r4, [sp, #0x3c]
	ldr	r5, [sp, #0x40]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r9, r2
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	sl, r3
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	ldr	r1, .L812
	mov	r0, #0x6
	str	r0, [sp]
	mov	r0, #0x3
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r2, r4, #0
	add	r3, r5, #0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	mov	r0, r8
	cmp	r0, #0
	bne	.L793	@cond_branch
	mov	r0, #0x64
	mul	r0, r0, r7
	ldr	r1, .L812+0x4
	b	.L811
.L813:
	.align	2, 0
.L812:
	.word	gTradeMenuMonBox_Tilemap
	.word	gPlayerParty
.L793:
	mov	r0, #0x64
	mul	r0, r0, r7
	ldr	r1, .L814
.L811:
	add	r0, r0, r1
	mov	r1, #0x38
	mov	r2, #0x0
	bl	GetMonData
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r4, .L814+0x4
	ldr	r5, [r4]
	mov	r1, r8
	lsl	r2, r1, #0x1
	add	r1, r2, r1
	lsl	r1, r1, #0x1
	add	r1, r7, r1
	add	r0, r5, #0
	add	r0, r0, #0x51
	add	r0, r0, r1
	ldrb	r0, [r0]
	str	r2, [sp, #0x18]
	cmp	r0, #0
	bne	.L795	@cond_branch
	add	r0, r6, #0
	mov	r1, #0xa
	bl	__udivsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	mov	r0, sl
	lsl	r3, r0, #0x5
	cmp	r2, #0
	beq	.L796	@cond_branch
	mov	r1, r9
	add	r0, r1, r3
	lsl	r0, r0, #0x1
	mov	r1, #0x8f
	lsl	r1, r1, #0x4
	add	r5, r5, r1
	add	r1, r5, r0
	add	r0, r2, #0
	add	r0, r0, #0x60
	strh	r0, [r1]
.L796:
	ldr	r4, [r4]
	mov	r1, r9
	add	r0, r1, r3
	add	r0, r0, #0x1
	lsl	r0, r0, #0x1
	mov	r3, #0x8f
	lsl	r3, r3, #0x4
	add	r4, r4, r3
	add	r4, r4, r0
	add	r0, r6, #0
	mov	r1, #0xa
	bl	__umodsi3
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, #0x70
	strh	r0, [r4]
	b	.L797
.L815:
	.align	2, 0
.L814:
	.word	gEnemyParty
	.word	sTradeMenu
.L795:
	mov	r1, sl
	lsl	r0, r1, #0x5
	mov	r1, r9
	add	r3, r1, r0
	add	r1, r3, #0
	sub	r1, r1, #0x20
	lsl	r1, r1, #0x1
	mov	r0, #0x8f
	lsl	r0, r0, #0x4
	add	r2, r5, r0
	add	r1, r2, r1
	add	r0, r3, #0
	sub	r0, r0, #0x21
	lsl	r0, r0, #0x1
	add	r0, r2, r0
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r1, r3, #0
	sub	r1, r1, #0x1f
	lsl	r1, r1, #0x1
	add	r1, r2, r1
	add	r0, r3, #0
	sub	r0, r0, #0x24
	lsl	r0, r0, #0x1
	add	r2, r2, r0
	ldrh	r2, [r2]
	mov	r3, #0x80
	lsl	r3, r3, #0x3
	add	r0, r3, #0
	orr	r0, r0, r2
	strh	r0, [r1]
.L797:
	ldr	r0, .L816
	ldr	r1, [r0]
	ldr	r0, [sp, #0x18]
	add	r0, r0, r8
	lsl	r0, r0, #0x1
	add	r0, r7, r0
	add	r1, r1, #0x51
	add	r1, r1, r0
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L798	@cond_branch
	mov	r2, #0x90
	lsl	r2, r2, #0x3
	b	.L799
.L817:
	.align	2, 0
.L816:
	.word	sTradeMenu
.L798:
	mov	r0, r8
	cmp	r0, #0
	bne	.L800	@cond_branch
	mov	r0, #0x64
	mov	r4, r7
	mul	r4, r4, r0
	ldr	r0, .L818
	add	r4, r4, r0
	add	r0, r4, #0
	bl	GetMonGender
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	mov	r1, #0x2
	add	r2, sp, #0xc
	bl	GetMonData
	b	.L801
.L819:
	.align	2, 0
.L818:
	.word	gPlayerParty
.L800:
	mov	r0, #0x64
	mov	r4, r7
	mul	r4, r4, r0
	ldr	r0, .L820
	add	r4, r4, r0
	add	r0, r4, #0
	bl	GetMonGender
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	add	r0, r4, #0
	mov	r1, #0x2
	add	r2, sp, #0xc
	bl	GetMonData
.L801:
	cmp	r5, #0
	beq	.L803	@cond_branch
	cmp	r5, #0xfe
	beq	.L806	@cond_branch
	mov	r2, #0x83
	b	.L799
.L821:
	.align	2, 0
.L820:
	.word	gEnemyParty
.L803:
	add	r0, sp, #0xc
	mov	r1, #0x0
	bl	NameHasGenderSymbol
	lsl	r0, r0, #0x18
	mov	r2, #0x83
	cmp	r0, #0
	bne	.L799	@cond_branch
	mov	r2, #0x84
	b	.L799
.L806:
	add	r0, sp, #0xc
	mov	r1, #0xfe
	bl	NameHasGenderSymbol
	lsl	r0, r0, #0x18
	mov	r2, #0x83
	cmp	r0, #0
	bne	.L799	@cond_branch
	mov	r2, #0x85
.L799:
	ldr	r0, .L822
	ldr	r1, [r0]
	mov	r0, sl
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x5
	add	r0, r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x1
	mov	r3, #0x8f
	lsl	r3, r3, #0x4
	add	r1, r1, r3
	add	r1, r1, r0
	strh	r2, [r1]
	add	sp, sp, #0x1c
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L823:
	.align	2, 0
.L822:
	.word	sTradeMenu
.Lfe46:
	.size	 PrintLevelAndGender,.Lfe46-PrintLevelAndGender
	.align	2, 0
	.type	 PrintPartyLevelsAndGenders,function
	.thumb_func
PrintPartyLevelsAndGenders:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r7, #0x0
	ldr	r0, .L830
	ldr	r0, [r0]
	add	r0, r0, #0x36
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r7, r0
	bge	.L826	@cond_branch
	lsl	r0, r6, #0x1
	add	r0, r0, r6
	ldr	r1, .L830+0x4
	lsl	r0, r0, #0x2
	add	r5, r0, r1
	ldr	r1, .L830+0x8
	add	r4, r0, r1
.L828:
	lsl	r1, r7, #0x18
	lsr	r1, r1, #0x18
	ldrb	r2, [r5]
	ldrb	r3, [r5, #0x1]
	ldrb	r0, [r4]
	str	r0, [sp]
	ldrb	r0, [r4, #0x1]
	str	r0, [sp, #0x4]
	add	r0, r6, #0
	bl	PrintLevelAndGender
	add	r5, r5, #0x2
	add	r4, r4, #0x2
	add	r7, r7, #0x1
	ldr	r0, .L830
	ldr	r0, [r0]
	add	r0, r0, #0x36
	add	r0, r0, r6
	ldrb	r0, [r0]
	cmp	r7, r0
	blt	.L828	@cond_branch
.L826:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L831:
	.align	2, 0
.L830:
	.word	sTradeMenu
	.word	sTradeMonLevelCoords
	.word	sTradeMonBoxCoords
.Lfe47:
	.size	 PrintPartyLevelsAndGenders,.Lfe47-PrintPartyLevelsAndGenders
	.align	2, 0
	.type	 ShowTradePartyMonIcons,function
	.thumb_func
ShowTradePartyMonIcons:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	ip, r0
	mov	r7, #0x0
	ldr	r3, .L838
	ldr	r0, [r3]
	add	r0, r0, #0x36
	add	r0, r0, ip
	ldrb	r0, [r0]
	cmp	r7, r0
	bge	.L834	@cond_branch
	ldr	r6, .L838+0x4
	mov	r9, r3
	mov	r1, ip
	lsl	r0, r1, #0x1
	add	r0, r0, ip
	lsl	r2, r0, #0x1
	mov	sl, r2
	ldr	r1, .L838+0x8
	mov	r2, #0x0
	mov	r8, r2
	lsl	r0, r0, #0x2
	add	r5, r0, r1
.L836:
	mov	r1, r9
	ldr	r0, [r1]
	mov	r2, sl
	add	r4, r7, r2
	add	r0, r0, #0x28
	add	r0, r0, r4
	ldrb	r0, [r0]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	add	r1, r1, #0x3e
	ldrb	r2, [r1]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	mov	r0, r9
	ldr	r3, [r0]
	add	r2, r3, #0
	add	r2, r2, #0x28
	add	r2, r2, r4
	ldrb	r0, [r2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r0, [r5]
	lsl	r0, r0, #0x3
	add	r0, r0, #0xe
	strh	r0, [r1, #0x20]
	ldrb	r0, [r2]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r0, [r5, #0x1]
	lsl	r0, r0, #0x3
	sub	r0, r0, #0xc
	strh	r0, [r1, #0x22]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r1, r8
	strh	r1, [r0, #0x24]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	mov	r2, r8
	strh	r2, [r0, #0x26]
	add	r5, r5, #0x2
	add	r7, r7, #0x1
	add	r3, r3, #0x36
	add	r3, r3, ip
	ldrb	r3, [r3]
	cmp	r7, r3
	blt	.L836	@cond_branch
.L834:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L839:
	.align	2, 0
.L838:
	.word	sTradeMenu
	.word	gSprites
	.word	sTradeMonSpriteCoords
.Lfe48:
	.size	 ShowTradePartyMonIcons,.Lfe48-ShowTradePartyMonIcons
	.align	2, 0
	.type	 PrintTradePartnerPartyNicknames,function
	.thumb_func
PrintTradePartnerPartyNicknames:
	push	{lr}
	mov	r0, #0x1
	bl	rbox_fill_rectangle
	mov	r0, #0x1
	bl	PrintPartyNicknames
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 PrintTradePartnerPartyNicknames,.Lfe49-PrintTradePartnerPartyNicknames
	.align	2, 0
	.type	 RedrawPartyWindow,function
	.thumb_func
RedrawPartyWindow:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r1, .L842
	lsl	r2, r4, #0x4
	sub	r2, r2, r4
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0xf
	str	r0, [sp]
	mov	r0, #0x11
	str	r0, [sp, #0x4]
	mov	r6, #0x0
	str	r6, [sp, #0x8]
	mov	r0, #0x1
	mov	r3, #0x0
	bl	CopyToBgTilemapBufferRect_ChangePalette
	mov	r0, #0x1
	bl	CopyBgTilemapBufferToVram
	add	r0, r4, #0
	bl	PrintPartyLevelsAndGenders
	add	r0, r4, #0
	bl	PrintPartyNicknames
	add	r0, r4, #0
	bl	ShowTradePartyMonIcons
	ldr	r0, .L842+0x4
	ldr	r0, [r0, #0x4]
	ldr	r5, .L842+0x8
	ldr	r1, [r5]
	add	r1, r1, #0x72
	ldrh	r1, [r1]
	lsl	r1, r1, #0x5
	ldr	r2, .L842+0xc
	add	r1, r1, r2
	mov	r2, #0x18
	bl	DrawBottomRowText
	ldr	r0, [r5]
	add	r0, r0, #0x74
	add	r0, r0, r4
	strb	r6, [r0]
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L843:
	.align	2, 0
.L842:
	.word	sTradePartyBoxTilemap
	.word	sActionTexts
	.word	sTradeMenu
	.word	0x6010000
.Lfe50:
	.size	 RedrawPartyWindow,.Lfe50-RedrawPartyWindow
	.align	2, 0
	.type	 Task_DrawSelectionSummary,function
	.thumb_func
Task_DrawSelectionSummary:
	push	{lr}
	add	sp, sp, #-0x8
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.Lfe51:
	.size	 Task_DrawSelectionSummary,.Lfe51-Task_DrawSelectionSummary
	.align	2, 0
	.type	 Task_DrawSelectionTrade,function
	.thumb_func
Task_DrawSelectionTrade:
	push	{lr}
	add	sp, sp, #-0x8
	mov	r0, #0x1e
	str	r0, [sp]
	mov	r0, #0x14
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.Lfe52:
	.size	 Task_DrawSelectionTrade,.Lfe52-Task_DrawSelectionTrade
	.align	2, 0
	.type	 QueueAction,function
	.thumb_func
QueueAction:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	mov	r3, #0x0
	ldr	r4, .L853
	mov	ip, r4
	mov	r7, #0x8d
	lsl	r7, r7, #0x4
.L850:
	mov	r1, ip
	ldr	r0, [r1]
	lsl	r1, r3, #0x3
	add	r2, r0, r1
	add	r0, r2, r7
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L849	@cond_branch
	ldr	r3, .L853+0x4
	add	r0, r2, r3
	strh	r5, [r0]
	add	r3, r3, #0x2
	add	r0, r2, r3
	strb	r6, [r0]
	ldr	r0, [r4]
	add	r0, r0, r1
	mov	r1, #0x8d
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
	b	.L848
.L854:
	.align	2, 0
.L853:
	.word	sTradeMenu
	.word	0x8d2
.L849:
	add	r3, r3, #0x1
	cmp	r3, #0x3
	ble	.L850	@cond_branch
.L848:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe53:
	.size	 QueueAction,.Lfe53-QueueAction
	.align	2, 0
	.type	 DoQueuedActions,function
	.thumb_func
DoQueuedActions:
	push	{r4, r5, lr}
	mov	r4, #0x0
	ldr	r3, .L876
.L859:
	ldr	r0, [r3]
	lsl	r1, r4, #0x3
	add	r2, r0, r1
	mov	r5, #0x8d
	lsl	r5, r5, #0x4
	add	r0, r2, r5
	ldrb	r0, [r0]
	add	r5, r1, #0
	cmp	r0, #0
	beq	.L858	@cond_branch
	ldr	r0, .L876+0x4
	add	r1, r2, r0
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L861	@cond_branch
	sub	r0, r0, #0x1
	strh	r0, [r1]
	b	.L858
.L877:
	.align	2, 0
.L876:
	.word	sTradeMenu
	.word	0x8d2
.L861:
	ldr	r1, .L878
	add	r0, r2, r1
	ldrb	r0, [r0]
	cmp	r0, #0x8
	bhi	.L863	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L878+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L879:
	.align	2, 0
.L878:
	.word	0x8d4
	.word	.L873
	.align	2, 0
	.align	2, 0
.L873:
	.word	.L864
	.word	.L865
	.word	.L866
	.word	.L869
	.word	.L869
	.word	.L869
	.word	.L870
	.word	.L871
	.word	.L872
.L864:
	bl	BitmaskAllOtherLinkPlayers
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L880
	ldr	r1, [r1]
	add	r1, r1, #0x80
	mov	r2, #0x14
	bl	SendBlock
	b	.L863
.L881:
	.align	2, 0
.L880:
	.word	sTradeMenu
.L865:
	mov	r0, #0x0
	bl	PrintTradeMessage
	b	.L863
.L866:
	mov	r0, #0x2
	bl	PrintTradeMessage
	b	.L863
.L869:
	mov	r0, #0x3
	bl	PrintTradeMessage
	b	.L863
.L870:
	mov	r0, #0x6
	bl	PrintTradeMessage
	b	.L863
.L871:
	mov	r0, #0x7
	bl	PrintTradeMessage
	b	.L863
.L872:
	mov	r0, #0x8
	bl	PrintTradeMessage
.L863:
	ldr	r0, .L882
	ldr	r1, [r0]
	add	r1, r1, r5
	mov	r2, #0x8d
	lsl	r2, r2, #0x4
	add	r1, r1, r2
	mov	r2, #0x0
	strb	r2, [r1]
	add	r3, r0, #0
.L858:
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L859	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L883:
	.align	2, 0
.L882:
	.word	sTradeMenu
.Lfe54:
	.size	 DoQueuedActions,.Lfe54-DoQueuedActions
	.align	2, 0
	.type	 PrintTradeMessage,function
	.thumb_func
PrintTradeMessage:
	push	{r4, lr}
	add	sp, sp, #-0xc
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldr	r0, .L885
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	ldr	r2, [r4]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x3
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r1, #0x14
	mov	r2, #0xc
	bl	DrawTextBorderOuter
	mov	r0, #0x0
	bl	PutWindowTilemap
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	add	sp, sp, #0xc
	pop	{r4}
	pop	{r0}
	bx	r0
.L886:
	.align	2, 0
.L885:
	.word	sMessages
.Lfe55:
	.size	 PrintTradeMessage,.Lfe55-PrintTradeMessage
	.align	2, 0
	.type	 LoadUISpriteGfx,function
	.thumb_func
LoadUISpriteGfx:
	push	{r4, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L914
	ldr	r1, [r0]
	add	r3, r1, #0
	add	r3, r3, #0xa8
	ldrb	r1, [r3]
	add	r4, r0, #0
	cmp	r1, #0xd
	bhi	.L888	@cond_branch
	ldr	r1, .L914+0x4
	ldrb	r0, [r3]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [sp]
	ldr	r0, .L914+0x8
	ldr	r2, [sp, #0x4]
	and	r2, r2, r0
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	orr	r2, r2, r0
	str	r2, [sp, #0x4]
	ldrb	r1, [r3]
	add	r1, r1, #0xc8
	lsl	r1, r1, #0x10
	ldr	r0, .L914+0xc
	and	r0, r0, r2
	orr	r0, r0, r1
	str	r0, [sp, #0x4]
.L888:
	ldr	r0, [r4]
	add	r0, r0, #0xa8
	ldrb	r0, [r0]
	cmp	r0, #0x11
	bhi	.L889	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L914+0x10
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L915:
	.align	2, 0
.L914:
	.word	sTradeMenu
	.word	sMenuTextTileBuffers
	.word	-0x10000
	.word	0xffff
	.word	.L908
	.align	2, 0
	.align	2, 0
.L908:
	.word	.L897
	.word	.L897
	.word	.L897
	.word	.L897
	.word	.L897
	.word	.L897
	.word	.L897
	.word	.L897
	.word	.L898
	.word	.L903
	.word	.L903
	.word	.L903
	.word	.L903
	.word	.L903
	.word	.L904
	.word	.L905
	.word	.L906
	.word	.L907
.L897:
	mov	r0, sp
	b	.L911
.L898:
	mov	r0, sp
	bl	LoadSpriteSheet
	ldr	r1, .L916
	ldr	r1, [r1]
	add	r2, r1, #0
	add	r2, r2, #0x72
	strh	r0, [r2]
	b	.L912
.L917:
	.align	2, 0
.L916:
	.word	sTradeMenu
.L903:
	mov	r0, sp
	b	.L911
.L904:
	ldr	r0, .L918
	bl	LoadSpritePalette
	b	.L913
.L919:
	.align	2, 0
.L918:
	.word	sSpritePalette_MenuText
.L905:
	ldr	r0, .L920
	bl	LoadSpritePalette
	b	.L913
.L921:
	.align	2, 0
.L920:
	.word	sCursor_SpritePalette
.L906:
	ldr	r0, .L922
.L911:
	bl	LoadSpriteSheet
.L913:
	ldr	r0, .L922+0x4
	ldr	r1, [r0]
.L912:
	add	r1, r1, #0xa8
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L889
.L923:
	.align	2, 0
.L922:
	.word	sCursor_SpriteSheet
	.word	sTradeMenu
.L907:
	ldr	r0, [r4]
	add	r0, r0, #0xa8
	mov	r1, #0x0
	strb	r1, [r0]
	mov	r0, #0x1
	b	.L910
.L889:
	mov	r0, #0x0
.L910:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe56:
	.size	 LoadUISpriteGfx,.Lfe56-LoadUISpriteGfx
	.align	2, 0
	.type	 DrawBottomRowText,function
	.thumb_func
DrawBottomRowText:
	push	{lr}
	add	sp, sp, #-0x8
	ldr	r2, .L925
	str	r2, [sp]
	mov	r2, #0x6
	str	r2, [sp, #0x4]
	mov	r2, #0x0
	mov	r3, #0x0
	bl	DrawTextWindowAndBufferTiles
	add	sp, sp, #0x8
	pop	{r0}
	bx	r0
.L926:
	.align	2, 0
.L925:
	.word	gDecompressionBuffer
.Lfe57:
	.size	 DrawBottomRowText,.Lfe57-DrawBottomRowText
	.align	2, 0
	.type	 ComputePartyTradeableFlags,function
	.thumb_func
ComputePartyTradeableFlags:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	cmp	r0, #0
	beq	.L929	@cond_branch
	cmp	r0, #0x1
	beq	.L939	@cond_branch
	b	.L928
.L929:
	mov	r7, #0x0
	ldr	r1, .L953
	ldr	r0, [r1]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r7, r0
	blt	.LCB7938
	b	.L928	@long jump
.LCB7938:
	add	r6, r1, #0
	mov	r5, #0x0
	mov	r9, r5
.L933:
	mov	r0, #0x64
	mov	r1, r7
	mul	r1, r1, r0
	ldr	r0, .L953+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	add	r1, r0, #0
	cmp	r1, #0x1
	bne	.L934	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x45
	add	r0, r0, r5
	mov	r2, r9
	strb	r2, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x51
	add	r0, r0, r5
	b	.L951
.L954:
	.align	2, 0
.L953:
	.word	sTradeMenu
	.word	gPlayerParty
.L934:
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L936	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x45
	add	r0, r0, r5
	strb	r1, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x51
	add	r0, r0, r5
	b	.L951
.L936:
	ldr	r0, [r6]
	add	r0, r0, #0x45
	add	r0, r0, r5
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x51
	add	r0, r0, r5
	mov	r1, r9
.L951:
	strb	r1, [r0]
	ldr	r0, .L955
	add	r5, r5, #0x1
	add	r7, r7, #0x1
	ldr	r0, [r0]
	add	r0, r0, #0x36
	add	r0, r0, r8
	ldrb	r0, [r0]
	cmp	r7, r0
	blt	.L933	@cond_branch
	b	.L928
.L956:
	.align	2, 0
.L955:
	.word	sTradeMenu
.L939:
	mov	r7, #0x0
	ldr	r1, .L957
	ldr	r0, [r1]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r7, r0
	bge	.L928	@cond_branch
	add	r6, r1, #0
	mov	r5, #0x6
	mov	r2, #0x0
	mov	r9, r2
.L943:
	mov	r0, #0x64
	mov	r1, r7
	mul	r1, r1, r0
	ldr	r0, .L957+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x2d
	bl	GetMonData
	add	r1, r0, #0
	cmp	r1, #0x1
	bne	.L944	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x45
	add	r0, r0, r5
	mov	r2, r9
	strb	r2, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x51
	add	r0, r0, r5
	b	.L952
.L958:
	.align	2, 0
.L957:
	.word	sTradeMenu
	.word	gEnemyParty
.L944:
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L946	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0x45
	add	r0, r0, r5
	strb	r1, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x51
	add	r0, r0, r5
	b	.L952
.L946:
	ldr	r0, [r6]
	add	r0, r0, #0x45
	add	r0, r0, r5
	mov	r1, #0x1
	strb	r1, [r0]
	ldr	r0, [r6]
	add	r0, r0, #0x51
	add	r0, r0, r5
	mov	r1, r9
.L952:
	strb	r1, [r0]
	ldr	r0, .L959
	add	r5, r5, #0x1
	add	r7, r7, #0x1
	ldr	r0, [r0]
	add	r0, r0, #0x36
	add	r0, r0, r8
	ldrb	r0, [r0]
	cmp	r7, r0
	blt	.L943	@cond_branch
.L928:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L960:
	.align	2, 0
.L959:
	.word	sTradeMenu
.Lfe58:
	.size	 ComputePartyTradeableFlags,.Lfe58-ComputePartyTradeableFlags
	.align	2, 0
	.type	 ComputePartyHPBarLevels,function
	.thumb_func
ComputePartyHPBarLevels:
	push	{r4, r5, r6, r7, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L963	@cond_branch
	cmp	r0, #0x1
	beq	.L969	@cond_branch
	b	.L962
.L963:
	mov	r6, #0x0
	ldr	r1, .L977
	ldr	r0, [r1]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r6, r0
	bcs	.L962	@cond_branch
	add	r7, r1, #0
.L967:
	mov	r0, #0x64
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, .L977+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x3a
	bl	GetMonData
	add	r1, r0, #0
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	GetHPBarLevel
	ldr	r1, [r7]
	add	r1, r1, #0x5d
	add	r1, r1, r6
	strb	r0, [r1]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, [r7]
	add	r0, r0, #0x36
	ldrb	r0, [r0]
	cmp	r6, r0
	bcc	.L967	@cond_branch
	b	.L962
.L978:
	.align	2, 0
.L977:
	.word	sTradeMenu
	.word	gPlayerParty
.L969:
	mov	r6, #0x0
	ldr	r1, .L979
	ldr	r0, [r1]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r6, r0
	bcs	.L962	@cond_branch
	add	r7, r1, #0
.L973:
	mov	r0, #0x64
	mov	r4, r6
	mul	r4, r4, r0
	ldr	r0, .L979+0x4
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x39
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	add	r0, r4, #0
	mov	r1, #0x3a
	bl	GetMonData
	add	r1, r0, #0
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	bl	GetHPBarLevel
	ldr	r1, [r7]
	add	r1, r1, #0x63
	add	r1, r1, r6
	strb	r0, [r1]
	add	r0, r6, #0x1
	lsl	r0, r0, #0x10
	lsr	r6, r0, #0x10
	ldr	r0, [r7]
	add	r0, r0, #0x37
	ldrb	r0, [r0]
	cmp	r6, r0
	bcc	.L973	@cond_branch
.L962:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L980:
	.align	2, 0
.L979:
	.word	sTradeMenu
	.word	gEnemyParty
.Lfe59:
	.size	 ComputePartyHPBarLevels,.Lfe59-ComputePartyHPBarLevels
	.align	2, 0
	.type	 SetTradePartyHPBarSprites,function
	.thumb_func
SetTradePartyHPBarSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r5, #0x0
.L985:
	mov	r4, #0x0
	ldr	r2, .L992
	ldr	r0, [r2]
	add	r0, r0, #0x36
	add	r0, r0, r5
	add	r1, r5, #0x1
	mov	r8, r1
	ldrb	r0, [r0]
	cmp	r4, r0
	bge	.L984	@cond_branch
	add	r6, r2, #0
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	lsl	r7, r0, #0x1
.L989:
	ldr	r2, [r6]
	add	r3, r4, r7
	add	r0, r2, #0
	add	r0, r0, #0x28
	add	r0, r0, r3
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L992+0x4
	add	r0, r0, r1
	add	r2, r2, #0x5d
	add	r2, r2, r3
	ldrb	r2, [r2]
	mov	r1, #0x4
	sub	r1, r1, r2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	bl	SetPartyHPBarSprite
	add	r4, r4, #0x1
	ldr	r0, [r6]
	add	r0, r0, #0x36
	add	r0, r0, r5
	ldrb	r0, [r0]
	cmp	r4, r0
	blt	.L989	@cond_branch
.L984:
	mov	r5, r8
	cmp	r5, #0x1
	ble	.L985	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L993:
	.align	2, 0
.L992:
	.word	sTradeMenu
	.word	gSprites
.Lfe60:
	.size	 SetTradePartyHPBarSprites,.Lfe60-SetTradePartyHPBarSprites
	.align	2, 0
	.type	 SaveTradeGiftRibbons,function
	.thumb_func
SaveTradeGiftRibbons:
	push	{r4, r5, lr}
	mov	r2, #0x0
	ldr	r5, .L1001
	ldr	r4, .L1001+0x4
	ldr	r3, .L1001+0x8
.L998:
	ldr	r0, [r5]
	add	r0, r0, r4
	add	r1, r0, r2
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L997	@cond_branch
	ldr	r0, [r3]
	add	r0, r0, #0xa9
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L997	@cond_branch
	strb	r0, [r1]
.L997:
	add	r2, r2, #0x1
	cmp	r2, #0xa
	ble	.L998	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1002:
	.align	2, 0
.L1001:
	.word	gSaveBlock1Ptr
	.word	0x30b0
	.word	sTradeMenu
.Lfe61:
	.size	 SaveTradeGiftRibbons,.Lfe61-SaveTradeGiftRibbons
	.align	2, 0
	.type	 CanTradeSelectedMon,function
	.thumb_func
CanTradeSelectedMon:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x30
	mov	r8, r0
	add	r7, r1, #0
	mov	r9, r2
	mov	r5, #0x0
	cmp	r5, r7
	bge	.L1005	@cond_branch
	mov	r6, sp
.L1007:
	mov	r0, #0x64
	mov	r4, r5
	mul	r4, r4, r0
	add	r4, r4, r8
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	str	r0, [r6, #0x18]
	add	r0, r4, #0
	mov	r1, #0xb
	bl	GetMonData
	stmia	r6!, {r0}
	add	r5, r5, #0x1
	cmp	r5, r7
	blt	.L1007	@cond_branch
.L1005:
	bl	IsNationalPokedexEnabled
	mov	r1, r9
	lsl	r4, r1, #0x2
	cmp	r0, #0
	bne	.L1009	@cond_branch
	add	r0, sp, #0x18
	add	r0, r0, r4
	ldr	r0, [r0]
	cmp	r0, #0x97
	ble	.L1010	@cond_branch
	mov	r0, #0x2
	b	.L1033
.L1010:
	cmp	r0, #0
	bne	.L1009	@cond_branch
	mov	r0, #0x3
	b	.L1033
.L1009:
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L1035
	add	r1, r1, r0
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L1012	@cond_branch
	ldrb	r1, [r1, #0x12]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1012	@cond_branch
	add	r0, sp, #0x18
	add	r0, r0, r4
	ldr	r1, [r0]
	ldr	r0, .L1035+0x4
	cmp	r1, r0
	bne	.L1014	@cond_branch
	mov	r0, #0x5
	b	.L1033
.L1036:
	.align	2, 0
.L1035:
	.word	gLinkPlayers
	.word	0x19d
.L1014:
	cmp	r1, #0x97
	bgt	.L1034	@cond_branch
.L1012:
	mov	r1, sp
	add	r0, r1, r4
	ldr	r1, [r0]
	mov	r0, #0xcd
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L1017	@cond_branch
	cmp	r1, #0x97
	bne	.L1016	@cond_branch
.L1017:
	mov	r0, #0x64
	mov	r1, r9
	mul	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, r8
	mov	r1, #0x50
	bl	GetMonData
	cmp	r0, #0
	bne	.L1016	@cond_branch
.L1034:
	mov	r0, #0x4
	b	.L1033
.L1016:
	cmp	r7, #0
	ble	.L1020	@cond_branch
	ldr	r3, .L1037
	mov	r2, #0x0
	add	r1, sp, #0x18
	add	r5, r7, #0
.L1022:
	ldr	r0, [r1]
	cmp	r0, r3
	bne	.L1021	@cond_branch
	str	r2, [r1]
.L1021:
	add	r1, r1, #0x4
	sub	r5, r5, #0x1
	cmp	r5, #0
	bne	.L1022	@cond_branch
.L1020:
	mov	r2, #0x0
	mov	r5, #0x0
	cmp	r2, r7
	bge	.L1026	@cond_branch
	add	r1, sp, #0x18
.L1028:
	cmp	r5, r9
	beq	.L1027	@cond_branch
	ldr	r0, [r1]
	add	r2, r2, r0
.L1027:
	add	r1, r1, #0x4
	add	r5, r5, #0x1
	cmp	r5, r7
	blt	.L1028	@cond_branch
.L1026:
	cmp	r2, #0
	bne	.L1031	@cond_branch
	mov	r0, #0x1
	b	.L1033
.L1038:
	.align	2, 0
.L1037:
	.word	0x19d
.L1031:
	mov	r0, #0x0
.L1033:
	add	sp, sp, #0x30
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe62:
	.size	 CanTradeSelectedMon,.Lfe62-CanTradeSelectedMon
	.align	2, 0
	.globl	GetGameProgressForLinkTrade
	.type	 GetGameProgressForLinkTrade,function
	.thumb_func
GetGameProgressForLinkTrade:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L1052
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1040	@cond_branch
	bl	GetMultiplayerId
	ldr	r6, .L1052+0x4
	mov	r7, #0x1
	eor	r0, r0, r7
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r1, [r1]
	sub	r0, r1, #0x4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L1040	@cond_branch
	sub	r0, r1, #0x1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r4, #0x2
	cmp	r0, #0x1
	bhi	.L1043	@cond_branch
	mov	r4, #0x1
.L1043:
	cmp	r4, #0
	ble	.L1040	@cond_branch
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r1, [r1, #0x12]
	mov	r5, #0xf0
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1046	@cond_branch
	cmp	r4, #0x2
	bne	.L1040	@cond_branch
	bl	GetMultiplayerId
	eor	r0, r0, r7
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r6
	ldrb	r1, [r1, #0x12]
	add	r0, r5, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1040	@cond_branch
	mov	r0, #0x2
	b	.L1051
.L1053:
	.align	2, 0
.L1052:
	.word	gReceivedRemoteLinkPlayers
	.word	gLinkPlayers
.L1046:
	mov	r0, #0x1
	b	.L1051
.L1040:
	mov	r0, #0x0
.L1051:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe63:
	.size	 GetGameProgressForLinkTrade,.Lfe63-GetGameProgressForLinkTrade
	.align	2, 0
	.type	 IsDeoxysOrMewUntradable,function
	.thumb_func
IsDeoxysOrMewUntradable:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0xcd
	lsl	r0, r0, #0x1
	cmp	r2, r0
	beq	.L1056	@cond_branch
	cmp	r2, #0x97
	bne	.L1055	@cond_branch
.L1056:
	cmp	r1, #0
	bne	.L1055	@cond_branch
	mov	r0, #0x1
	b	.L1058
.L1055:
	mov	r0, #0x0
.L1058:
	pop	{r1}
	bx	r1
.Lfe64:
	.size	 IsDeoxysOrMewUntradable,.Lfe64-IsDeoxysOrMewUntradable
	.align	2, 0
	.globl	GetUnionRoomTradeMessageId
	.type	 GetUnionRoomTradeMessageId,function
	.thumb_func
GetUnionRoomTradeMessageId:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	ldr	r4, [sp, #0x24]
	ldr	r5, [sp, #0x28]
	ldr	r6, [sp, #0x2c]
	lsl	r2, r2, #0x10
	lsr	r7, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r8, r4
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	lsl	r2, r0, #0x17
	lsr	r2, r2, #0x1f
	mov	r9, r2
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x1f
	lsl	r0, r1, #0x17
	lsr	r0, r0, #0x1f
	mov	sl, r0
	lsl	r0, r1, #0x18
	lsr	r0, r0, #0x1f
	lsl	r1, r1, #0x12
	lsr	r1, r1, #0x1c
	sub	r1, r1, #0x4
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r2, #0x1
	cmp	r1, #0x1
	bhi	.L1060	@cond_branch
	mov	r2, #0x0
.L1060:
	cmp	r2, #0
	beq	.L1062	@cond_branch
	cmp	r4, #0
	bne	.L1063	@cond_branch
	mov	r0, #0x8
	b	.L1077
.L1063:
	cmp	r0, #0
	bne	.L1062	@cond_branch
	mov	r0, #0x9
	b	.L1077
.L1062:
	add	r0, r5, #0
	add	r1, r6, #0
	str	r3, [sp]
	bl	IsDeoxysOrMewUntradable
	ldr	r3, [sp]
	cmp	r0, #0
	bne	.L1078	@cond_branch
	ldr	r0, .L1079
	cmp	r3, r0
	bne	.L1067	@cond_branch
	cmp	r7, r3
	beq	.L1069	@cond_branch
	mov	r0, #0x2
	b	.L1077
.L1080:
	.align	2, 0
.L1079:
	.word	0x19d
.L1067:
	ldr	r0, .L1081
	lsl	r1, r7, #0x3
	sub	r1, r1, r7
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldrb	r0, [r1, #0x6]
	cmp	r0, r8
	beq	.L1069	@cond_branch
	ldrb	r0, [r1, #0x7]
	cmp	r0, r8
	beq	.L1069	@cond_branch
	mov	r0, #0x1
	b	.L1077
.L1082:
	.align	2, 0
.L1081:
	.word	gSpeciesInfo
.L1069:
	ldr	r0, .L1083
	cmp	r7, r0
	bne	.L1071	@cond_branch
	cmp	r7, r3
	beq	.L1071	@cond_branch
	mov	r0, #0x3
	b	.L1077
.L1084:
	.align	2, 0
.L1083:
	.word	0x19d
.L1071:
	mov	r0, r9
	cmp	r0, #0
	bne	.L1072	@cond_branch
	ldr	r0, .L1085
	cmp	r7, r0
	bne	.L1073	@cond_branch
	mov	r0, #0x6
	b	.L1077
.L1086:
	.align	2, 0
.L1085:
	.word	0x19d
.L1073:
	cmp	r7, #0x97
	bls	.L1074	@cond_branch
.L1078:
	mov	r0, #0x4
	b	.L1077
.L1074:
	cmp	r3, #0x97
	bls	.L1072	@cond_branch
	mov	r0, #0x5
	b	.L1077
.L1072:
	mov	r0, sl
	cmp	r0, #0
	bne	.L1076	@cond_branch
	cmp	r7, #0x97
	bls	.L1076	@cond_branch
	mov	r0, #0x7
	b	.L1077
.L1076:
	mov	r0, #0x0
.L1077:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe65:
	.size	 GetUnionRoomTradeMessageId,.Lfe65-GetUnionRoomTradeMessageId
	.align	2, 0
	.globl	CanRegisterMonForTradingBoard
	.type	 CanRegisterMonForTradingBoard,function
	.thumb_func
CanRegisterMonForTradingBoard:
	push	{r4, r5, r6, lr}
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	add	r6, r5, #0
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r0, r0, #0x17
	lsr	r4, r0, #0x1f
	add	r0, r2, #0
	add	r1, r3, #0
	bl	IsDeoxysOrMewUntradable
	cmp	r0, #0
	bne	.L1093	@cond_branch
	cmp	r4, #0
	bne	.L1091	@cond_branch
	ldr	r0, .L1094
	cmp	r5, r0
	bne	.L1090	@cond_branch
	mov	r0, #0x2
	b	.L1092
.L1095:
	.align	2, 0
.L1094:
	.word	0x19d
.L1090:
	cmp	r6, #0x97
	bls	.L1091	@cond_branch
	cmp	r6, r0
	beq	.L1091	@cond_branch
.L1093:
	mov	r0, #0x1
	b	.L1092
.L1091:
	mov	r0, #0x0
.L1092:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe66:
	.size	 CanRegisterMonForTradingBoard,.Lfe66-CanRegisterMonForTradingBoard
.text
	.align	2, 0 @ Don't pad with nop

