@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.globl	gTrainerCards
	.section ewram_data,"aw"
	.align	2, 0
	.type	 gTrainerCards,object
	.size	 gTrainerCards,384
gTrainerCards:
	.byte	0x0
	.space	55
	.space	40
	.space	288
	.align	2, 0
	.type	 sTrainerCardDataPtr,object
	.size	 sTrainerCardDataPtr,4
sTrainerCardDataPtr:
	.word	0x0
	.section .rodata
	.align	2, 0
	.type	 sTrainerCardStickers_Gfx,object
sTrainerCardStickers_Gfx:
	.word	0x20010
	.word	0x10000000
	.word	0x31100011
	.word	0x31000033
	.word	0x33102222
	.word	0x10001122
	.word	0x31211233
	.word	0x10121233
	.word	0x223331
	.word	0x11211203
	.word	0x1
	.word	0x33333
	.word	0x33002222
	.word	0x33221100
	.word	0x211204
	.word	0x22210333
	.word	0x21214333
	.word	0x433320
	.word	0x3331430b
	.word	0x31001123
	.word	0x33223233
	.word	0x2332223
	.word	0x32222230
	.word	0x28003330
	.word	0x33320034
	.word	0x33334000
	.word	0x40000000
	.word	0x33321144
	.word	0x232243
	.word	0x22334333
	.word	0x22234332
	.word	0x42220
	.word	0x2333041e
	.word	0x33000043
	.word	0x44000443
	.word	-0x55fffffc
	.word	0x337f70
	.word	-0x7cefdc81
	.word	0x220a0022
	.word	0x2c003178
	.word	0x7f600310
	.word	0x32224e00
	.word	0x45633
	.word	0x3000387
	.word	0x206a0043
	.word	0x13403103
	.word	0x2123a700
	.word	0x12233121
	.word	0x7b002260
	.word	0x22230300
	.word	0x40333400
	.word	0x217f5022
	.word	0x12433122
	.word	0x2b00ba12
	.word	0x2f1021
	.word	0x3343103f
	.word	0x16007ff0
	.word	0x332331
	.word	-0x7cefcd81
	.word	-0x15eef5ff
	.word	0x7214f00
	.word	0x337f50
	.word	0x3b1023d2
	.word	0x3330432
	.word	0x222211
	.word	-0x3bccd05
	.word	0x27210711
	.word	0x33002b10
	.word	0x3007b10
	.word	0x34330032
	.word	0x31ff6023
	.word	0x10433227
	.word	-0x6984efcd
	.word	0x32334310
	.word	-0x6fcc8100
	.word	0x312b007f
	.word	0x7f003372
	.word	-0x8df7cff
	.word	0x3203332
	.word	0x5c01f133
	.word	-0xef80b0
	.word	0x3222bf10
	.word	0x7b620003
	.word	0x20031043
	.word	0x502300ff
	.word	0x24003003
	.word	0x23590300
	.word	0x5023ff00
	.word	0x322b117f
	.word	-0x47fccfcd
	.word	0x41e00
	.word	0x70030007
	.word	0x7f
	.size	 sTrainerCardStickers_Gfx,372
	.align	2, 0
	.type	 sHoennTrainerCardFront_Tilemap,object
sHoennTrainerCardFront_Tilemap:
	.word	0x4b010
	.word	0x39000003
	.word	-0xff7f400
	.word	-0x7ffe0fff
	.word	0x43901b0
	.word	0x380000
	.word	0x37003836
	.word	0x1f001f0
	.word	0x43601c0
	.word	0x2040038
	.word	-0x74ffec00
	.word	0x8004
	.word	0x820081
	.word	0x840083
	.word	-0x79ff7b00
	.word	-0x77ff7900
	.word	0x890000
	.word	0x8b008a
	.word	0x1008304
	.word	0x1b001a
	.word	-0x6ff6dfdc
	.word	0x4141001
	.word	-0x64c4dffe
	.word	0x9004
	.word	0x920091
	.word	0x940093
	.word	-0x69ff6b00
	.word	-0x67ff6900
	.word	0x990400
	.word	0x209b009a
	.word	0x18002a25
	.word	-0xfcbffd5
	.word	0xd3b203b
	.word	-0xf17d300
	.word	-0x3ffe0fff
	.word	0x3b200d01
	.word	0x250013
	.word	0x21002000
	.word	0x1002200
	.word	-0x7ffe0f40
	.word	0xf000e01
	.word	0x28040f00
	.word	0xd30040e
	.word	0x353b4013
	.word	0xc3000
	.word	-0xfcdffcf
	.word	0x1c01602f
	.word	0x601d4600
	.word	0x1c041dad
	.word	0x3b503f00
	.word	0x11003a01
	.word	0x12001f0
	.word	0x2c3b50
	.word	0x2e33
	.word	0x42f002f
	.word	0x2004042e
	.word	0x3b802c00
	.word	0x400025
	.word	0x42000241
	.word	0x44004300
	.word	-0x5fdc9040
	.word	0x3c0740
	.word	0x3f003e3b
	.word	0x4283f00
	.word	0x3c3b003e
	.word	0x353b80
	.word	0x51000050
	.word	0x53005200
	.word	-0x3f5fac00
	.word	0x740333b
	.word	0x84c084c
	.word	0x10084a4e
	.word	0xc4eb1
	.word	0x77900c0b
	.word	0x61000060
	.word	0x63006200
	.word	0x86400
	.word	-0x7f99ff9b
	.word	0x4600453b
	.word	0x7730c0
	.word	0x3f083e37
	.word	0x300c3f08
	.word	0x77000c3e
	.word	0x353b80
	.word	0x71000070
	.word	0x73007200
	.word	0x11007400
	.word	-0x7f89ff8b
	.word	0x5600553b
	.word	0x80ef30
	.word	0x2f082e3b
	.word	0x2e0c2f08
	.word	0x2c3b00a0
	.word	0x4777a0
	.word	0x3670048
	.word	0x1e006800
	.word	0x65f11f00
	.word	0x8326711
	.word	0x21b1201d
	.word	-0x5fe3f399
	.word	0x5777
	.word	0x770058
	.word	0x303a0078
	.word	0x39f03b00
	.word	0xf08df51
	.word	0xc340f08
	.word	0x7137000e
	.word	0x4b0014df
	.word	0x7000006
	.word	0x9000800
	.word	0x78000a00
	.word	-0xf821df5
	.word	0x10cf9201
	.word	0x1504150b
	.word	-0xffa0f0e
	.word	-0x5ffa9ffb
	.word	0x20160c3b
	.word	0x20aa1705
	.word	0x5201805
	.word	0x26052019
	.word	-0x57d8fae0
	.word	0x20280520
	.word	0x3b402905
	.word	0x38360838
	.word	0x1f03708
	.word	0x1c001f0
	.word	0x47380c36
	.word	0x837040c
	.word	0x1f0000c
	.word	0x1b001f0
	.word	0x3900397c
	.word	0x1f001f0
	.word	0x13001f0
	.size	 sHoennTrainerCardFront_Tilemap,532
	.align	2, 0
	.type	 sKantoTrainerCardFront_Tilemap,object
sKantoTrainerCardFront_Tilemap:
	.word	0x4b010
	.word	0x5000007
	.word	0x1f00600
	.word	0x1c001f0
	.word	0x40500
	.word	0x15001400
	.word	-0xfe99000
	.word	-0x3ffe0fff
	.word	0x14041501
	.word	0x240004
	.word	0x380025
	.word	0x3a000039
	.word	0x3c003b00
	.word	0x3d00
	.word	0x3f003e
	.word	0x590058
	.word	0x5b005a04
	.word	0x1202600
	.word	-0x59beff5b
	.word	0xa701e0
	.word	0x20240425
	.word	0x48003b
	.word	0x4a0049
	.word	0x4c00004b
	.word	0x4e004d00
	.word	0x1004f00
	.word	0x690068
	.word	0x406b006a
	.word	0xb5143b
	.word	-0x48fe1f4a
	.word	0x213b20
	.word	0x900081c
	.word	0x1f001f0
	.word	0x40801c0
	.word	0x3b002141
	.word	0x70022
	.word	-0x3ffe0fdd
	.word	0x12001f0
	.word	0x310030
	.word	0x33080032
	.word	0x30006600
	.word	0x2900233b
	.word	-0x5ffe0f20
	.word	0x35373001
	.word	0x37003600
	.word	0x2064003c
	.word	-0xfc48fff
	.word	0x4001f001
	.word	0x40416c00
	.word	0x173b9037
	.word	0x1e029f0
	.word	0x436c0042
	.word	0x3b703980
	.word	-0x1fd40fd9
	.word	0x40004401
	.word	0x46354045
	.word	0x50004700
	.word	-0xfae8f00
	.word	0x2001f077
	.word	0x53005201
	.word	0x54173940
	.word	0x11205500
	.word	-0xf880f5c
	.word	0x44012001
	.word	0x57394056
	.word	0xd006000
	.word	0x621d0061
	.word	0x77f06700
	.word	0x12001f0
	.word	0x413b40a0
	.word	-0x5df4ff5f
	.word	0x6500a300
	.word	-0xf2ac4a0
	.word	-0x4ffe2f89
	.word	0xb13b40
	.word	0x3900b20b
	.word	-0xfc48f0c
	.word	0x7001f02b
	.word	0x3b60b301
	.word	0x1f000024
	.word	0x5d005c00
	.word	0x5e00
	.word	0x6c005f
	.word	0x6e006d
	.word	0x2f006f1a
	.word	0x1e001f0
	.word	0xd0b231f
	.word	0xe0021
	.word	0x2a002a01
	.word	-0x2dfa0ffc
	.word	0x55005f0
	.word	0x83b300d
	.word	0x2a01000e
	.word	0xa0815
	.word	0x201a0510
	.word	0x5200b05
	.word	0x5201b55
	.word	0xc05202b
	.word	0x201c0520
	.word	0x2c4005
	.word	0x240c0d05
	.word	0x1c081404
	.word	-0xff0ff81
	.word	-0x3ffe0fff
	.word	0x27047f01
	.word	0x73040c14
	.word	0x1f00608
	.word	0x1b001f0
	.word	0xc050c00
	.word	0x400
	.size	 sKantoTrainerCardFront_Tilemap,440
	.align	2, 0
	.type	 sHoennTrainerCardBack_Tilemap,object
sHoennTrainerCardBack_Tilemap:
	.word	0x4b010
	.word	0x39000003
	.word	-0xff7f400
	.word	-0x7ffe0fff
	.word	0x43901b0
	.word	0x380000
	.word	0x5b00385c
	.word	0x1f001f0
	.word	0x45c01c0
	.word	0x2040138
	.word	0x5a005900
	.word	-0x3afe0ff8
	.word	0x1b001f0
	.word	0x20020459
	.word	0x1f0693b
	.word	-0x3ffe0f1d
	.word	0x7c3b3001
	.word	0x1f07d00
	.word	-0x3f5ffe10
	.word	0x3b207c01
	.word	0x4f007b
	.word	0x1f0e801
	.word	0x1a001f0
	.word	0x4d3b407b
	.word	-0xf00c300
	.word	-0x5ffe0fff
	.word	-0xfc4afff
	.word	-0xffe0f89
	.word	-0x880f89
	.word	0x1f001f0
	.word	0x1f077f0
	.word	0x77f001f0
	.word	0x1f077f0
	.word	-0xf880f01
	.word	-0xffe0f89
	.word	-0xf880fff
	.word	-0xffe0fff
	.word	0x77f0ff77
	.word	0x77f001f0
	.word	0x1f077f0
	.word	0x77f001f0
	.word	-0xf07fe10
	.word	-0xf880fff
	.word	-0xffe0f89
	.word	0x38040277
	.word	0x79080e
	.word	-0xffe0f86
	.word	0x7901c001
	.word	0xc380411
	.word	0xc083704
	.word	-0x20fe1000
	.word	0x1b001f0
	.word	-0xfc6ffc7
	.word	-0xffe0fff
	.word	0x13001
	.size	 sHoennTrainerCardBack_Tilemap,220
	.align	2, 0
	.type	 sKantoTrainerCardBack_Tilemap,object
sKantoTrainerCardBack_Tilemap:
	.word	0x4b010
	.word	0x2000007
	.word	0x1f00300
	.word	0x1c001f0
	.word	0x40200
	.word	0x75001100
	.word	-0xf899000
	.word	-0x3ffe0fff
	.word	0x11047501
	.word	0x210704
	.word	-0xf79ff7b
	.word	-0x3ffe0fff
	.word	0x4851801
	.word	0x3bf021
	.word	-0x6eff6fff
	.word	0x920000
	.word	0x940093
	.word	-0x69fffc6b
	.word	-0x78ff6900
	.word	0x1700360
	.word	0x773b308e
	.word	0x1f07800
	.word	0x1c001f0
	.word	0x3b208e77
	.word	-0xf7cff7e
	.word	-0x3ffe0fff
	.word	0x40bd8201
	.word	0x1f0883b
	.word	0x1c001f0
	.word	-0xf67c4b0
	.word	0x1f0ff01
	.word	0x77f001c0
	.word	0x1f001f0
	.word	0x1f077f0
	.word	-0xf00fe10
	.word	-0xf880f89
	.word	-0xffe0fff
	.word	-0xffe0f89
	.word	-0x880fff
	.word	0x1f001f0
	.word	0x77f077f0
	.word	0x1f001f0
	.word	-0x60ec4b0
	.word	-0xdfe0f20
	.word	0x723b101b
	.word	0x79008408
	.word	0x7a0001
	.word	0x479047a
	.word	-0xf3df810
	.word	-0x7bf8eff9
	.word	0x100c7200
	.word	0x803b
	.word	0x89008b
	.word	0x1c8a008a
	.word	-0xffb76fc
	.word	0x1007f007
	.word	0x40008b07
	.word	-0x7f88df80
	.word	-0x66ff6500
	.word	0x9a0300
	.word	0x499049a
	.word	0x7f007f0
	.word	-0x64f8ef60
	.word	0x8113b20
	.word	0x710870
	.word	0x7d007c08
	.word	0x7c047d00
	.word	0x7f00470
	.word	0x71007f0
	.word	0xc700c71
	.word	0x40c1127
	.word	-0xffcf78d
	.word	-0x3ffe0fff
	.word	0x24001
	.word	0x39
	.size	 sKantoTrainerCardBack_Tilemap,300
	.align	2, 0
	.type	 sHoennTrainerCardFrontLink_Tilemap,object
sHoennTrainerCardFrontLink_Tilemap:
	.word	0x4b010
	.word	0x39000003
	.word	-0xff7f400
	.word	-0x7ffe0fff
	.word	0x43901b0
	.word	0x380000
	.word	0x37003836
	.word	0x1f001f0
	.word	0x43601c0
	.word	0x2040038
	.word	-0x74ffec00
	.word	0x8004
	.word	0x820081
	.word	0x840083
	.word	-0x79ff7b00
	.word	-0x77ff7900
	.word	0x890000
	.word	0x8b008a
	.word	0x1008304
	.word	0x1b001a
	.word	-0x6ff6dfdc
	.word	0x4141001
	.word	-0x64c4dffe
	.word	0x9004
	.word	0x920091
	.word	0x940093
	.word	-0x69ff6b00
	.word	-0x67ff6900
	.word	0x990400
	.word	0x209b009a
	.word	0x18002a25
	.word	-0xfcbffd5
	.word	0xd3b203b
	.word	-0xf17d300
	.word	-0x3ffe0fff
	.word	0x3b200d01
	.word	0x250013
	.word	0x21002000
	.word	0x1002200
	.word	-0x7ffe0f40
	.word	0xf000e01
	.word	0x28040f00
	.word	0xd30040e
	.word	0x353b4013
	.word	0xc3000
	.word	-0xfcdffcf
	.word	0x1c01602f
	.word	0x601d4600
	.word	0x1c041dad
	.word	0x3b503f00
	.word	0x11003a01
	.word	0x12001f0
	.word	0x2c3b50
	.word	0x2e33
	.word	0x42f002f
	.word	0x2004042e
	.word	0x3b802c00
	.word	0x400025
	.word	0x42000241
	.word	0x44004300
	.word	-0x5fdc9040
	.word	0x3c0740
	.word	0x3f003e3b
	.word	0x4283f00
	.word	0x3c3b003e
	.word	0x353b80
	.word	0x51000050
	.word	0x53005200
	.word	-0x3f5fac00
	.word	0x740333b
	.word	0x84c084c
	.word	0x10084a4e
	.word	0xc4eb1
	.word	0x77900c0b
	.word	0x61000060
	.word	0x63006200
	.word	0x86400
	.word	-0x7f99ff9b
	.word	0x4600453b
	.word	0x7730c0
	.word	0x3f083e37
	.word	0x300c3f08
	.word	0x77000c3e
	.word	0x353b80
	.word	0x71000070
	.word	0x73007200
	.word	0x11007400
	.word	-0x7f89ff8b
	.word	0x5600553b
	.word	0x80ef30
	.word	0x2f082e3b
	.word	0x2e0c2f08
	.word	0x2c3b00a0
	.word	0x4777a0
	.word	0x3670048
	.word	0x1e006800
	.word	0x65f11f00
	.word	0x8326711
	.word	0x21b1201d
	.word	-0x5fe3f399
	.word	0x5777
	.word	0x770058
	.word	0x303a0078
	.word	0x39f03b00
	.word	0xf08df51
	.word	0xc300f08
	.word	0x7137000e
	.word	0x40014df
	.word	0x1f0ff04
	.word	0x1a001f0
	.word	0x1af0cf62
	.word	0x3bf001f0
	.word	-0xf27c410
	.word	0x401f001
	.word	0x3b102f01
	.word	0x38490838
	.word	0x1f04a08
	.word	0x1c001f0
	.word	0x47380c49
	.word	0x837040c
	.word	0x1f0000c
	.word	0x1b001f0
	.word	0x3900397c
	.word	0x1f001f0
	.word	0x13001f0
	.size	 sHoennTrainerCardFrontLink_Tilemap,500
	.align	2, 0
	.type	 sKantoTrainerCardFrontLink_Tilemap,object
sKantoTrainerCardFrontLink_Tilemap:
	.word	0x4b010
	.word	0x5000007
	.word	0x1f00600
	.word	0x1c001f0
	.word	0x40500
	.word	0x15001400
	.word	-0xfe99000
	.word	-0x3ffe0fff
	.word	0x14041501
	.word	0x240004
	.word	0x380025
	.word	0x3a000039
	.word	0x3c003b00
	.word	0x3d00
	.word	0x3f003e
	.word	0x590058
	.word	0x5b005a04
	.word	0x1202600
	.word	-0x59beff5b
	.word	0xa701e0
	.word	0x20240425
	.word	0x48003b
	.word	0x4a0049
	.word	0x4c00004b
	.word	0x4e004d00
	.word	0x1004f00
	.word	0x690068
	.word	0x406b006a
	.word	0xb5143b
	.word	-0x48fe1f4a
	.word	0x213b20
	.word	0x900081c
	.word	0x1f001f0
	.word	0x40801c0
	.word	0x3b002141
	.word	0x70022
	.word	-0x3ffe0fdd
	.word	0x12001f0
	.word	0x310030
	.word	0x33080032
	.word	0x30006600
	.word	0x2900233b
	.word	-0x5ffe0f20
	.word	0x35373001
	.word	0x37003600
	.word	0x2064003c
	.word	-0xfc48fff
	.word	0x4001f001
	.word	0x40416c00
	.word	0x173b9037
	.word	0x1e029f0
	.word	0x436c0042
	.word	0x3b703980
	.word	-0x1fd40fd9
	.word	0x40004401
	.word	0x46354045
	.word	0x50004700
	.word	-0xfae8f00
	.word	0x2001f077
	.word	0x53005201
	.word	0x54173940
	.word	0x11205500
	.word	-0xf880f5c
	.word	0x44012001
	.word	0x57394056
	.word	0xd006000
	.word	0x621d0061
	.word	0x77f06700
	.word	0x12001f0
	.word	0x413b40a0
	.word	-0x5df4ff5f
	.word	0x6500a300
	.word	-0xf2ac4a0
	.word	-0x4ffe2f89
	.word	0xb13b40
	.word	0x3900b20b
	.word	-0xfc48f0c
	.word	0x7001f02b
	.word	0x3b60b301
	.word	-0x57e4ffdc
	.word	0x1f0a900
	.word	0xaa01c0
	.word	-0x40facfff
	.word	0x23a80150
	.word	-0x2fc40ff5
	.word	-0xfc2afc9
	.word	-0x37c40fc5
	.word	0x75d001f0
	.word	0x3b1004a9
	.word	0x36b80811
	.word	0x1f0b900
	.word	0x60ba01a0
	.word	-0x46feaffd
	.word	0x4b80400
	.word	0xc11
	.word	0x3083a02
	.word	0x1f001f0
	.word	0x201c0
	.word	0x39
	.size	 sKantoTrainerCardFrontLink_Tilemap,396
	.align	2, 0
	.type	 sHoennTrainerCardBg_Tilemap,object
sHoennTrainerCardBg_Tilemap:
	.word	0x4b010
	.word	-0xfefedc1
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf07fe10
	.word	-0xffe0fff
	.word	0x7001f001
	.word	0x1
	.size	 sHoennTrainerCardBg_Tilemap,152
	.align	2, 0
	.type	 sKantoTrainerCardBg_Tilemap,object
sKantoTrainerCardBg_Tilemap:
	.word	0x4b010
	.word	-0xfefefc1
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf00fe10
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xfe0fff
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xffe0f01
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	-0xffe0fff
	.word	0x1f0ff01
	.word	0x1f001f0
	.word	0x1f001f0
	.word	0x1f001f0
	.word	-0xf07fe10
	.word	-0xffe0fff
	.word	0x7001f001
	.word	0x1
	.size	 sKantoTrainerCardBg_Tilemap,152
	.align	1, 0
	.type	 sUnused_Pal,object
sUnused_Pal:
	.short	0x7fff
	.short	0x7fff
	.short	0x318c
	.short	0x675a
	.short	0x43c
	.short	0x3aff
	.short	0x664
	.short	0x4bd2
	.short	0x6546
	.short	0x7b14
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sUnused_Pal,32
	.align	1, 0
	.type	 sHoennTrainerCardBronze_Pal,object
sHoennTrainerCardBronze_Pal:
	.short	0x3991
	.short	0x7bfd
	.short	0x73ba
	.short	0x5294
	.short	0x3def
	.short	0x398c
	.short	0x20e5
	.short	0x45a7
	.short	0x6228
	.short	0x6757
	.short	0x52d2
	.short	0x3e4d
	.short	0x2dc8
	.short	0x7eed
	.short	0x6739
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6acd
	.short	0x51e5
	.short	0x0
	.short	0x0
	.short	0x398c
	.short	0x7fff
	.short	0x779c
	.short	0x5294
	.short	0x3def
	.short	0x7fff
	.short	0x779c
	.short	0x5294
	.short	0x3def
	.short	0x7fff
	.short	0x779c
	.short	0x5294
	.short	0x3def
	.short	0x7eed
	.short	0x6739
	.short	0x0
	.size	 sHoennTrainerCardBronze_Pal,96
	.align	1, 0
	.type	 sKantoTrainerCardGreen_Pal,object
sKantoTrainerCardGreen_Pal:
	.short	0x3991
	.short	0x73fb
	.short	0x6fd9
	.short	0x6bb8
	.short	0x6797
	.short	0x4b3e
	.short	0x5294
	.short	0x398c
	.short	0x475e
	.short	0x4b36
	.short	0x56d0
	.short	0x4e6e
	.short	0x3e0a
	.short	0x5fdf
	.short	0x7fff
	.short	0x6333
	.short	0x3991
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0xa57
	.short	0x2b5f
	.short	0x5b2a
	.short	0x52a8
	.short	0x6318
	.short	0x2d6b
	.short	0x0
	.short	0x3d04
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sKantoTrainerCardGreen_Pal,96
	.align	1, 0
	.type	 sHoennTrainerCardCopper_Pal,object
sHoennTrainerCardCopper_Pal:
	.short	0x3991
	.short	0x73df
	.short	0x6b9e
	.short	0x2e79
	.short	0x2216
	.short	0x398c
	.short	0x20e5
	.short	0x45a7
	.short	0x6228
	.short	0x46fc
	.short	0x3a79
	.short	0x2a16
	.short	0x15b3
	.short	0x7eed
	.short	0x6739
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6acd
	.short	0x51e5
	.short	0x0
	.short	0x0
	.short	0x398c
	.short	0x7fff
	.short	0x779c
	.short	0x5294
	.short	0x3def
	.short	0x7fff
	.short	0x779c
	.short	0x5294
	.short	0x3def
	.short	0x7fff
	.short	0x779c
	.short	0x5294
	.short	0x3def
	.short	0x7eed
	.short	0x6739
	.short	0x0
	.size	 sHoennTrainerCardCopper_Pal,96
	.align	1, 0
	.type	 sKantoTrainerCardBronze_Pal,object
sKantoTrainerCardBronze_Pal:
	.short	0x3991
	.short	0x67de
	.short	0x63be
	.short	0x5f9d
	.short	0x4f7c
	.short	0x4b3e
	.short	0x5294
	.short	0x398c
	.short	0x47be
	.short	0x471b
	.short	0x46fa
	.short	0x3ed8
	.short	0x29f4
	.short	0x67ff
	.short	0x7fff
	.short	0x4f3c
	.short	0x3991
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0xa57
	.short	0x2b5f
	.short	0x5b2a
	.short	0x52a8
	.short	0x6318
	.short	0x2d6b
	.short	0x0
	.short	0x3d04
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sKantoTrainerCardBronze_Pal,96
	.align	1, 0
	.type	 sHoennTrainerCardSilver_Pal,object
sHoennTrainerCardSilver_Pal:
	.short	0x3991
	.short	0x7fde
	.short	0x779c
	.short	0x62f7
	.short	0x4e73
	.short	0x15b3
	.short	0x20e5
	.short	0x45a7
	.short	0x6228
	.short	0x779c
	.short	0x62f7
	.short	0x4e73
	.short	0x3def
	.short	0x7eed
	.short	0x6739
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6acd
	.short	0x51e5
	.short	0x0
	.short	0x0
	.short	0x398c
	.short	0x7fff
	.short	0x779c
	.short	0x5294
	.short	0x3def
	.short	0x7fff
	.short	0x779c
	.short	0x5294
	.short	0x3def
	.short	0x7fff
	.short	0x779c
	.short	0x5294
	.short	0x3def
	.short	0x7eed
	.short	0x6739
	.short	0x0
	.size	 sHoennTrainerCardSilver_Pal,96
	.align	1, 0
	.type	 sKantoTrainerCardSilver_Pal,object
sKantoTrainerCardSilver_Pal:
	.short	0x3991
	.short	0x7bdd
	.short	0x7bdd
	.short	0x77bd
	.short	0x739c
	.short	0x4b3e
	.short	0x5294
	.short	0x398c
	.short	0x43bf
	.short	0x5339
	.short	0x6738
	.short	0x56d5
	.short	0x4e30
	.short	0x63de
	.short	0x7fff
	.short	0x6f7a
	.short	0x3991
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0xa57
	.short	0x2b5f
	.short	0x5b2a
	.short	0x52a8
	.short	0x6318
	.short	0x2d6b
	.short	0x0
	.short	0x3d04
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sKantoTrainerCardSilver_Pal,96
	.align	1, 0
	.type	 sHoennTrainerCardGold_Pal,object
sHoennTrainerCardGold_Pal:
	.short	0x3991
	.short	0x6fde
	.short	0x57be
	.short	0x5294
	.short	0x3def
	.short	0x398c
	.short	0x20e5
	.short	0x45a7
	.short	0x6228
	.short	0x479e
	.short	0x1b5c
	.short	0x1f1a
	.short	0x1dd3
	.short	0x7eed
	.short	0x6739
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x6acd
	.short	0x51e5
	.short	0x0
	.short	0x0
	.short	0x398c
	.short	0x7fff
	.short	0x779c
	.short	0x5294
	.short	0x3def
	.short	0x7fff
	.short	0x779c
	.short	0x5294
	.short	0x3def
	.short	0x7fff
	.short	0x779c
	.short	0x5294
	.short	0x3def
	.short	0x7eed
	.short	0x6739
	.short	0x0
	.size	 sHoennTrainerCardGold_Pal,96
	.align	1, 0
	.type	 sKantoTrainerCardGold_Pal,object
sKantoTrainerCardGold_Pal:
	.short	0x3991
	.short	0x73df
	.short	0x6bbe
	.short	0x63de
	.short	0x5bbe
	.short	0x377e
	.short	0x5294
	.short	0x398c
	.short	0x4bff
	.short	0x1b7e
	.short	0x73e
	.short	0x2fd
	.short	0x1e57
	.short	0x63ff
	.short	0x7fff
	.short	0x2b9e
	.short	0x3991
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0xa57
	.short	0x2b5f
	.short	0x5b2a
	.short	0x52a8
	.short	0x6318
	.short	0x2d6b
	.short	0x0
	.short	0x3d04
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sKantoTrainerCardGold_Pal,96
	.align	1, 0
	.type	 sHoennTrainerCardFemaleBg_Pal,object
sHoennTrainerCardFemaleBg_Pal:
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x45fc
	.short	0x38d4
	.short	0x0
	.short	0x0
	.size	 sHoennTrainerCardFemaleBg_Pal,32
	.align	1, 0
	.type	 sKantoTrainerCardFemaleBg_Pal,object
sKantoTrainerCardFemaleBg_Pal:
	.short	0x3991
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0x7c1f
	.short	0xa57
	.short	0x2b5f
	.short	0x2a5c
	.short	0x159a
	.short	0x6318
	.short	0x2d6b
	.size	 sKantoTrainerCardFemaleBg_Pal,32
	.align	1, 0
	.type	 sHoennTrainerCardBadges_Pal,object
sHoennTrainerCardBadges_Pal:
	.short	0x3991
	.short	0x7fff
	.short	0x6b5a
	.short	0x5ad6
	.short	0x3def
	.short	0x1e3f
	.short	0x4fb
	.short	0x7eed
	.short	0x6228
	.short	0x335f
	.short	0x1edd
	.short	0x61f8
	.short	0x4d32
	.short	0x7eed
	.short	0x6739
	.short	0x0
	.size	 sHoennTrainerCardBadges_Pal,32
	.align	1, 0
	.type	 sKantoTrainerCardBadges_Pal,object
sKantoTrainerCardBadges_Pal:
	.short	0x3991
	.short	0x7fff
	.short	0x6b5a
	.short	0x5ad6
	.short	0x3def
	.short	0x1e3f
	.short	0x4fb
	.short	0x7eed
	.short	0x6228
	.short	0x335f
	.short	0x1edd
	.short	0x61f8
	.short	0x4d32
	.short	0x7eed
	.short	0x6739
	.short	0x0
	.size	 sKantoTrainerCardBadges_Pal,32
	.align	1, 0
	.type	 sTrainerCardStar_Pal,object
sTrainerCardStar_Pal:
	.short	0x3991
	.short	0x31e
	.short	0x299
	.short	0x31e
	.short	0x31e
	.short	0x31e
	.short	0x31e
	.short	0x31e
	.short	0x0
	.short	0x0
	.short	0xa57
	.short	0x2b5f
	.short	0x0
	.short	0x0
	.short	0xa57
	.short	0x31e
	.size	 sTrainerCardStar_Pal,32
	.align	1, 0
	.type	 sTrainerCardStickerPal1,object
sTrainerCardStickerPal1:
	.short	0x5fdf
	.short	0x7fff
	.short	0x531f
	.short	0x7bdd
	.short	0x737b
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sTrainerCardStickerPal1,32
	.align	1, 0
	.type	 sTrainerCardStickerPal2,object
sTrainerCardStickerPal2:
	.short	0x5fdf
	.short	0x7fff
	.short	0x770c
	.short	0x7bdd
	.short	0x737b
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sTrainerCardStickerPal2,32
	.align	1, 0
	.type	 sTrainerCardStickerPal3,object
sTrainerCardStickerPal3:
	.short	0x5fdf
	.short	0x7fff
	.short	0x279e
	.short	0x7bdd
	.short	0x737b
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sTrainerCardStickerPal3,32
	.align	1, 0
	.type	 sTrainerCardStickerPal4,object
sTrainerCardStickerPal4:
	.short	0x5fdf
	.short	0x7fff
	.short	0x4a0d
	.short	0x7bdd
	.short	0x737b
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.size	 sTrainerCardStickerPal4,32
	.align	2, 0
	.type	 sHoennTrainerCardBadges_Gfx,object
sHoennTrainerCardBadges_Gfx:
	.word	0x40010
	.word	-0x6fffffe0
	.word	0xfff001
	.word	0x34001f00
	.word	0x3411f000
	.word	0x5111f00
	.word	0x4111f034
	.word	0xf152033
	.word	-0xefffd00
	.word	0x11ff0000
	.word	0x43000f
	.word	0x3300f221
	.word	0x330f2224
	.word	-0xdddbcff
	.word	-0xccdbccd
	.word	0x3f003bb0
	.word	0x21f00011
	.word	0x81f0022
	.word	0x23f02222
	.word	0x22210300
	.word	0x1d50ca22
	.word	-0xbffbe00
	.word	0x320300
	.word	-0xcfdddf8
	.word	0x42220fff
	.word	0x22030033
	.word	0x501610e8
	.word	-0xc0ffff
	.word	0x22f03f30
	.word	0x1f000e44
	.word	0x3203342
	.word	0x1c005b30
	.word	0x110f022f
	.word	0x2200f2ff
	.word	-0x73bbc000
	.word	0x24333600
	.word	-0x4ffcdf0d
	.word	-0x56ee0fc1
	.word	0x210300
	.word	0x34302f0b
	.word	0x1710f00f
	.word	-0xff0100
	.word	0x22ff11f2
	.word	0x222200f2
	.word	0x22220f22
	.word	0xd000ff
	.word	-0xdfccffa
	.word	0x11f01d30
	.word	0x1f0c0f11
	.word	0xf32221
	.word	0x320340b6
	.word	0x33f017f3
	.word	-0xc9ffcd
	.word	0x1f04710
	.word	0x1091cf40
	.word	0xfff03e
	.word	-0xeeeee9c
	.word	-0xfe814f0
	.word	-0xcefbbbc
	.word	-0x6ff46fbc
	.word	-0x612efd5
	.word	0x7f307310
	.word	-0x7fdf3500
	.word	0xf117651
	.word	0x10812f00
	.word	0x221ff47f
	.word	0x1f0f42
	.word	0x310d41b
	.word	0xfd930
	.word	0xf00f1a3
	.word	0x4f400f32
	.word	0x24f09f00
	.word	0x2f00f322
	.word	0x100340fd
	.word	0x303d00e7
	.word	0x10fb10f3
	.word	0x77011f03
	.word	-0xffcff71
	.word	0x7b1023ff
	.word	0x7f20ba01
	.word	0x31d87b11
	.word	0x3203307f
	.word	-0x19fea900
	.word	0x1f222f33
	.word	0x1f03334
	.word	0x14f0090
	.word	0x12001fb
	.word	-0xace5f95
	.word	0x33630100
	.word	-0xccebcf1
	.word	0x3343001f
	.word	0x3300fb01
	.word	0x31b23200
	.word	0x2302ef10
	.word	0x2f002242
	.word	0x2f6f0024
	.word	-0x88ff46
	.word	0x4300f311
	.word	0x220130
	.word	0xaf2438
	.word	-0xcfebdfd
	.word	0x603b00f2
	.word	0x51015018
	.word	-0xcee3e19
	.word	-0xd004ef
	.word	0xf2f011
	.word	0x6740f626
	.word	-0xcee18af
	.word	0x1211fb11
	.word	0x117f9025
	.word	0x12ff12c
	.word	0x370122bb
	.word	0x44420300
	.word	0x24221f02
	.word	0x142f0f2
	.word	0x11ffff38
	.word	0x31eb516d
	.word	-0x2fedbf95
	.word	-0xed4cd7f
	.word	0x760120e2
	.word	-0xdc2ed0e
	.word	0xf1f121f
	.word	-0x14eec4de
	.word	-0x8ef0501
	.word	0x1f0c411
	.word	0x3307332
	.word	-0xffcffd1
	.word	0x2fd311b8
	.word	-0x74cffcf0
	.word	0xf3b01
	.word	-0xbddcac1
	.word	0x43000800
	.word	0x2347103f
	.word	0x3f4b3600
	.word	0x24f09350
	.word	0x20f3f311
	.word	-0x1a4cde05
	.word	-0xbeeca00
	.word	-0xee0799f
	.word	0xf21a03
	.word	0x2325987
	.word	0x3702323f
	.word	0x23f0a330
	.word	0x10b82900
	.word	-0x2fee045
	.word	0x1f601ff0
	.size	 sHoennTrainerCardBadges_Gfx,584
	.align	2, 0
	.type	 sKantoTrainerCardBadges_Gfx,object
sKantoTrainerCardBadges_Gfx:
	.word	0x40010
	.word	0x20000020
	.word	0xff01
	.word	0xa11f0
	.word	0x111f00
	.word	0x6001106
	.word	0x11f00c22
	.word	0x3101121
	.word	0x11001c40
	.word	0x3000f50
	.word	0x220300f2
	.word	0x122000f
	.word	0x1100f222
	.word	0x100f3333
	.word	0x3f40a903
	.word	0x1f0300f0
	.word	0x31f00330
	.word	0x1f020330
	.word	0x14f00033
	.word	0x1f4033
	.word	0x102810d9
	.word	0x340f303
	.word	-0xbccc6f0
	.word	0x40801d50
	.word	0x3ffff03f
	.word	-0xdd1000
	.word	-0xd010000
	.word	0x1f31f011
	.word	0x1f6822
	.word	-0xecceffd
	.word	-0xcc80c0
	.word	-0xffdbf1
	.word	0x2f111100
	.word	-0xc7d00
	.word	0x130300b8
	.word	0x3b101e10
	.word	0x33ff3700
	.word	0x144f0000
	.word	0x314f001f
	.word	0x1f0000f3
	.word	-0xb0fbeed
	.word	0x184f1413
	.word	0x50314f14
	.word	-0xec4ef8d
	.word	0xf441
	.word	0xf4133f
	.word	0x1f13114
	.word	0x4f314100
	.word	0xf4130f
	.word	-0x18f7df0
	.word	0x221f000f
	.word	0x120300f1
	.word	0x2221f00e
	.word	0x60035022
	.word	0x2f77001e
	.word	0xf44408
	.word	0x44030042
	.word	0xf694444
	.word	0x3f710350
	.word	0x213b01ff
	.word	0xf60033
	.word	0x432f0044
	.word	0x2431f022
	.word	0x510320d8
	.word	0x400213f
	.word	0x33442e11
	.word	0x220011f3
	.word	0x42030034
	.word	0x3100f43
	.word	0xfb60c0
	.word	-0xf0e0fa2
	.word	0x511f021
	.word	0x21f021ff
	.word	0x427b1021
	.word	0x42408b00
	.word	0xf3b71
	.word	0xf4f0f3
	.word	-0xbd00d00
	.word	-0xbdeee00
	.word	0x32222800
	.word	0x420300
	.word	0xfffff19
	.word	0x3f22f000
	.word	0x44442ff3
	.word	0x443f06f3
	.word	0xfff444
	.word	0x440b0003
	.word	0x44433f01
	.word	0x4ffff024
	.word	0x70bbbf30
	.word	-0x4eefff5c
	.word	0x58110310
	.word	0x41f62011
	.word	0x222f32e7
	.word	0x300af01
	.word	0x3002f00
	.word	-0x48ee1410
	.word	-0x189ed1f0
	.word	0x33f70033
	.word	-0x4ceec800
	.word	0x20bb11e0
	.word	0x31b9211c
	.word	0x431f0044
	.word	0x3001272
	.word	0x7003702
	.word	0x3b0034f0
	.word	0x504465ff
	.word	0xea003f
	.word	0x31300032
	.word	0x326eea00
	.word	0x3f100300
	.word	0x623f00f4
	.word	0xe30138
	.word	0x300ff4b
	.word	0x7f10f2f0
	.word	0x22c721ff
	.word	0x2f00308b
	.word	-0x1cfee1f0
	.word	0x23f322f2
	.word	0x2f330f1b
	.word	-0x4bffe9fe
	.word	0x2c701f3
	.word	0x3f60ff86
	.word	-0x14ee1cef
	.word	-0x4de0cef
	.word	0x43200312
	.word	0xff1302
	.word	0x11e3113f
	.word	0x11f311eb
	.word	0x120312fb
	.word	-0x56ecedf5
	.word	0x12f4320
	.word	0x3003fe3
	.word	0x2b0123f0
	.word	0x3003f4f
	.word	0x561024f0
	.word	-0x14fe68bf
	.word	0x10feef11
	.word	0xbb0103
	.word	0x123b11bb
	.word	0x1bf7034
	.word	0x19f32e7
	.word	0x433fe7
	.word	-0x3f04fefd
	.word	0x11e751ff
	.word	0x4456f3
	.word	0x30133fc
	.word	0x512d1244
	.word	0x22001f3f
	.word	0x4221f044
	.word	0x5d22f044
	.word	0x22370242
	.word	0x73123f00
	.word	0x1243f70
	.word	0x22443ee3
	.word	0x3007f00
	.word	0x6000b10
	.word	0x3e003fa1
	.word	0x730142f0
	.word	0x8027701
	.word	0x190b350
	.word	0xf1f0a12
	.word	-0x25eddf00
	.word	0x21370312
	.word	-0xc0fc4e
	.word	0x14004d13
	.word	0x810f000
	.word	0xff
	.size	 sKantoTrainerCardBadges_Gfx,672
	.align	2, 0
	.type	 sTrainerCardBgTemplates,object
	.size	 sTrainerCardBgTemplates,16
sTrainerCardBgTemplates:
	.byte	0xb0
	.byte	0x25
	.byte	0x0
	.space	1
	.byte	0xd9
	.byte	0x1
	.byte	0x0
	.space	1
	.byte	0xe2
	.byte	0x31
	.byte	0x0
	.space	1
	.byte	0xf3
	.byte	0x11
	.byte	0x30
	.space	1
	.align	2, 0
	.type	 sTrainerCardWindowTemplates,object
	.size	 sTrainerCardWindowTemplates,32
sTrainerCardWindowTemplates:
	.byte	0x1
	.byte	0x2
	.byte	0xf
	.byte	0x1a
	.byte	0x4
	.byte	0xf
	.short	0x241
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1b
	.byte	0x12
	.byte	0xf
	.short	0x1
	.byte	0x3
	.byte	0x13
	.byte	0x5
	.byte	0x9
	.byte	0xa
	.byte	0x8
	.short	0x150
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.align	2, 0
	.type	 sHoennTrainerCardPals,object
sHoennTrainerCardPals:
	.word	gHoennTrainerCardGreen_Pal
	.word	sHoennTrainerCardBronze_Pal
	.word	sHoennTrainerCardCopper_Pal
	.word	sHoennTrainerCardSilver_Pal
	.word	sHoennTrainerCardGold_Pal
	.size	 sHoennTrainerCardPals,20
	.align	2, 0
	.type	 sKantoTrainerCardPals,object
sKantoTrainerCardPals:
	.word	gKantoTrainerCardBlue_Pal
	.word	sKantoTrainerCardGreen_Pal
	.word	sKantoTrainerCardBronze_Pal
	.word	sKantoTrainerCardSilver_Pal
	.word	sKantoTrainerCardGold_Pal
	.size	 sKantoTrainerCardPals,20
	.type	 sTrainerCardTextColors,object
sTrainerCardTextColors:
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.size	 sTrainerCardTextColors,3
	.type	 sTrainerCardStatColors,object
sTrainerCardStatColors:
	.byte	0x0
	.byte	0x4
	.byte	0x5
	.size	 sTrainerCardStatColors,3
	.type	 sTimeColonInvisibleTextColors,object
sTimeColonInvisibleTextColors:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.size	 sTimeColonInvisibleTextColors,3
	.type	 sTrainerCardFontIds,object
sTrainerCardFontIds:
	.byte	0x0
	.byte	0x2
	.byte	0x0
	.size	 sTrainerCardFontIds,3
	.type	 sTrainerPicOffsets,object
	.size	 sTrainerPicOffsets,8
sTrainerPicOffsets:
	.byte	0xd
	.byte	0x4
	.byte	0xd
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.type	 sTrainerPicFacilityClasses,object
sTrainerPicFacilityClasses:
	.byte	0x86
	.byte	0x87
	.byte	0x84
	.byte	0x85
	.size	 sTrainerPicFacilityClasses,4
	.type	 sLinkTrainerPicFacilityClasses,object
	.size	 sLinkTrainerPicFacilityClasses,16
sLinkTrainerPicFacilityClasses:
	.byte	0x74
	.byte	0x6f
	.byte	0x5c
	.byte	0x58
	.byte	0x6a
	.byte	0x59
	.byte	0x6d
	.byte	0x6c
	.byte	0x75
	.byte	0x7d
	.byte	0x5d
	.byte	0x5a
	.byte	0x16
	.byte	0x30
	.byte	0x41
	.byte	0x68
	.align	2, 0
	.type	 sTrainerCardFlipTasks,object
sTrainerCardFlipTasks:
	.word	Task_BeginCardFlip
	.word	Task_AnimateCardFlipDown
	.word	Task_DrawFlippedCardSide
	.word	Task_SetCardFlipped
	.word	Task_AnimateCardFlipUp
	.word	Task_EndCardFlip
	.size	 sTrainerCardFlipTasks,24
	.type	 sTrainerCardFrontNameXPositions,object
sTrainerCardFrontNameXPositions:
	.byte	0x14
	.byte	0x10
	.size	 sTrainerCardFrontNameXPositions,2
	.type	 sTrainerCardFrontNameYPositions,object
sTrainerCardFrontNameYPositions:
	.byte	0x1d
	.byte	0x21
	.size	 sTrainerCardFrontNameYPositions,2
	.type	 sTrainerCardIdXPositions,object
sTrainerCardIdXPositions:
	.byte	0x8e
	.byte	0x80
	.size	 sTrainerCardIdXPositions,2
	.type	 sTrainerCardIdYPositions,object
sTrainerCardIdYPositions:
	.byte	0xa
	.byte	0x9
	.size	 sTrainerCardIdYPositions,2
	.align	2, 0
	.type	 sTimeColonTextColors,object
sTimeColonTextColors:
	.word	sTrainerCardTextColors
	.word	sTimeColonInvisibleTextColors
	.size	 sTimeColonTextColors,8
	.type	 sTrainerCardTimeHoursXPositions,object
sTrainerCardTimeHoursXPositions:
	.byte	0x65
	.byte	0x55
	.size	 sTrainerCardTimeHoursXPositions,2
	.type	 sTrainerCardTimeHoursYPositions,object
sTrainerCardTimeHoursYPositions:
	.byte	0x77
	.byte	0x67
	.size	 sTrainerCardTimeHoursYPositions,2
	.type	 sTrainerCardTimeMinutesXPositions,object
sTrainerCardTimeMinutesXPositions:
	.byte	0x7c
	.byte	0x6c
	.size	 sTrainerCardTimeMinutesXPositions,2
	.type	 sTrainerCardTimeMinutesYPositions,object
sTrainerCardTimeMinutesYPositions:
	.byte	0x58
	.byte	0x59
	.size	 sTrainerCardTimeMinutesYPositions,2
	.type	 sTrainerCardProfilePhraseXPositions,object
sTrainerCardProfilePhraseXPositions:
	.byte	0x73
	.byte	0x69
	.size	 sTrainerCardProfilePhraseXPositions,2
	.type	 sTrainerCardProfilePhraseYPositions,object
sTrainerCardProfilePhraseYPositions:
	.byte	0x82
	.byte	0x78
	.size	 sTrainerCardProfilePhraseYPositions,2
	.type	 sTrainerCardBackNameXPositions,object
sTrainerCardBackNameXPositions:
	.byte	0x8a
	.byte	0xd8
	.size	 sTrainerCardBackNameXPositions,2
	.type	 sTrainerCardBackNameYPositions,object
sTrainerCardBackNameYPositions:
	.byte	0xb
	.byte	0xa
	.size	 sTrainerCardBackNameYPositions,2
	.type	 sTrainerCardHofDebutXPositions,object
sTrainerCardHofDebutXPositions:
	.byte	0xa
	.byte	0x10
	.byte	0x0
	.byte	0x0
	.size	 sTrainerCardHofDebutXPositions,4
	.align	2, 0
	.type	 sLinkTrainerCardRecordStrings,object
sLinkTrainerCardRecordStrings:
	.word	gText_LinkBattles
	.word	gText_LinkCableBattles
	.size	 sLinkTrainerCardRecordStrings,8
	.type	 sPokemonIconPalSlots,object
sPokemonIconPalSlots:
	.byte	0x5
	.byte	0x6
	.byte	0x7
	.byte	0x8
	.byte	0x9
	.byte	0xa
	.size	 sPokemonIconPalSlots,6
	.type	 sPokemonIconXOffsets,object
sPokemonIconXOffsets:
	.byte	0x0
	.byte	0x4
	.byte	0x8
	.byte	0xc
	.byte	0x10
	.byte	0x14
	.size	 sPokemonIconXOffsets,6
	.type	 sStickerPalSlots,object
sStickerPalSlots:
	.byte	0xb
	.byte	0xc
	.byte	0xd
	.byte	0xe
	.size	 sStickerPalSlots,4
	.type	 sStarYOffsets,object
sStarYOffsets:
	.byte	0x7
	.byte	0x6
	.byte	0x0
	.byte	0x0
	.size	 sStarYOffsets,4
	.align	2, 0
	.type	 sLinkPlayerTrainerCardTemplate1,object
	.size	 sLinkPlayerTrainerCardTemplate1,96
sLinkPlayerTrainerCardTemplate1:
	.byte	0x0
	.byte	0x4
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.space	1
	.short	0x3e7
	.short	0x3b
	.short	0x3b
	.short	0xc8
	.short	0x6072
	.short	0x3e7
	.short	0x3b
	.short	0x159f
	.short	0x159f
	.short	0x159f
	.short	0x159f
	.short	0xd903
	.short	0xad9c
	.short	0x8235
	.space	2
	.word	0xf423f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.byte	0x1
	.byte	0x6
	.byte	0x20
	.byte	0x0
	.byte	0x45
	.byte	0x28
	.byte	0x5
	.byte	0xff
	.byte	0x4
	.space	1
	.short	0x0
	.word	0x15b3
	.word	0x2134
	.word	0x1550
	.word	0x189c
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.space	1
	.short	0x6
	.short	0x32
	.short	0x1e
	.short	0x16
	.short	0x2e
	.short	0x50
	.align	2, 0
	.type	 sLinkPlayerTrainerCardTemplate2,object
	.size	 sLinkPlayerTrainerCardTemplate2,96
sLinkPlayerTrainerCardTemplate2:
	.byte	0x1
	.byte	0x2
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.space	1
	.short	0x3e7
	.short	0x3b
	.short	0x3b
	.short	0xc8
	.short	0x6072
	.short	0x3e7
	.short	0x3b
	.short	0x159f
	.short	0x159f
	.short	0xffff
	.short	0xffff
	.short	0xd903
	.short	0xad9c
	.short	0x8235
	.space	2
	.word	0xf423f
	.short	0x0
	.short	0x0
	.short	0x0
	.short	0x0
	.byte	0x29
	.byte	0x47
	.byte	0xb
	.byte	0x1c
	.byte	0x2f
	.byte	0xa
	.byte	0xab
	.byte	0xff
	.byte	0x0
	.space	1
	.short	0x0
	.word	0x22b
	.word	0x1f4
	.word	0x1c8
	.word	0x12c
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.space	1
	.short	0x6
	.short	0x32
	.short	0x1e
	.short	0x16
	.short	0x2e
	.short	0x50
.text
	.align	2, 0
	.type	 VBlankCB_TrainerCard,function
	.thumb_func
VBlankCB_TrainerCard:
	push	{lr}
	bl	LoadOam
	bl	ProcessSpriteCopyRequests
	bl	TransferPlttBuffer
	bl	BlinkTimeColon
	ldr	r0, .L6
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x9]
	cmp	r0, #0
	beq	.L5	@cond_branch
	ldr	r1, .L6+0x4
	ldr	r0, .L6+0x8
	str	r0, [r1]
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	str	r0, [r1, #0x4]
	ldr	r0, .L6+0xc
	str	r0, [r1, #0x8]
	ldr	r0, [r1, #0x8]
.L5:
	pop	{r0}
	bx	r0
.L7:
	.align	2, 0
.L6:
	.word	sTrainerCardDataPtr
	.word	0x40000d4
	.word	gScanlineEffectRegBuffers
	.word	-0x7fffff60
.Lfe1:
	.size	 VBlankCB_TrainerCard,.Lfe1-VBlankCB_TrainerCard
	.align	2, 0
	.type	 HBlankCB_TrainerCard,function
	.thumb_func
HBlankCB_TrainerCard:
	push	{r4, lr}
	ldr	r4, .L9
	ldrh	r3, [r4]
	mov	r0, #0x0
	strh	r0, [r4]
	ldr	r1, .L9+0x4
	ldr	r0, .L9+0x8
	ldrh	r2, [r0]
	mov	r0, #0xff
	and	r0, r0, r2
	lsl	r0, r0, #0x1
	mov	r2, #0xf0
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	add	r0, r0, r1
	ldrh	r1, [r0]
	ldr	r0, .L9+0xc
	strh	r1, [r0]
	strh	r3, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L10:
	.align	2, 0
.L9:
	.word	0x4000208
	.word	gScanlineEffectRegBuffers
	.word	0x4000006
	.word	0x4000012
.Lfe2:
	.size	 HBlankCB_TrainerCard,.Lfe2-HBlankCB_TrainerCard
	.align	2, 0
	.type	 CB2_TrainerCard,function
	.thumb_func
CB2_TrainerCard:
	push	{lr}
	bl	RunTasks
	bl	AnimateSprites
	bl	BuildOamBuffer
	bl	UpdatePaletteFade
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 CB2_TrainerCard,.Lfe3-CB2_TrainerCard
	.align	2, 0
	.type	 CloseTrainerCard,function
	.thumb_func
CloseTrainerCard:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L13
	ldr	r0, [r5]
	mov	r1, #0x8b
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	SetMainCallback2
	bl	FreeAllWindowBuffers
	ldr	r0, [r5]
	bl	Free
	mov	r0, #0x0
	str	r0, [r5]
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L14:
	.align	2, 0
.L13:
	.word	sTrainerCardDataPtr
.Lfe4:
	.size	 CloseTrainerCard,.Lfe4-CloseTrainerCard
	.align	2, 0
	.type	 Task_TrainerCard,function
	.thumb_func
Task_TrainerCard:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r1, .L64
	ldr	r0, [r1]
	ldrb	r0, [r0]
	add	r4, r1, #0
	cmp	r0, #0x10
	bls	.LCB149
	b	.L16	@long jump
.LCB149:
	lsl	r0, r0, #0x2
	ldr	r1, .L64+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L65:
	.align	2, 0
.L64:
	.word	sTrainerCardDataPtr
	.word	.L58
	.align	2, 0
	.align	2, 0
.L58:
	.word	.L17
	.word	.L19
	.word	.L21
	.word	.L22
	.word	.L23
	.word	.L24
	.word	.L25
	.word	.L26
	.word	.L28
	.word	.L30
	.word	.L32
	.word	.L41
	.word	.L39
	.word	.L56
	.word	.L54
	.word	.L51
	.word	.L52
.L17:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB174
	b	.L16	@long jump
.LCB174:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	b	.L60
.L19:
	bl	PrintAllOnCardFront
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB187
	b	.L16	@long jump
.LCB187:
	b	.L60
.L21:
	mov	r0, #0x1
	bl	DrawTrainerCardWindow
	b	.L60
.L22:
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	bl	CreateTrainerCardTrainerPic
	mov	r0, #0x2
	bl	DrawTrainerCardWindow
	b	.L60
.L23:
	ldr	r0, [r4]
	ldr	r1, .L66
	add	r0, r0, r1
	bl	DrawCardScreenBackground
	ldr	r1, [r4]
	b	.L61
.L67:
	.align	2, 0
.L66:
	.word	0xe1c
.L24:
	ldr	r0, [r4]
	ldr	r1, .L68
	add	r0, r0, r1
	bl	DrawCardFrontOrBack
	ldr	r1, [r4]
	b	.L61
.L69:
	.align	2, 0
.L68:
	.word	0x4bc
.L25:
	bl	DrawStarsAndBadgesOnCard
	b	.L60
.L26:
	ldr	r0, .L70
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L27	@cond_branch
	ldr	r0, .L70+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L27	@cond_branch
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0xe6
	mov	r1, #0x96
	bl	CreateWirelessStatusIndicatorSprite
.L27:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x10
	mov	r3, #0x0
	bl	BeginNormalPaletteFade
	ldr	r0, .L70+0x8
	bl	SetVBlankCallback
	b	.L60
.L71:
	.align	2, 0
.L70:
	.word	gWirelessCommType
	.word	gReceivedRemoteLinkPlayers
	.word	VBlankCB_TrainerCard
.L28:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB290
	b	.L16	@long jump
.LCB290:
	bl	IsDma3ManagerBusyWithBgCopy
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB296
	b	.L16	@long jump
.LCB296:
	mov	r0, #0xf4
	bl	PlaySE
	ldr	r0, .L72
	ldr	r1, [r0]
	mov	r0, #0xa
	strb	r0, [r1]
	b	.L16
.L73:
	.align	2, 0
.L72:
	.word	sTrainerCardDataPtr
.L30:
	bl	IsSEPlaying
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB318
	b	.L16	@long jump
.LCB318:
.L60:
	ldr	r0, .L74
	ldr	r1, [r0]
.L61:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L16
.L75:
	.align	2, 0
.L74:
	.word	sTrainerCardDataPtr
.L32:
	ldr	r0, .L76
	ldrb	r5, [r0]
	cmp	r5, #0
	bne	.L33	@cond_branch
	ldr	r0, [r4]
	ldr	r1, .L76+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L33	@cond_branch
	bl	PrintTimeOnCard
	mov	r0, #0x1
	bl	DrawTrainerCardWindow
	ldr	r0, [r4]
	ldr	r1, .L76+0x4
	add	r0, r0, r1
	strb	r5, [r0]
.L33:
	ldr	r0, .L76+0x8
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L34	@cond_branch
	mov	r0, #0xb
	bl	SetHelpContext
	bl	FlipTrainerCard
	mov	r0, #0xf2
	bl	PlaySE
	ldr	r0, .L76+0xc
	ldr	r1, [r0]
	mov	r0, #0xc
	strb	r0, [r1]
	b	.L16
.L77:
	.align	2, 0
.L76:
	.word	gReceivedRemoteLinkPlayers
	.word	0x7bce
	.word	gMain
	.word	sTrainerCardDataPtr
.L34:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB401
	b	.L16	@long jump
.LCB401:
	ldr	r0, .L78
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L37	@cond_branch
	ldr	r4, .L78+0x4
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x5]
	cmp	r0, #0
	beq	.L37	@cond_branch
	bl	InUnionRoom
	cmp	r0, #0x1
	beq	.L62	@cond_branch
.L37:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	b	.L63
.L79:
	.align	2, 0
.L78:
	.word	gReceivedRemoteLinkPlayers
	.word	sTrainerCardDataPtr
.L39:
	bl	IsCardFlipTaskActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB444
	b	.L16	@long jump
.LCB444:
	bl	Overworld_LinkRecvQueueLengthMoreThan2
	cmp	r0, #0x1
	bne	.LCB448
	b	.L16	@long jump
.LCB448:
	mov	r0, #0xf4
	bl	PlaySE
	ldr	r0, .L80
	ldr	r1, [r0]
	mov	r0, #0xb
	strb	r0, [r1]
	b	.L16
.L81:
	.align	2, 0
.L80:
	.word	sTrainerCardDataPtr
.L41:
	ldr	r0, .L82
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L42	@cond_branch
	ldr	r0, .L82+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L45	@cond_branch
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x5]
	cmp	r0, #0
	beq	.L43	@cond_branch
	bl	InUnionRoom
	cmp	r0, #0x1
	beq	.L62	@cond_branch
.L43:
	ldr	r0, .L82+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L45	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	b	.L63
.L83:
	.align	2, 0
.L82:
	.word	gMain
	.word	gReceivedRemoteLinkPlayers
.L45:
	mov	r0, #0xa
	bl	SetHelpContext
	bl	FlipTrainerCard
	ldr	r0, .L84
	ldr	r1, [r0]
	mov	r0, #0xd
	strb	r0, [r1]
	mov	r0, #0xf2
	bl	PlaySE
	b	.L16
.L85:
	.align	2, 0
.L84:
	.word	sTrainerCardDataPtr
.L42:
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L16	@cond_branch
	ldr	r0, .L86
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L49	@cond_branch
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x5]
	cmp	r0, #0
	beq	.L49	@cond_branch
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L49	@cond_branch
.L62:
	ldr	r1, [r4]
	mov	r0, #0xf
	strb	r0, [r1]
	b	.L16
.L87:
	.align	2, 0
.L86:
	.word	gReceivedRemoteLinkPlayers
.L49:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	b	.L63
.L51:
	bl	SetCloseLinkCallback
	mov	r0, #0x0
	mov	r1, #0x1
	bl	DrawDialogueFrame
	ldr	r2, .L88
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x2
	mov	r3, #0x0
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L88+0x4
	ldr	r1, [r0]
	mov	r0, #0x10
	strb	r0, [r1]
	b	.L16
.L89:
	.align	2, 0
.L88:
	.word	gText_WaitingTrainerFinishReading
	.word	sTrainerCardDataPtr
.L52:
	ldr	r0, .L90
	ldrb	r1, [r0]
	cmp	r1, #0
	bne	.L16	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	str	r1, [sp]
	mov	r1, #0x0
.L63:
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	ldr	r0, .L90+0x4
	ldr	r1, [r0]
	mov	r0, #0xe
	strb	r0, [r1]
	b	.L16
.L91:
	.align	2, 0
.L90:
	.word	gReceivedRemoteLinkPlayers
	.word	sTrainerCardDataPtr
.L54:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L16	@cond_branch
	add	r0, r5, #0
	bl	CloseTrainerCard
	b	.L16
.L56:
	bl	IsCardFlipTaskActive
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L16	@cond_branch
	bl	Overworld_LinkRecvQueueLengthMoreThan2
	cmp	r0, #0x1
	beq	.L16	@cond_branch
	ldr	r0, .L92
	ldr	r1, [r0]
	mov	r0, #0xa
	strb	r0, [r1]
	mov	r0, #0xf4
	bl	PlaySE
.L16:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L93:
	.align	2, 0
.L92:
	.word	sTrainerCardDataPtr
.Lfe5:
	.size	 Task_TrainerCard,.Lfe5-Task_TrainerCard
	.align	2, 0
	.type	 LoadCardGfx,function
	.thumb_func
LoadCardGfx:
	push	{lr}
	ldr	r0, .L119
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x2]
	cmp	r0, #0x5
	bls	.LCB704
	b	.L115	@long jump
.LCB704:
	lsl	r0, r0, #0x2
	ldr	r1, .L119+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L120:
	.align	2, 0
.L119:
	.word	sTrainerCardDataPtr
	.word	.L116
	.align	2, 0
	.align	2, 0
.L116:
	.word	.L96
	.word	.L99
	.word	.L102
	.word	.L109
	.word	.L110
	.word	.L113
.L96:
	ldr	r0, .L121
	ldr	r1, [r0]
	ldr	r2, .L121+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L97	@cond_branch
	ldr	r0, .L121+0x8
	ldr	r2, .L121+0xc
	b	.L118
.L122:
	.align	2, 0
.L121:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	sHoennTrainerCardBg_Tilemap
	.word	0xe1c
.L97:
	ldr	r0, .L123
	ldr	r2, .L123+0x4
	b	.L118
.L124:
	.align	2, 0
.L123:
	.word	sKantoTrainerCardBg_Tilemap
	.word	0xe1c
.L99:
	ldr	r0, .L125
	ldr	r1, [r0]
	ldr	r2, .L125+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L100	@cond_branch
	ldr	r0, .L125+0x8
	ldr	r2, .L125+0xc
	b	.L118
.L126:
	.align	2, 0
.L125:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	sHoennTrainerCardBack_Tilemap
	.word	0x96c
.L100:
	ldr	r0, .L127
	ldr	r2, .L127+0x4
	b	.L118
.L128:
	.align	2, 0
.L127:
	.word	sKantoTrainerCardBack_Tilemap
	.word	0x96c
.L102:
	ldr	r0, .L129
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x5]
	cmp	r0, #0
	bne	.L103	@cond_branch
	ldr	r2, .L129+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L104	@cond_branch
	ldr	r0, .L129+0x8
	add	r2, r2, #0x65
	b	.L118
.L130:
	.align	2, 0
.L129:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	sHoennTrainerCardFront_Tilemap
.L104:
	ldr	r0, .L131
	ldr	r2, .L131+0x4
	b	.L118
.L132:
	.align	2, 0
.L131:
	.word	sKantoTrainerCardFront_Tilemap
	.word	0x4bc
.L103:
	ldr	r2, .L133
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L107	@cond_branch
	ldr	r0, .L133+0x4
	add	r2, r2, #0x65
	b	.L118
.L134:
	.align	2, 0
.L133:
	.word	0x457
	.word	sHoennTrainerCardFrontLink_Tilemap
.L107:
	ldr	r0, .L135
	ldr	r2, .L135+0x4
	b	.L118
.L136:
	.align	2, 0
.L135:
	.word	sKantoTrainerCardFrontLink_Tilemap
	.word	0x4bc
.L109:
	ldr	r0, .L137
	ldr	r1, .L137+0x4
	ldr	r1, [r1]
	ldr	r2, .L137+0x8
	b	.L118
.L138:
	.align	2, 0
.L137:
	.word	sKantoTrainerCardBadges_Gfx
	.word	sTrainerCardDataPtr
	.word	0x12cc
.L110:
	ldr	r0, .L139
	ldr	r1, [r0]
	ldr	r2, .L139+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L111	@cond_branch
	ldr	r0, .L139+0x8
	ldr	r2, .L139+0xc
	b	.L118
.L140:
	.align	2, 0
.L139:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	gHoennTrainerCard_Gfx
	.word	0x18cc
.L111:
	ldr	r0, .L141
	ldr	r2, .L141+0x4
	b	.L118
.L142:
	.align	2, 0
.L141:
	.word	gKantoTrainerCard_Gfx
	.word	0x18cc
.L113:
	ldr	r0, .L143
	ldr	r1, [r0]
	ldr	r2, .L143+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L95	@cond_branch
	ldr	r0, .L143+0x8
	ldr	r2, .L143+0xc
.L118:
	add	r1, r1, r2
	bl	LZ77UnCompWram
	b	.L95
.L144:
	.align	2, 0
.L143:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	sTrainerCardStickers_Gfx
	.word	0x16cc
.L115:
	mov	r0, #0x0
	strb	r0, [r1, #0x2]
	mov	r0, #0x1
	b	.L117
.L95:
	ldr	r0, .L145
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x2]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x2]
	mov	r0, #0x0
.L117:
	pop	{r1}
	bx	r1
.L146:
	.align	2, 0
.L145:
	.word	sTrainerCardDataPtr
.Lfe6:
	.size	 LoadCardGfx,.Lfe6-LoadCardGfx
	.align	2, 0
	.type	 CB2_InitTrainerCard,function
	.thumb_func
CB2_InitTrainerCard:
	push	{lr}
	ldr	r1, .L168
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r0, r1, r2
	ldrb	r0, [r0]
	add	r2, r1, #0
	cmp	r0, #0xd
	bls	.LCB1022
	b	.L165	@long jump
.LCB1022:
	lsl	r0, r0, #0x2
	ldr	r1, .L168+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L169:
	.align	2, 0
.L168:
	.word	gMain
	.word	.L166
	.align	2, 0
	.align	2, 0
.L166:
	.word	.L149
	.word	.L150
	.word	.L151
	.word	.L152
	.word	.L153
	.word	.L154
	.word	.L155
	.word	.L156
	.word	.L157
	.word	.L159
	.word	.L160
	.word	.L161
	.word	.L162
	.word	.L164
.L149:
	bl	ResetGpuRegs
	bl	SetUpTrainerCardTask
	ldr	r1, .L170
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L167
.L171:
	.align	2, 0
.L170:
	.word	gMain
.L150:
	bl	TrainerCardNull
	ldr	r1, .L172
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L167
.L173:
	.align	2, 0
.L172:
	.word	gMain
.L151:
	bl	DmaClearOam
	ldr	r1, .L174
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L167
.L175:
	.align	2, 0
.L174:
	.word	gMain
.L152:
	bl	DmaClearPltt
	ldr	r1, .L176
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L153:
	bl	ResetBgRegs
	ldr	r1, .L176
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L167
.L177:
	.align	2, 0
.L176:
	.word	gMain
.L154:
	bl	InitBgsAndWindows
	ldr	r1, .L178
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L167
.L179:
	.align	2, 0
.L178:
	.word	gMain
.L155:
	bl	LoadStdWindowFrameGfx
	ldr	r1, .L180
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L167
.L181:
	.align	2, 0
.L180:
	.word	gMain
.L156:
	bl	LoadMonIconGfx
	ldr	r1, .L182
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L167
.L183:
	.align	2, 0
.L182:
	.word	gMain
.L157:
	bl	LoadCardGfx
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L148	@cond_branch
	ldr	r1, .L184
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L167
.L185:
	.align	2, 0
.L184:
	.word	gMain
.L159:
	bl	LoadStickerGfx
	ldr	r1, .L186
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L167
.L187:
	.align	2, 0
.L186:
	.word	gMain
.L160:
	bl	HandleGpuRegs
	ldr	r1, .L188
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L167
.L189:
	.align	2, 0
.L188:
	.word	gMain
.L161:
	bl	BufferTextForCardBack
	ldr	r1, .L190
	mov	r2, #0x87
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	b	.L167
.L191:
	.align	2, 0
.L190:
	.word	gMain
.L162:
	bl	SetTrainerCardBgsAndPals
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L148	@cond_branch
	ldr	r1, .L192
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L167
.L193:
	.align	2, 0
.L192:
	.word	gMain
.L164:
	mov	r0, #0x87
	lsl	r0, r0, #0x3
	add	r1, r2, r0
.L167:
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L148
.L165:
	bl	SetTrainerCardCB2
.L148:
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 CB2_InitTrainerCard,.Lfe7-CB2_InitTrainerCard
	.align	2, 0
	.type	 GetCappedGameStat,function
	.thumb_func
GetCappedGameStat:
	push	{r4, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	GetGameStat
	cmp	r0, r4
	bls	.L195	@cond_branch
	add	r0, r4, #0
.L195:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 GetCappedGameStat,.Lfe8-GetCappedGameStat
	.align	2, 0
	.type	 GetTrainerStarCount,function
	.thumb_func
GetTrainerStarCount:
	push	{lr}
	add	r1, r0, #0
	mov	r2, #0x0
	ldrh	r0, [r1, #0x6]
	cmp	r0, #0
	bne	.L198	@cond_branch
	ldr	r0, [r1, #0x8]
	cmp	r0, #0
	beq	.L197	@cond_branch
.L198:
	mov	r2, #0x1
.L197:
	ldrb	r0, [r1, #0x3]
	cmp	r0, #0
	beq	.L199	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L199:
	ldrh	r0, [r1, #0x1a]
	cmp	r0, #0x31
	bls	.L200	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L200:
	ldrb	r0, [r1, #0x4]
	cmp	r0, #0
	beq	.L201	@cond_branch
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
.L201:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 GetTrainerStarCount,.Lfe9-GetTrainerStarCount
	.align	2, 0
	.type	 SetPlayerCardData,function
	.thumb_func
SetPlayerCardData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	ldr	r7, .L218
	ldr	r1, [r7]
	ldrb	r0, [r1, #0x8]
	mov	r6, #0x0
	strb	r0, [r5]
	ldrh	r0, [r1, #0xe]
	strh	r0, [r5, #0x10]
	ldrb	r0, [r1, #0x10]
	strh	r0, [r5, #0x12]
	mov	r0, #0x1
	bl	GetGameStat
	add	r4, r0, #0
	mov	r0, #0xa
	bl	GetGameStat
	cmp	r0, #0
	bne	.L203	@cond_branch
	mov	r4, #0x0
.L203:
	lsr	r0, r4, #0x10
	strh	r0, [r5, #0x6]
	lsr	r1, r4, #0x8
	mov	r2, #0xff
	and	r1, r1, r2
	strh	r1, [r5, #0x8]
	and	r4, r4, r2
	strh	r4, [r5, #0xa]
	ldr	r1, .L218+0x4
	cmp	r0, r1
	bls	.L204	@cond_branch
	strh	r1, [r5, #0x6]
	mov	r0, #0x3b
	strh	r0, [r5, #0x8]
	strh	r0, [r5, #0xa]
.L204:
	ldr	r0, .L218+0x8
	bl	FlagGet
	strb	r0, [r5, #0x2]
	bl	HasAllHoennMons
	strb	r0, [r5, #0x3]
	bl	GetCaughtMonsCount
	strh	r0, [r5, #0xc]
	ldr	r0, [r7]
	ldrb	r1, [r0, #0xb]
	lsl	r1, r1, #0x8
	ldrb	r0, [r0, #0xa]
	orr	r0, r0, r1
	strh	r0, [r5, #0xe]
	ldr	r4, .L218+0xc
	mov	r0, #0x17
	add	r1, r4, #0
	bl	GetCappedGameStat
	strh	r0, [r5, #0x14]
	mov	r0, #0x18
	add	r1, r4, #0
	bl	GetCappedGameStat
	strh	r0, [r5, #0x16]
	ldr	r1, .L218+0x10
	mov	r0, #0x15
	bl	GetCappedGameStat
	strh	r0, [r5, #0x20]
	strh	r6, [r5, #0x18]
	strh	r6, [r5, #0x1a]
	strh	r6, [r5, #0x1c]
	strh	r6, [r5, #0x1e]
	mov	r0, #0x0
	strb	r0, [r5, #0x4]
	ldr	r4, .L218+0x14
	ldr	r0, [r4]
	mov	r1, #0xa4
	lsl	r1, r1, #0x2
	add	r0, r0, r1
	bl	GetMoney
	str	r0, [r5, #0x24]
	mov	r2, #0x0
	add	r7, r5, #0
	add	r7, r7, #0x30
	add	r6, r5, #0
	add	r6, r6, #0x28
	ldr	r0, [r4]
	ldr	r1, .L218+0x18
	add	r3, r0, r1
.L208:
	lsl	r0, r2, #0x1
	add	r1, r6, r0
	add	r0, r3, r0
	ldrh	r0, [r0]
	strh	r0, [r1]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3
	bls	.L208	@cond_branch
	ldr	r0, .L218
	ldr	r1, [r0]
	add	r0, r7, #0
	bl	StringCopy
	mov	r0, r8
	cmp	r0, #0
	bne	.L210	@cond_branch
	add	r0, r5, #0
	bl	GetTrainerStarCount
	b	.L217
.L219:
	.align	2, 0
.L218:
	.word	gSaveBlock2Ptr
	.word	0x3e7
	.word	0x82a
	.word	0x270f
	.word	0xffff
	.word	gSaveBlock1Ptr
	.word	0x2cb4
.L210:
	mov	r1, r8
	cmp	r1, #0x1
	bne	.L211	@cond_branch
	mov	r0, #0x0
	strb	r0, [r5, #0x1]
	ldrh	r0, [r5, #0x6]
	cmp	r0, #0
	bne	.L214	@cond_branch
	ldr	r0, [r5, #0x8]
	cmp	r0, #0
	beq	.L213	@cond_branch
.L214:
	mov	r0, r8
	strb	r0, [r5, #0x1]
.L213:
	bl	HasAllKantoMons
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L215	@cond_branch
	ldrb	r0, [r5, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x1]
.L215:
	bl	HasAllMons
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L211	@cond_branch
	ldrb	r0, [r5, #0x1]
	add	r0, r0, #0x1
.L217:
	strb	r0, [r5, #0x1]
.L211:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe10:
	.size	 SetPlayerCardData,.Lfe10-SetPlayerCardData
	.align	2, 0
	.globl	TrainerCard_GenerateCardForLinkPlayer
	.type	 TrainerCard_GenerateCardForLinkPlayer,function
	.thumb_func
TrainerCard_GenerateCardForLinkPlayer:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r4, #0x0
	add	r1, r5, #0
	add	r1, r1, #0x38
	mov	r0, #0x4
	strb	r0, [r1]
	add	r0, r5, #0
	mov	r1, #0x1
	bl	SetPlayerCardData
	bl	GetCardType
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB1555
	b	.L220	@long jump
.LCB1555:
	strb	r4, [r5, #0x1]
	ldrh	r0, [r5, #0x6]
	cmp	r0, #0
	bne	.L223	@cond_branch
	ldr	r0, [r5, #0x8]
	cmp	r0, #0
	beq	.L222	@cond_branch
.L223:
	mov	r0, #0x1
	strb	r0, [r5, #0x1]
.L222:
	bl	HasAllKantoMons
	strb	r0, [r5, #0x3]
	bl	HasAllMons
	add	r6, r5, #0
	add	r6, r6, #0x4d
	strb	r0, [r6]
	ldr	r0, .L230
	ldr	r0, [r0]
	ldr	r2, .L230+0x4
	add	r1, r0, r2
	ldrh	r1, [r1]
	str	r1, [r5, #0x44]
	mov	r1, #0xb0
	lsl	r1, r1, #0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
	str	r0, [r5, #0x48]
	ldr	r4, .L230+0x8
	mov	r0, #0x33
	add	r1, r4, #0
	bl	GetCappedGameStat
	str	r0, [r5, #0x3c]
	mov	r0, #0x32
	add	r1, r4, #0
	bl	GetCappedGameStat
	str	r0, [r5, #0x40]
	add	r1, r5, #0
	add	r1, r1, #0x4c
	mov	r0, #0x1
	strb	r0, [r1]
	ldrb	r0, [r5, #0x3]
	cmp	r0, #0
	beq	.L224	@cond_branch
	ldrb	r0, [r5, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x1]
.L224:
	ldrb	r0, [r6]
	cmp	r0, #0
	beq	.L225	@cond_branch
	ldrb	r0, [r5, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x1]
.L225:
	ldr	r0, [r5, #0x44]
	cmp	r0, #0xc7
	bls	.L226	@cond_branch
	ldr	r0, [r5, #0x48]
	cmp	r0, #0xc7
	bls	.L226	@cond_branch
	ldrb	r0, [r5, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x1]
.L226:
	ldrh	r4, [r5, #0xe]
	mov	r0, #0x7
	and	r4, r4, r0
	ldrb	r0, [r5]
	cmp	r0, #0x1
	bne	.L227	@cond_branch
	ldr	r0, .L230+0xc
	add	r0, r0, #0x8
	b	.L229
.L231:
	.align	2, 0
.L230:
	.word	gSaveBlock2Ptr
	.word	0xb14
	.word	0xffff
	.word	sLinkTrainerPicFacilityClasses
.L227:
	ldr	r0, .L232
.L229:
	add	r0, r4, r0
	ldrb	r0, [r0]
	add	r1, r5, #0
	add	r1, r1, #0x4f
	strb	r0, [r1]
	ldr	r0, .L232+0x4
	bl	VarGet
	add	r1, r5, #0
	add	r1, r1, #0x50
	strb	r0, [r1]
	ldr	r0, .L232+0x8
	bl	VarGet
	add	r1, r5, #0
	add	r1, r1, #0x51
	strb	r0, [r1]
	ldr	r0, .L232+0xc
	bl	VarGet
	add	r1, r5, #0
	add	r1, r1, #0x52
	strb	r0, [r1]
	ldr	r0, .L232+0x10
	bl	VarGet
	add	r1, r5, #0
	add	r1, r1, #0x4e
	strb	r0, [r1]
	ldr	r0, .L232+0x14
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	MailSpeciesToIconSpecies
	add	r1, r5, #0
	add	r1, r1, #0x54
	strh	r0, [r1]
	ldr	r0, .L232+0x18
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	MailSpeciesToIconSpecies
	add	r1, r5, #0
	add	r1, r1, #0x56
	strh	r0, [r1]
	ldr	r0, .L232+0x1c
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	MailSpeciesToIconSpecies
	add	r1, r5, #0
	add	r1, r1, #0x58
	strh	r0, [r1]
	ldr	r0, .L232+0x20
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	MailSpeciesToIconSpecies
	add	r1, r5, #0
	add	r1, r1, #0x5a
	strh	r0, [r1]
	ldr	r0, .L232+0x24
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	MailSpeciesToIconSpecies
	add	r1, r5, #0
	add	r1, r1, #0x5c
	strh	r0, [r1]
	ldr	r0, .L232+0x28
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	MailSpeciesToIconSpecies
	add	r1, r5, #0
	add	r1, r1, #0x5e
	strh	r0, [r1]
.L220:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L233:
	.align	2, 0
.L232:
	.word	sLinkTrainerPicFacilityClasses
	.word	0x4049
	.word	0x404a
	.word	0x404b
	.word	0x4042
	.word	0x4043
	.word	0x4044
	.word	0x4045
	.word	0x4046
	.word	0x4047
	.word	0x4048
.Lfe11:
	.size	 TrainerCard_GenerateCardForLinkPlayer,.Lfe11-TrainerCard_GenerateCardForLinkPlayer
	.align	2, 0
	.type	 SetDataFromTrainerCard,function
	.thumb_func
SetDataFromTrainerCard:
	push	{r4, r5, lr}
	ldr	r4, .L246
	ldr	r0, [r4]
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	ldr	r0, [r4]
	strb	r1, [r0, #0xb]
	ldr	r0, [r4]
	strb	r1, [r0, #0xc]
	ldr	r0, [r4]
	strb	r1, [r0, #0xd]
	ldr	r0, [r4]
	strb	r1, [r0, #0xe]
	ldr	r0, [r4]
	strb	r1, [r0, #0xf]
	ldr	r0, [r4]
	strb	r1, [r0, #0x10]
	ldr	r0, [r4]
	add	r0, r0, #0x11
	mov	r2, #0x8
	bl	memset
	ldr	r1, [r4]
	ldr	r2, .L246+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L235	@cond_branch
	ldrb	r0, [r1, #0xa]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xa]
.L235:
	ldr	r1, [r4]
	ldr	r3, .L246+0x8
	add	r0, r1, r3
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L237	@cond_branch
	ldr	r2, .L246+0xc
	add	r0, r1, r2
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L236	@cond_branch
.L237:
	ldrb	r0, [r1, #0xb]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xb]
.L236:
	ldr	r2, .L246
	ldr	r1, [r2]
	mov	r3, #0x8e
	lsl	r3, r3, #0x3
	add	r0, r1, r3
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L238	@cond_branch
	ldrb	r0, [r1, #0xc]
	add	r0, r0, #0x1
	strb	r0, [r1, #0xc]
.L238:
	ldr	r1, [r2]
	ldr	r2, .L246+0x10
	add	r0, r1, r2
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L239	@cond_branch
	ldrb	r0, [r1, #0x10]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x10]
.L239:
	mov	r5, #0x0
	ldr	r4, .L246+0x14
.L243:
	lsl	r0, r4, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L242	@cond_branch
	ldr	r0, .L246
	ldr	r1, [r0]
	add	r1, r1, #0x11
	add	r1, r1, r5
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
.L242:
	add	r4, r4, #0x1
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L246+0x18
	cmp	r4, r0
	bls	.L243	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L247:
	.align	2, 0
.L246:
	.word	sTrainerCardDataPtr
	.word	0x45e
	.word	0x462
	.word	0x464
	.word	0x47c
	.word	0x821
	.word	0x828
.Lfe12:
	.size	 SetDataFromTrainerCard,.Lfe12-SetDataFromTrainerCard
	.align	2, 0
	.type	 HandleGpuRegs,function
	.thumb_func
HandleGpuRegs:
	push	{lr}
	mov	r0, #0x0
	bl	ShowBg
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x2
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	mov	r1, #0xfd
	lsl	r1, r1, #0x6
	mov	r0, #0x0
	bl	SetGpuReg
	mov	r0, #0x50
	mov	r1, #0xc1
	bl	SetGpuReg
	mov	r0, #0x54
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x48
	mov	r1, #0x3f
	bl	SetGpuReg
	mov	r0, #0x4a
	mov	r1, #0x1e
	bl	SetGpuReg
	mov	r0, #0x44
	mov	r1, #0xa0
	bl	SetGpuReg
	mov	r0, #0x40
	mov	r1, #0xf0
	bl	SetGpuReg
	ldr	r0, .L251
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L249	@cond_branch
	mov	r0, #0xc7
	bl	EnableInterrupts
	b	.L250
.L252:
	.align	2, 0
.L251:
	.word	gReceivedRemoteLinkPlayers
.L249:
	mov	r0, #0x3
	bl	EnableInterrupts
.L250:
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 HandleGpuRegs,.Lfe13-HandleGpuRegs
	.align	2, 0
	.type	 UpdateCardFlipRegs,function
	.thumb_func
UpdateCardFlipRegs:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r0, r0, #0x28
	mov	r1, #0xa
	bl	__divsi3
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	asr	r0, r0, #0x18
	cmp	r0, #0x4
	bgt	.L254	@cond_branch
	mov	r2, #0x0
.L254:
	ldr	r4, .L255
	ldr	r0, [r4]
	ldr	r1, .L255+0x4
	add	r0, r0, r1
	strb	r2, [r0]
	ldr	r0, [r4]
	add	r0, r0, r1
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x54
	bl	SetGpuReg
	ldr	r0, [r4]
	ldr	r1, .L255+0x8
	add	r0, r0, r1
	ldrh	r2, [r0]
	lsl	r1, r2, #0x8
	mov	r0, #0xa0
	sub	r0, r0, r2
	orr	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x44
	bl	SetGpuReg
	pop	{r4}
	pop	{r0}
	bx	r0
.L256:
	.align	2, 0
.L255:
	.word	sTrainerCardDataPtr
	.word	0x456
	.word	0x7bcc
.Lfe14:
	.size	 UpdateCardFlipRegs,.Lfe14-UpdateCardFlipRegs
	.align	2, 0
	.type	 ResetGpuRegs,function
	.thumb_func
ResetGpuRegs:
	push	{lr}
	mov	r0, #0x0
	bl	SetVBlankCallback
	mov	r0, #0x0
	bl	SetHBlankCallback
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.Lfe15:
	.size	 ResetGpuRegs,.Lfe15-ResetGpuRegs
	.align	2, 0
	.type	 TrainerCardNull,function
	.thumb_func
TrainerCardNull:
	bx	lr
.Lfe16:
	.size	 TrainerCardNull,.Lfe16-TrainerCardNull
	.align	2, 0
	.type	 DmaClearOam,function
	.thumb_func
DmaClearOam:
	add	sp, sp, #-0x4
	mov	r1, #0xe0
	lsl	r1, r1, #0x13
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L260
	mov	r2, sp
	str	r2, [r0]
	str	r1, [r0, #0x4]
	ldr	r1, .L260+0x4
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	add	sp, sp, #0x4
	bx	lr
.L261:
	.align	2, 0
.L260:
	.word	0x40000d4
	.word	-0x7affff00
.Lfe17:
	.size	 DmaClearOam,.Lfe17-DmaClearOam
	.align	2, 0
	.type	 DmaClearPltt,function
	.thumb_func
DmaClearPltt:
	add	sp, sp, #-0x4
	mov	r2, #0xa0
	lsl	r2, r2, #0x13
	mov	r1, sp
	mov	r0, #0x0
	strh	r0, [r1]
	ldr	r0, .L263
	str	r1, [r0]
	str	r2, [r0, #0x4]
	ldr	r1, .L263+0x4
	str	r1, [r0, #0x8]
	ldr	r0, [r0, #0x8]
	add	sp, sp, #0x4
	bx	lr
.L264:
	.align	2, 0
.L263:
	.word	0x40000d4
	.word	-0x7efffe00
.Lfe18:
	.size	 DmaClearPltt,.Lfe18-DmaClearPltt
	.align	2, 0
	.type	 ResetBgRegs,function
	.thumb_func
ResetBgRegs:
	push	{lr}
	mov	r0, #0x8
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xa
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xc
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0xe
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x10
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x14
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x16
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x18
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1a
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1c
	mov	r1, #0x0
	bl	SetGpuReg
	mov	r0, #0x1e
	mov	r1, #0x0
	bl	SetGpuReg
	pop	{r0}
	bx	r0
.Lfe19:
	.size	 ResetBgRegs,.Lfe19-ResetBgRegs
	.align	2, 0
	.type	 InitBgsAndWindows,function
	.thumb_func
InitBgsAndWindows:
	push	{lr}
	bl	ResetSpriteData
	bl	ResetPaletteFade
	mov	r0, #0x0
	bl	ResetBgsAndClearDma3BusyFlags
	ldr	r1, .L267
	mov	r0, #0x0
	mov	r2, #0x4
	bl	InitBgsFromTemplates
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x1
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgX
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ChangeBgY
	ldr	r0, .L267+0x4
	bl	InitWindows
	bl	DeactivateAllTextPrinters
	pop	{r0}
	bx	r0
.L268:
	.align	2, 0
.L267:
	.word	sTrainerCardBgTemplates
	.word	sTrainerCardWindowTemplates
.Lfe20:
	.size	 InitBgsAndWindows,.Lfe20-InitBgsAndWindows
	.align	2, 0
	.type	 SetTrainerCardCB2,function
	.thumb_func
SetTrainerCardCB2:
	push	{lr}
	ldr	r0, .L270
	bl	SetMainCallback2
	mov	r0, #0xa
	bl	SetHelpContext
	pop	{r0}
	bx	r0
.L271:
	.align	2, 0
.L270:
	.word	CB2_TrainerCard
.Lfe21:
	.size	 SetTrainerCardCB2,.Lfe21-SetTrainerCardCB2
	.align	2, 0
	.type	 SetUpTrainerCardTask,function
	.thumb_func
SetUpTrainerCardTask:
	push	{lr}
	bl	ResetTasks
	bl	ScanlineEffect_Stop
	ldr	r0, .L273
	mov	r1, #0x0
	bl	CreateTask
	bl	InitTrainerCardData
	bl	SetDataFromTrainerCard
	pop	{r0}
	bx	r0
.L274:
	.align	2, 0
.L273:
	.word	Task_TrainerCard
.Lfe22:
	.size	 SetUpTrainerCardTask,.Lfe22-SetUpTrainerCardTask
	.align	2, 0
	.type	 PrintAllOnCardFront,function
	.thumb_func
PrintAllOnCardFront:
	push	{lr}
	ldr	r0, .L286
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0x5
	bhi	.L283	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L286+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L287:
	.align	2, 0
.L286:
	.word	sTrainerCardDataPtr
	.word	.L284
	.align	2, 0
	.align	2, 0
.L284:
	.word	.L277
	.word	.L278
	.word	.L279
	.word	.L280
	.word	.L281
	.word	.L282
.L277:
	bl	PrintNameOnCardFront
	b	.L276
.L278:
	bl	PrintIdOnCard
	b	.L276
.L279:
	bl	PrintMoneyOnCard
	b	.L276
.L280:
	bl	PrintPokedexOnCard
	b	.L276
.L281:
	bl	PrintTimeOnCard
	b	.L276
.L282:
	bl	PrintProfilePhraseOnCard
	b	.L276
.L283:
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
	mov	r0, #0x1
	b	.L285
.L276:
	ldr	r0, .L288
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x1]
	mov	r0, #0x0
.L285:
	pop	{r1}
	bx	r1
.L289:
	.align	2, 0
.L288:
	.word	sTrainerCardDataPtr
.Lfe23:
	.size	 PrintAllOnCardFront,.Lfe23-PrintAllOnCardFront
	.align	2, 0
	.type	 PrintAllOnCardBack,function
	.thumb_func
PrintAllOnCardBack:
	push	{lr}
	ldr	r0, .L303
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0x7
	bhi	.L300	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L303+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L304:
	.align	2, 0
.L303:
	.word	sTrainerCardDataPtr
	.word	.L301
	.align	2, 0
	.align	2, 0
.L301:
	.word	.L292
	.word	.L293
	.word	.L294
	.word	.L295
	.word	.L296
	.word	.L297
	.word	.L298
	.word	.L299
.L292:
	bl	PrintNameOnCardBack
	b	.L291
.L293:
	bl	PrintHofDebutTimeOnCard
	b	.L291
.L294:
	bl	PrintLinkBattleResultsOnCard
	b	.L291
.L295:
	bl	PrintTradesStringOnCard
	b	.L291
.L296:
	bl	PrintBerryCrushStringOnCard
	b	.L291
.L297:
	bl	PrintUnionStringOnCard
	b	.L291
.L298:
	bl	PrintPokemonIconsOnCard
	b	.L291
.L299:
	bl	PrintStickersOnCard
	b	.L291
.L300:
	mov	r0, #0x0
	strb	r0, [r1, #0x1]
	mov	r0, #0x1
	b	.L302
.L291:
	ldr	r0, .L305
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x1]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x1]
	mov	r0, #0x0
.L302:
	pop	{r1}
	bx	r1
.L306:
	.align	2, 0
.L305:
	.word	sTrainerCardDataPtr
.Lfe24:
	.size	 PrintAllOnCardBack,.Lfe24-PrintAllOnCardBack
	.align	2, 0
	.type	 BufferTextForCardBack,function
	.thumb_func
BufferTextForCardBack:
	push	{lr}
	bl	BufferNameForCardBack
	bl	BufferHofDebutTime
	bl	BufferLinkBattleResults
	bl	BufferNumTrades
	bl	BufferBerryCrushPoints
	bl	BufferUnionRoomStats
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 BufferTextForCardBack,.Lfe25-BufferTextForCardBack
	.align	2, 0
	.type	 PrintNameOnCardFront,function
	.thumb_func
PrintNameOnCardFront:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4c
	ldr	r1, .L309
	add	r0, sp, #0xc
	bl	StringCopy
	add	r4, sp, #0x2c
	ldr	r5, .L309+0x4
	ldr	r1, [r5]
	ldr	r0, .L309+0x8
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, [r5]
	ldr	r1, .L309+0xc
	add	r0, r0, r1
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	ConvertInternationalString
	add	r0, sp, #0xc
	add	r1, r4, #0
	bl	StringAppend
	ldr	r0, .L309+0x10
	ldrb	r1, [r0, #0x1]
	ldr	r2, .L309+0x14
	ldr	r0, [r5]
	ldr	r3, .L309+0x18
	add	r0, r0, r3
	ldrb	r0, [r0]
	add	r2, r0, r2
	ldrb	r2, [r2]
	ldr	r3, .L309+0x1c
	add	r0, r0, r3
	ldrb	r3, [r0]
	ldr	r0, .L309+0x20
	str	r0, [sp]
	mov	r0, #0x1
	neg	r0, r0
	str	r0, [sp, #0x4]
	add	r0, sp, #0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0x4c
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L310:
	.align	2, 0
.L309:
	.word	gText_TrainerCardName
	.word	sTrainerCardDataPtr
	.word	0x48c
	.word	0x7bcf
	.word	sTrainerCardFontIds
	.word	sTrainerCardFrontNameXPositions
	.word	0x457
	.word	sTrainerCardFrontNameYPositions
	.word	sTrainerCardTextColors
.Lfe26:
	.size	 PrintNameOnCardFront,.Lfe26-PrintNameOnCardFront
	.align	2, 0
	.type	 PrintIdOnCard,function
	.thumb_func
PrintIdOnCard:
	push	{r4, lr}
	add	sp, sp, #-0x2c
	ldr	r1, .L312
	add	r0, sp, #0xc
	bl	StringCopy
	ldr	r4, .L312+0x4
	ldr	r1, [r4]
	ldr	r2, .L312+0x8
	add	r1, r1, r2
	ldrh	r1, [r1]
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L312+0xc
	ldrb	r1, [r0, #0x1]
	ldr	r2, .L312+0x10
	ldr	r0, [r4]
	ldr	r3, .L312+0x14
	add	r0, r0, r3
	ldrb	r0, [r0]
	add	r2, r0, r2
	ldrb	r2, [r2]
	ldr	r3, .L312+0x18
	add	r0, r0, r3
	ldrb	r3, [r0]
	ldr	r0, .L312+0x1c
	str	r0, [sp]
	mov	r0, #0x1
	neg	r0, r0
	str	r0, [sp, #0x4]
	add	r0, sp, #0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0x2c
	pop	{r4}
	pop	{r0}
	bx	r0
.L313:
	.align	2, 0
.L312:
	.word	gText_TrainerCardIDNo
	.word	sTrainerCardDataPtr
	.word	0x46a
	.word	sTrainerCardFontIds
	.word	sTrainerCardIdXPositions
	.word	0x457
	.word	sTrainerCardIdYPositions
	.word	sTrainerCardTextColors
.Lfe27:
	.size	 PrintIdOnCard,.Lfe27-PrintIdOnCard
	.align	2, 0
	.type	 PrintMoneyOnCard,function
	.thumb_func
PrintMoneyOnCard:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x18
	ldr	r1, .L317
	add	r0, sp, #0xc
	bl	StringCopy
	ldr	r4, .L317+0x4
	ldr	r1, [r4]
	mov	r2, #0x90
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	ldr	r1, [r1]
	mov	r2, #0x0
	mov	r3, #0x6
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r4]
	ldr	r1, .L317+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L315	@cond_branch
	add	r0, sp, #0xc
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r2, #0x7a
	neg	r2, r2
	add	r0, r2, #0
	sub	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L317+0xc
	ldrb	r6, [r0, #0x1]
	ldr	r5, .L317+0x10
	str	r5, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r0, .L317+0x14
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	mov	r2, #0x14
	mov	r3, #0x38
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, sp, #0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	add	r2, r7, #0
	mov	r3, #0x38
	bl	AddTextPrinterParameterized3
	b	.L316
.L318:
	.align	2, 0
.L317:
	.word	gText_TrainerCardYen
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	sTrainerCardFontIds
	.word	sTrainerCardTextColors
	.word	gText_TrainerCardMoney
.L315:
	add	r0, sp, #0xc
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r0, #0x76
	sub	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L319
	ldrb	r6, [r0, #0x1]
	ldr	r5, .L319+0x4
	str	r5, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r0, .L319+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	mov	r2, #0x10
	mov	r3, #0x39
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r1, sp, #0xc
	str	r1, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	add	r2, r7, #0
	mov	r3, #0x39
	bl	AddTextPrinterParameterized3
.L316:
	add	sp, sp, #0x18
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L320:
	.align	2, 0
.L319:
	.word	sTrainerCardFontIds
	.word	sTrainerCardTextColors
	.word	gText_TrainerCardMoney
.Lfe28:
	.size	 PrintMoneyOnCard,.Lfe28-PrintMoneyOnCard
	.align	2, 0
	.type	 GetCaughtMonsCount,function
	.thumb_func
GetCaughtMonsCount:
	push	{lr}
	bl	IsNationalPokedexEnabled
	cmp	r0, #0
	bne	.L322	@cond_branch
	mov	r0, #0x1
	bl	GetKantoPokedexCount
	b	.L326
.L322:
	mov	r0, #0x1
	bl	GetNationalPokedexCount
.L326:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.Lfe29:
	.size	 GetCaughtMonsCount,.Lfe29-GetCaughtMonsCount
	.align	2, 0
	.type	 PrintPokedexOnCard,function
	.thumb_func
PrintPokedexOnCard:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x18
	ldr	r0, .L331
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2802
	b	.L328	@long jump
.LCB2802:
	ldr	r4, .L331+0x4
	ldr	r0, [r4]
	mov	r1, #0x8d
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldrh	r1, [r0]
	add	r0, sp, #0xc
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r4]
	ldr	r2, .L331+0x8
	add	r0, r0, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L329	@cond_branch
	add	r0, sp, #0xc
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r2, #0x78
	neg	r2, r2
	add	r0, r2, #0
	sub	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L331+0xc
	ldrb	r6, [r0, #0x1]
	ldr	r5, .L331+0x10
	str	r5, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r0, .L331+0x14
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	mov	r2, #0x14
	mov	r3, #0x48
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, sp, #0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	add	r2, r7, #0
	mov	r3, #0x48
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L331+0x18
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	mov	r2, #0x8a
	mov	r3, #0x48
	bl	AddTextPrinterParameterized3
	b	.L328
.L332:
	.align	2, 0
.L331:
	.word	0x82a
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	sTrainerCardFontIds
	.word	sTrainerCardTextColors
	.word	gText_TrainerCardPokedex
	.word	gText_TrainerCardNull
.L329:
	add	r0, sp, #0xc
	bl	StringLength
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r0, #0x78
	sub	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r0, .L333
	ldrb	r6, [r0, #0x1]
	ldr	r5, .L333+0x4
	str	r5, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r0, .L333+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	mov	r2, #0x10
	mov	r3, #0x49
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r1, sp, #0xc
	str	r1, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	add	r2, r7, #0
	mov	r3, #0x49
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, .L333+0xc
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	mov	r2, #0x8a
	mov	r3, #0x49
	bl	AddTextPrinterParameterized3
.L328:
	add	sp, sp, #0x18
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L334:
	.align	2, 0
.L333:
	.word	sTrainerCardFontIds
	.word	sTrainerCardTextColors
	.word	gText_TrainerCardPokedex
	.word	gText_TrainerCardNull
.Lfe30:
	.size	 PrintPokedexOnCard,.Lfe30-PrintPokedexOnCard
	.align	2, 0
	.type	 PrintTimeOnCard,function
	.thumb_func
PrintTimeOnCard:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x14
	ldr	r0, .L341
	ldr	r0, [r0]
	ldrh	r5, [r0, #0xe]
	ldrb	r7, [r0, #0x10]
	ldr	r6, .L341+0x4
	ldr	r2, [r6]
	ldrb	r0, [r2, #0x5]
	cmp	r0, #0
	beq	.L336	@cond_branch
	ldr	r1, .L341+0x8
	add	r0, r2, r1
	ldrh	r5, [r0]
	add	r1, r1, #0x2
	add	r0, r2, r1
	ldrh	r7, [r0]
.L336:
	ldr	r0, .L341+0xc
	cmp	r5, r0
	bls	.L337	@cond_branch
	add	r5, r0, #0
.L337:
	cmp	r7, #0x3b
	bls	.L338	@cond_branch
	mov	r7, #0x3b
.L338:
	ldr	r1, .L341+0x10
	ldr	r4, .L341+0x14
	add	r0, r2, r4
	ldrb	r0, [r0]
	add	r1, r0, r1
	ldrb	r2, [r1]
	ldr	r1, .L341+0x18
	add	r0, r0, r1
	ldrb	r3, [r0]
	mov	r0, #0x32
	str	r0, [sp]
	mov	r0, #0xc
	str	r0, [sp, #0x4]
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelRect
	ldr	r0, [r6]
	add	r0, r0, r4
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L339	@cond_branch
	ldr	r0, .L341+0x1c
	ldrb	r1, [r0, #0x1]
	ldr	r0, .L341+0x20
	str	r0, [sp]
	mov	r0, #0x1
	neg	r0, r0
	str	r0, [sp, #0x4]
	ldr	r0, .L341+0x24
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x14
	mov	r3, #0x58
	bl	AddTextPrinterParameterized3
	b	.L340
.L342:
	.align	2, 0
.L341:
	.word	gSaveBlock2Ptr
	.word	sTrainerCardDataPtr
	.word	0x46c
	.word	0x3e7
	.word	sTrainerCardTimeHoursXPositions
	.word	0x457
	.word	sTrainerCardTimeMinutesYPositions
	.word	sTrainerCardFontIds
	.word	sTrainerCardTextColors
	.word	gText_TrainerCardTime
.L339:
	ldr	r0, .L343
	ldrb	r1, [r0, #0x1]
	ldr	r0, .L343+0x4
	str	r0, [sp]
	mov	r0, #0x1
	neg	r0, r0
	str	r0, [sp, #0x4]
	ldr	r0, .L343+0x8
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r2, #0x10
	mov	r3, #0x59
	bl	AddTextPrinterParameterized3
.L340:
	add	r0, sp, #0xc
	add	r1, r5, #0
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L343
	ldrb	r0, [r0, #0x1]
	mov	sl, r0
	ldr	r1, .L343+0xc
	ldr	r2, .L343+0x10
	mov	r9, r2
	ldr	r0, [r2]
	ldr	r2, .L343+0x14
	mov	r8, r2
	add	r0, r0, r8
	ldrb	r0, [r0]
	add	r1, r0, r1
	ldrb	r2, [r1]
	ldr	r6, .L343+0x18
	add	r0, r0, r6
	ldrb	r3, [r0]
	ldr	r0, .L343+0x4
	str	r0, [sp]
	mov	r5, #0x1
	neg	r5, r5
	str	r5, [sp, #0x4]
	add	r1, sp, #0xc
	str	r1, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, sl
	bl	AddTextPrinterParameterized3
	ldr	r1, .L343+0x1c
	mov	r2, r9
	ldr	r4, [r2]
	mov	r2, r8
	add	r0, r4, r2
	ldrb	r0, [r0]
	add	r1, r0, r1
	ldrb	r2, [r1]
	add	r0, r0, r6
	ldrb	r3, [r0]
	ldr	r1, .L343+0x20
	ldrb	r0, [r4, #0x7]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [sp]
	str	r5, [sp, #0x4]
	ldr	r0, .L343+0x24
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, sl
	bl	AddTextPrinterParameterized3
	add	r0, sp, #0xc
	add	r1, r7, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L343+0x28
	mov	r2, r9
	ldr	r0, [r2]
	add	r0, r0, r8
	ldrb	r0, [r0]
	add	r1, r0, r1
	ldrb	r2, [r1]
	add	r0, r0, r6
	ldrb	r3, [r0]
	ldr	r0, .L343+0x4
	str	r0, [sp]
	str	r5, [sp, #0x4]
	add	r1, sp, #0xc
	str	r1, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, sl
	bl	AddTextPrinterParameterized3
	add	sp, sp, #0x14
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L344:
	.align	2, 0
.L343:
	.word	sTrainerCardFontIds
	.word	sTrainerCardTextColors
	.word	gText_TrainerCardTime
	.word	sTrainerCardTimeHoursXPositions
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	sTrainerCardTimeMinutesYPositions
	.word	sTrainerCardTimeHoursYPositions
	.word	sTimeColonTextColors
	.word	gText_Colon2
	.word	sTrainerCardTimeMinutesXPositions
.Lfe31:
	.size	 PrintTimeOnCard,.Lfe31-PrintTimeOnCard
	.align	2, 0
	.type	 PrintProfilePhraseOnCard,function
	.thumb_func
PrintProfilePhraseOnCard:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	ldr	r7, .L347
	ldr	r1, [r7]
	ldrb	r0, [r1, #0x5]
	cmp	r0, #0
	beq	.L346	@cond_branch
	ldr	r0, .L347+0x4
	mov	r8, r0
	ldr	r4, .L347+0x8
	add	r0, r1, r4
	ldrb	r0, [r0]
	add	r0, r0, r8
	ldrb	r3, [r0]
	ldr	r6, .L347+0xc
	str	r6, [sp]
	mov	r5, #0x1
	neg	r5, r5
	str	r5, [sp, #0x4]
	add	r0, r1, #0
	add	r0, r0, #0x19
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x2
	mov	r2, #0xa
	bl	AddTextPrinterParameterized3
	ldr	r1, [r7]
	add	r1, r1, #0x19
	mov	r0, #0x2
	mov	r2, #0x0
	bl	GetStringWidth
	add	r2, r0, #0
	add	r2, r2, #0x10
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r1, [r7]
	add	r0, r1, r4
	ldrb	r0, [r0]
	add	r0, r0, r8
	ldrb	r3, [r0]
	str	r6, [sp]
	str	r5, [sp, #0x4]
	add	r1, r1, #0x26
	str	r1, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x2
	bl	AddTextPrinterParameterized3
	ldr	r0, .L347+0x10
	mov	r8, r0
	ldr	r1, [r7]
	add	r0, r1, r4
	ldrb	r0, [r0]
	add	r0, r0, r8
	ldrb	r3, [r0]
	str	r6, [sp]
	str	r5, [sp, #0x4]
	add	r1, r1, #0x33
	str	r1, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x2
	mov	r2, #0xa
	bl	AddTextPrinterParameterized3
	ldr	r1, [r7]
	add	r1, r1, #0x33
	mov	r0, #0x2
	mov	r2, #0x0
	bl	GetStringWidth
	add	r2, r0, #0
	add	r2, r2, #0x10
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r1, [r7]
	add	r4, r1, r4
	ldrb	r0, [r4]
	add	r0, r0, r8
	ldrb	r3, [r0]
	str	r6, [sp]
	str	r5, [sp, #0x4]
	add	r1, r1, #0x40
	str	r1, [sp, #0x8]
	mov	r0, #0x1
	mov	r1, #0x2
	bl	AddTextPrinterParameterized3
.L346:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L348:
	.align	2, 0
.L347:
	.word	sTrainerCardDataPtr
	.word	sTrainerCardProfilePhraseXPositions
	.word	0x457
	.word	sTrainerCardTextColors
	.word	sTrainerCardProfilePhraseYPositions
.Lfe32:
	.size	 PrintProfilePhraseOnCard,.Lfe32-PrintProfilePhraseOnCard
	.align	2, 0
	.type	 BufferNameForCardBack,function
	.thumb_func
BufferNameForCardBack:
	push	{r4, lr}
	ldr	r4, .L351
	ldr	r1, [r4]
	add	r0, r1, #0
	add	r0, r0, #0x4d
	ldr	r2, .L351+0x4
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, [r4]
	add	r0, r1, #0
	add	r0, r0, #0x4d
	ldr	r2, .L351+0x8
	add	r1, r1, r2
	ldrb	r1, [r1]
	bl	ConvertInternationalString
	ldr	r4, [r4]
	ldr	r1, .L351+0xc
	add	r0, r4, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L350	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #0x4d
	ldr	r1, .L351+0x10
	bl	StringAppend
.L350:
	pop	{r4}
	pop	{r0}
	bx	r0
.L352:
	.align	2, 0
.L351:
	.word	sTrainerCardDataPtr
	.word	0x48c
	.word	0x7bcf
	.word	0x457
	.word	gText_Var1sTrainerCard
.Lfe33:
	.size	 BufferNameForCardBack,.Lfe33-BufferNameForCardBack
	.align	2, 0
	.type	 PrintNameOnCardBack,function
	.thumb_func
PrintNameOnCardBack:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r6, .L356
	ldr	r4, [r6]
	ldr	r0, .L356+0x4
	add	r2, r4, r0
	ldrb	r0, [r2]
	cmp	r0, #0
	bne	.L354	@cond_branch
	ldr	r0, .L356+0x8
	ldrb	r1, [r0, #0x1]
	ldr	r0, .L356+0xc
	ldrb	r3, [r2]
	add	r0, r3, r0
	ldrb	r2, [r0]
	ldr	r0, .L356+0x10
	add	r3, r3, r0
	ldrb	r3, [r3]
	ldr	r0, .L356+0x14
	str	r0, [sp]
	mov	r0, #0x1
	neg	r0, r0
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	add	r0, r0, #0x4d
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	bl	AddTextPrinterParameterized3
	b	.L355
.L357:
	.align	2, 0
.L356:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	sTrainerCardFontIds
	.word	sTrainerCardBackNameXPositions
	.word	sTrainerCardBackNameYPositions
	.word	sTrainerCardTextColors
.L354:
	ldr	r0, .L358
	ldrb	r5, [r0, #0x1]
	add	r4, r4, #0x4d
	add	r0, r5, #0
	mov	r1, #0x2
	bl	GetFontAttribute
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	bl	GetStringWidth
	ldr	r2, .L358+0x4
	ldr	r4, [r6]
	ldr	r3, .L358+0x8
	add	r1, r4, r3
	ldrb	r1, [r1]
	add	r2, r1, r2
	ldrb	r2, [r2]
	sub	r2, r2, r0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	ldr	r0, .L358+0xc
	add	r1, r1, r0
	ldrb	r3, [r1]
	ldr	r0, .L358+0x10
	str	r0, [sp]
	mov	r0, #0x1
	neg	r0, r0
	str	r0, [sp, #0x4]
	add	r4, r4, #0x4d
	str	r4, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r5, #0
	bl	AddTextPrinterParameterized3
.L355:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L359:
	.align	2, 0
.L358:
	.word	sTrainerCardFontIds
	.word	sTrainerCardBackNameXPositions
	.word	0x457
	.word	sTrainerCardBackNameYPositions
	.word	sTrainerCardTextColors
.Lfe34:
	.size	 PrintNameOnCardBack,.Lfe34-PrintNameOnCardBack
	.align	2, 0
	.type	 BufferHofDebutTime,function
	.thumb_func
BufferHofDebutTime:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	ldr	r5, .L362
	ldr	r1, [r5]
	ldrb	r0, [r1, #0xb]
	cmp	r0, #0
	beq	.L361	@cond_branch
	ldr	r2, .L362+0x4
	add	r0, r1, r2
	ldrh	r1, [r0]
	mov	r0, sp
	mov	r2, #0x1
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r5]
	add	r0, r0, #0x93
	mov	r1, sp
	bl	StringCopy
	ldr	r0, [r5]
	add	r0, r0, #0x93
	ldr	r4, .L362+0x8
	add	r1, r4, #0
	mov	r2, #0x2
	bl	StringAppendN
	ldr	r0, [r5]
	ldr	r1, .L362+0xc
	add	r0, r0, r1
	ldrh	r1, [r0]
	mov	r0, sp
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r5]
	add	r0, r0, #0x93
	mov	r1, sp
	mov	r2, #0x3
	bl	StringAppendN
	ldr	r0, [r5]
	add	r0, r0, #0x93
	add	r1, r4, #0
	mov	r2, #0x2
	bl	StringAppendN
	ldr	r0, [r5]
	ldr	r2, .L362+0x10
	add	r0, r0, r2
	ldrh	r1, [r0]
	mov	r0, sp
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r5]
	add	r0, r0, #0x93
	mov	r1, sp
	mov	r2, #0x3
	bl	StringAppendN
.L361:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L363:
	.align	2, 0
.L362:
	.word	sTrainerCardDataPtr
	.word	0x462
	.word	gText_Colon2
	.word	0x464
	.word	0x466
.Lfe35:
	.size	 BufferHofDebutTime,.Lfe35-BufferHofDebutTime
	.align	2, 0
	.type	 PrintHofDebutTimeOnCard,function
	.thumb_func
PrintHofDebutTimeOnCard:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r6, .L366
	ldr	r2, [r6]
	ldrb	r0, [r2, #0xb]
	cmp	r0, #0
	beq	.L365	@cond_branch
	ldr	r0, .L366+0x4
	ldrb	r5, [r0, #0x1]
	ldr	r1, .L366+0x8
	ldr	r3, .L366+0xc
	add	r0, r2, r3
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r2, [r0]
	ldr	r0, .L366+0x10
	str	r0, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r0, .L366+0x14
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r3, #0x23
	bl	AddTextPrinterParameterized3
	ldr	r0, .L366+0x18
	str	r0, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, [r6]
	add	r0, r0, #0x93
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0xa4
	mov	r3, #0x23
	bl	AddTextPrinterParameterized3
.L365:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L367:
	.align	2, 0
.L366:
	.word	sTrainerCardDataPtr
	.word	sTrainerCardFontIds
	.word	sTrainerCardHofDebutXPositions
	.word	0x457
	.word	sTrainerCardTextColors
	.word	gText_HallOfFameDebut
	.word	sTrainerCardStatColors
.Lfe36:
	.size	 PrintHofDebutTimeOnCard,.Lfe36-PrintHofDebutTimeOnCard
	.align	2, 0
	.type	 BufferLinkBattleResults,function
	.thumb_func
BufferLinkBattleResults:
	push	{r4, lr}
	add	sp, sp, #-0x20
	ldr	r4, .L370
	ldr	r1, [r4]
	ldrb	r0, [r1, #0xc]
	cmp	r0, #0
	beq	.L369	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #0xd9
	ldr	r2, .L370+0x4
	ldr	r3, .L370+0x8
	add	r1, r1, r3
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, [r4]
	ldr	r1, .L370+0xc
	add	r0, r0, r1
	ldr	r1, .L370+0x10
	bl	StringCopy
	ldr	r0, [r4]
	mov	r3, #0x8e
	lsl	r3, r3, #0x3
	add	r0, r0, r3
	ldrh	r1, [r0]
	mov	r0, sp
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r4]
	ldr	r1, .L370+0x14
	add	r0, r0, r1
	mov	r1, sp
	bl	StringCopy
	ldr	r0, [r4]
	ldr	r3, .L370+0x18
	add	r0, r0, r3
	ldrh	r1, [r0]
	mov	r0, sp
	mov	r2, #0x1
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	ldr	r0, [r4]
	ldr	r1, .L370+0x1c
	add	r0, r0, r1
	mov	r1, sp
	bl	StringCopy
.L369:
	add	sp, sp, #0x20
	pop	{r4}
	pop	{r0}
	bx	r0
.L371:
	.align	2, 0
.L370:
	.word	sTrainerCardDataPtr
	.word	sLinkTrainerCardRecordStrings
	.word	0x457
	.word	0x11f
	.word	gText_WinLossRatio
	.word	0x165
	.word	0x472
	.word	0x1ab
.Lfe37:
	.size	 BufferLinkBattleResults,.Lfe37-BufferLinkBattleResults
	.align	2, 0
	.type	 PrintLinkBattleResultsOnCard,function
	.thumb_func
PrintLinkBattleResultsOnCard:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0xc
	ldr	r7, .L374
	ldr	r3, [r7]
	ldrb	r0, [r3, #0xc]
	cmp	r0, #0
	beq	.L373	@cond_branch
	ldr	r0, .L374+0x4
	ldrb	r6, [r0, #0x1]
	ldr	r1, .L374+0x8
	ldr	r2, .L374+0xc
	add	r0, r3, r2
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r2, [r0]
	ldr	r5, .L374+0x10
	str	r5, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	add	r0, r3, #0
	add	r0, r0, #0xd9
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	mov	r3, #0x33
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, [r7]
	ldr	r1, .L374+0x14
	add	r0, r0, r1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	mov	r2, #0x82
	mov	r3, #0x33
	bl	AddTextPrinterParameterized3
	ldr	r5, .L374+0x18
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, [r7]
	ldr	r2, .L374+0x1c
	add	r0, r0, r2
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	mov	r2, #0x90
	mov	r3, #0x33
	bl	AddTextPrinterParameterized3
	str	r5, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, [r7]
	ldr	r1, .L374+0x20
	add	r0, r0, r1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r6, #0
	mov	r2, #0xc0
	mov	r3, #0x33
	bl	AddTextPrinterParameterized3
.L373:
	add	sp, sp, #0xc
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L375:
	.align	2, 0
.L374:
	.word	sTrainerCardDataPtr
	.word	sTrainerCardFontIds
	.word	sTrainerCardHofDebutXPositions
	.word	0x457
	.word	sTrainerCardTextColors
	.word	0x11f
	.word	sTrainerCardStatColors
	.word	0x165
	.word	0x1ab
.Lfe38:
	.size	 PrintLinkBattleResultsOnCard,.Lfe38-PrintLinkBattleResultsOnCard
	.align	2, 0
	.type	 BufferNumTrades,function
	.thumb_func
BufferNumTrades:
	push	{r4, lr}
	ldr	r4, .L378
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x10]
	cmp	r0, #0
	beq	.L377	@cond_branch
	ldr	r2, .L378+0x4
	add	r0, r1, r2
	ldr	r1, .L378+0x8
	bl	StringCopy
	ldr	r1, [r4]
	ldr	r2, .L378+0xc
	add	r0, r1, r2
	ldr	r2, .L378+0x10
	add	r1, r1, r2
	ldrh	r1, [r1]
	mov	r2, #0x1
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
.L377:
	pop	{r4}
	pop	{r0}
	bx	r0
.L379:
	.align	2, 0
.L378:
	.word	sTrainerCardDataPtr
	.word	0x1f1
	.word	gText_PokemonTrades
	.word	0x237
	.word	0x47c
.Lfe39:
	.size	 BufferNumTrades,.Lfe39-BufferNumTrades
	.align	2, 0
	.type	 PrintTradesStringOnCard,function
	.thumb_func
PrintTradesStringOnCard:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r6, .L382
	ldr	r3, [r6]
	ldrb	r0, [r3, #0x10]
	cmp	r0, #0
	beq	.L381	@cond_branch
	ldr	r0, .L382+0x4
	ldrb	r5, [r0, #0x1]
	ldr	r1, .L382+0x8
	ldr	r2, .L382+0xc
	add	r0, r3, r2
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r2, [r0]
	ldr	r0, .L382+0x10
	str	r0, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r1, .L382+0x14
	add	r0, r3, r1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r3, #0x43
	bl	AddTextPrinterParameterized3
	ldr	r0, .L382+0x18
	str	r0, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, [r6]
	ldr	r2, .L382+0x1c
	add	r0, r0, r2
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0xba
	mov	r3, #0x43
	bl	AddTextPrinterParameterized3
.L381:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L383:
	.align	2, 0
.L382:
	.word	sTrainerCardDataPtr
	.word	sTrainerCardFontIds
	.word	sTrainerCardHofDebutXPositions
	.word	0x457
	.word	sTrainerCardTextColors
	.word	0x1f1
	.word	sTrainerCardStatColors
	.word	0x237
.Lfe40:
	.size	 PrintTradesStringOnCard,.Lfe40-PrintTradesStringOnCard
	.align	2, 0
	.type	 BufferBerryCrushPoints,function
	.thumb_func
BufferBerryCrushPoints:
	push	{r4, lr}
	ldr	r4, .L386
	ldr	r1, [r4]
	ldr	r2, .L386+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L385	@cond_branch
	ldr	r2, .L386+0x8
	add	r0, r1, r2
	ldr	r1, .L386+0xc
	bl	StringCopy
	ldr	r1, [r4]
	ldr	r2, .L386+0x10
	add	r0, r1, r2
	mov	r2, #0x93
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	ldr	r1, [r1]
	mov	r2, #0x1
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
.L385:
	pop	{r4}
	pop	{r0}
	bx	r0
.L387:
	.align	2, 0
.L386:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	0x27d
	.word	gText_BerryCrushes
	.word	0x2c3
.Lfe41:
	.size	 BufferBerryCrushPoints,.Lfe41-BufferBerryCrushPoints
	.align	2, 0
	.type	 PrintBerryCrushStringOnCard,function
	.thumb_func
PrintBerryCrushStringOnCard:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r6, .L390
	ldr	r3, [r6]
	ldr	r0, .L390+0x4
	add	r2, r3, r0
	ldrb	r0, [r2]
	cmp	r0, #0x1
	beq	.L389	@cond_branch
	mov	r1, #0x93
	lsl	r1, r1, #0x3
	add	r0, r3, r1
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L389	@cond_branch
	ldr	r0, .L390+0x8
	ldrb	r5, [r0, #0x1]
	ldr	r1, .L390+0xc
	ldrb	r0, [r2]
	add	r0, r0, r1
	ldrb	r2, [r0]
	ldr	r0, .L390+0x10
	str	r0, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r1, .L390+0x14
	add	r0, r3, r1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r3, #0x63
	bl	AddTextPrinterParameterized3
	ldr	r0, .L390+0x18
	str	r0, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, [r6]
	ldr	r1, .L390+0x1c
	add	r0, r0, r1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0xba
	mov	r3, #0x63
	bl	AddTextPrinterParameterized3
.L389:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L391:
	.align	2, 0
.L390:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	sTrainerCardFontIds
	.word	sTrainerCardHofDebutXPositions
	.word	sTrainerCardTextColors
	.word	0x27d
	.word	sTrainerCardStatColors
	.word	0x2c3
.Lfe42:
	.size	 PrintBerryCrushStringOnCard,.Lfe42-PrintBerryCrushStringOnCard
	.align	2, 0
	.type	 BufferUnionRoomStats,function
	.thumb_func
BufferUnionRoomStats:
	push	{r4, lr}
	ldr	r4, .L394
	ldr	r1, [r4]
	ldr	r2, .L394+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L393	@cond_branch
	ldr	r2, .L394+0x8
	add	r0, r1, r2
	ldr	r1, .L394+0xc
	bl	StringCopy
	ldr	r1, [r4]
	ldr	r2, .L394+0x10
	add	r0, r1, r2
	ldr	r2, .L394+0x14
	add	r1, r1, r2
	ldr	r1, [r1]
	mov	r2, #0x1
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
.L393:
	pop	{r4}
	pop	{r0}
	bx	r0
.L395:
	.align	2, 0
.L394:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	0x309
	.word	gText_UnionRoomTradesBattles
	.word	0x34f
	.word	0x49c
.Lfe43:
	.size	 BufferUnionRoomStats,.Lfe43-BufferUnionRoomStats
	.align	2, 0
	.type	 PrintUnionStringOnCard,function
	.thumb_func
PrintUnionStringOnCard:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r6, .L398
	ldr	r3, [r6]
	ldr	r0, .L398+0x4
	add	r2, r3, r0
	ldrb	r0, [r2]
	cmp	r0, #0x1
	beq	.L397	@cond_branch
	ldr	r1, .L398+0x8
	add	r0, r3, r1
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L397	@cond_branch
	ldr	r0, .L398+0xc
	ldrb	r5, [r0, #0x1]
	ldr	r1, .L398+0x10
	ldrb	r0, [r2]
	add	r0, r0, r1
	ldrb	r2, [r0]
	ldr	r0, .L398+0x14
	str	r0, [sp]
	mov	r4, #0x1
	neg	r4, r4
	str	r4, [sp, #0x4]
	ldr	r1, .L398+0x18
	add	r0, r3, r1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r3, #0x53
	bl	AddTextPrinterParameterized3
	ldr	r0, .L398+0x1c
	str	r0, [sp]
	str	r4, [sp, #0x4]
	ldr	r0, [r6]
	ldr	r1, .L398+0x20
	add	r0, r0, r1
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	add	r1, r5, #0
	mov	r2, #0xba
	mov	r3, #0x53
	bl	AddTextPrinterParameterized3
.L397:
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L399:
	.align	2, 0
.L398:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	0x49c
	.word	sTrainerCardFontIds
	.word	sTrainerCardHofDebutXPositions
	.word	sTrainerCardTextColors
	.word	0x309
	.word	sTrainerCardStatColors
	.word	0x34f
.Lfe44:
	.size	 PrintUnionStringOnCard,.Lfe44-PrintUnionStringOnCard
	.align	2, 0
	.type	 PrintPokemonIconsOnCard,function
	.thumb_func
PrintPokemonIconsOnCard:
	push	{r4, r5, lr}
	add	sp, sp, #-0x20
	ldr	r1, .L408
	add	r0, sp, #0x10
	mov	r2, #0x6
	bl	memcpy
	add	r4, sp, #0x18
	ldr	r1, .L408+0x4
	add	r0, r4, #0
	mov	r2, #0x6
	bl	memcpy
	ldr	r0, .L408+0x8
	ldr	r0, [r0]
	ldr	r1, .L408+0xc
	add	r0, r0, r1
	ldrb	r0, [r0]
	add	r5, r4, #0
	cmp	r0, #0x1
	beq	.L401	@cond_branch
	mov	r4, #0x0
.L405:
	ldr	r0, .L408+0x8
	ldr	r0, [r0]
	lsl	r1, r4, #0x1
	mov	r2, #0x96
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	add	r1, r0, r1
	ldrh	r0, [r1]
	cmp	r0, #0
	beq	.L404	@cond_branch
	bl	GetMonIconPaletteIndexFromSpecies
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r4, #0x14
	mov	r2, #0xe0
	lsl	r2, r2, #0x10
	add	r1, r1, r2
	lsr	r1, r1, #0x10
	add	r2, r5, r4
	ldrb	r2, [r2]
	add	r2, r2, #0x3
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, #0x4
	str	r3, [sp]
	str	r3, [sp, #0x4]
	add	r0, r0, sp
	add	r0, r0, #0x10
	ldrb	r0, [r0]
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	str	r0, [sp, #0xc]
	mov	r0, #0x3
	mov	r3, #0xf
	bl	WriteSequenceToBgTilemapBuffer
.L404:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L405	@cond_branch
.L401:
	add	sp, sp, #0x20
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L409:
	.align	2, 0
.L408:
	.word	sPokemonIconPalSlots
	.word	sPokemonIconXOffsets
	.word	sTrainerCardDataPtr
	.word	0x457
.Lfe45:
	.size	 PrintPokemonIconsOnCard,.Lfe45-PrintPokemonIconsOnCard
	.align	2, 0
	.type	 LoadMonIconGfx,function
	.thumb_func
LoadMonIconGfx:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L424
	ldr	r4, .L424+0x4
	ldr	r1, [r4]
	ldr	r5, .L424+0x8
	add	r1, r1, r5
	mov	r2, #0x60
	bl	CpuSet
	ldr	r4, [r4]
	ldr	r1, .L424+0xc
	add	r0, r4, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	beq	.L413	@cond_branch
	cmp	r0, #0x1
	ble	.L411	@cond_branch
	cmp	r0, #0x2
	beq	.L414	@cond_branch
	cmp	r0, #0x3
	beq	.L415	@cond_branch
	b	.L411
.L425:
	.align	2, 0
.L424:
	.word	gMonIconPalettes
	.word	sTrainerCardDataPtr
	.word	0x396
	.word	0x4aa
.L413:
	ldr	r2, .L426
	add	r0, r4, r2
	mov	r1, #0x0
	str	r1, [sp]
	mov	r1, #0x60
	mov	r2, #0x0
	mov	r3, #0x0
	bl	TintPalette_CustomTone
	b	.L411
.L427:
	.align	2, 0
.L426:
	.word	0x396
.L414:
	add	r0, r4, r5
	mov	r2, #0xfa
	lsl	r2, r2, #0x1
	mov	r3, #0xa5
	lsl	r3, r3, #0x1
	mov	r1, #0x9b
	lsl	r1, r1, #0x1
	str	r1, [sp]
	mov	r1, #0x60
	bl	TintPalette_CustomTone
	b	.L411
.L415:
	add	r0, r4, r5
	mov	r1, #0x60
	bl	TintPalette_SepiaTone
.L411:
	ldr	r0, .L428
	ldr	r0, [r0]
	ldr	r1, .L428+0x4
	add	r0, r0, r1
	mov	r1, #0x50
	mov	r2, #0xc0
	bl	LoadPalette
	mov	r4, #0x0
.L422:
	ldr	r0, .L428
	ldr	r0, [r0]
	lsl	r1, r4, #0x1
	mov	r2, #0x96
	lsl	r2, r2, #0x3
	add	r0, r0, r2
	add	r0, r0, r1
	ldrh	r0, [r0]
	mov	r1, #0x0
	bl	GetMonIconTiles
	add	r1, r0, #0
	lsl	r3, r4, #0x14
	mov	r0, #0x80
	lsl	r0, r0, #0xe
	add	r3, r3, r0
	lsr	r3, r3, #0x10
	mov	r0, #0x3
	mov	r2, #0x80
	lsl	r2, r2, #0x2
	bl	LoadBgTiles
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x5
	bls	.L422	@cond_branch
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L429:
	.align	2, 0
.L428:
	.word	sTrainerCardDataPtr
	.word	0x396
.Lfe46:
	.size	 LoadMonIconGfx,.Lfe46-LoadMonIconGfx
	.align	2, 0
	.type	 PrintStickersOnCard,function
	.thumb_func
PrintStickersOnCard:
	push	{r4, lr}
	add	sp, sp, #-0x14
	ldr	r1, .L438
	add	r0, sp, #0x10
	mov	r2, #0x4
	bl	memcpy
	ldr	r0, .L438+0x4
	ldr	r1, [r0]
	ldr	r2, .L438+0x8
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L431	@cond_branch
	add	r2, r2, #0x51
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L431	@cond_branch
	mov	r4, #0x0
.L435:
	ldr	r0, .L438+0x4
	ldr	r0, [r0]
	ldr	r1, .L438+0xc
	add	r0, r0, r1
	add	r0, r0, r4
	ldrb	r3, [r0]
	cmp	r3, #0
	beq	.L434	@cond_branch
	lsl	r1, r4, #0x12
	mov	r2, #0xa0
	lsl	r2, r2, #0x11
	add	r1, r1, r2
	lsr	r1, r1, #0x10
	lsl	r2, r4, #0x1
	add	r2, r2, r4
	add	r2, r2, #0x2
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r0, #0x2
	str	r0, [sp]
	str	r0, [sp, #0x4]
	sub	r0, r3, #0x1
	add	r0, r0, sp
	add	r0, r0, #0x10
	ldrb	r0, [r0]
	str	r0, [sp, #0x8]
	mov	r0, #0x1
	str	r0, [sp, #0xc]
	mov	r0, #0x3
	mov	r3, #0x2
	bl	WriteSequenceToBgTilemapBuffer
.L434:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x2
	bls	.L435	@cond_branch
.L431:
	add	sp, sp, #0x14
	pop	{r4}
	pop	{r0}
	bx	r0
.L439:
	.align	2, 0
.L438:
	.word	sStickerPalSlots
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	0x4ac
.Lfe47:
	.size	 PrintStickersOnCard,.Lfe47-PrintStickersOnCard
	.align	2, 0
	.type	 LoadStickerGfx,function
	.thumb_func
LoadStickerGfx:
	push	{lr}
	ldr	r0, .L441
	mov	r1, #0xb0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L441+0x4
	mov	r1, #0xc0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L441+0x8
	mov	r1, #0xd0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L441+0xc
	mov	r1, #0xe0
	mov	r2, #0x20
	bl	LoadPalette
	ldr	r0, .L441+0x10
	ldr	r1, [r0]
	ldr	r0, .L441+0x14
	add	r1, r1, r0
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	mov	r0, #0x3
	mov	r3, #0x80
	bl	LoadBgTiles
	pop	{r0}
	bx	r0
.L442:
	.align	2, 0
.L441:
	.word	sTrainerCardStickerPal1
	.word	sTrainerCardStickerPal2
	.word	sTrainerCardStickerPal3
	.word	sTrainerCardStickerPal4
	.word	sTrainerCardDataPtr
	.word	0x16cc
.Lfe48:
	.size	 LoadStickerGfx,.Lfe48-LoadStickerGfx
	.align	2, 0
	.type	 DrawTrainerCardWindow,function
	.thumb_func
DrawTrainerCardWindow:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe49:
	.size	 DrawTrainerCardWindow,.Lfe49-DrawTrainerCardWindow
	.align	2, 0
	.type	 SetTrainerCardBgsAndPals,function
	.thumb_func
SetTrainerCardBgsAndPals:
	push	{r4, lr}
	add	sp, sp, #-0x8
	ldr	r0, .L466
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0x6
	bls	.LCB4615
	b	.L460	@long jump
.LCB4615:
	lsl	r0, r0, #0x2
	ldr	r1, .L466+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L467:
	.align	2, 0
.L466:
	.word	sTrainerCardDataPtr
	.word	.L461
	.align	2, 0
	.align	2, 0
.L461:
	.word	.L446
	.word	.L447
	.word	.L448
	.word	.L451
	.word	.L454
	.word	.L458
	.word	.L459
.L446:
	ldr	r0, .L468
	ldr	r1, [r0]
	ldr	r0, .L468+0x4
	add	r1, r1, r0
	mov	r2, #0x80
	lsl	r2, r2, #0x3
	mov	r0, #0x3
	b	.L463
.L469:
	.align	2, 0
.L468:
	.word	sTrainerCardDataPtr
	.word	0x12cc
.L447:
	ldr	r0, .L470
	ldr	r1, [r0]
	ldr	r2, .L470+0x4
	add	r1, r1, r2
	sub	r2, r2, #0xcc
	mov	r0, #0x0
.L463:
	mov	r3, #0x0
	bl	LoadBgTiles
	b	.L445
.L471:
	.align	2, 0
.L470:
	.word	sTrainerCardDataPtr
	.word	0x18cc
.L448:
	ldr	r0, .L472
	ldr	r2, [r0]
	ldr	r3, .L472+0x4
	add	r0, r2, r3
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L449	@cond_branch
	ldr	r1, .L472+0x8
	add	r3, r3, #0x6
	b	.L464
.L473:
	.align	2, 0
.L472:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	sHoennTrainerCardPals
.L449:
	ldr	r1, .L474
	ldr	r3, .L474+0x4
.L464:
	add	r0, r2, r3
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x60
	bl	LoadPalette
	b	.L445
.L475:
	.align	2, 0
.L474:
	.word	sKantoTrainerCardPals
	.word	0x45d
.L451:
	ldr	r0, .L476
	ldr	r0, [r0]
	ldr	r1, .L476+0x4
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L452	@cond_branch
	ldr	r0, .L476+0x8
	mov	r1, #0x30
	b	.L465
.L477:
	.align	2, 0
.L476:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	sHoennTrainerCardBadges_Pal
.L452:
	ldr	r0, .L478
	mov	r1, #0x30
	b	.L465
.L479:
	.align	2, 0
.L478:
	.word	sKantoTrainerCardBadges_Pal
.L454:
	ldr	r0, .L480
	ldr	r1, [r0]
	ldr	r2, .L480+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L455	@cond_branch
	ldr	r3, .L480+0x8
	add	r0, r1, r3
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L445	@cond_branch
	ldr	r0, .L480+0xc
	mov	r1, #0x10
	b	.L465
.L481:
	.align	2, 0
.L480:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	0x45c
	.word	sHoennTrainerCardFemaleBg_Pal
.L455:
	ldr	r2, .L482
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L445	@cond_branch
	ldr	r0, .L482+0x4
	mov	r1, #0x10
	b	.L465
.L483:
	.align	2, 0
.L482:
	.word	0x45c
	.word	sKantoTrainerCardFemaleBg_Pal
.L458:
	ldr	r0, .L484
	mov	r1, #0x40
.L465:
	mov	r2, #0x20
	bl	LoadPalette
	b	.L445
.L485:
	.align	2, 0
.L484:
	.word	sTrainerCardStar_Pal
.L459:
	ldr	r4, .L486
	ldr	r1, [r4]
	ldr	r3, .L486+0x4
	add	r1, r1, r3
	mov	r0, #0x0
	bl	SetBgTilemapBuffer
	ldr	r1, [r4]
	ldr	r0, .L486+0x8
	add	r1, r1, r0
	mov	r0, #0x2
	bl	SetBgTilemapBuffer
	b	.L445
.L487:
	.align	2, 0
.L486:
	.word	sTrainerCardDataPtr
	.word	0x3bcc
	.word	0x5bcc
.L460:
	mov	r4, #0x20
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x2
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	str	r4, [sp]
	str	r4, [sp, #0x4]
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	mov	r0, #0x1
	b	.L462
.L445:
	ldr	r0, .L488
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x3]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x3]
	mov	r0, #0x0
.L462:
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.L489:
	.align	2, 0
.L488:
	.word	sTrainerCardDataPtr
.Lfe50:
	.size	 SetTrainerCardBgsAndPals,.Lfe50-SetTrainerCardBgsAndPals
	.align	2, 0
	.type	 DrawCardScreenBackground,function
	.thumb_func
DrawCardScreenBackground:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	ldr	r0, .L504
	ldr	r0, [r0]
	ldr	r1, .L504+0x4
	add	r6, r0, r1
	mov	r1, #0x0
.L494:
	mov	r2, #0x0
	lsl	r5, r1, #0x10
	asr	r1, r5, #0x10
	lsl	r3, r1, #0x5
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	lsl	r4, r0, #0x1
.L498:
	lsl	r0, r2, #0x10
	asr	r1, r0, #0x10
	add	r2, r0, #0
	cmp	r1, #0x1d
	bgt	.L499	@cond_branch
	add	r0, r3, r1
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	add	r1, r4, r1
	lsl	r1, r1, #0x1
	add	r1, r1, r7
	ldrh	r1, [r1]
	b	.L503
.L505:
	.align	2, 0
.L504:
	.word	sTrainerCardDataPtr
	.word	0x5bcc
.L499:
	add	r0, r3, r1
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	ldrh	r1, [r7]
.L503:
	strh	r1, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r2, r1
	lsr	r2, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1f
	ble	.L498	@cond_branch
	add	r0, r5, r1
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x13
	ble	.L494	@cond_branch
	mov	r0, #0x2
	bl	CopyBgTilemapBufferToVram
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe51:
	.size	 DrawCardScreenBackground,.Lfe51-DrawCardScreenBackground
	.align	2, 0
	.type	 DrawCardFrontOrBack,function
	.thumb_func
DrawCardFrontOrBack:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	ldr	r0, .L520
	ldr	r0, [r0]
	ldr	r1, .L520+0x4
	add	r6, r0, r1
	mov	r1, #0x0
.L510:
	mov	r2, #0x0
	lsl	r5, r1, #0x10
	asr	r1, r5, #0x10
	lsl	r3, r1, #0x5
	lsl	r0, r1, #0x4
	sub	r0, r0, r1
	lsl	r4, r0, #0x1
.L514:
	lsl	r0, r2, #0x10
	asr	r1, r0, #0x10
	add	r2, r0, #0
	cmp	r1, #0x1d
	bgt	.L515	@cond_branch
	add	r0, r3, r1
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	add	r1, r4, r1
	lsl	r1, r1, #0x1
	add	r1, r1, r7
	ldrh	r1, [r1]
	b	.L519
.L521:
	.align	2, 0
.L520:
	.word	sTrainerCardDataPtr
	.word	0x3bcc
.L515:
	add	r0, r3, r1
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	ldrh	r1, [r7]
.L519:
	strh	r1, [r0]
	mov	r1, #0x80
	lsl	r1, r1, #0x9
	add	r0, r2, r1
	lsr	r2, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x1f
	ble	.L514	@cond_branch
	add	r0, r5, r1
	lsr	r1, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x13
	ble	.L510	@cond_branch
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe52:
	.size	 DrawCardFrontOrBack,.Lfe52-DrawCardFrontOrBack
	.align	2, 0
	.type	 DrawStarsAndBadgesOnCard,function
	.thumb_func
DrawStarsAndBadgesOnCard:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	mov	r0, #0xc0
	mov	r8, r0
	mov	r2, #0x3
	mov	sl, r2
	ldr	r2, .L530
	ldr	r4, .L530+0x4
	ldr	r1, [r4]
	ldr	r3, .L530+0x8
	add	r0, r1, r3
	ldrb	r0, [r0]
	add	r0, r0, r2
	ldrb	r3, [r0]
	ldr	r0, .L530+0xc
	add	r1, r1, r0
	ldrb	r0, [r1]
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r0, #0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x8f
	mov	r2, #0xf
	bl	FillBgTilemapBufferRect
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x5]
	cmp	r0, #0
	bne	.L523	@cond_branch
	mov	r2, #0x4
	mov	r9, r2
	mov	r2, #0x0
	mov	r6, #0x1
.L527:
	ldr	r0, .L530+0x4
	ldr	r1, [r0]
	lsl	r0, r2, #0x10
	asr	r7, r0, #0x10
	add	r1, r1, #0x11
	add	r1, r1, r7
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L526	@cond_branch
	mov	r3, r9
	lsl	r5, r3, #0x18
	lsr	r5, r5, #0x18
	str	r6, [sp]
	str	r6, [sp, #0x4]
	mov	r0, sl
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, r8
	add	r2, r5, #0
	mov	r3, #0x10
	bl	FillBgTilemapBufferRect
	mov	r1, r8
	add	r1, r1, #0x1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r4, r9
	add	r4, r4, #0x1
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r6, [sp]
	str	r6, [sp, #0x4]
	mov	r2, sl
	str	r2, [sp, #0x8]
	mov	r0, #0x3
	add	r2, r4, #0
	mov	r3, #0x10
	bl	FillBgTilemapBufferRect
	mov	r1, r8
	add	r1, r1, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r6, [sp]
	str	r6, [sp, #0x4]
	mov	r3, sl
	str	r3, [sp, #0x8]
	mov	r0, #0x3
	add	r2, r5, #0
	mov	r3, #0x11
	bl	FillBgTilemapBufferRect
	mov	r1, r8
	add	r1, r1, #0x11
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	str	r6, [sp]
	str	r6, [sp, #0x4]
	mov	r0, sl
	str	r0, [sp, #0x8]
	mov	r0, #0x3
	add	r2, r4, #0
	mov	r3, #0x11
	bl	FillBgTilemapBufferRect
.L526:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x10
	mov	r1, r8
	add	r1, r1, #0x2
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r8, r1
	mov	r2, r9
	lsl	r1, r2, #0x10
	mov	r3, #0xc0
	lsl	r3, r3, #0xa
	add	r1, r1, r3
	lsr	r1, r1, #0x10
	mov	r9, r1
	lsr	r2, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x7
	ble	.L527	@cond_branch
.L523:
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L531:
	.align	2, 0
.L530:
	.word	sStarYOffsets
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	0x45d
.Lfe53:
	.size	 DrawStarsAndBadgesOnCard,.Lfe53-DrawStarsAndBadgesOnCard
	.align	2, 0
	.type	 DrawCardBackStats,function
	.thumb_func
DrawCardBackStats:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0xc
	ldr	r6, .L539
	ldr	r1, [r6]
	ldr	r2, .L539+0x4
	add	r0, r1, r2
	ldrb	r5, [r0]
	cmp	r5, #0x1
	beq	.L533	@cond_branch
	ldrb	r0, [r1, #0x10]
	cmp	r0, #0
	beq	.L534	@cond_branch
	mov	r4, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x8d
	mov	r2, #0x1a
	mov	r3, #0x9
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x9d
	mov	r2, #0x1a
	mov	r3, #0xa
	bl	FillBgTilemapBufferRect
.L534:
	ldr	r0, [r6]
	mov	r1, #0x93
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L535	@cond_branch
	mov	r4, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x8d
	mov	r2, #0x15
	mov	r3, #0xd
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x9d
	mov	r2, #0x15
	mov	r3, #0xe
	bl	FillBgTilemapBufferRect
.L535:
	ldr	r0, [r6]
	ldr	r2, .L539+0x8
	add	r0, r0, r2
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L537	@cond_branch
	mov	r4, #0x1
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x8d
	mov	r2, #0x1b
	mov	r3, #0xb
	bl	FillBgTilemapBufferRect
	str	r4, [sp]
	str	r4, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x9d
	mov	r2, #0x1b
	mov	r3, #0xc
	bl	FillBgTilemapBufferRect
	b	.L537
.L540:
	.align	2, 0
.L539:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	0x49c
.L533:
	ldrb	r0, [r1, #0x10]
	cmp	r0, #0
	beq	.L537	@cond_branch
	str	r5, [sp]
	str	r5, [sp, #0x4]
	mov	r4, #0x0
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x8d
	mov	r2, #0x1a
	mov	r3, #0x9
	bl	FillBgTilemapBufferRect
	str	r5, [sp]
	str	r5, [sp, #0x4]
	str	r4, [sp, #0x8]
	mov	r0, #0x3
	mov	r1, #0x9d
	mov	r2, #0x1a
	mov	r3, #0xa
	bl	FillBgTilemapBufferRect
.L537:
	mov	r0, #0x3
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0xc
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 DrawCardBackStats,.Lfe54-DrawCardBackStats
	.align	2, 0
	.type	 BlinkTimeColon,function
	.thumb_func
BlinkTimeColon:
	push	{lr}
	ldr	r3, .L543
	ldr	r1, [r3]
	ldrb	r0, [r1, #0x6]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x6]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3c
	bls	.L542	@cond_branch
	ldr	r1, [r3]
	mov	r0, #0x0
	strb	r0, [r1, #0x6]
	ldr	r2, [r3]
	ldrb	r0, [r2, #0x7]
	mov	r1, #0x1
	eor	r0, r0, r1
	strb	r0, [r2, #0x7]
	ldr	r0, [r3]
	ldr	r1, .L543+0x4
	add	r0, r0, r1
	mov	r1, #0x1
	strb	r1, [r0]
.L542:
	pop	{r0}
	bx	r0
.L544:
	.align	2, 0
.L543:
	.word	sTrainerCardDataPtr
	.word	0x7bce
.Lfe55:
	.size	 BlinkTimeColon,.Lfe55-BlinkTimeColon
	.align	2, 0
	.globl	GetTrainerCardStars
	.type	 GetTrainerCardStars,function
	.thumb_func
GetTrainerCardStars:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L546
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x5
	add	r1, r1, r2
	ldrb	r0, [r1, #0x1]
	bx	lr
.L547:
	.align	2, 0
.L546:
	.word	gTrainerCards
.Lfe56:
	.size	 GetTrainerCardStars,.Lfe56-GetTrainerCardStars
	.align	2, 0
	.type	 FlipTrainerCard,function
	.thumb_func
FlipTrainerCard:
	push	{r4, lr}
	ldr	r4, .L549
	add	r0, r4, #0
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	_call_via_r4
	ldr	r0, .L549+0x4
	bl	SetHBlankCallback
	pop	{r4}
	pop	{r0}
	bx	r0
.L550:
	.align	2, 0
.L549:
	.word	Task_DoCardFlipTask
	.word	HBlankCB_TrainerCard
.Lfe57:
	.size	 FlipTrainerCard,.Lfe57-FlipTrainerCard
	.align	2, 0
	.type	 IsCardFlipTaskActive,function
	.thumb_func
IsCardFlipTaskActive:
	push	{lr}
	ldr	r0, .L555
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L552	@cond_branch
	mov	r0, #0x0
	b	.L554
.L556:
	.align	2, 0
.L555:
	.word	Task_DoCardFlipTask
.L552:
	mov	r0, #0x1
.L554:
	pop	{r1}
	bx	r1
.Lfe58:
	.size	 IsCardFlipTaskActive,.Lfe58-IsCardFlipTaskActive
	.align	2, 0
	.type	 Task_DoCardFlipTask,function
	.thumb_func
Task_DoCardFlipTask:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r5, .L562
	ldr	r2, .L562+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r4, r1, r2
.L558:
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L558	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L563:
	.align	2, 0
.L562:
	.word	sTrainerCardFlipTasks
	.word	gTasks
.Lfe59:
	.size	 Task_DoCardFlipTask,.Lfe59-Task_DoCardFlipTask
	.align	2, 0
	.type	 Task_BeginCardFlip,function
	.thumb_func
Task_BeginCardFlip:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x1
	bl	HideBg
	mov	r0, #0x3
	bl	HideBg
	bl	ScanlineEffect_Stop
	bl	ScanlineEffect_Clear
	mov	r1, #0x0
	ldr	r0, .L570
	mov	r2, #0x0
	mov	r3, #0xf0
	lsl	r3, r3, #0x3
	add	r0, r0, r3
.L568:
	strh	r2, [r0]
	add	r0, r0, #0x2
	add	r1, r1, #0x1
	cmp	r1, #0x9f
	bls	.L568	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L571:
	.align	2, 0
.L570:
	.word	gScanlineEffectRegBuffers
.Lfe60:
	.size	 Task_BeginCardFlip,.Lfe60-Task_BeginCardFlip
	.align	2, 0
	.type	 Task_AnimateCardFlipDown,function
	.thumb_func
Task_AnimateCardFlipDown:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	r8, r0
	ldr	r0, .L592
	ldr	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1, #0x9]
	mov	r0, r8
	ldrh	r1, [r0, #0xa]
	mov	r2, #0xa
	ldrsh	r0, [r0, r2]
	cmp	r0, #0x4c
	ble	.L573	@cond_branch
	mov	r0, #0x4d
	mov	r3, r8
	strh	r0, [r3, #0xa]
	b	.L574
.L593:
	.align	2, 0
.L592:
	.word	sTrainerCardDataPtr
.L573:
	add	r0, r1, #0x7
	mov	r4, r8
	strh	r0, [r4, #0xa]
.L574:
	ldr	r0, .L594
	ldr	r0, [r0]
	mov	r2, r8
	ldrh	r1, [r2, #0xa]
	ldr	r3, .L594+0x4
	add	r0, r0, r3
	strh	r1, [r0]
	ldrh	r0, [r2, #0xa]
	bl	UpdateCardFlipRegs
	mov	r4, r8
	mov	r0, #0xa
	ldrsh	r7, [r4, r0]
	mov	r0, #0xa0
	sub	r0, r0, r7
	mov	r9, r0
	sub	r4, r0, r7
	neg	r0, r7
	lsl	r6, r0, #0x10
	mov	r0, #0xa0
	lsl	r0, r0, #0x10
	add	r1, r4, #0
	bl	__udivsi3
	add	r5, r0, #0
	ldr	r1, .L594+0x8
	add	r5, r5, r1
	mov	r0, r5
	mul	r0, r0, r4
	add	r0, r6, r0
	str	r0, [sp]
	add	r0, r5, #0
	add	r1, r4, #0
	bl	__udivsi3
	mov	sl, r0
	lsl	r5, r5, #0x1
	mov	r2, #0x0
	cmp	r2, r7
	bcs	.L576	@cond_branch
	ldr	r3, .L594+0xc
.L578:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r3
	neg	r2, r0
	strh	r2, [r1]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r7
	bcc	.L578	@cond_branch
.L576:
	lsl	r1, r2, #0x10
	mov	r3, r9
	lsl	r0, r3, #0x10
	asr	r3, r0, #0x10
	ldr	r4, .L594
	mov	r9, r4
	ldr	r4, [sp]
	lsr	r7, r4, #0x10
	cmp	r1, r0
	bge	.L591	@cond_branch
	ldr	r0, .L594+0xc
	mov	ip, r0
	add	r4, r3, #0
.L583:
	lsr	r3, r6, #0x10
	add	r6, r6, r5
	mov	r2, sl
	sub	r5, r5, r2
	asr	r0, r1, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, ip
	strh	r3, [r1]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	lsl	r1, r2, #0x10
	asr	r0, r1, #0x10
	cmp	r0, r4
	blt	.L583	@cond_branch
.L591:
	add	r3, r7, #0
	lsl	r1, r2, #0x10
	asr	r0, r1, #0x10
	cmp	r0, #0x9f
	bgt	.L586	@cond_branch
	ldr	r2, .L594+0xc
.L588:
	asr	r0, r1, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r2
	strh	r3, [r1]
	add	r0, r0, #0x1
	lsl	r1, r0, #0x10
	asr	r0, r1, #0x10
	cmp	r0, #0x9f
	ble	.L588	@cond_branch
.L586:
	mov	r3, r9
	ldr	r0, [r3]
	mov	r1, #0x1
	strb	r1, [r0, #0x9]
	mov	r4, r8
	mov	r1, #0xa
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x4c
	ble	.L590	@cond_branch
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
.L590:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L595:
	.align	2, 0
.L594:
	.word	sTrainerCardDataPtr
	.word	0x7bcc
	.word	-0x10000
	.word	gScanlineEffectRegBuffers
.Lfe61:
	.size	 Task_AnimateCardFlipDown,.Lfe61-Task_AnimateCardFlipDown
	.align	2, 0
	.type	 Task_DrawFlippedCardSide,function
	.thumb_func
Task_DrawFlippedCardSide:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	ldr	r4, .L622
	ldr	r1, [r4]
	mov	r0, #0x0
	strb	r0, [r1, #0x9]
	bl	Overworld_LinkRecvQueueLengthMoreThan2
	add	r2, r4, #0
	cmp	r0, #0x1
	beq	.L621	@cond_branch
.L598:
	ldr	r3, [r2]
	ldrb	r0, [r3, #0x4]
	cmp	r0, #0x4
	bhi	.L616	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L622+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L623:
	.align	2, 0
.L622:
	.word	sTrainerCardDataPtr
	.word	.L617
	.align	2, 0
	.align	2, 0
.L617:
	.word	.L602
	.word	.L603
	.word	.L608
	.word	.L611
	.word	.L614
.L602:
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	mov	r0, #0x20
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x3
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect_Palette0
	b	.L601
.L603:
	ldr	r0, [r2]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L604	@cond_branch
	bl	PrintAllOnCardBack
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L601	@cond_branch
	b	.L621
.L604:
	bl	PrintAllOnCardFront
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L601	@cond_branch
	b	.L621
.L608:
	ldr	r0, .L624
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x8]
	cmp	r0, #0
	bne	.L609	@cond_branch
	ldr	r2, .L624+0x4
	add	r0, r1, r2
	bl	DrawCardFrontOrBack
	b	.L601
.L625:
	.align	2, 0
.L624:
	.word	sTrainerCardDataPtr
	.word	0x96c
.L609:
	mov	r0, #0x1
	bl	DrawTrainerCardWindow
	b	.L601
.L611:
	ldr	r0, .L626
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	bne	.L612	@cond_branch
	bl	DrawCardBackStats
	b	.L601
.L627:
	.align	2, 0
.L626:
	.word	sTrainerCardDataPtr
.L612:
	mov	r0, #0x2
	mov	r1, #0x0
	bl	FillWindowPixelBuffer
	b	.L601
.L614:
	ldr	r0, .L628
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L601	@cond_branch
	bl	CreateTrainerCardTrainerPic
	b	.L601
.L629:
	.align	2, 0
.L628:
	.word	sTrainerCardDataPtr
.L616:
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r5, #0x8]
	mov	r0, #0x1
	strb	r0, [r3, #0x9]
	ldr	r0, [r2]
	strb	r1, [r0, #0x4]
	b	.L621
.L601:
	ldr	r2, .L630
	ldr	r1, [r2]
	ldrb	r0, [r1, #0x4]
	add	r0, r0, #0x1
	strb	r0, [r1, #0x4]
	ldr	r0, .L630+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L598	@cond_branch
.L621:
	mov	r0, #0x0
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L631:
	.align	2, 0
.L630:
	.word	sTrainerCardDataPtr
	.word	gReceivedRemoteLinkPlayers
.Lfe62:
	.size	 Task_DrawFlippedCardSide,.Lfe62-Task_DrawFlippedCardSide
	.align	2, 0
	.type	 Task_SetCardFlipped,function
	.thumb_func
Task_SetCardFlipped:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r4, .L634
	ldr	r1, [r4]
	mov	r0, #0x0
	strb	r0, [r1, #0x9]
	ldr	r0, [r4]
	ldrb	r0, [r0, #0x8]
	cmp	r0, #0
	beq	.L633	@cond_branch
	mov	r0, #0x2
	bl	DrawTrainerCardWindow
	ldr	r0, [r4]
	ldr	r1, .L634+0x4
	add	r0, r0, r1
	bl	DrawCardScreenBackground
	ldr	r0, [r4]
	ldr	r1, .L634+0x8
	add	r0, r0, r1
	bl	DrawCardFrontOrBack
	bl	DrawStarsAndBadgesOnCard
.L633:
	mov	r0, #0x1
	bl	DrawTrainerCardWindow
	ldr	r2, [r4]
	ldrb	r0, [r2, #0x8]
	mov	r1, #0x1
	eor	r0, r0, r1
	strb	r0, [r2, #0x8]
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	ldr	r1, [r4]
	mov	r0, #0x1
	strb	r0, [r1, #0x9]
	mov	r0, #0xf3
	bl	PlaySE
	mov	r0, #0x0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L635:
	.align	2, 0
.L634:
	.word	sTrainerCardDataPtr
	.word	0xe1c
	.word	0x4bc
.Lfe63:
	.size	 Task_SetCardFlipped,.Lfe63-Task_SetCardFlipped
	.align	2, 0
	.type	 Task_AnimateCardFlipUp,function
	.thumb_func
Task_AnimateCardFlipUp:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	r8, r0
	ldr	r0, .L656
	ldr	r0, [r0]
	mov	r2, #0x0
	strb	r2, [r0, #0x9]
	mov	r0, r8
	ldrh	r1, [r0, #0xa]
	mov	r3, #0xa
	ldrsh	r0, [r0, r3]
	cmp	r0, #0x5
	bgt	.L637	@cond_branch
	mov	r4, r8
	strh	r2, [r4, #0xa]
	b	.L638
.L657:
	.align	2, 0
.L656:
	.word	sTrainerCardDataPtr
.L637:
	sub	r0, r1, #0x5
	mov	r1, r8
	strh	r0, [r1, #0xa]
.L638:
	ldr	r0, .L658
	ldr	r0, [r0]
	mov	r2, r8
	ldrh	r1, [r2, #0xa]
	ldr	r3, .L658+0x4
	add	r0, r0, r3
	strh	r1, [r0]
	ldrh	r0, [r2, #0xa]
	bl	UpdateCardFlipRegs
	mov	r4, r8
	mov	r0, #0xa
	ldrsh	r7, [r4, r0]
	mov	r0, #0xa0
	sub	r0, r0, r7
	mov	r9, r0
	sub	r4, r0, r7
	neg	r0, r7
	lsl	r6, r0, #0x10
	mov	r0, #0xa0
	lsl	r0, r0, #0x10
	add	r1, r4, #0
	bl	__udivsi3
	add	r5, r0, #0
	ldr	r1, .L658+0x8
	add	r5, r5, r1
	mov	r0, r5
	mul	r0, r0, r4
	add	r0, r6, r0
	str	r0, [sp]
	add	r0, r5, #0
	add	r1, r4, #0
	bl	__udivsi3
	mov	sl, r0
	lsr	r5, r5, #0x1
	mov	r2, #0x0
	cmp	r2, r7
	bcs	.L640	@cond_branch
	ldr	r3, .L658+0xc
.L642:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r3
	neg	r2, r0
	strh	r2, [r1]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r7
	bcc	.L642	@cond_branch
.L640:
	lsl	r1, r2, #0x10
	mov	r3, r9
	lsl	r0, r3, #0x10
	asr	r3, r0, #0x10
	ldr	r4, .L658
	mov	r9, r4
	ldr	r4, [sp]
	lsr	r7, r4, #0x10
	cmp	r1, r0
	bge	.L655	@cond_branch
	ldr	r0, .L658+0xc
	mov	ip, r0
	add	r4, r3, #0
.L647:
	lsr	r3, r6, #0x10
	add	r6, r6, r5
	add	r5, r5, sl
	asr	r0, r1, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, ip
	strh	r3, [r1]
	add	r0, r0, #0x1
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	lsl	r1, r2, #0x10
	asr	r0, r1, #0x10
	cmp	r0, r4
	blt	.L647	@cond_branch
.L655:
	add	r3, r7, #0
	lsl	r1, r2, #0x10
	asr	r0, r1, #0x10
	cmp	r0, #0x9f
	bgt	.L650	@cond_branch
	ldr	r2, .L658+0xc
.L652:
	asr	r0, r1, #0x10
	lsl	r1, r0, #0x1
	add	r1, r1, r2
	strh	r3, [r1]
	add	r0, r0, #0x1
	lsl	r1, r0, #0x10
	asr	r0, r1, #0x10
	cmp	r0, #0x9f
	ble	.L652	@cond_branch
.L650:
	mov	r1, r9
	ldr	r0, [r1]
	mov	r1, #0x1
	strb	r1, [r0, #0x9]
	mov	r2, r8
	mov	r3, #0xa
	ldrsh	r0, [r2, r3]
	cmp	r0, #0
	bgt	.L654	@cond_branch
	ldrh	r0, [r2, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x8]
.L654:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L659:
	.align	2, 0
.L658:
	.word	sTrainerCardDataPtr
	.word	0x7bcc
	.word	-0x10000
	.word	gScanlineEffectRegBuffers
.Lfe64:
	.size	 Task_AnimateCardFlipUp,.Lfe64-Task_AnimateCardFlipUp
	.align	2, 0
	.type	 Task_EndCardFlip,function
	.thumb_func
Task_EndCardFlip:
	push	{lr}
	mov	r0, #0x1
	bl	ShowBg
	mov	r0, #0x3
	bl	ShowBg
	mov	r0, #0x0
	bl	SetHBlankCallback
	ldr	r0, .L661
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	DestroyTask
	mov	r0, #0x0
	pop	{r1}
	bx	r1
.L662:
	.align	2, 0
.L661:
	.word	Task_DoCardFlipTask
.Lfe65:
	.size	 Task_EndCardFlip,.Lfe65-Task_EndCardFlip
	.align	2, 0
	.globl	ShowPlayerTrainerCard
	.type	 ShowPlayerTrainerCard,function
	.thumb_func
ShowPlayerTrainerCard:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r5, .L666
	ldr	r0, .L666+0x4
	bl	AllocZeroed
	str	r0, [r5]
	mov	r1, #0x8b
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	str	r4, [r0]
	bl	InUnionRoom
	add	r1, r0, #0
	cmp	r1, #0x1
	bne	.L664	@cond_branch
	ldr	r0, [r5]
	strb	r1, [r0, #0x5]
	b	.L665
.L667:
	.align	2, 0
.L666:
	.word	sTrainerCardDataPtr
	.word	0x7bd0
.L664:
	ldr	r1, [r5]
	mov	r0, #0x0
	strb	r0, [r1, #0x5]
.L665:
	ldr	r2, .L668
	ldr	r0, [r2]
	ldr	r1, .L668+0x4
	add	r0, r0, r1
	mov	r1, #0x2
	strb	r1, [r0]
	ldr	r0, [r2]
	ldr	r1, .L668+0x8
	add	r0, r0, r1
	bl	TrainerCard_GenerateCardForLinkPlayer
	ldr	r0, .L668+0xc
	bl	SetMainCallback2
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L669:
	.align	2, 0
.L668:
	.word	sTrainerCardDataPtr
	.word	0x7bcf
	.word	0x45c
	.word	CB2_InitTrainerCard
.Lfe66:
	.size	 ShowPlayerTrainerCard,.Lfe66-ShowPlayerTrainerCard
	.align	2, 0
	.globl	ShowTrainerCardInLink
	.type	 ShowTrainerCardInLink,function
	.thumb_func
ShowTrainerCardInLink:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r6, r1, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r5, .L671
	ldr	r0, .L671+0x4
	bl	AllocZeroed
	str	r0, [r5]
	mov	r2, #0x8b
	lsl	r2, r2, #0x3
	add	r1, r0, r2
	str	r6, [r1]
	mov	r1, #0x1
	strb	r1, [r0, #0x5]
	ldr	r0, [r5]
	ldr	r1, .L671+0x8
	add	r0, r0, r1
	ldr	r2, .L671+0xc
	lsl	r1, r4, #0x1
	add	r1, r1, r4
	lsl	r1, r1, #0x5
	add	r1, r1, r2
	mov	r2, #0x60
	bl	memcpy
	ldr	r1, [r5]
	ldr	r2, .L671+0x10
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r0, [r0, #0x1a]
	ldr	r2, .L671+0x14
	add	r1, r1, r2
	strb	r0, [r1]
	ldr	r0, .L671+0x18
	bl	SetMainCallback2
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L672:
	.align	2, 0
.L671:
	.word	sTrainerCardDataPtr
	.word	0x7bd0
	.word	0x45c
	.word	gTrainerCards
	.word	gLinkPlayers
	.word	0x7bcf
	.word	CB2_InitTrainerCard
.Lfe67:
	.size	 ShowTrainerCardInLink,.Lfe67-ShowTrainerCardInLink
	.align	2, 0
	.type	 InitTrainerCardData,function
	.thumb_func
InitTrainerCardData:
	push	{r4, r5, lr}
	ldr	r4, .L681
	ldr	r0, [r4]
	mov	r5, #0x0
	strb	r5, [r0]
	ldr	r1, [r4]
	ldr	r0, .L681+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0x12]
	strb	r0, [r1, #0x6]
	ldr	r0, [r4]
	strb	r5, [r0, #0x7]
	ldr	r0, [r4]
	strb	r5, [r0, #0x8]
	ldr	r0, [r4]
	ldr	r1, .L681+0x8
	add	r0, r0, r1
	strb	r5, [r0]
	bl	GetCardType
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x1
	bne	.L674	@cond_branch
	ldr	r0, [r4]
	ldr	r2, .L681+0xc
	add	r0, r0, r2
	strb	r1, [r0]
	b	.L675
.L682:
	.align	2, 0
.L681:
	.word	sTrainerCardDataPtr
	.word	gSaveBlock2Ptr
	.word	0x456
	.word	0x457
.L674:
	ldr	r0, [r4]
	ldr	r3, .L683
	add	r0, r0, r3
	strb	r5, [r0]
.L675:
	mov	r4, #0x0
	ldr	r5, .L683+0x4
.L679:
	mov	r0, #0xd
	mul	r0, r0, r4
	add	r0, r0, #0x19
	ldr	r1, [r5]
	add	r0, r1, r0
	lsl	r2, r4, #0x1
	ldr	r3, .L683+0x8
	add	r1, r1, r3
	add	r1, r1, r2
	ldrh	r1, [r1]
	bl	CopyEasyChatWord
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	bls	.L679	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L684:
	.align	2, 0
.L683:
	.word	0x457
	.word	sTrainerCardDataPtr
	.word	0x484
.Lfe68:
	.size	 InitTrainerCardData,.Lfe68-InitTrainerCardData
	.align	2, 0
	.type	 GetCardType,function
	.thumb_func
GetCardType:
	push	{lr}
	ldr	r0, .L695
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L686	@cond_branch
	ldr	r0, .L695+0x4
	b	.L694
.L696:
	.align	2, 0
.L695:
	.word	sTrainerCardDataPtr
	.word	gGameVersion
.L686:
	ldr	r1, .L697
	add	r0, r0, r1
.L694:
	ldrb	r0, [r0]
	sub	r0, r0, #0x4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L690	@cond_branch
	mov	r0, #0x1
	b	.L692
.L698:
	.align	2, 0
.L697:
	.word	0x494
.L690:
	mov	r0, #0x0
.L692:
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 GetCardType,.Lfe69-GetCardType
	.align	2, 0
	.type	 CreateTrainerCardTrainerPic,function
	.thumb_func
CreateTrainerCardTrainerPic:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	ldr	r2, .L705
	ldr	r5, .L705+0x4
	ldr	r0, [r5]
	ldr	r6, .L705+0x8
	add	r1, r0, r6
	ldr	r7, .L705+0xc
	add	r0, r0, r7
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1
	ldrb	r1, [r1]
	add	r0, r0, r1
	add	r0, r0, r2
	ldrb	r4, [r0]
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L700	@cond_branch
	ldr	r0, .L705+0x10
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L700	@cond_branch
	ldr	r0, [r5]
	ldr	r1, .L705+0x14
	add	r0, r0, r1
	ldrb	r4, [r0]
	add	r0, r4, #0
	bl	FacilityClassToPicIndex
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, .L705+0x18
	ldr	r1, [r5]
	add	r2, r1, r6
	ldrb	r3, [r2]
	lsl	r3, r3, #0x1
	add	r1, r1, r7
	b	.L704
.L706:
	.align	2, 0
.L705:
	.word	sTrainerPicFacilityClasses
	.word	sTrainerCardDataPtr
	.word	0x45c
	.word	0x457
	.word	gReceivedRemoteLinkPlayers
	.word	0x4ab
	.word	sTrainerPicOffsets
.L700:
	ldr	r6, .L707
	ldr	r1, [r6]
	ldr	r2, .L707+0x4
	add	r0, r1, r2
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L702	@cond_branch
	add	r0, r4, #0
	bl	FacilityClassToPicIndex
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, .L707+0x8
	ldr	r1, [r6]
	ldr	r3, .L707+0xc
	add	r2, r1, r3
	ldrb	r3, [r2]
	lsl	r3, r3, #0x1
	ldr	r2, .L707+0x4
	add	r1, r1, r2
.L704:
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r3, r3, r1
	add	r1, r3, r4
	ldrb	r2, [r1]
	add	r4, r4, #0x1
	add	r3, r3, r4
	ldrb	r3, [r3]
	mov	r1, #0x8
	str	r1, [sp]
	mov	r1, #0x2
	str	r1, [sp, #0x4]
	mov	r1, #0x1
	bl	CreateTrainerCardTrainerPicSprite
	b	.L701
.L708:
	.align	2, 0
.L707:
	.word	sTrainerCardDataPtr
	.word	0x457
	.word	sTrainerPicOffsets
	.word	0x45c
.L702:
	ldr	r4, .L709
	add	r0, r1, r4
	ldrb	r0, [r0]
	mov	r1, #0x1
	bl	PlayerGenderToFrontTrainerPicId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r5, .L709+0x4
	ldr	r1, [r6]
	add	r4, r1, r4
	ldrb	r3, [r4]
	lsl	r3, r3, #0x1
	ldr	r2, .L709+0x8
	add	r1, r1, r2
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r3, r3, r1
	add	r1, r3, r5
	ldrb	r2, [r1]
	add	r5, r5, #0x1
	add	r3, r3, r5
	ldrb	r3, [r3]
	mov	r1, #0x8
	str	r1, [sp]
	mov	r1, #0x2
	str	r1, [sp, #0x4]
	mov	r1, #0x1
	bl	CreateTrainerCardTrainerPicSprite
.L701:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L710:
	.align	2, 0
.L709:
	.word	0x45c
	.word	sTrainerPicOffsets
	.word	0x457
.Lfe70:
	.size	 CreateTrainerCardTrainerPic,.Lfe70-CreateTrainerCardTrainerPic
	.align	2, 0
	.type	 Unref_InitTrainerCard,function
	.thumb_func
Unref_InitTrainerCard:
	push	{lr}
	bl	ShowPlayerTrainerCard
	ldr	r0, .L712
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L713:
	.align	2, 0
.L712:
	.word	CB2_InitTrainerCard
.Lfe71:
	.size	 Unref_InitTrainerCard,.Lfe71-Unref_InitTrainerCard
	.align	2, 0
	.type	 Unref_InitTrainerCardLink,function
	.thumb_func
Unref_InitTrainerCardLink:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L715
	ldr	r1, .L715+0x4
	mov	r2, #0x60
	bl	memcpy
	mov	r0, #0x0
	add	r1, r4, #0
	bl	ShowTrainerCardInLink
	ldr	r0, .L715+0x8
	bl	SetMainCallback2
	pop	{r4}
	pop	{r0}
	bx	r0
.L716:
	.align	2, 0
.L715:
	.word	gTrainerCards
	.word	sLinkPlayerTrainerCardTemplate1
	.word	CB2_InitTrainerCard
.Lfe72:
	.size	 Unref_InitTrainerCardLink,.Lfe72-Unref_InitTrainerCardLink
	.align	2, 0
	.type	 Unref_InitTrainerCardLink2,function
	.thumb_func
Unref_InitTrainerCardLink2:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L718
	ldr	r1, .L718+0x4
	mov	r2, #0x60
	bl	memcpy
	mov	r0, #0x0
	add	r1, r4, #0
	bl	ShowTrainerCardInLink
	ldr	r0, .L718+0x8
	bl	SetMainCallback2
	pop	{r4}
	pop	{r0}
	bx	r0
.L719:
	.align	2, 0
.L718:
	.word	gTrainerCards
	.word	sLinkPlayerTrainerCardTemplate2
	.word	CB2_InitTrainerCard
.Lfe73:
	.size	 Unref_InitTrainerCardLink2,.Lfe73-Unref_InitTrainerCardLink2
.text
	.align	2, 0 @ Don't pad with nop

