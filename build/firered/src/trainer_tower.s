@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sTrainerTowerState,object
	.size	 sTrainerTowerState,4
sTrainerTowerState:
	.word	0x0
	.align	2, 0
	.type	 sTrainerTowerOpponent,object
	.size	 sTrainerTowerOpponent,4
sTrainerTowerOpponent:
	.word	0x0
	.type	 sUnused,object
	.size	 sUnused,1
sUnused:
	.byte	0x0
	.section .rodata
	.align	2, 0
	.type	 sSingleBattleTrainerInfo,object
sSingleBattleTrainerInfo:
	.byte	0x1c
	.byte	0x3
	.byte	0x1
	.space	1
	.byte	0x38
	.byte	0x4
	.byte	0x0
	.space	1
	.byte	0x25
	.byte	0x6
	.byte	0x1
	.space	1
	.byte	0x26
	.byte	0x7
	.byte	0x0
	.space	1
	.byte	0x29
	.byte	0x8
	.byte	0x0
	.space	1
	.byte	0x2a
	.byte	0x9
	.byte	0x1
	.space	1
	.byte	0x34
	.byte	0xa
	.byte	0x0
	.space	1
	.byte	0x1c
	.byte	0xb
	.byte	0x1
	.space	1
	.byte	0x1d
	.byte	0xc
	.byte	0x1
	.space	1
	.byte	0x13
	.byte	0xd
	.byte	0x0
	.space	1
	.byte	0x34
	.byte	0xe
	.byte	0x0
	.space	1
	.byte	0x2d
	.byte	0xf
	.byte	0x0
	.space	1
	.byte	0x36
	.byte	0x10
	.byte	0x0
	.space	1
	.byte	0x1a
	.byte	0x11
	.byte	0x0
	.space	1
	.byte	0x1a
	.byte	0x12
	.byte	0x0
	.space	1
	.byte	0x27
	.byte	0x13
	.byte	0x0
	.space	1
	.byte	0x34
	.byte	0x14
	.byte	0x0
	.space	1
	.byte	0x13
	.byte	0x15
	.byte	0x0
	.space	1
	.byte	0x17
	.byte	0x16
	.byte	0x1
	.space	1
	.byte	0x3d
	.byte	0x17
	.byte	0x0
	.space	1
	.byte	0x13
	.byte	0x1d
	.byte	0x0
	.space	1
	.byte	0x17
	.byte	0x1e
	.byte	0x1
	.space	1
	.byte	0x1e
	.byte	0x20
	.byte	0x0
	.space	1
	.byte	0x1f
	.byte	0x21
	.byte	0x1
	.space	1
	.byte	0x20
	.byte	0x22
	.byte	0x0
	.space	1
	.byte	0x23
	.byte	0x23
	.byte	0x1
	.space	1
	.byte	0x12
	.byte	0x24
	.byte	0x0
	.space	1
	.byte	0x39
	.byte	0x26
	.byte	0x0
	.space	1
	.byte	0x29
	.byte	0x2d
	.byte	0x0
	.space	1
	.byte	0x1a
	.byte	0x2e
	.byte	0x0
	.space	1
	.byte	0x10
	.byte	0x2f
	.byte	0x0
	.space	1
	.byte	0x18
	.byte	0x30
	.byte	0x1
	.space	1
	.byte	0x1d
	.byte	0x31
	.byte	0x1
	.space	1
	.byte	0x2e
	.byte	0x32
	.byte	0x1
	.space	1
	.byte	0x28
	.byte	0x33
	.byte	0x1
	.space	1
	.byte	0x3e
	.byte	0x35
	.byte	0x0
	.space	1
	.byte	0x1b
	.byte	0x38
	.byte	0x0
	.space	1
	.byte	0x19
	.byte	0x40
	.byte	0x0
	.space	1
	.byte	0x1c
	.byte	0x41
	.byte	0x1
	.space	1
	.byte	0x27
	.byte	0x42
	.byte	0x0
	.space	1
	.byte	0x28
	.byte	0x43
	.byte	0x1
	.space	1
	.byte	0x16
	.byte	0x47
	.byte	0x1
	.space	1
	.byte	0x14
	.byte	0x48
	.byte	0x0
	.space	1
	.byte	0x38
	.byte	0x49
	.byte	0x0
	.space	1
	.byte	0x12
	.byte	0x58
	.byte	0x0
	.space	1
	.byte	0x14
	.byte	0x59
	.byte	0x0
	.space	1
	.byte	0x16
	.byte	0x5a
	.byte	0x1
	.space	1
	.byte	0x3e
	.byte	0x5b
	.byte	0x0
	.space	1
	.byte	0x27
	.byte	0x5c
	.byte	0x0
	.space	1
	.byte	0x28
	.byte	0x5d
	.byte	0x1
	.space	1
	.byte	0x34
	.byte	0x5e
	.byte	0x0
	.space	1
	.byte	0x34
	.byte	0x5f
	.byte	0x0
	.space	1
	.byte	0x38
	.byte	0x60
	.byte	0x0
	.space	1
	.byte	0x35
	.byte	0x61
	.byte	0x0
	.space	1
	.byte	0x34
	.byte	0x62
	.byte	0x0
	.space	1
	.byte	0x1e
	.byte	0x63
	.byte	0x0
	.space	1
	.byte	0x39
	.byte	0x64
	.byte	0x0
	.space	1
	.byte	0x2d
	.byte	0x65
	.byte	0x0
	.space	1
	.byte	0x35
	.byte	0x66
	.byte	0x0
	.space	1
	.byte	0x20
	.byte	0x67
	.byte	0x0
	.space	1
	.byte	0x1d
	.byte	0x68
	.byte	0x1
	.space	1
	.byte	0x2e
	.byte	0x69
	.byte	0x1
	.space	1
	.byte	0x13
	.byte	0x6a
	.byte	0x0
	.space	1
	.byte	0x1a
	.byte	0x6b
	.byte	0x0
	.space	1
	.byte	0x1a
	.byte	0x6c
	.byte	0x0
	.space	1
	.byte	0x19
	.byte	0x6d
	.byte	0x0
	.space	1
	.byte	0x1a
	.byte	0x6e
	.byte	0x0
	.space	1
	.byte	0x36
	.byte	0x6f
	.byte	0x0
	.space	1
	.byte	0x37
	.byte	0x71
	.byte	0x0
	.space	1
	.byte	0x29
	.byte	0x74
	.byte	0x0
	.space	1
	.byte	0x2a
	.byte	0x75
	.byte	0x1
	.space	1
	.byte	0x3d
	.byte	0x7a
	.byte	0x0
	.space	1
	.byte	0x3a
	.byte	0x7d
	.byte	0x1
	.space	1
	.byte	0x17
	.byte	0x89
	.byte	0x1
	.space	1
	.byte	0x18
	.byte	0x8a
	.byte	0x1
	.space	1
	.byte	0x25
	.byte	0x8b
	.byte	0x1
	.space	1
	.byte	0x1c
	.byte	0x8c
	.byte	0x1
	.space	1
	.byte	0x27
	.byte	0x8d
	.byte	0x0
	.space	1
	.byte	0x28
	.byte	0x8e
	.byte	0x1
	.space	1
	.byte	0x1c
	.byte	0x8f
	.byte	0x1
	.space	1
	.byte	0x38
	.byte	0x90
	.byte	0x0
	.space	1
	.byte	0x1c
	.byte	0x91
	.byte	0x1
	.space	1
	.byte	0x16
	.byte	0x92
	.byte	0x1
	.space	1
	.size	 sSingleBattleTrainerInfo,332
	.align	2, 0
	.type	 sDoubleBattleTrainerInfo,object
sDoubleBattleTrainerInfo:
	.byte	0x1d
	.byte	0x17
	.byte	0x1f
	.byte	0x1
	.byte	0x1
	.space	3
	.byte	0x11
	.byte	0x11
	.byte	0x34
	.byte	0x1
	.byte	0x1
	.space	3
	.byte	0x1d
	.byte	0x19
	.byte	0x4a
	.byte	0x1
	.byte	0x0
	.space	3
	.byte	0x20
	.byte	0x23
	.byte	0x4b
	.byte	0x0
	.byte	0x1
	.space	3
	.byte	0x26
	.byte	0x2e
	.byte	0x4c
	.byte	0x0
	.byte	0x1
	.space	3
	.byte	0x11
	.byte	0x11
	.byte	0x7e
	.byte	0x1
	.byte	0x1
	.space	3
	.byte	0x29
	.byte	0x2a
	.byte	0x7f
	.byte	0x0
	.byte	0x1
	.space	3
	.byte	0x1d
	.byte	0x19
	.byte	0x80
	.byte	0x1
	.byte	0x0
	.space	3
	.byte	0x18
	.byte	0x36
	.byte	0x81
	.byte	0x1
	.byte	0x0
	.space	3
	.byte	0x2e
	.byte	0x26
	.byte	0x82
	.byte	0x1
	.byte	0x0
	.space	3
	.size	 sDoubleBattleTrainerInfo,80
	.align	2, 0
	.type	 sTrainerEncounterMusicLUT,object
	.size	 sTrainerEncounterMusicLUT,420
sTrainerEncounterMusicLUT:
	.byte	0x3
	.byte	0x6
	.space	2
	.byte	0x37
	.byte	0x6
	.space	2
	.byte	0x2
	.byte	0x6
	.space	2
	.byte	0x67
	.byte	0x1
	.space	2
	.byte	0x4
	.byte	0x1
	.space	2
	.byte	0x24
	.byte	0x4
	.space	2
	.byte	0x4a
	.byte	0x1
	.space	2
	.byte	0x26
	.byte	0x1
	.space	2
	.byte	0x2a
	.byte	0x0
	.space	2
	.byte	0x42
	.byte	0x3
	.space	2
	.byte	0x1b
	.byte	0x9
	.space	2
	.byte	0x4c
	.byte	0x3
	.space	2
	.byte	0x44
	.byte	0x3
	.space	2
	.byte	0x21
	.byte	0x4
	.space	2
	.byte	0x43
	.byte	0x3
	.space	2
	.byte	0x6a
	.byte	0x1
	.space	2
	.byte	0x5d
	.byte	0x5
	.space	2
	.byte	0x56
	.byte	0x5
	.space	2
	.byte	0x9
	.byte	0x5
	.space	2
	.byte	0x11
	.byte	0x4
	.space	2
	.byte	0x48
	.byte	0x3
	.space	2
	.byte	0x3c
	.byte	0x0
	.space	2
	.byte	0x29
	.byte	0x0
	.space	2
	.byte	0x5c
	.byte	0x9
	.space	2
	.byte	0x28
	.byte	0x9
	.space	2
	.byte	0x6
	.byte	0xc
	.space	2
	.byte	0x68
	.byte	0xb
	.space	2
	.byte	0x5
	.byte	0xb
	.space	2
	.byte	0x58
	.byte	0xd
	.space	2
	.byte	0x16
	.byte	0xd
	.space	2
	.byte	0x46
	.byte	0x8
	.space	2
	.byte	0xf
	.byte	0x1
	.space	2
	.byte	0x3f
	.byte	0x3
	.space	2
	.byte	0xe
	.byte	0x3
	.space	2
	.byte	0x5f
	.byte	0x4
	.space	2
	.byte	0x63
	.byte	0x4
	.space	2
	.byte	0x50
	.byte	0x4
	.space	2
	.byte	0x10
	.byte	0x4
	.space	2
	.byte	0x52
	.byte	0x3
	.space	2
	.byte	0x35
	.byte	0x4
	.space	2
	.byte	0x5b
	.byte	0x3
	.space	2
	.byte	0x14
	.byte	0x3
	.space	2
	.byte	0x3d
	.byte	0x0
	.space	2
	.byte	0x13
	.byte	0x0
	.space	2
	.byte	0x12
	.byte	0xb
	.space	2
	.byte	0x30
	.byte	0x7
	.space	2
	.byte	0x38
	.byte	0x7
	.space	2
	.byte	0x2f
	.byte	0x7
	.space	2
	.byte	0x3b
	.byte	0x1
	.space	2
	.byte	0x31
	.byte	0x1
	.space	2
	.byte	0x4e
	.byte	0xb
	.space	2
	.byte	0x3a
	.byte	0x0
	.space	2
	.byte	0x32
	.byte	0x0
	.space	2
	.byte	0x23
	.byte	0x3
	.space	2
	.byte	0xd
	.byte	0xd
	.space	2
	.byte	0xa
	.byte	0x3
	.space	2
	.byte	0x49
	.byte	0x1
	.space	2
	.byte	0xc
	.byte	0x1
	.space	2
	.byte	0x69
	.byte	0x1
	.space	2
	.byte	0xb
	.byte	0x1
	.space	2
	.byte	0x25
	.byte	0x1
	.space	2
	.byte	0x3e
	.byte	0x2
	.space	2
	.byte	0x27
	.byte	0x2
	.space	2
	.byte	0x65
	.byte	0x1
	.space	2
	.byte	0x2d
	.byte	0x1
	.space	2
	.byte	0x61
	.byte	0x1
	.space	2
	.byte	0x2b
	.byte	0x3
	.space	2
	.byte	0x66
	.byte	0x5
	.space	2
	.byte	0x2e
	.byte	0x5
	.space	2
	.byte	0x2c
	.byte	0x0
	.space	2
	.byte	0x5e
	.byte	0x2
	.space	2
	.byte	0x34
	.byte	0x2
	.space	2
	.byte	0x51
	.byte	0x0
	.space	2
	.byte	0x59
	.byte	0x0
	.space	2
	.byte	0x40
	.byte	0x3
	.space	2
	.byte	0x55
	.byte	0x6
	.space	2
	.byte	0x53
	.byte	0x6
	.space	2
	.byte	0x4b
	.byte	0x4
	.space	2
	.byte	0x15
	.byte	0x4
	.space	2
	.byte	0x1a
	.byte	0x9
	.space	2
	.byte	0x57
	.byte	0xa
	.space	2
	.byte	0x17
	.byte	0x1
	.space	2
	.byte	0x47
	.byte	0x3
	.space	2
	.byte	0x62
	.byte	0x1
	.space	2
	.byte	0x39
	.byte	0x0
	.space	2
	.byte	0x1d
	.byte	0x0
	.space	2
	.byte	0x1c
	.byte	0x4
	.space	2
	.byte	0x20
	.byte	0x0
	.space	2
	.byte	0x4f
	.byte	0x5
	.space	2
	.byte	0x22
	.byte	0x5
	.space	2
	.byte	0x45
	.byte	0xb
	.space	2
	.byte	0x1f
	.byte	0xb
	.space	2
	.byte	0x5a
	.byte	0x0
	.space	2
	.byte	0x1e
	.byte	0x0
	.space	2
	.byte	0x8
	.byte	0x0
	.space	2
	.byte	0x64
	.byte	0x2
	.space	2
	.byte	0x7
	.byte	0x2
	.space	2
	.byte	0x60
	.byte	0x8
	.space	2
	.byte	0x36
	.byte	0x8
	.space	2
	.byte	0x41
	.byte	0xb
	.space	2
	.byte	0x33
	.byte	0xb
	.space	2
	.byte	0x54
	.byte	0x0
	.space	2
	.byte	0x18
	.byte	0x1
	.space	2
	.byte	0x4d
	.byte	0xb
	.space	2
	.byte	0x19
	.byte	0x0
	.space	2
	.align	2, 0
	.type	 sTimeBoardWindowTemplate,object
sTimeBoardWindowTemplate:
	.byte	0x0
	.byte	0x3
	.byte	0x1
	.byte	0x1b
	.byte	0x12
	.byte	0xf
	.short	0x1
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.short	0x0
	.size	 sTimeBoardWindowTemplate,16
	.align	2, 0
	.type	 sUnusedValue,object
	.size	 sUnusedValue,4
sUnusedValue:
	.word	0x70
	.type	 sTextColors,object
	.size	 sTextColors,3
sTextColors:
	.byte	0x0
	.byte	0x2
	.byte	0x3
	.align	2, 0
	.type	 sTrainerTowerFunctions,object
sTrainerTowerFunctions:
	.word	InitTrainerTowerFloor
	.word	BufferTowerOpponentSpeech
	.word	DoTrainerTowerBattle
	.word	TrainerTowerGetChallengeType
	.word	TrainerTowerAddFloorCleared
	.word	GetFloorAlreadyCleared
	.word	StartTrainerTowerChallenge
	.word	GetOwnerState
	.word	GiveChallengePrize
	.word	CheckFinalTime
	.word	TrainerTowerResumeTimer
	.word	TrainerTowerSetPlayerLost
	.word	GetTrainerTowerChallengeStatus
	.word	GetCurrentTime
	.word	ShowResultsBoard
	.word	CloseResultsBoard
	.word	TrainerTowerGetDoublesEligiblity
	.word	TrainerTowerGetNumFloors
	.word	ShouldWarpToCounter
	.word	PlayTrainerTowerEncounterMusic
	.word	HasSpokenToOwner
	.size	 sTrainerTowerFunctions,84
	.align	1, 0
	.type	 sFloorLayouts,object
	.size	 sFloorLayouts,48
sFloorLayouts:
	.short	0x118
	.short	0x15c
	.short	0x164
	.short	0x119
	.short	0x15d
	.short	0x165
	.short	0x11a
	.short	0x15e
	.short	0x166
	.short	0x11b
	.short	0x15f
	.short	0x167
	.short	0x11c
	.short	0x160
	.short	0x168
	.short	0x11d
	.short	0x161
	.short	0x169
	.short	0x11e
	.short	0x162
	.short	0x16a
	.short	0x11f
	.short	0x163
	.short	0x16b
	.align	1, 0
	.type	 sPrizeList,object
sPrizeList:
	.short	0x3f
	.short	0x40
	.short	0x41
	.short	0x42
	.short	0x43
	.short	0x46
	.short	0xb3
	.short	0xb4
	.short	0xb9
	.short	0xba
	.short	0xbb
	.short	0xc6
	.short	0xc7
	.short	0xc9
	.short	0xda
	.size	 sPrizeList,30
	.align	1, 0
	.type	 sTrainerTowerEncounterMusic,object
sTrainerTowerEncounterMusic:
	.short	0x11d
	.short	0x11c
	.short	0x11c
	.short	0x11b
	.short	0x11d
	.short	0x11d
	.short	0x11b
	.short	0x11b
	.short	0x11d
	.short	0x11c
	.short	0x11d
	.short	0x11d
	.short	0x11d
	.short	0x11d
	.size	 sTrainerTowerEncounterMusic,28
	.type	 sSingleBattleChallengeMonIdxs,object
	.size	 sSingleBattleChallengeMonIdxs,16
sSingleBattleChallengeMonIdxs:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x3
	.byte	0x2
	.byte	0x4
	.byte	0x3
	.byte	0x5
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0x2
	.byte	0x0
	.byte	0x3
	.byte	0x1
	.byte	0x4
	.type	 sDoubleBattleChallengeMonIdxs,object
	.size	 sDoubleBattleChallengeMonIdxs,16
sDoubleBattleChallengeMonIdxs:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x3
	.byte	0x2
	.byte	0x0
	.byte	0x3
	.byte	0x4
	.byte	0x4
	.byte	0x2
	.byte	0x5
	.byte	0x2
	.byte	0x0
	.byte	0x3
	.byte	0x1
	.byte	0x5
	.type	 sKnockoutChallengeMonIdxs,object
	.size	 sKnockoutChallengeMonIdxs,24
sKnockoutChallengeMonIdxs:
	.byte	0x0
	.byte	0x2
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.byte	0x5
	.byte	0x2
	.byte	0x3
	.byte	0x1
	.byte	0x3
	.byte	0x4
	.byte	0x0
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0x5
	.byte	0x0
	.byte	0x3
	.byte	0x0
	.byte	0x5
	.byte	0x2
	.byte	0x1
	.byte	0x4
	.byte	0x5
.text
	.align	2, 0
	.globl	CallTrainerTowerFunc
	.type	 CallTrainerTowerFunc,function
	.thumb_func
CallTrainerTowerFunc:
	push	{lr}
	bl	SetUpTrainerTowerDataStruct
	ldr	r1, .L5
	ldr	r0, .L5+0x4
	ldrh	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	_call_via_r0
	bl	FreeTrainerTowerDataStruct
	pop	{r0}
	bx	r0
.L6:
	.align	2, 0
.L5:
	.word	sTrainerTowerFunctions
	.word	gSpecialVar_0x8004
.Lfe1:
	.size	 CallTrainerTowerFunc,.Lfe1-CallTrainerTowerFunc
	.align	2, 0
	.globl	GetTrainerTowerOpponentClass
	.type	 GetTrainerTowerOpponentClass,function
	.thumb_func
GetTrainerTowerOpponentClass:
	ldr	r1, .L8
	ldr	r0, .L8+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x3d
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L9:
	.align	2, 0
.L8:
	.word	gFacilityClassToTrainerClass
	.word	sTrainerTowerOpponent
.Lfe2:
	.size	 GetTrainerTowerOpponentClass,.Lfe2-GetTrainerTowerOpponentClass
	.align	2, 0
	.globl	GetTrainerTowerOpponentName
	.type	 GetTrainerTowerOpponentName,function
	.thumb_func
GetTrainerTowerOpponentName:
	push	{lr}
	ldr	r1, .L11
	ldr	r1, [r1]
	mov	r2, #0xb
	bl	StringCopyN
	pop	{r0}
	bx	r0
.L12:
	.align	2, 0
.L11:
	.word	sTrainerTowerOpponent
.Lfe3:
	.size	 GetTrainerTowerOpponentName,.Lfe3-GetTrainerTowerOpponentName
	.align	2, 0
	.globl	GetTrainerTowerTrainerFrontSpriteId
	.type	 GetTrainerTowerTrainerFrontSpriteId,function
	.thumb_func
GetTrainerTowerTrainerFrontSpriteId:
	ldr	r1, .L14
	ldr	r0, .L14+0x4
	ldr	r0, [r0]
	add	r0, r0, #0x3d
	ldrb	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	bx	lr
.L15:
	.align	2, 0
.L14:
	.word	gFacilityClassToPicIndex
	.word	sTrainerTowerOpponent
.Lfe4:
	.size	 GetTrainerTowerTrainerFrontSpriteId,.Lfe4-GetTrainerTowerTrainerFrontSpriteId
	.align	2, 0
	.globl	InitTrainerTowerBattleStruct
	.type	 InitTrainerTowerBattleStruct,function
	.thumb_func
InitTrainerTowerBattleStruct:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	bl	SetUpTrainerTowerDataStruct
	ldr	r5, .L23
	mov	r0, #0x40
	bl	AllocZeroed
	str	r0, [r5]
	ldr	r0, .L23+0x4
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	sl, r0
	ldr	r0, [r5]
	ldr	r1, .L23+0x8
	ldr	r1, [r1]
	ldrb	r3, [r1]
	lsl	r2, r3, #0x5
	sub	r2, r2, r3
	lsl	r2, r2, #0x5
	add	r2, r2, #0xc
	add	r1, r1, r2
	mov	r2, sl
	lsl	r6, r2, #0x2
	add	r4, r6, r2
	lsl	r4, r4, #0x3
	add	r4, r4, sl
	lsl	r4, r4, #0x3
	add	r2, r4, #0x4
	add	r1, r1, r2
	mov	r2, #0xb
	bl	StringCopyN
	mov	r0, #0x0
	mov	r9, r0
	str	r6, [sp]
	mov	ip, r4
	mov	r1, sl
	add	r1, r1, #0x1
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	lsl	r5, r0, #0x3
.L20:
	ldr	r0, .L23
	ldr	r0, [r0]
	mov	r8, r0
	mov	r1, r9
	lsl	r4, r1, #0x1
	mov	r2, r8
	add	r2, r2, #0xc
	add	r2, r2, r4
	ldr	r0, .L23+0x8
	ldr	r3, [r0]
	ldrb	r1, [r3]
	lsl	r0, r1, #0x5
	sub	r0, r0, r1
	lsl	r0, r0, #0x5
	add	r0, r0, ip
	add	r7, r3, #0
	add	r7, r7, #0x2a
	add	r0, r7, r0
	ldrh	r0, [r0]
	strh	r0, [r2]
	mov	r2, r8
	add	r2, r2, #0x18
	add	r2, r2, r4
	ldrb	r1, [r3]
	lsl	r0, r1, #0x5
	sub	r0, r0, r1
	lsl	r0, r0, #0x5
	add	r0, r0, ip
	add	r6, r3, #0
	add	r6, r6, #0x36
	add	r0, r6, r0
	ldrh	r0, [r0]
	strh	r0, [r2]
	ldrb	r1, [r3]
	lsl	r0, r1, #0x5
	sub	r0, r0, r1
	lsl	r2, r0, #0x5
	add	r0, r3, r2
	ldrb	r0, [r0, #0xe]
	cmp	r0, #0x1
	bne	.L19	@cond_branch
	mov	r1, r8
	add	r1, r1, #0x24
	add	r1, r1, r4
	add	r0, r5, r2
	add	r0, r7, r0
	ldrh	r0, [r0]
	strh	r0, [r1]
	mov	r2, r8
	add	r2, r2, #0x30
	add	r2, r2, r4
	ldrb	r1, [r3]
	lsl	r0, r1, #0x5
	sub	r0, r0, r1
	lsl	r0, r0, #0x5
	add	r0, r5, r0
	add	r0, r6, r0
	ldrh	r0, [r0]
	strh	r0, [r2]
.L19:
	mov	r2, #0x2
	add	ip, ip, r2
	add	r5, r5, #0x2
	mov	r0, #0x1
	add	r9, r9, r0
	mov	r1, r9
	cmp	r1, #0x5
	ble	.L20	@cond_branch
	ldr	r2, .L23
	ldr	r3, [r2]
	ldr	r0, .L23+0x8
	ldr	r1, [r0]
	ldrb	r2, [r1]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0xe]
	add	r3, r3, #0x3c
	strb	r0, [r3]
	ldr	r1, .L23
	ldr	r4, [r1]
	ldr	r2, .L23+0x8
	ldr	r3, [r2]
	ldr	r1, [sp]
	add	r1, r1, sl
	lsl	r1, r1, #0x3
	add	r1, r1, sl
	lsl	r1, r1, #0x3
	ldrb	r2, [r3]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x5
	add	r0, r1, r0
	add	r3, r3, r0
	ldrb	r0, [r3, #0x1b]
	add	r4, r4, #0x3d
	strb	r0, [r4]
	ldr	r0, .L23
	ldr	r4, [r0]
	ldr	r2, .L23+0x8
	ldr	r3, [r2]
	ldrb	r2, [r3]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	add	r3, r3, r1
	ldrb	r0, [r3, #0x1c]
	add	r4, r4, #0x3e
	strb	r0, [r4]
	ldr	r0, .L23+0xc
	ldr	r0, [r0]
	ldr	r2, .L23+0x10
	add	r1, r0, r2
	ldr	r2, [r1]
	lsl	r1, r2, #0x1
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r2, .L23+0x14
	add	r1, r1, r2
	add	r0, r0, r1
	bl	SetVBlankCounter1Ptr
	bl	FreeTrainerTowerDataStruct
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L24:
	.align	2, 0
.L23:
	.word	sTrainerTowerOpponent
	.word	0x4001
	.word	sTrainerTowerState
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d4c
.Lfe5:
	.size	 InitTrainerTowerBattleStruct,.Lfe5-InitTrainerTowerBattleStruct
	.align	2, 0
	.globl	FreeTrainerTowerBattleStruct
	.type	 FreeTrainerTowerBattleStruct,function
	.thumb_func
FreeTrainerTowerBattleStruct:
	push	{r4, lr}
	ldr	r4, .L26
	ldr	r0, [r4]
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L27:
	.align	2, 0
.L26:
	.word	sTrainerTowerOpponent
.Lfe6:
	.size	 FreeTrainerTowerBattleStruct,.Lfe6-FreeTrainerTowerBattleStruct
	.align	2, 0
	.globl	GetTrainerTowerOpponentWinText
	.type	 GetTrainerTowerOpponentWinText,function
	.thumb_func
GetTrainerTowerOpponentWinText:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r4, r1, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L31
	add	r1, r4, #0
	bl	VarSet
	ldr	r5, .L31+0x4
	ldr	r1, [r5]
	add	r0, r1, #0
	add	r0, r0, #0x3c
	ldrb	r0, [r0]
	add	r1, r1, #0x3d
	ldrb	r1, [r1]
	bl	TrainerTowerGetOpponentTextColor
	cmp	r4, #0
	bne	.L29	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, #0xc
	add	r1, r6, #0
	bl	TT_ConvertEasyChatMessageToString
	b	.L30
.L32:
	.align	2, 0
.L31:
	.word	0x4003
	.word	sTrainerTowerOpponent
.L29:
	ldr	r0, [r5]
	add	r0, r0, #0x24
	add	r1, r6, #0
	bl	TT_ConvertEasyChatMessageToString
.L30:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 GetTrainerTowerOpponentWinText,.Lfe7-GetTrainerTowerOpponentWinText
	.align	2, 0
	.globl	GetTrainerTowerOpponentLoseText
	.type	 GetTrainerTowerOpponentLoseText,function
	.thumb_func
GetTrainerTowerOpponentLoseText:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r4, r1, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L36
	add	r1, r4, #0
	bl	VarSet
	ldr	r5, .L36+0x4
	ldr	r1, [r5]
	add	r0, r1, #0
	add	r0, r0, #0x3c
	ldrb	r0, [r0]
	add	r1, r1, #0x3d
	ldrb	r1, [r1]
	bl	TrainerTowerGetOpponentTextColor
	cmp	r4, #0
	bne	.L34	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, #0x18
	add	r1, r6, #0
	bl	TT_ConvertEasyChatMessageToString
	b	.L35
.L37:
	.align	2, 0
.L36:
	.word	0x4003
	.word	sTrainerTowerOpponent
.L34:
	ldr	r0, [r5]
	add	r0, r0, #0x30
	add	r1, r6, #0
	bl	TT_ConvertEasyChatMessageToString
.L35:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 GetTrainerTowerOpponentLoseText,.Lfe8-GetTrainerTowerOpponentLoseText
	.align	2, 0
	.type	 SetUpTrainerTowerDataStruct,function
	.thumb_func
SetUpTrainerTowerDataStruct:
	push	{r4, r5, r6, r7, lr}
	ldr	r0, .L46
	ldr	r0, [r0]
	ldr	r1, .L46+0x4
	add	r0, r0, r1
	ldr	r5, [r0]
	ldr	r4, .L46+0x8
	ldr	r0, .L46+0xc
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r1, .L46+0x10
	ldrb	r1, [r1, #0x12]
	sub	r1, r1, #0x18
	strb	r1, [r0]
	bl	ReadTrainerTowerAndValidate
	cmp	r0, #0x1
	bne	.L39	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, #0x4
	bl	CEReaderTool_LoadTrainerTower
	b	.L40
.L47:
	.align	2, 0
.L46:
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	sTrainerTowerState
	.word	0x1f0c
	.word	gMapHeader
.L39:
	ldr	r0, [r4]
	ldr	r1, .L48
	add	r0, r0, #0x4
	mov	r2, #0x8
	bl	memcpy
	lsl	r1, r5, #0x5
	ldr	r0, .L48+0x4
	add	r7, r1, r0
	mov	r5, #0x0
	mov	r4, #0x7
.L44:
	ldr	r6, .L48+0x8
	ldr	r0, [r6]
	add	r0, r5, r0
	add	r0, r0, #0xc
	ldmia	r7!, {r1}
	mov	r2, #0xf8
	lsl	r2, r2, #0x2
	bl	memcpy
	mov	r0, #0xf8
	lsl	r0, r0, #0x2
	add	r5, r5, r0
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L44	@cond_branch
	ldr	r0, [r6]
	add	r0, r0, #0xc
	mov	r1, #0xf8
	lsl	r1, r1, #0x5
	bl	CalcByteArraySum
	ldr	r1, [r6]
	str	r0, [r1, #0x8]
	bl	ValidateOrResetCurTrainerTowerRecord
.L40:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L49:
	.align	2, 0
.L48:
	.word	gTrainerTowerLocalHeader
	.word	gTrainerTowerFloors
	.word	sTrainerTowerState
.Lfe9:
	.size	 SetUpTrainerTowerDataStruct,.Lfe9-SetUpTrainerTowerDataStruct
	.align	2, 0
	.type	 FreeTrainerTowerDataStruct,function
	.thumb_func
FreeTrainerTowerDataStruct:
	push	{r4, lr}
	ldr	r4, .L51
	ldr	r0, [r4]
	bl	Free
	mov	r0, #0x0
	str	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L52:
	.align	2, 0
.L51:
	.word	sTrainerTowerState
.Lfe10:
	.size	 FreeTrainerTowerDataStruct,.Lfe10-FreeTrainerTowerDataStruct
	.align	2, 0
	.type	 InitTrainerTowerFloor,function
	.thumb_func
InitTrainerTowerFloor:
	push	{r4, lr}
	ldr	r0, .L56
	ldrh	r0, [r0, #0x12]
	ldr	r1, .L56+0x4
	add	r0, r0, r1
	ldr	r1, .L56+0x8
	ldr	r4, [r1]
	ldrb	r1, [r4, #0x4]
	cmp	r0, r1
	ble	.L54	@cond_branch
	ldr	r0, .L56+0xc
	mov	r1, #0x3
	strh	r1, [r0]
	mov	r0, #0x90
	lsl	r0, r0, #0x1
	bl	SetCurrentMapLayout
	b	.L55
.L57:
	.align	2, 0
.L56:
	.word	gMapHeader
	.word	-0x117
	.word	sTrainerTowerState
	.word	gSpecialVar_Result
.L54:
	ldr	r3, .L58
	ldrb	r1, [r4]
	lsl	r0, r1, #0x5
	sub	r0, r0, r1
	lsl	r0, r0, #0x5
	add	r0, r4, r0
	ldrb	r0, [r0, #0xe]
	strh	r0, [r3]
	ldr	r2, .L58+0x4
	ldrb	r1, [r4]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	ldrh	r3, [r3]
	add	r0, r0, r3
	lsl	r0, r0, #0x1
	add	r0, r0, r2
	ldrh	r0, [r0]
	bl	SetCurrentMapLayout
	bl	SetTrainerTowerNPCGraphics
.L55:
	pop	{r4}
	pop	{r0}
	bx	r0
.L59:
	.align	2, 0
.L58:
	.word	gSpecialVar_Result
	.word	sFloorLayouts
.Lfe11:
	.size	 InitTrainerTowerFloor,.Lfe11-InitTrainerTowerFloor
	.align	2, 0
	.type	 SetTrainerTowerNPCGraphics,function
	.thumb_func
SetTrainerTowerNPCGraphics:
	push	{r4, r5, r6, lr}
	ldr	r0, .L104
	ldr	r2, [r0]
	ldrb	r1, [r2]
	lsl	r0, r1, #0x5
	sub	r0, r0, r1
	lsl	r0, r0, #0x5
	add	r2, r2, r0
	ldrb	r0, [r2, #0xe]
	cmp	r0, #0x1
	beq	.L71	@cond_branch
	cmp	r0, #0x1
	bgt	.L103	@cond_branch
	cmp	r0, #0
	beq	.L62	@cond_branch
	b	.L61
.L105:
	.align	2, 0
.L104:
	.word	sTrainerTowerState
.L103:
	cmp	r0, #0x2
	beq	.L80	@cond_branch
	b	.L61
.L62:
	ldrb	r2, [r2, #0x1b]
	mov	r3, #0x0
	ldr	r0, .L106
	ldrb	r1, [r0, #0x1]
	add	r6, r0, #0
	cmp	r1, r2
	beq	.L64	@cond_branch
	add	r1, r6, #0
.L65:
	add	r1, r1, #0x4
	add	r3, r3, #0x1
	cmp	r3, #0x52
	bhi	.L64	@cond_branch
	ldrb	r0, [r1, #0x1]
	cmp	r0, r2
	bne	.L65	@cond_branch
.L64:
	cmp	r3, #0x53
	beq	.L69	@cond_branch
	lsl	r0, r3, #0x2
	add	r0, r0, r6
	ldrb	r1, [r0]
	b	.L70
.L107:
	.align	2, 0
.L106:
	.word	sSingleBattleTrainerInfo
.L69:
	mov	r1, #0x12
.L70:
	ldr	r0, .L108
	bl	VarSet
	b	.L61
.L109:
	.align	2, 0
.L108:
	.word	0x4011
.L71:
	ldrb	r2, [r2, #0x1b]
	mov	r3, #0x0
	ldr	r0, .L110
	ldrb	r1, [r0, #0x2]
	add	r4, r0, #0
	cmp	r1, r2
	beq	.L73	@cond_branch
	add	r1, r4, #0
.L74:
	add	r1, r1, #0x8
	add	r3, r3, #0x1
	cmp	r3, #0x9
	bhi	.L73	@cond_branch
	ldrb	r0, [r1, #0x2]
	cmp	r0, r2
	bne	.L74	@cond_branch
.L73:
	cmp	r3, #0xa
	beq	.L78	@cond_branch
	lsl	r0, r3, #0x3
	add	r0, r0, r4
	ldrb	r1, [r0]
	ldrb	r4, [r0, #0x1]
	b	.L79
.L111:
	.align	2, 0
.L110:
	.word	sDoubleBattleTrainerInfo
.L78:
	mov	r1, #0x12
	mov	r4, #0x12
.L79:
	ldr	r0, .L112
	bl	VarSet
	ldr	r0, .L112+0x4
	add	r1, r4, #0
	bl	VarSet
	b	.L61
.L113:
	.align	2, 0
.L112:
	.word	0x4010
	.word	0x4013
.L80:
	mov	r4, #0x0
	ldr	r6, .L114
.L84:
	ldr	r0, .L114+0x4
	ldr	r3, [r0]
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	ldrb	r2, [r3]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	add	r3, r3, r1
	ldrb	r2, [r3, #0x1b]
	mov	r3, #0x0
	ldr	r1, .L114
	ldrb	r0, [r1, #0x1]
	add	r5, r4, #0x1
	cmp	r0, r2
	beq	.L86	@cond_branch
.L87:
	add	r1, r1, #0x4
	add	r3, r3, #0x1
	cmp	r3, #0x52
	bhi	.L86	@cond_branch
	ldrb	r0, [r1, #0x1]
	cmp	r0, r2
	bne	.L87	@cond_branch
.L86:
	cmp	r3, #0x53
	beq	.L91	@cond_branch
	lsl	r0, r3, #0x2
	add	r0, r0, r6
	ldrb	r1, [r0]
	b	.L92
.L115:
	.align	2, 0
.L114:
	.word	sSingleBattleTrainerInfo
	.word	sTrainerTowerState
.L91:
	mov	r1, #0x12
.L92:
	cmp	r4, #0x1
	beq	.L95	@cond_branch
	cmp	r4, #0x1
	bgt	.L99	@cond_branch
	cmp	r4, #0
	beq	.L94	@cond_branch
	b	.L83
.L99:
	cmp	r4, #0x2
	beq	.L96	@cond_branch
	b	.L83
.L94:
	ldr	r0, .L116
	bl	VarSet
	b	.L83
.L117:
	.align	2, 0
.L116:
	.word	0x4012
.L95:
	ldr	r0, .L118
	bl	VarSet
	b	.L83
.L119:
	.align	2, 0
.L118:
	.word	0x4010
.L96:
	ldr	r0, .L120
	bl	VarSet
.L83:
	add	r4, r5, #0
	cmp	r4, #0x2
	ble	.L84	@cond_branch
.L61:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L121:
	.align	2, 0
.L120:
	.word	0x4011
.Lfe12:
	.size	 SetTrainerTowerNPCGraphics,.Lfe12-SetTrainerTowerNPCGraphics
	.align	2, 0
	.type	 TT_ConvertEasyChatMessageToString,function
	.thumb_func
TT_ConvertEasyChatMessageToString:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x3
	mov	r3, #0x2
	bl	ConvertEasyChatWordsToString
	mov	r2, #0x1
	neg	r2, r2
	mov	r0, #0x2
	add	r1, r4, #0
	bl	GetStringWidth
	cmp	r0, #0xc4
	bls	.L123	@cond_branch
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, #0x2
	mov	r3, #0x3
	bl	ConvertEasyChatWordsToString
	ldrb	r0, [r4]
	mov	r1, #0x1
	cmp	r0, #0xfe
	beq	.L133	@cond_branch
.L124:
	add	r0, r4, r1
	ldrb	r0, [r0]
	add	r1, r1, #0x1
	cmp	r0, #0xfe
	bne	.L124	@cond_branch
	b	.L133
.L130:
	add	r1, r1, #0x1
.L133:
	add	r0, r4, r1
	ldrb	r0, [r0]
	cmp	r0, #0xfe
	bne	.L130	@cond_branch
	add	r1, r4, r1
	mov	r0, #0xfa
	strb	r0, [r1]
.L123:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe13:
	.size	 TT_ConvertEasyChatMessageToString,.Lfe13-TT_ConvertEasyChatMessageToString
	.align	2, 0
	.type	 BufferTowerOpponentSpeech,function
	.thumb_func
BufferTowerOpponentSpeech:
	push	{r4, r5, lr}
	ldr	r0, .L146
	ldrh	r4, [r0]
	ldr	r2, .L146+0x4
	ldr	r3, [r2]
	ldrb	r1, [r3]
	lsl	r0, r1, #0x5
	sub	r0, r0, r1
	lsl	r1, r0, #0x5
	add	r0, r3, r1
	ldrb	r5, [r0, #0xe]
	cmp	r5, #0x1
	beq	.L135	@cond_branch
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r1
	add	r0, r3, r0
.L135:
	ldrb	r1, [r0, #0x1b]
	ldr	r0, .L146+0x8
	ldrh	r0, [r0]
	cmp	r0, #0x3
	beq	.L139	@cond_branch
	cmp	r0, #0x3
	bgt	.L144	@cond_branch
	cmp	r0, #0x2
	beq	.L138	@cond_branch
	b	.L137
.L147:
	.align	2, 0
.L146:
	.word	gSpecialVar_0x8006
	.word	sTrainerTowerState
	.word	gSpecialVar_0x8005
.L144:
	cmp	r0, #0x4
	beq	.L140	@cond_branch
	cmp	r0, #0x5
	beq	.L141	@cond_branch
	b	.L137
.L138:
	add	r0, r5, #0
	bl	TrainerTowerGetOpponentTextColor
	ldr	r0, .L148
	ldr	r0, [r0]
	ldrb	r2, [r0]
	lsl	r1, r2, #0x5
	sub	r1, r1, r2
	lsl	r1, r1, #0x5
	add	r1, r1, #0xc
	add	r0, r0, r1
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	add	r0, r0, #0xe
	b	.L145
.L149:
	.align	2, 0
.L148:
	.word	sTrainerTowerState
.L139:
	add	r0, r5, #0
	bl	TrainerTowerGetOpponentTextColor
	ldr	r0, .L150
	ldr	r0, [r0]
	ldrb	r2, [r0]
	lsl	r1, r2, #0x5
	sub	r1, r1, r2
	lsl	r1, r1, #0x5
	add	r1, r1, #0xc
	add	r0, r0, r1
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	add	r0, r0, #0x1a
	b	.L145
.L151:
	.align	2, 0
.L150:
	.word	sTrainerTowerState
.L140:
	add	r0, r5, #0
	bl	TrainerTowerGetOpponentTextColor
	ldr	r0, .L152
	ldr	r0, [r0]
	ldrb	r2, [r0]
	lsl	r1, r2, #0x5
	sub	r1, r1, r2
	lsl	r1, r1, #0x5
	add	r1, r1, #0xc
	add	r0, r0, r1
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	add	r0, r0, #0x26
.L145:
	ldr	r1, .L152+0x4
	bl	TT_ConvertEasyChatMessageToString
	b	.L137
.L153:
	.align	2, 0
.L152:
	.word	sTrainerTowerState
	.word	gStringVar4
.L141:
	ldr	r0, [r2]
	ldrb	r2, [r0]
	lsl	r1, r2, #0x5
	sub	r1, r1, r2
	lsl	r1, r1, #0x5
	add	r1, r1, #0xc
	add	r0, r0, r1
	lsl	r1, r4, #0x2
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, r4
	lsl	r1, r1, #0x3
	add	r1, r1, #0x4
	add	r0, r0, r1
	add	r0, r0, #0x32
	ldr	r1, .L154
	bl	TT_ConvertEasyChatMessageToString
.L137:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L155:
	.align	2, 0
.L154:
	.word	gStringVar4
.Lfe14:
	.size	 BufferTowerOpponentSpeech,.Lfe14-BufferTowerOpponentSpeech
	.align	2, 0
	.type	 TrainerTowerGetOpponentTextColor,function
	.thumb_func
TrainerTowerGetOpponentTextColor:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r3, r0, #0
	lsl	r1, r1, #0x18
	lsr	r2, r1, #0x18
	mov	r5, #0x0
	cmp	r0, #0x1
	beq	.L167	@cond_branch
	cmp	r0, #0x1
	bgt	.L179	@cond_branch
	cmp	r0, #0
	beq	.L159	@cond_branch
	b	.L157
.L179:
	cmp	r3, #0x2
	bne	.L157	@cond_branch
.L159:
	mov	r4, #0x0
	ldr	r0, .L181
	ldrb	r1, [r0, #0x1]
	add	r3, r0, #0
	cmp	r1, r2
	beq	.L161	@cond_branch
	add	r1, r3, #0
.L162:
	add	r1, r1, #0x4
	add	r4, r4, #0x1
	cmp	r4, #0x52
	bhi	.L161	@cond_branch
	ldrb	r0, [r1, #0x1]
	cmp	r0, r2
	bne	.L162	@cond_branch
.L161:
	cmp	r4, #0x53
	beq	.L157	@cond_branch
	lsl	r0, r4, #0x2
	add	r0, r0, r3
	ldrb	r5, [r0, #0x2]
	b	.L157
.L182:
	.align	2, 0
.L181:
	.word	sSingleBattleTrainerInfo
.L167:
	mov	r4, #0x0
	ldr	r1, .L183
	b	.L180
.L184:
	.align	2, 0
.L183:
	.word	sDoubleBattleTrainerInfo
.L170:
	add	r1, r1, #0x8
	add	r4, r4, #0x1
	cmp	r4, #0x9
	bhi	.L169	@cond_branch
.L180:
	ldrb	r0, [r1, #0x2]
	cmp	r0, r2
	bne	.L170	@cond_branch
.L169:
	cmp	r4, #0xa
	beq	.L157	@cond_branch
	ldr	r0, .L185
	bl	VarGet
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L175	@cond_branch
	ldr	r1, .L185+0x4
	lsl	r0, r4, #0x3
	add	r0, r0, r1
	ldrb	r5, [r0, #0x4]
	b	.L157
.L186:
	.align	2, 0
.L185:
	.word	0x4003
	.word	sDoubleBattleTrainerInfo
.L175:
	ldr	r1, .L187
	lsl	r0, r4, #0x3
	add	r0, r0, r1
	ldrb	r5, [r0, #0x3]
.L157:
	ldr	r2, .L187+0x4
	ldr	r1, .L187+0x8
	ldrh	r0, [r1]
	strh	r0, [r2]
	strh	r5, [r1]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L188:
	.align	2, 0
.L187:
	.word	sDoubleBattleTrainerInfo
	.word	gSpecialVar_PrevTextColor
	.word	gSpecialVar_TextColor
.Lfe15:
	.size	 TrainerTowerGetOpponentTextColor,.Lfe15-TrainerTowerGetOpponentTextColor
	.align	2, 0
	.type	 CB2_EndTrainerTowerBattle,function
	.thumb_func
CB2_EndTrainerTowerBattle:
	push	{lr}
	ldr	r0, .L190
	bl	SetMainCallback2
	pop	{r0}
	bx	r0
.L191:
	.align	2, 0
.L190:
	.word	CB2_ReturnToFieldContinueScriptPlayMapMusic
.Lfe16:
	.size	 CB2_EndTrainerTowerBattle,.Lfe16-CB2_EndTrainerTowerBattle
	.align	2, 0
	.type	 Task_DoTrainerTowerBattle,function
	.thumb_func
Task_DoTrainerTowerBattle:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	IsBattleTransitionDone
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L193	@cond_branch
	ldr	r0, .L194
	ldr	r1, .L194+0x4
	str	r1, [r0, #0x8]
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L194+0x8
	bl	SetMainCallback2
	add	r0, r4, #0
	bl	DestroyTask
.L193:
	pop	{r4}
	pop	{r0}
	bx	r0
.L195:
	.align	2, 0
.L194:
	.word	gMain
	.word	CB2_EndTrainerTowerBattle
	.word	CB2_InitBattle
.Lfe17:
	.size	 Task_DoTrainerTowerBattle,.Lfe17-Task_DoTrainerTowerBattle
	.align	2, 0
	.type	 DoTrainerTowerBattle,function
	.thumb_func
DoTrainerTowerBattle:
	push	{r4, lr}
	ldr	r4, .L198
	ldr	r3, .L198+0x4
	str	r3, [r4]
	ldr	r0, .L198+0x8
	ldr	r1, [r0]
	ldrb	r2, [r1]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0xe]
	cmp	r0, #0x1
	bne	.L197	@cond_branch
	orr	r0, r0, r3
	str	r0, [r4]
.L197:
	ldr	r1, .L198+0xc
	mov	r0, #0x0
	strh	r0, [r1]
	bl	BuildEnemyParty
	ldr	r0, .L198+0x10
	mov	r1, #0x1
	bl	CreateTask
	mov	r0, #0x0
	bl	PlayMapChosenOrBattleBGM
	bl	BattleSetup_GetBattleTowerBattleTransition
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	BattleTransition_StartOnField
	pop	{r4}
	pop	{r0}
	bx	r0
.L199:
	.align	2, 0
.L198:
	.word	gBattleTypeFlags
	.word	0x80008
	.word	sTrainerTowerState
	.word	gTrainerBattleOpponent_A
	.word	Task_DoTrainerTowerBattle
.Lfe18:
	.size	 DoTrainerTowerBattle,.Lfe18-DoTrainerTowerBattle
	.align	2, 0
	.type	 TrainerTowerGetChallengeType,function
	.thumb_func
TrainerTowerGetChallengeType:
	push	{lr}
	ldr	r0, .L202
	ldrh	r0, [r0]
	cmp	r0, #0
	bne	.L201	@cond_branch
	ldr	r3, .L202+0x4
	ldr	r0, .L202+0x8
	ldr	r1, [r0]
	ldrb	r2, [r1]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0xe]
	strh	r0, [r3]
.L201:
	pop	{r0}
	bx	r0
.L203:
	.align	2, 0
.L202:
	.word	gSpecialVar_0x8005
	.word	gSpecialVar_Result
	.word	sTrainerTowerState
.Lfe19:
	.size	 TrainerTowerGetChallengeType,.Lfe19-TrainerTowerGetChallengeType
	.align	2, 0
	.type	 TrainerTowerAddFloorCleared,function
	.thumb_func
TrainerTowerAddFloorCleared:
	ldr	r0, .L205
	ldr	r1, [r0]
	ldr	r2, .L205+0x4
	add	r0, r1, r2
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L205+0x8
	add	r1, r1, r0
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	bx	lr
.L206:
	.align	2, 0
.L205:
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d54
.Lfe20:
	.size	 TrainerTowerAddFloorCleared,.Lfe20-TrainerTowerAddFloorCleared
	.align	2, 0
	.type	 GetFloorAlreadyCleared,function
	.thumb_func
GetFloorAlreadyCleared:
	push	{lr}
	ldr	r0, .L211
	ldrh	r0, [r0, #0x12]
	mov	ip, r0
	ldr	r3, .L211+0x4
	add	r3, r3, ip
	ldr	r0, .L211+0x8
	ldr	r1, [r0]
	ldr	r2, .L211+0xc
	add	r0, r1, r2
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L211+0x10
	add	r1, r1, r0
	ldrb	r1, [r1]
	cmp	r3, r1
	bne	.L208	@cond_branch
	ldr	r3, .L211+0x14
	add	r3, r3, ip
	ldr	r0, .L211+0x18
	ldr	r1, [r0]
	ldrb	r2, [r1]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1, #0xd]
	cmp	r3, r1
	bgt	.L208	@cond_branch
	ldr	r1, .L211+0x1c
	mov	r0, #0x0
	b	.L210
.L212:
	.align	2, 0
.L211:
	.word	gMapHeader
	.word	-0x118
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d54
	.word	-0x117
	.word	sTrainerTowerState
	.word	gSpecialVar_Result
.L208:
	ldr	r1, .L213
	mov	r0, #0x1
.L210:
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L214:
	.align	2, 0
.L213:
	.word	gSpecialVar_Result
.Lfe21:
	.size	 GetFloorAlreadyCleared,.Lfe21-GetFloorAlreadyCleared
	.align	2, 0
	.type	 StartTrainerTowerChallenge,function
	.thumb_func
StartTrainerTowerChallenge:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r4, .L220
	ldr	r0, [r4]
	ldr	r5, .L220+0x4
	add	r1, r0, r5
	ldr	r0, .L220+0x8
	ldrh	r0, [r0]
	str	r0, [r1]
	cmp	r0, #0x3
	bls	.L216	@cond_branch
	mov	r0, #0x0
	str	r0, [r1]
.L216:
	bl	ValidateOrResetCurTrainerTowerRecord
	bl	ReadTrainerTowerAndValidate
	cmp	r0, #0
	bne	.L217	@cond_branch
	ldr	r1, [r4]
	add	r0, r1, r5
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L220+0xc
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r2, #0x20
	orr	r0, r0, r2
	b	.L219
.L221:
	.align	2, 0
.L220:
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	gSpecialVar_0x8005
	.word	0x3d56
.L217:
	ldr	r1, [r4]
	add	r0, r1, r5
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L222
	add	r1, r1, r0
	ldrb	r2, [r1]
	mov	r0, #0x21
	neg	r0, r0
	and	r0, r0, r2
.L219:
	strb	r0, [r1]
	ldr	r6, .L222+0x4
	ldr	r2, [r6]
	ldr	r5, .L222+0x8
	add	r0, r2, r5
	ldr	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r0, .L222+0xc
	add	r2, r2, r0
	mov	r0, #0x0
	mov	r8, r0
	mov	r0, r8
	strb	r0, [r2]
	ldr	r0, [r6]
	add	r1, r0, r5
	ldr	r2, [r1]
	lsl	r1, r2, #0x1
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r4, .L222+0x10
	add	r1, r1, r4
	add	r0, r0, r1
	bl	SetVBlankCounter1Ptr
	ldr	r2, [r6]
	add	r3, r2, r5
	ldr	r1, [r3]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r4, r2, r4
	add	r4, r4, r0
	mov	r0, r8
	str	r0, [r4]
	ldr	r1, [r3]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r3, .L222
	add	r2, r2, r3
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r1, [r6]
	add	r5, r1, r5
	ldr	r2, [r5]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	add	r1, r1, r3
	ldrb	r2, [r1]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L223:
	.align	2, 0
.L222:
	.word	0x3d56
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d54
	.word	0x3d4c
.Lfe22:
	.size	 StartTrainerTowerChallenge,.Lfe22-StartTrainerTowerChallenge
	.align	2, 0
	.type	 GetOwnerState,function
	.thumb_func
GetOwnerState:
	push	{lr}
	bl	DisableVBlankCounter1
	ldr	r3, .L227
	mov	r0, #0x0
	strh	r0, [r3]
	ldr	r0, .L227+0x4
	ldr	r2, [r0]
	ldr	r1, .L227+0x8
	add	r0, r2, r1
	ldr	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r0, .L227+0xc
	add	r2, r2, r0
	ldrb	r0, [r2]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	bge	.L225	@cond_branch
	mov	r0, #0x1
	strh	r0, [r3]
.L225:
	ldrb	r2, [r2]
	lsl	r0, r2, #0x1f
	cmp	r0, #0
	beq	.L226	@cond_branch
	lsl	r0, r2, #0x1e
	cmp	r0, #0
	bge	.L226	@cond_branch
	ldrh	r0, [r3]
	add	r0, r0, #0x1
	strh	r0, [r3]
.L226:
	ldr	r0, .L227+0x4
	ldr	r1, [r0]
	ldr	r2, .L227+0x8
	add	r0, r1, r2
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L227+0xc
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L228:
	.align	2, 0
.L227:
	.word	gSpecialVar_Result
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d56
.Lfe23:
	.size	 GetOwnerState,.Lfe23-GetOwnerState
	.align	2, 0
	.type	 GiveChallengePrize,function
	.thumb_func
GiveChallengePrize:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r1, .L235
	ldr	r0, .L235+0x4
	ldr	r0, [r0]
	ldrb	r0, [r0, #0xf]
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r4, [r0]
	ldr	r0, .L235+0x8
	mov	r8, r0
	ldr	r2, [r0]
	ldr	r7, .L235+0xc
	add	r0, r2, r7
	ldr	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r6, .L235+0x10
	add	r2, r2, r6
	ldrb	r0, [r2]
	lsl	r0, r0, #0x1f
	lsr	r5, r0, #0x1f
	cmp	r5, #0
	beq	.L230	@cond_branch
	ldr	r1, .L235+0x14
	mov	r0, #0x2
	b	.L234
.L236:
	.align	2, 0
.L235:
	.word	sPrizeList
	.word	sTrainerTowerState
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d56
	.word	gSpecialVar_Result
.L230:
	add	r0, r4, #0
	mov	r1, #0x1
	bl	AddBagItem
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L232	@cond_branch
	ldr	r1, .L237
	add	r0, r4, #0
	bl	CopyItemName
	mov	r0, r8
	ldr	r1, [r0]
	add	r0, r1, r7
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	add	r1, r1, r6
	ldrb	r0, [r1]
	mov	r2, #0x1
	orr	r0, r0, r2
	strb	r0, [r1]
	ldr	r0, .L237+0x4
	strh	r5, [r0]
	b	.L231
.L238:
	.align	2, 0
.L237:
	.word	gStringVar2
	.word	gSpecialVar_Result
.L232:
	ldr	r1, .L239
	mov	r0, #0x1
.L234:
	strh	r0, [r1]
.L231:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L240:
	.align	2, 0
.L239:
	.word	gSpecialVar_Result
.Lfe24:
	.size	 GiveChallengePrize,.Lfe24-GiveChallengePrize
	.align	2, 0
	.type	 CheckFinalTime,function
	.thumb_func
CheckFinalTime:
	push	{r4, r5, r6, lr}
	ldr	r6, .L247
	ldr	r2, [r6]
	ldr	r1, .L247+0x4
	add	r0, r2, r1
	ldr	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r1, r0, #0x2
	add	r0, r2, r1
	ldr	r3, .L247+0x8
	add	r0, r0, r3
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1e
	lsr	r5, r0, #0x1f
	cmp	r5, #0
	beq	.L242	@cond_branch
	ldr	r1, .L247+0xc
	mov	r0, #0x2
	b	.L246
.L248:
	.align	2, 0
.L247:
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d56
	.word	gSpecialVar_Result
.L242:
	ldr	r4, .L249
	add	r0, r1, r4
	add	r0, r2, r0
	add	r0, r0, #0x4
	bl	GetTrainerTowerRecordTime
	ldr	r3, [r6]
	ldr	r2, .L249+0x4
	add	r1, r3, r2
	ldr	r2, [r1]
	lsl	r1, r2, #0x1
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r4, r3, r4
	add	r4, r4, r1
	ldr	r4, [r4]
	cmp	r0, r4
	bls	.L244	@cond_branch
	add	r0, r1, r3
	ldr	r3, .L249+0x8
	add	r0, r0, r3
	add	r1, r4, #0
	bl	SetTrainerTowerRecordTime
	ldr	r0, .L249+0xc
	strh	r5, [r0]
	b	.L243
.L250:
	.align	2, 0
.L249:
	.word	0x3d4c
	.word	0x3d48
	.word	0x3d50
	.word	gSpecialVar_Result
.L244:
	ldr	r1, .L251
	mov	r0, #0x1
.L246:
	strh	r0, [r1]
.L243:
	ldr	r0, .L251+0x4
	ldr	r1, [r0]
	ldr	r2, .L251+0x8
	add	r0, r1, r2
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r3, .L251+0xc
	add	r1, r1, r3
	ldrb	r0, [r1]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r1]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L252:
	.align	2, 0
.L251:
	.word	gSpecialVar_Result
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d56
.Lfe25:
	.size	 CheckFinalTime,.Lfe25-CheckFinalTime
	.align	2, 0
	.type	 TrainerTowerResumeTimer,function
	.thumb_func
TrainerTowerResumeTimer:
	push	{r4, lr}
	ldr	r0, .L257
	ldr	r4, [r0]
	ldr	r1, .L257+0x4
	add	r0, r4, r1
	ldr	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r3, r0, #0x2
	add	r0, r4, r3
	ldr	r1, .L257+0x8
	add	r0, r0, r1
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	blt	.L254	@cond_branch
	sub	r1, r1, #0xa
	add	r0, r4, r1
	add	r2, r0, r3
	ldr	r1, [r2]
	ldr	r0, .L257+0xc
	cmp	r1, r0
	bls	.L255	@cond_branch
	add	r0, r0, #0x1
	str	r0, [r2]
	b	.L254
.L258:
	.align	2, 0
.L257:
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d56
	.word	0x34bbe
.L255:
	ldr	r1, .L259
	add	r0, r3, r1
	add	r0, r4, r0
	bl	SetVBlankCounter1Ptr
.L254:
	pop	{r4}
	pop	{r0}
	bx	r0
.L260:
	.align	2, 0
.L259:
	.word	0x3d4c
.Lfe26:
	.size	 TrainerTowerResumeTimer,.Lfe26-TrainerTowerResumeTimer
	.align	2, 0
	.type	 TrainerTowerSetPlayerLost,function
	.thumb_func
TrainerTowerSetPlayerLost:
	ldr	r0, .L262
	ldr	r1, [r0]
	ldr	r2, .L262+0x4
	add	r0, r1, r2
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L262+0x8
	add	r1, r1, r0
	ldrb	r0, [r1]
	mov	r2, #0x8
	orr	r0, r0, r2
	strb	r0, [r1]
	bx	lr
.L263:
	.align	2, 0
.L262:
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d56
.Lfe27:
	.size	 TrainerTowerSetPlayerLost,.Lfe27-TrainerTowerSetPlayerLost
	.align	2, 0
	.type	 GetTrainerTowerChallengeStatus,function
	.thumb_func
GetTrainerTowerChallengeStatus:
	push	{lr}
	ldr	r0, .L270
	ldr	r2, [r0]
	ldr	r1, .L270+0x4
	add	r0, r2, r1
	ldr	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r0, .L270+0x8
	add	r2, r2, r0
	ldrb	r1, [r2]
	lsl	r0, r1, #0x1c
	cmp	r0, #0
	bge	.L265	@cond_branch
	mov	r0, #0x9
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r1, .L270+0xc
	mov	r0, #0x0
	b	.L269
.L271:
	.align	2, 0
.L270:
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d56
	.word	gSpecialVar_Result
.L265:
	lsl	r0, r1, #0x1b
	cmp	r0, #0
	bge	.L267	@cond_branch
	mov	r0, #0x11
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	ldr	r1, .L272
	mov	r0, #0x1
	b	.L269
.L273:
	.align	2, 0
.L272:
	.word	gSpecialVar_Result
.L267:
	ldr	r1, .L274
	mov	r0, #0x2
.L269:
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L275:
	.align	2, 0
.L274:
	.word	gSpecialVar_Result
.Lfe28:
	.size	 GetTrainerTowerChallengeStatus,.Lfe28-GetTrainerTowerChallengeStatus
	.align	2, 0
	.type	 GetCurrentTime,function
	.thumb_func
GetCurrentTime:
	push	{r4, r5, r6, lr}
	ldr	r4, .L278
	ldr	r2, [r4]
	ldr	r6, .L278+0x4
	add	r0, r2, r6
	ldr	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r5, .L278+0x8
	add	r2, r2, r5
	add	r2, r2, r0
	ldr	r1, [r2]
	ldr	r0, .L278+0xc
	cmp	r1, r0
	bls	.L277	@cond_branch
	bl	DisableVBlankCounter1
	ldr	r1, [r4]
	add	r0, r1, r6
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r5
	add	r1, r1, r0
	ldr	r0, .L278+0x10
	str	r0, [r1]
.L277:
	ldr	r1, [r4]
	add	r0, r1, r6
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r5
	add	r1, r1, r0
	ldr	r4, [r1]
	mov	r5, #0xe1
	lsl	r5, r5, #0x4
	add	r0, r4, #0
	add	r1, r5, #0
	bl	__divsi3
	add	r6, r0, #0
	add	r0, r4, #0
	add	r1, r5, #0
	bl	__modsi3
	add	r4, r0, #0
	mov	r1, #0x3c
	bl	__divsi3
	add	r5, r0, #0
	add	r0, r4, #0
	mov	r1, #0x3c
	bl	__modsi3
	mov	r1, #0xa8
	mul	r0, r0, r1
	mov	r1, #0x64
	bl	__divsi3
	add	r4, r0, #0
	ldr	r0, .L278+0x14
	add	r1, r6, #0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L278+0x18
	add	r1, r5, #0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L278+0x1c
	add	r1, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L279:
	.align	2, 0
.L278:
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d4c
	.word	0x34bbe
	.word	0x34bbf
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
.Lfe29:
	.size	 GetCurrentTime,.Lfe29-GetCurrentTime
	.align	2, 0
	.type	 ShowResultsBoard,function
	.thumb_func
ShowResultsBoard:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	bl	ValidateOrResetCurTrainerTowerRecord
	ldr	r0, .L286
	bl	AddWindow
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	bl	LoadStdWindowFrameGfx
	add	r0, r7, #0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r2, .L286+0x4
	mov	r1, #0x0
	str	r1, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	str	r1, [sp, #0x8]
	add	r0, r7, #0
	mov	r1, #0x2
	mov	r3, #0x4a
	bl	AddTextPrinterParameterized
	mov	r0, #0x0
	mov	r8, r0
	mov	r1, #0xb8
	lsl	r1, r1, #0x16
	mov	sl, r1
	mov	r0, #0x90
	lsl	r0, r0, #0x16
	mov	r9, r0
.L284:
	ldr	r0, .L286+0x8
	ldr	r2, [r0]
	ldr	r1, .L286+0xc
	add	r0, r2, r1
	ldr	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r1, .L286+0x10
	add	r0, r0, r1
	bl	GetTrainerTowerRecordTime
	add	r4, r0, #0
	mov	r5, #0xe1
	lsl	r5, r5, #0x4
	add	r1, r5, #0
	bl	__divsi3
	add	r6, r0, #0
	add	r0, r4, #0
	add	r1, r5, #0
	bl	__modsi3
	add	r4, r0, #0
	mov	r1, #0x3c
	bl	__divsi3
	add	r5, r0, #0
	add	r0, r4, #0
	mov	r1, #0x3c
	bl	__modsi3
	mov	r1, #0xa8
	mul	r0, r0, r1
	mov	r1, #0x64
	bl	__divsi3
	add	r4, r0, #0
	ldr	r0, .L286+0x14
	add	r1, r6, #0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L286+0x18
	add	r1, r5, #0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L286+0x1c
	add	r1, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L286+0x20
	ldr	r1, .L286+0x24
	bl	StringExpandPlaceholders
	ldr	r1, .L286+0x28
	mov	r0, r8
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r2, [r0]
	mov	r1, r9
	lsr	r0, r1, #0x18
	str	r0, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	add	r0, r7, #0
	mov	r1, #0x2
	mov	r3, #0x18
	bl	AddTextPrinterParameterized
	mov	r1, sl
	lsr	r0, r1, #0x18
	str	r0, [sp]
	mov	r0, #0xff
	str	r0, [sp, #0x4]
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	add	r0, r7, #0
	mov	r1, #0x2
	ldr	r2, .L286+0x20
	mov	r3, #0x60
	bl	AddTextPrinterParameterized
	mov	r0, #0xa0
	lsl	r0, r0, #0x15
	add	sl, sl, r0
	add	r9, r9, r0
	mov	r1, #0x1
	add	r8, r8, r1
	mov	r0, r8
	cmp	r0, #0x3
	ble	.L284	@cond_branch
	add	r0, r7, #0
	bl	PutWindowTilemap
	add	r0, r7, #0
	mov	r1, #0x3
	bl	CopyWindowToVram
	ldr	r0, .L286+0x2c
	add	r1, r7, #0
	bl	VarSet
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L287:
	.align	2, 0
.L286:
	.word	sTimeBoardWindowTemplate
	.word	gText_TimeBoard
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d50
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gStringVar4
	.word	gText_XMinYZSec
	.word	gTrainerTowerChallengeTypeTexts
	.word	0x4001
.Lfe30:
	.size	 ShowResultsBoard,.Lfe30-ShowResultsBoard
	.align	2, 0
	.type	 CloseResultsBoard,function
	.thumb_func
CloseResultsBoard:
	push	{r4, lr}
	ldr	r0, .L289
	bl	VarGet
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x1
	bl	ClearStdWindowAndFrameToTransparent
	add	r0, r4, #0
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.L290:
	.align	2, 0
.L289:
	.word	0x4001
.Lfe31:
	.size	 CloseResultsBoard,.Lfe31-CloseResultsBoard
	.align	2, 0
	.type	 TrainerTowerGetDoublesEligiblity,function
	.thumb_func
TrainerTowerGetDoublesEligiblity:
	push	{r4, lr}
	ldr	r4, .L292
	bl	GetMonsStateToDoubles
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r4]
	pop	{r4}
	pop	{r0}
	bx	r0
.L293:
	.align	2, 0
.L292:
	.word	gSpecialVar_Result
.Lfe32:
	.size	 TrainerTowerGetDoublesEligiblity,.Lfe32-TrainerTowerGetDoublesEligiblity
	.align	2, 0
	.type	 TrainerTowerGetNumFloors,function
	.thumb_func
TrainerTowerGetNumFloors:
	push	{lr}
	ldr	r0, .L298
	ldr	r1, [r0]
	ldrb	r0, [r1, #0x4]
	ldrb	r2, [r1, #0xd]
	cmp	r0, r2
	beq	.L295	@cond_branch
	ldr	r0, .L298+0x4
	ldrb	r1, [r1, #0x4]
	mov	r2, #0x0
	mov	r3, #0x1
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L298+0x8
	mov	r0, #0x1
	b	.L297
.L299:
	.align	2, 0
.L298:
	.word	sTrainerTowerState
	.word	gStringVar1
	.word	gSpecialVar_Result
.L295:
	ldr	r1, .L300
	mov	r0, #0x0
.L297:
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L301:
	.align	2, 0
.L300:
	.word	gSpecialVar_Result
.Lfe33:
	.size	 TrainerTowerGetNumFloors,.Lfe33-TrainerTowerGetNumFloors
	.align	2, 0
	.type	 ShouldWarpToCounter,function
	.thumb_func
ShouldWarpToCounter:
	push	{lr}
	ldr	r0, .L305
	ldrh	r1, [r0, #0x12]
	ldr	r0, .L305+0x4
	cmp	r1, r0
	bne	.L303	@cond_branch
	ldr	r0, .L305+0x8
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	cmp	r1, #0
	bne	.L303	@cond_branch
	ldr	r0, .L305+0xc
	strh	r1, [r0]
	b	.L304
.L306:
	.align	2, 0
.L305:
	.word	gMapHeader
	.word	0x117
	.word	0x4082
	.word	gSpecialVar_Result
.L303:
	ldr	r1, .L307
	mov	r0, #0x0
	strh	r0, [r1]
.L304:
	pop	{r0}
	bx	r0
.L308:
	.align	2, 0
.L307:
	.word	gSpecialVar_Result
.Lfe34:
	.size	 ShouldWarpToCounter,.Lfe34-ShouldWarpToCounter
	.align	2, 0
	.type	 PlayTrainerTowerEncounterMusic,function
	.thumb_func
PlayTrainerTowerEncounterMusic:
	push	{r4, lr}
	ldr	r0, .L319
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r0, .L319+0x4
	ldr	r3, [r0]
	lsl	r1, r2, #0x2
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x3
	ldrb	r2, [r3]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	add	r3, r3, r1
	ldrb	r1, [r3, #0x1b]
	mov	r3, #0x0
	ldr	r2, .L319+0x8
	ldr	r0, .L319+0xc
	add	r1, r1, r0
	b	.L318
.L320:
	.align	2, 0
.L319:
	.word	0x4001
	.word	sTrainerTowerState
	.word	sTrainerEncounterMusicLUT
	.word	gFacilityClassToTrainerClass
.L312:
	add	r2, r2, #0x4
	add	r3, r3, #0x1
	cmp	r3, #0x68
	bhi	.L311	@cond_branch
.L318:
	ldrb	r0, [r2]
	ldrb	r4, [r1]
	cmp	r0, r4
	bne	.L312	@cond_branch
.L311:
	cmp	r3, #0x69
	beq	.L316	@cond_branch
	ldr	r1, .L321
	lsl	r0, r3, #0x2
	add	r0, r0, r1
	ldrb	r2, [r0, #0x1]
	b	.L317
.L322:
	.align	2, 0
.L321:
	.word	sTrainerEncounterMusicLUT
.L316:
	mov	r2, #0x0
.L317:
	ldr	r0, .L323
	lsl	r1, r2, #0x1
	add	r1, r1, r0
	ldrh	r0, [r1]
	bl	PlayNewMapMusic
	pop	{r4}
	pop	{r0}
	bx	r0
.L324:
	.align	2, 0
.L323:
	.word	sTrainerTowerEncounterMusic
.Lfe35:
	.size	 PlayTrainerTowerEncounterMusic,.Lfe35-PlayTrainerTowerEncounterMusic
	.align	2, 0
	.type	 HasSpokenToOwner,function
	.thumb_func
HasSpokenToOwner:
	ldr	r3, .L326
	ldr	r0, .L326+0x4
	ldr	r1, [r0]
	ldr	r2, .L326+0x8
	add	r0, r1, r2
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L326+0xc
	add	r1, r1, r0
	ldrb	r0, [r1]
	lsl	r0, r0, #0x1d
	lsr	r0, r0, #0x1f
	strh	r0, [r3]
	bx	lr
.L327:
	.align	2, 0
.L326:
	.word	gSpecialVar_Result
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d56
.Lfe36:
	.size	 HasSpokenToOwner,.Lfe36-HasSpokenToOwner
	.align	2, 0
	.type	 BuildEnemyParty,function
	.thumb_func
BuildEnemyParty:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	ldr	r0, .L341
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	bl	GetPartyMaxLevel
	mov	r9, r0
	ldr	r0, .L341+0x4
	ldr	r1, [r0]
	ldr	r2, .L341+0x8
	add	r0, r1, r2
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L341+0xc
	add	r1, r1, r0
	ldrb	r5, [r1]
	bl	ZeroEnemyPartyMons
	ldr	r1, .L341+0x10
	mov	sl, r1
	ldr	r6, [r1]
	ldrb	r1, [r6]
	lsl	r0, r1, #0x5
	sub	r0, r0, r1
	lsl	r7, r0, #0x5
	add	r0, r6, r7
	ldrb	r0, [r0, #0xe]
	cmp	r0, #0x1
	beq	.L337	@cond_branch
	cmp	r0, #0x1
	ble	.L331	@cond_branch
	cmp	r0, #0x2
	bne	.LCB2879
	b	.L338	@long jump
.LCB2879:
.L331:
	mov	r6, #0x0
	lsl	r5, r5, #0x1
	str	r5, [sp]
	lsl	r0, r4, #0x2
	mov	r5, sl
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	add	r0, r0, r4
	lsl	r7, r0, #0x3
	add	r2, r7, #0x4
	mov	r8, r2
.L335:
	ldr	r1, .L341+0x14
	ldr	r2, [sp]
	add	r0, r6, r2
	add	r0, r0, r1
	ldrb	r2, [r0]
	ldr	r3, [r5]
	mov	r0, #0x2c
	mov	r4, r2
	mul	r4, r4, r0
	add	r2, r4, r7
	ldrb	r1, [r3]
	lsl	r0, r1, #0x5
	sub	r0, r0, r1
	lsl	r0, r0, #0x5
	add	r2, r2, r0
	add	r3, r3, r2
	add	r3, r3, #0x5c
	mov	r0, r9
	strb	r0, [r3]
	mov	r0, #0x64
	mul	r0, r0, r6
	ldr	r1, .L341+0x18
	add	r0, r0, r1
	ldr	r1, [r5]
	ldrb	r3, [r1]
	lsl	r2, r3, #0x5
	sub	r2, r2, r3
	lsl	r2, r2, #0x5
	add	r2, r2, #0xc
	add	r1, r1, r2
	add	r1, r1, r8
	add	r4, r4, #0x40
	add	r1, r1, r4
	bl	CreateBattleTowerMon
	add	r6, r6, #0x1
	cmp	r6, #0x1
	ble	.L335	@cond_branch
	b	.L329
.L342:
	.align	2, 0
.L341:
	.word	0x4001
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d54
	.word	sTrainerTowerState
	.word	sSingleBattleChallengeMonIdxs
	.word	gEnemyParty
.L337:
	ldr	r4, .L343
	lsl	r5, r5, #0x1
	add	r0, r5, r4
	ldrb	r2, [r0]
	mov	r1, #0x2c
	mov	r8, r1
	mov	r3, r8
	mul	r3, r3, r2
	add	r0, r3, r7
	add	r0, r6, r0
	add	r0, r0, #0x5c
	mov	r2, r9
	strb	r2, [r0]
	ldr	r6, .L343+0x4
	mov	r0, sl
	ldr	r1, [r0]
	ldrb	r2, [r1]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x5
	add	r0, r0, #0xc
	add	r1, r1, r0
	add	r3, r3, #0x44
	add	r1, r1, r3
	add	r0, r6, #0
	bl	CreateBattleTowerMon
	add	r4, r4, #0x1
	add	r5, r5, r4
	ldrb	r2, [r5]
	mov	r0, sl
	ldr	r1, [r0]
	mov	r3, r8
	mul	r3, r3, r2
	ldrb	r2, [r1]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x5
	add	r0, r3, r0
	add	r1, r1, r0
	mov	r2, #0xd2
	lsl	r2, r2, #0x1
	add	r1, r1, r2
	mov	r0, r9
	strb	r0, [r1]
	add	r6, r6, #0x64
	mov	r2, sl
	ldr	r1, [r2]
	ldrb	r2, [r1]
	lsl	r0, r2, #0x5
	sub	r0, r0, r2
	lsl	r0, r0, #0x5
	add	r0, r0, #0xc
	add	r1, r1, r0
	mov	r0, #0xc6
	lsl	r0, r0, #0x1
	add	r3, r3, r0
	add	r1, r1, r3
	add	r0, r6, #0
	bl	CreateBattleTowerMon
	b	.L329
.L344:
	.align	2, 0
.L343:
	.word	sDoubleBattleChallengeMonIdxs
	.word	gEnemyParty
.L338:
	ldr	r1, .L345
	lsl	r0, r5, #0x1
	add	r0, r0, r5
	add	r0, r4, r0
	add	r0, r0, r1
	ldrb	r2, [r0]
	mov	r0, #0x2c
	mov	r5, r2
	mul	r5, r5, r0
	lsl	r3, r4, #0x2
	add	r3, r3, r4
	lsl	r3, r3, #0x3
	add	r3, r3, r4
	lsl	r3, r3, #0x3
	add	r0, r5, r3
	add	r0, r0, r7
	add	r0, r6, r0
	add	r0, r0, #0x5c
	mov	r1, r9
	strb	r1, [r0]
	ldr	r0, .L345+0x4
	mov	r2, sl
	ldr	r1, [r2]
	ldrb	r4, [r1]
	lsl	r2, r4, #0x5
	sub	r2, r2, r4
	lsl	r2, r2, #0x5
	add	r2, r2, #0xc
	add	r1, r1, r2
	add	r3, r3, #0x4
	add	r1, r1, r3
	add	r5, r5, #0x40
	add	r1, r1, r5
	bl	CreateBattleTowerMon
.L329:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L346:
	.align	2, 0
.L345:
	.word	sKnockoutChallengeMonIdxs
	.word	gEnemyParty
.Lfe37:
	.size	 BuildEnemyParty,.Lfe37-BuildEnemyParty
	.align	2, 0
	.type	 GetPartyMaxLevel,function
	.thumb_func
GetPartyMaxLevel:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
	mov	r5, #0x0
.L351:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L355
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0xb
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, #0
	beq	.L350	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x41
	mov	r2, #0x0
	bl	GetMonData
	ldr	r1, .L355+0x4
	cmp	r0, r1
	beq	.L350	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x38
	mov	r2, #0x0
	bl	GetMonData
	cmp	r0, r6
	ble	.L350	@cond_branch
	add	r6, r0, #0
.L350:
	add	r5, r5, #0x1
	cmp	r5, #0x5
	ble	.L351	@cond_branch
	add	r0, r6, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L356:
	.align	2, 0
.L355:
	.word	gPlayerParty
	.word	0x19d
.Lfe38:
	.size	 GetPartyMaxLevel,.Lfe38-GetPartyMaxLevel
	.align	2, 0
	.type	 ValidateOrResetCurTrainerTowerRecord,function
	.thumb_func
ValidateOrResetCurTrainerTowerRecord:
	push	{r4, lr}
	ldr	r4, .L359
	ldr	r2, [r4]
	ldr	r1, .L359+0x4
	add	r0, r2, r1
	ldr	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r2, r2, r0
	ldr	r0, .L359+0x8
	add	r2, r2, r0
	ldr	r0, .L359+0xc
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x5]
	ldrb	r0, [r2]
	cmp	r0, r1
	beq	.L358	@cond_branch
	strb	r1, [r2]
	ldr	r2, [r4]
	ldr	r1, .L359+0x4
	add	r0, r2, r1
	ldr	r1, [r0]
	lsl	r0, r1, #0x1
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r2, .L359+0x10
	add	r0, r0, r2
	ldr	r1, .L359+0x14
	bl	SetTrainerTowerRecordTime
	ldr	r1, [r4]
	ldr	r2, .L359+0x4
	add	r0, r1, r2
	ldr	r2, [r0]
	lsl	r0, r2, #0x1
	add	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r1, r0
	ldr	r0, .L359+0x18
	add	r1, r1, r0
	ldrb	r2, [r1]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1]
.L358:
	pop	{r4}
	pop	{r0}
	bx	r0
.L360:
	.align	2, 0
.L359:
	.word	gSaveBlock1Ptr
	.word	0x3d48
	.word	0x3d55
	.word	sTrainerTowerState
	.word	0x3d50
	.word	0x34bbf
	.word	0x3d56
.Lfe39:
	.size	 ValidateOrResetCurTrainerTowerRecord,.Lfe39-ValidateOrResetCurTrainerTowerRecord
	.align	2, 0
	.globl	PrintTrainerTowerRecords
	.type	 PrintTrainerTowerRecords,function
	.thumb_func
PrintTrainerTowerRecords:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	mov	r0, #0x0
	mov	r8, r0
	bl	SetUpTrainerTowerDataStruct
	mov	r0, #0xd8
	str	r0, [sp]
	mov	r0, #0x90
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillWindowPixelRect
	bl	ValidateOrResetCurTrainerTowerRecord
	ldr	r4, .L367
	str	r4, [sp]
	mov	r0, r8
	str	r0, [sp, #0x4]
	ldr	r0, .L367+0x4
	str	r0, [sp, #0x8]
	mov	r0, #0x0
	mov	r1, #0x2
	mov	r2, #0x4a
	mov	r3, #0x0
	bl	AddTextPrinterParameterized3
	mov	r7, #0x0
	mov	r0, #0x90
	lsl	r0, r0, #0x16
	mov	sl, r0
	ldr	r0, .L367+0x8
	mov	r9, r0
.L365:
	ldr	r0, .L367+0xc
	ldr	r0, [r0]
	add	r0, r0, r9
	add	r0, r0, #0x4
	bl	GetTrainerTowerRecordTime
	add	r4, r0, #0
	mov	r5, #0xe1
	lsl	r5, r5, #0x4
	add	r1, r5, #0
	bl	__divsi3
	add	r6, r0, #0
	add	r0, r4, #0
	add	r1, r5, #0
	bl	__modsi3
	add	r4, r0, #0
	mov	r1, #0x3c
	bl	__divsi3
	add	r5, r0, #0
	add	r0, r4, #0
	mov	r1, #0x3c
	bl	__modsi3
	mov	r1, #0xa8
	mul	r0, r0, r1
	mov	r1, #0x64
	bl	__divsi3
	add	r4, r0, #0
	ldr	r0, .L367+0x10
	add	r1, r6, #0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L367+0x14
	add	r1, r5, #0
	mov	r2, #0x1
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L367+0x18
	add	r1, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L367+0x1c
	ldr	r1, .L367+0x20
	bl	StringExpandPlaceholders
	lsl	r1, r7, #0x2
	mov	r0, sl
	lsr	r4, r0, #0x18
	ldr	r0, .L367
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	ldr	r0, .L367+0x24
	add	r1, r1, r0
	ldr	r0, [r1]
	str	r0, [sp, #0x8]
	mov	r0, r8
	mov	r1, #0x2
	mov	r2, #0x18
	add	r3, r4, #0
	bl	AddTextPrinterParameterized3
	ldr	r0, .L367
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	ldr	r0, .L367+0x1c
	str	r0, [sp, #0x8]
	mov	r0, r8
	mov	r1, #0x2
	mov	r2, #0x60
	add	r3, r4, #0
	bl	AddTextPrinterParameterized3
	mov	r0, #0xa0
	lsl	r0, r0, #0x15
	add	sl, sl, r0
	mov	r0, #0xc
	add	r9, r9, r0
	add	r7, r7, #0x1
	cmp	r7, #0x3
	ble	.L365	@cond_branch
	mov	r0, r8
	bl	PutWindowTilemap
	mov	r0, r8
	mov	r1, #0x3
	bl	CopyWindowToVram
	bl	FreeTrainerTowerDataStruct
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L368:
	.align	2, 0
.L367:
	.word	sTextColors
	.word	gText_TimeBoard
	.word	0x3d4c
	.word	gSaveBlock1Ptr
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gStringVar4
	.word	gText_XMinYZSec
	.word	gTrainerTowerChallengeTypeTexts
.Lfe40:
	.size	 PrintTrainerTowerRecords,.Lfe40-PrintTrainerTowerRecords
	.align	2, 0
	.type	 GetTrainerTowerRecordTime,function
	.thumb_func
GetTrainerTowerRecordTime:
	ldr	r1, .L370
	ldr	r1, [r1]
	mov	r2, #0xf2
	lsl	r2, r2, #0x4
	add	r1, r1, r2
	ldr	r0, [r0]
	ldr	r1, [r1]
	eor	r0, r0, r1
	bx	lr
.L371:
	.align	2, 0
.L370:
	.word	gSaveBlock2Ptr
.Lfe41:
	.size	 GetTrainerTowerRecordTime,.Lfe41-GetTrainerTowerRecordTime
	.align	2, 0
	.type	 SetTrainerTowerRecordTime,function
	.thumb_func
SetTrainerTowerRecordTime:
	ldr	r2, .L373
	ldr	r2, [r2]
	mov	r3, #0xf2
	lsl	r3, r3, #0x4
	add	r2, r2, r3
	ldr	r2, [r2]
	eor	r2, r2, r1
	str	r2, [r0]
	bx	lr
.L374:
	.align	2, 0
.L373:
	.word	gSaveBlock2Ptr
.Lfe42:
	.size	 SetTrainerTowerRecordTime,.Lfe42-SetTrainerTowerRecordTime
	.align	2, 0
	.globl	ResetTrainerTowerResults
	.type	 ResetTrainerTowerResults,function
	.thumb_func
ResetTrainerTowerResults:
	push	{r4, r5, r6, lr}
	ldr	r6, .L381
	ldr	r5, .L381+0x4
	mov	r4, #0x3
.L379:
	ldr	r0, [r6]
	add	r0, r0, r5
	add	r0, r0, #0x4
	ldr	r1, .L381+0x8
	bl	SetTrainerTowerRecordTime
	add	r5, r5, #0xc
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L379	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L382:
	.align	2, 0
.L381:
	.word	gSaveBlock1Ptr
	.word	0x3d4c
	.word	0x34bbf
.Lfe43:
	.size	 ResetTrainerTowerResults,.Lfe43-ResetTrainerTowerResults
.text
	.align	2, 0 @ Don't pad with nop

