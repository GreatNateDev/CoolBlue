@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.type	 sUnionRoomPlayerName,object
	.size	 sUnionRoomPlayerName,12
sUnionRoomPlayerName:
	.space	12
	.type	 sPlayerCurrActivity,object
	.size	 sPlayerCurrActivity,1
sPlayerCurrActivity:
	.byte	0x0
	.type	 sPlayerActivityGroupSize,object
	.size	 sPlayerActivityGroupSize,1
sPlayerActivityGroupSize:
	.byte	0x0
	.align	2, 0
	.type	 sWirelessLinkMain,object
	.size	 sWirelessLinkMain,4
sWirelessLinkMain:
	.space	4
	.align	2, 0
	.type	 sUnused,object
	.size	 sUnused,4
sUnused:
	.word	0x0
	.globl	gRfuPartnerCompatibilityData
	.align	2, 0
	.type	 gRfuPartnerCompatibilityData,object
	.size	 gRfuPartnerCompatibilityData,4
gRfuPartnerCompatibilityData:
	.space	4
	.globl	gUnionRoomOfferedSpecies
	.align	1, 0
	.type	 gUnionRoomOfferedSpecies,object
	.size	 gUnionRoomOfferedSpecies,2
gUnionRoomOfferedSpecies:
	.short	0x0
	.globl	gUnionRoomRequestedMonType
	.type	 gUnionRoomRequestedMonType,object
	.size	 gUnionRoomRequestedMonType,1
gUnionRoomRequestedMonType:
	.byte	0x0
	.align	2, 0
	.type	 sUnionRoomTrade,object
	.size	 sUnionRoomTrade,24
sUnionRoomTrade:
	.space	24
	.section .rodata
	.align	2, 0
	.type	 sLinkGroupActivityNameTexts,object
sLinkGroupActivityNameTexts:
	.word	gText_UR_EmptyString
	.word	gText_UR_SingleBattle
	.word	gText_UR_DoubleBattle
	.word	gText_UR_MultiBattle
	.word	gText_UR_PokemonTrades
	.word	gText_UR_Chat
	.word	gText_UR_WonderCards
	.word	gText_UR_WonderNews
	.word	gText_UR_Cards
	.word	gText_UR_PokemonJump
	.word	gText_UR_BerryCrush
	.word	gText_UR_BerryPicking
	.word	gText_UR_Search
	.word	gText_UR_SpinTrade
	.word	gText_UR_ItemTrade
	.word	gText_UR_EmptyString
	.word	gText_UR_EmptyString
	.word	gText_UR_EmptyString
	.word	gText_UR_EmptyString
	.word	gText_UR_EmptyString
	.word	gText_UR_EmptyString
	.word	gText_UR_WonderCards
	.word	gText_UR_WonderNews
	.size	 sLinkGroupActivityNameTexts,92
	.align	2, 0
	.type	 sWindowTemplate_BButtonCancel,object
	.size	 sWindowTemplate_BButtonCancel,8
sWindowTemplate_BButtonCancel:
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1e
	.byte	0x2
	.byte	0xf
	.short	0x8
	.align	2, 0
	.type	 sLinkGroupToActivityAndCapacity,object
sLinkGroupToActivityAndCapacity:
	.word	0x201
	.word	0x202
	.word	0x403
	.word	0x204
	.word	0x2509
	.word	0x250a
	.word	0x350b
	.word	0x350d
	.word	0x350e
	.size	 sLinkGroupToActivityAndCapacity,36
	.align	2, 0
	.type	 sWindowTemplate_List_PossibleGroupMembers,object
	.size	 sWindowTemplate_List_PossibleGroupMembers,8
sWindowTemplate_List_PossibleGroupMembers:
	.byte	0x0
	.byte	0x1
	.byte	0x3
	.byte	0xd
	.byte	0xa
	.byte	0xf
	.short	0x44
	.align	2, 0
	.type	 sWindowTemplate_NumPlayerMode,object
	.size	 sWindowTemplate_NumPlayerMode,8
sWindowTemplate_NumPlayerMode:
	.byte	0x0
	.byte	0x10
	.byte	0x3
	.byte	0x7
	.byte	0x4
	.byte	0xf
	.short	0xc6
	.globl	sListMenuItems_PossibleGroupMembers
	.align	2, 0
	.type	 sListMenuItems_PossibleGroupMembers,object
sListMenuItems_PossibleGroupMembers:
	.word	gText_UR_EmptyString
	.word	0x0
	.word	gText_UR_EmptyString
	.word	0x1
	.word	gText_UR_EmptyString
	.word	0x2
	.word	gText_UR_EmptyString
	.word	0x3
	.word	gText_UR_EmptyString
	.word	0x4
	.size	 sListMenuItems_PossibleGroupMembers,40
	.align	2, 0
	.type	 sListMenuTemplate_PossibleGroupMembers,object
	.size	 sListMenuTemplate_PossibleGroupMembers,24
sListMenuTemplate_PossibleGroupMembers:
	.word	sListMenuItems_PossibleGroupMembers
	.word	0x0
	.word	ItemPrintFunc_PossibleGroupMembers
	.short	0x5
	.short	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x20
	.byte	0x31
	.byte	0x10
	.byte	0x42
	.align	2, 0
	.type	 sWindowTemplate_GroupList,object
	.size	 sWindowTemplate_GroupList,8
sWindowTemplate_GroupList:
	.byte	0x0
	.byte	0x1
	.byte	0x3
	.byte	0x11
	.byte	0xa
	.byte	0xf
	.short	0x44
	.align	2, 0
	.type	 sWindowTemplate_PlayerNameAndId,object
	.size	 sWindowTemplate_PlayerNameAndId,8
sWindowTemplate_PlayerNameAndId:
	.byte	0x0
	.byte	0x14
	.byte	0x3
	.byte	0x7
	.byte	0x4
	.byte	0xf
	.short	0xee
	.align	2, 0
	.type	 sListMenuItems_UnionRoomGroups,object
sListMenuItems_UnionRoomGroups:
	.word	gText_UR_EmptyString
	.word	0x0
	.word	gText_UR_EmptyString
	.word	0x1
	.word	gText_UR_EmptyString
	.word	0x2
	.word	gText_UR_EmptyString
	.word	0x3
	.word	gText_UR_EmptyString
	.word	0x4
	.word	gText_UR_EmptyString
	.word	0x5
	.word	gText_UR_EmptyString
	.word	0x6
	.word	gText_UR_EmptyString
	.word	0x7
	.word	gText_UR_EmptyString
	.word	0x8
	.word	gText_UR_EmptyString
	.word	0x9
	.word	gText_UR_EmptyString
	.word	0xa
	.word	gText_UR_EmptyString
	.word	0xb
	.word	gText_UR_EmptyString
	.word	0xc
	.word	gText_UR_EmptyString
	.word	0xd
	.word	gText_UR_EmptyString
	.word	0xe
	.word	gText_UR_EmptyString
	.word	0xf
	.size	 sListMenuItems_UnionRoomGroups,128
	.align	2, 0
	.type	 sListMenuTemplate_UnionRoomGroups,object
	.size	 sListMenuTemplate_UnionRoomGroups,24
sListMenuTemplate_UnionRoomGroups:
	.word	sListMenuItems_UnionRoomGroups
	.word	ListMenuDefaultCursorMoveFunc
	.word	ListMenuItemPrintFunc_UnionRoomGroups
	.short	0x10
	.short	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x20
	.byte	0x31
	.byte	0x50
	.byte	0x2
	.align	2, 0
	.type	 sWindowTemplate_InviteToActivity,object
	.size	 sWindowTemplate_InviteToActivity,8
sWindowTemplate_InviteToActivity:
	.byte	0x0
	.byte	0x14
	.byte	0x6
	.byte	0x8
	.byte	0x7
	.byte	0xf
	.short	0x1
	.align	2, 0
	.type	 sListMenuItems_InviteToActivity,object
sListMenuItems_InviteToActivity:
	.word	gText_UR_Greetings
	.word	0x208
	.word	gText_UR_Battle
	.word	0x241
	.word	gText_UR_Chat2
	.word	0x245
	.word	gText_UR_Exit
	.word	0x40
	.size	 sListMenuItems_InviteToActivity,32
	.align	2, 0
	.type	 sListMenuTemplate_InviteToActivity,object
	.size	 sListMenuTemplate_InviteToActivity,24
sListMenuTemplate_InviteToActivity:
	.word	sListMenuItems_InviteToActivity
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x4
	.short	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x20
	.byte	0x31
	.byte	0x1
	.byte	0x2
	.align	2, 0
	.type	 sWindowTemplate_RegisterForTrade,object
	.size	 sWindowTemplate_RegisterForTrade,8
sWindowTemplate_RegisterForTrade:
	.byte	0x0
	.byte	0x12
	.byte	0x8
	.byte	0xb
	.byte	0x5
	.byte	0xf
	.short	0x1
	.align	2, 0
	.type	 sListMenuItems_RegisterForTrade,object
sListMenuItems_RegisterForTrade:
	.word	gText_Register
	.word	0x1
	.word	gText_UR_Info
	.word	0x2
	.word	gText_UR_Exit
	.word	0x3
	.size	 sListMenuItems_RegisterForTrade,24
	.align	2, 0
	.type	 sListMenuTemplate_RegisterForTrade,object
	.size	 sListMenuTemplate_RegisterForTrade,24
sListMenuTemplate_RegisterForTrade:
	.word	sListMenuItems_RegisterForTrade
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x3
	.short	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x20
	.byte	0x31
	.byte	0x1
	.byte	0x2
	.align	2, 0
	.type	 sWindowTemplate_TypeNames,object
	.size	 sWindowTemplate_TypeNames,8
sWindowTemplate_TypeNames:
	.byte	0x0
	.byte	0x14
	.byte	0x2
	.byte	0x9
	.byte	0xb
	.byte	0xf
	.short	0x1
	.align	2, 0
	.type	 sListMenuItems_TypeNames,object
	.size	 sListMenuItems_TypeNames,144
sListMenuItems_TypeNames:
	.word	gTypeNames
	.word	0x0
	.word	gTypeNames+0x46
	.word	0xa
	.word	gTypeNames+0x4d
	.word	0xb
	.word	gTypeNames+0x5b
	.word	0xd
	.word	gTypeNames+0x54
	.word	0xc
	.word	gTypeNames+0x69
	.word	0xf
	.word	gTypeNames+0x1c
	.word	0x4
	.word	gTypeNames+0x23
	.word	0x5
	.word	gTypeNames+0xe
	.word	0x2
	.word	gTypeNames+0x62
	.word	0xe
	.word	gTypeNames+0x7
	.word	0x1
	.word	gTypeNames+0x15
	.word	0x3
	.word	gTypeNames+0x2a
	.word	0x6
	.word	gTypeNames+0x31
	.word	0x7
	.word	gTypeNames+0x70
	.word	0x10
	.word	gTypeNames+0x38
	.word	0x8
	.word	gTypeNames+0x77
	.word	0x11
	.word	gText_UR_Exit
	.word	0x12
	.align	2, 0
	.type	 sListMenuTemplate_TypeNames,object
	.size	 sListMenuTemplate_TypeNames,24
sListMenuTemplate_TypeNames:
	.word	sListMenuItems_TypeNames
	.word	ListMenuDefaultCursorMoveFunc
	.word	0x0
	.short	0x12
	.short	0x6
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x0
	.byte	0x22
	.byte	0x31
	.byte	0x1
	.byte	0x2
	.align	2, 0
	.type	 sWindowTemplate_TradingBoardHeader,object
	.size	 sWindowTemplate_TradingBoardHeader,8
sWindowTemplate_TradingBoardHeader:
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1c
	.byte	0x2
	.byte	0xd
	.short	0x1
	.align	2, 0
	.type	 sWindowTemplate_TradingBoardMain,object
	.size	 sWindowTemplate_TradingBoardMain,8
sWindowTemplate_TradingBoardMain:
	.byte	0x0
	.byte	0x1
	.byte	0x5
	.byte	0x1c
	.byte	0xa
	.byte	0xd
	.short	0x39
	.align	2, 0
	.type	 sListMenuItems_TradeBoard,object
sListMenuItems_TradeBoard:
	.word	gText_UR_EmptyString
	.word	-0x3
	.word	gText_UR_EmptyString
	.word	0x0
	.word	gText_UR_EmptyString
	.word	0x1
	.word	gText_UR_EmptyString
	.word	0x2
	.word	gText_UR_EmptyString
	.word	0x3
	.word	gText_UR_EmptyString
	.word	0x4
	.word	gText_UR_EmptyString
	.word	0x5
	.word	gText_UR_EmptyString
	.word	0x6
	.word	gText_UR_EmptyString
	.word	0x7
	.word	gText_UR_Exit2
	.word	0x8
	.size	 sListMenuItems_TradeBoard,80
	.align	2, 0
	.type	 sListMenuTemplate_TradeBoard,object
	.size	 sListMenuTemplate_TradeBoard,24
sListMenuTemplate_TradeBoard:
	.word	sListMenuItems_TradeBoard
	.word	ListMenuDefaultCursorMoveFunc
	.word	TradeBoardListMenuItemPrintFunc
	.short	0xa
	.short	0x5
	.byte	0x0
	.byte	0x0
	.byte	0xc
	.byte	0x0
	.byte	0xe2
	.byte	0xdf
	.byte	0x9
	.byte	0x2
	.align	2, 0
	.type	 sWindowTemplate_Unused,object
	.size	 sWindowTemplate_Unused,8
sWindowTemplate_Unused:
	.byte	0x0
	.byte	0x1
	.byte	0x5
	.byte	0x1c
	.byte	0xa
	.byte	0xd
	.short	0x39
	.align	2, 0
	.type	 sListMenuItems_Unused,object
sListMenuItems_Unused:
	.word	gText_UR_EmptyString
	.word	0x0
	.word	gText_UR_EmptyString
	.word	0x1
	.word	gText_UR_EmptyString
	.word	0x2
	.word	gText_UR_EmptyString
	.word	0x3
	.word	gText_UR_EmptyString
	.word	0x4
	.word	gText_UR_EmptyString
	.word	0x5
	.word	gText_UR_EmptyString
	.word	0x6
	.word	gText_UR_EmptyString
	.word	0x7
	.word	gText_UR_EmptyString
	.word	0x8
	.word	gText_UR_EmptyString
	.word	0x9
	.word	gText_UR_EmptyString
	.word	0xa
	.word	gText_UR_EmptyString
	.word	0xb
	.word	gText_UR_EmptyString
	.word	0xc
	.word	gText_UR_EmptyString
	.word	0xd
	.word	gText_UR_EmptyString
	.word	0xe
	.word	gText_UR_EmptyString
	.word	0xf
	.size	 sListMenuItems_Unused,128
	.align	2, 0
	.type	 sListMenuTemplate_Unused,object
	.size	 sListMenuTemplate_Unused,24
sListMenuTemplate_Unused:
	.word	sListMenuItems_Unused
	.word	ListMenuDefaultCursorMoveFunc
	.word	ItemPrintFunc_Unused
	.short	0x10
	.short	0x4
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x1
	.byte	0x20
	.byte	0x31
	.byte	0x41
	.byte	0x2
	.align	2, 0
	.type	 sRfuPlayerData_Dummy,object
	.size	 sRfuPlayerData_Dummy,24
sRfuPlayerData_Dummy:
	.space	24
	.align	2, 0
	.type	 sAcceptedActivityIds_SingleBattle,object
sAcceptedActivityIds_SingleBattle:
	.byte	0x1
	.byte	0xff
	.size	 sAcceptedActivityIds_SingleBattle,2
	.align	2, 0
	.type	 sAcceptedActivityIds_DoubleBattle,object
sAcceptedActivityIds_DoubleBattle:
	.byte	0x2
	.byte	0xff
	.size	 sAcceptedActivityIds_DoubleBattle,2
	.align	2, 0
	.type	 sAcceptedActivityIds_MultiBattle,object
sAcceptedActivityIds_MultiBattle:
	.byte	0x3
	.byte	0xff
	.size	 sAcceptedActivityIds_MultiBattle,2
	.align	2, 0
	.type	 sAcceptedActivityIds_Trade,object
sAcceptedActivityIds_Trade:
	.byte	0x4
	.byte	0xff
	.size	 sAcceptedActivityIds_Trade,2
	.align	2, 0
	.type	 sAcceptedActivityIds_PokemonJump,object
sAcceptedActivityIds_PokemonJump:
	.byte	0x9
	.byte	0xff
	.size	 sAcceptedActivityIds_PokemonJump,2
	.align	2, 0
	.type	 sAcceptedActivityIds_BerryCrush,object
sAcceptedActivityIds_BerryCrush:
	.byte	0xa
	.byte	0xff
	.size	 sAcceptedActivityIds_BerryCrush,2
	.align	2, 0
	.type	 sAcceptedActivityIds_BerryPicking,object
sAcceptedActivityIds_BerryPicking:
	.byte	0xb
	.byte	0xff
	.size	 sAcceptedActivityIds_BerryPicking,2
	.align	2, 0
	.type	 sAcceptedActivityIds_WonderCard,object
sAcceptedActivityIds_WonderCard:
	.byte	0x15
	.byte	0xff
	.size	 sAcceptedActivityIds_WonderCard,2
	.align	2, 0
	.type	 sAcceptedActivityIds_WonderNews,object
sAcceptedActivityIds_WonderNews:
	.byte	0x16
	.byte	0xff
	.size	 sAcceptedActivityIds_WonderNews,2
	.align	2, 0
	.type	 sAcceptedActivityIds_Resume,object
sAcceptedActivityIds_Resume:
	.byte	0x40
	.byte	0x41
	.byte	0x44
	.byte	0x45
	.byte	0x48
	.byte	0x51
	.byte	0x52
	.byte	0x53
	.byte	0x54
	.byte	0xff
	.size	 sAcceptedActivityIds_Resume,10
	.align	2, 0
	.type	 sAcceptedActivityIds_Init,object
sAcceptedActivityIds_Init:
	.byte	0xc
	.byte	0xff
	.size	 sAcceptedActivityIds_Init,2
	.align	2, 0
	.type	 sAcceptedActivityIds_Unk11,object
sAcceptedActivityIds_Unk11:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0x15
	.byte	0x16
	.byte	0xd
	.byte	0xff
	.size	 sAcceptedActivityIds_Unk11,11
	.align	2, 0
	.type	 sAcceptedActivityIds_Unk12,object
sAcceptedActivityIds_Unk12:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0xa
	.byte	0xff
	.size	 sAcceptedActivityIds_Unk12,6
	.align	2, 0
	.type	 sAcceptedActivityIds,object
	.size	 sAcceptedActivityIds,52
sAcceptedActivityIds:
	.word	sAcceptedActivityIds_SingleBattle
	.word	sAcceptedActivityIds_DoubleBattle
	.word	sAcceptedActivityIds_MultiBattle
	.word	sAcceptedActivityIds_Trade
	.word	sAcceptedActivityIds_PokemonJump
	.word	sAcceptedActivityIds_BerryCrush
	.word	sAcceptedActivityIds_BerryPicking
	.word	sAcceptedActivityIds_WonderCard
	.word	sAcceptedActivityIds_WonderNews
	.word	sAcceptedActivityIds_Resume
	.word	sAcceptedActivityIds_Init
	.word	sAcceptedActivityIds_Unk11
	.word	sAcceptedActivityIds_Unk12
	.type	 sLinkGroupToURoomActivity,object
sLinkGroupToURoomActivity:
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x4
	.byte	0x9
	.byte	0xa
	.byte	0xb
	.byte	0x15
	.byte	0x16
	.size	 sLinkGroupToURoomActivity,9
	.type	 sDotSeparatedValues,object
sDotSeparatedValues:
	.byte	0xf7
	.byte	0x0
	.byte	0xaf
	.byte	0xf7
	.byte	0x1
	.byte	0xff
	.size	 sDotSeparatedValues,6
.text
	.align	2, 0
	.type	 PrintNumPlayersWaitingForMsg,function
	.thumb_func
PrintNumPlayersWaitingForMsg:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r2, r2, #0x18
	lsr	r5, r2, #0x18
	add	r0, r6, #0
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	lsl	r4, r4, #0x8
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r4, r0
	beq	.L7	@cond_branch
	cmp	r4, r0
	bgt	.L12	@cond_branch
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	cmp	r4, r0
	beq	.L6	@cond_branch
	b	.L5
.L12:
	mov	r0, #0x94
	lsl	r0, r0, #0x6
	cmp	r4, r0
	beq	.L8	@cond_branch
	mov	r0, #0xd4
	lsl	r0, r0, #0x6
	cmp	r4, r0
	beq	.L9	@cond_branch
	b	.L5
.L6:
	ldr	r1, .L14
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	b	.L13
.L15:
	.align	2, 0
.L14:
	.word	gTexts_UR_PlayersNeededOrMode
.L7:
	ldr	r1, .L16
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	add	r1, r1, #0x14
	b	.L13
.L17:
	.align	2, 0
.L16:
	.word	gTexts_UR_PlayersNeededOrMode
.L8:
	ldr	r1, .L18
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	add	r1, r1, #0x28
.L13:
	add	r0, r0, r1
	ldr	r2, [r0]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x2
	mov	r3, #0x0
	bl	PrintUnionRoomText
	b	.L5
.L19:
	.align	2, 0
.L18:
	.word	gTexts_UR_PlayersNeededOrMode
.L9:
	ldr	r1, .L20
	sub	r0, r5, #0x1
	lsl	r0, r0, #0x2
	add	r1, r1, #0x3c
	add	r0, r0, r1
	ldr	r2, [r0]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x2
	mov	r3, #0x0
	bl	PrintUnionRoomText
.L5:
	add	r0, r6, #0
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L21:
	.align	2, 0
.L20:
	.word	gTexts_UR_PlayersNeededOrMode
.Lfe1:
	.size	 PrintNumPlayersWaitingForMsg,.Lfe1-PrintNumPlayersWaitingForMsg
	.align	2, 0
	.type	 PrintPlayerNameAndIdOnWindow,function
	.thumb_func
PrintPlayerNameAndIdOnWindow:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x20
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r6, .L23
	ldr	r2, [r6]
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	mov	r8, r0
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r1, #0x2
	mov	r3, #0x0
	bl	PrintUnionRoomText
	add	r5, sp, #0x14
	ldr	r1, .L23+0x4
	add	r0, r5, #0
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, #0xa
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, sp, #0x8
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	add	r0, r5, #0
	add	r1, sp, #0x8
	bl	StringAppend
	mov	r0, #0x10
	str	r0, [sp]
	mov	r0, r8
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r1, #0x0
	add	r2, r5, #0
	mov	r3, #0x0
	bl	PrintUnionRoomText
	add	sp, sp, #0x20
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L24:
	.align	2, 0
.L23:
	.word	gSaveBlock2Ptr
	.word	gText_UR_ID
.Lfe2:
	.size	 PrintPlayerNameAndIdOnWindow,.Lfe2-PrintPlayerNameAndIdOnWindow
	.align	2, 0
	.type	 GetAwaitingCommunicationText,function
	.thumb_func
GetAwaitingCommunicationText:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	sub	r0, r1, #0x1
	cmp	r0, #0x15
	bhi	.L26	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L38
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L39:
	.align	2, 0
.L38:
	.word	.L36
	.align	2, 0
	.align	2, 0
.L36:
	.word	.L35
	.word	.L35
	.word	.L35
	.word	.L35
	.word	.L26
	.word	.L26
	.word	.L26
	.word	.L26
	.word	.L35
	.word	.L35
	.word	.L35
	.word	.L26
	.word	.L26
	.word	.L26
	.word	.L26
	.word	.L26
	.word	.L26
	.word	.L26
	.word	.L26
	.word	.L26
	.word	.L35
	.word	.L35
.L35:
	ldr	r0, .L40
	ldr	r1, .L40+0x4
	bl	StringExpandPlaceholders
.L26:
	pop	{r0}
	bx	r0
.L41:
	.align	2, 0
.L40:
	.word	gStringVar4
	.word	gText_UR_AwaitingCommunication
.Lfe3:
	.size	 GetAwaitingCommunicationText,.Lfe3-GetAwaitingCommunicationText
	.align	2, 0
	.globl	TryBecomeLinkLeader
	.type	 TryBecomeLinkLeader,function
	.thumb_func
TryBecomeLinkLeader:
	push	{lr}
	ldr	r0, .L43
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L43+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L43+0x8
	add	r1, r1, r0
	str	r1, [r2]
	ldr	r0, .L43+0xc
	str	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1, #0xc]
	strb	r0, [r1, #0xd]
	ldr	r1, .L43+0x10
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L44:
	.align	2, 0
.L43:
	.word	Task_TryBecomeLinkLeader
	.word	sWirelessLinkMain
	.word	gTasks+0x8
	.word	sLeader
	.word	gSpecialVar_Result
.Lfe4:
	.size	 TryBecomeLinkLeader,.Lfe4-TryBecomeLinkLeader
	.align	2, 0
	.type	 Task_TryBecomeLinkLeader,function
	.thumb_func
Task_TryBecomeLinkLeader:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L146
	ldr	r5, [r0]
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0x1e
	bls	.LCB297
	b	.L46	@long jump
.LCB297:
	lsl	r0, r0, #0x2
	ldr	r1, .L146+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L147:
	.align	2, 0
.L146:
	.word	sWirelessLinkMain
	.word	.L140
	.align	2, 0
	.align	2, 0
.L140:
	.word	.L47
	.word	.L46
	.word	.L46
	.word	.L48
	.word	.L49
	.word	.L54
	.word	.L56
	.word	.L72
	.word	.L46
	.word	.L64
	.word	.L66
	.word	.L74
	.word	.L83
	.word	.L94
	.word	.L96
	.word	.L98
	.word	.L100
	.word	.L124
	.word	.L126
	.word	.L110
	.word	.L112
	.word	.L133
	.word	.L135
	.word	.L133
	.word	.L134
	.word	.L46
	.word	.L136
	.word	.L46
	.word	.L46
	.word	.L69
	.word	.L130
.L47:
	ldr	r3, .L148
	ldr	r2, .L148+0x4
	ldr	r1, .L148+0x8
	ldrh	r0, [r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r0, [r0]
	strb	r0, [r3]
	ldr	r4, .L148+0xc
	ldrh	r0, [r1]
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r0, [r0]
	lsr	r0, r0, #0x8
	strb	r0, [r4]
	ldrb	r0, [r3]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRfuGameData
	bl	SetWirelessCommType1
	bl	OpenLink
	ldrb	r1, [r4]
	mov	r0, #0xf
	and	r0, r0, r1
	bl	InitializeRfuLinkManager_LinkLeader
	mov	r0, #0x3
	strb	r0, [r5, #0xc]
	b	.L46
.L149:
	.align	2, 0
.L148:
	.word	sPlayerCurrActivity
	.word	sLinkGroupToActivityAndCapacity
	.word	gSpecialVar_0x8004
	.word	sPlayerActivityGroupSize
.L48:
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0x4]
	mov	r0, #0xa0
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, #0xa0
	bl	AllocZeroed
	str	r0, [r5, #0x8]
	ldr	r0, [r5, #0x4]
	mov	r1, #0x4
	bl	ClearIncomingPlayerList
	ldr	r0, [r5]
	mov	r1, #0x5
	bl	ClearRfuPlayerList
	ldr	r0, [r5]
	add	r1, r0, #0
	add	r1, r1, #0x10
	bl	CopyHostRfuGameDataAndUsername
	ldr	r1, [r5]
	mov	r3, #0x0
	mov	r0, #0x0
	strh	r0, [r1, #0x18]
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	sub	r0, r0, #0x4
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r0, [r5]
	strb	r3, [r0, #0x1b]
	ldr	r0, [r5, #0x4]
	mov	r1, #0xff
	bl	CreateTask_ListenForCompatiblePartners
	strb	r0, [r5, #0x17]
	ldr	r0, .L150
	bl	AddWindow
	strb	r0, [r5, #0x10]
	ldr	r0, .L150+0x4
	bl	AddWindow
	strb	r0, [r5, #0xf]
	ldr	r0, .L150+0x8
	bl	AddWindow
	strb	r0, [r5, #0x11]
	ldrb	r0, [r5, #0x10]
	mov	r1, #0x22
	bl	FillWindowPixelBuffer
	ldrb	r0, [r5, #0x10]
	ldr	r2, .L150+0xc
	mov	r1, #0x2
	str	r1, [sp]
	mov	r4, #0x4
	str	r4, [sp, #0x4]
	mov	r1, #0x0
	mov	r3, #0x8
	bl	PrintUnionRoomText
	ldrb	r0, [r5, #0x10]
	bl	PutWindowTilemap
	ldrb	r0, [r5, #0x10]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrb	r0, [r5, #0xf]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L150+0x10
	add	r2, r0, #0
	ldr	r1, .L150+0x14
	ldmia	r1!, {r3, r6, r7}
	stmia	r2!, {r3, r6, r7}
	ldmia	r1!, {r3, r6, r7}
	stmia	r2!, {r3, r6, r7}
	ldrb	r1, [r5, #0xf]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r5, #0x12]
	ldrb	r0, [r5, #0x11]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r5, #0x11]
	bl	PutWindowTilemap
	ldrb	r0, [r5, #0x11]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	strb	r0, [r5, #0x13]
	strb	r4, [r5, #0xc]
	b	.L46
.L151:
	.align	2, 0
.L150:
	.word	sWindowTemplate_BButtonCancel
	.word	sWindowTemplate_List_PossibleGroupMembers
	.word	sWindowTemplate_NumPlayerMode
	.word	gText_UR_BButtonCancel
	.word	gMultiuseListMenuTemplate
	.word	sListMenuTemplate_PossibleGroupMembers
.L49:
	ldr	r0, .L152
	ldr	r2, .L152+0x4
	ldr	r4, .L152+0x8
	ldrb	r1, [r4]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L152+0xc
	ldrb	r2, [r0]
	lsr	r0, r2, #0x4
	cmp	r0, #0
	beq	.L50	@cond_branch
	ldrb	r1, [r5, #0x13]
	sub	r0, r0, #0x1
	cmp	r1, r0
	ble	.L51	@cond_branch
	mov	r0, #0xf
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L51	@cond_branch
	ldr	r0, .L152+0x10
	ldr	r1, .L152+0x14
	bl	StringExpandPlaceholders
	b	.L53
.L153:
	.align	2, 0
.L152:
	.word	gStringVar1
	.word	sLinkGroupActivityNameTexts
	.word	sPlayerCurrActivity
	.word	sPlayerActivityGroupSize
	.word	gStringVar4
	.word	gText_UR_AwaitingLinkPressStart
.L51:
	ldr	r0, .L154
	ldr	r1, .L154+0x4
	bl	StringExpandPlaceholders
	b	.L53
.L155:
	.align	2, 0
.L154:
	.word	gStringVar4
	.word	gText_UR_AwaitingCommunication
.L50:
	ldr	r0, .L156
	ldrb	r1, [r4]
	bl	GetAwaitingCommunicationText
.L53:
	ldrb	r0, [r5, #0x11]
	ldr	r1, .L156+0x4
	ldrb	r1, [r1]
	ldrb	r2, [r5, #0x13]
	bl	PrintNumPlayersWaitingForMsg
	mov	r0, #0x5
	strb	r0, [r5, #0xc]
	b	.L46
.L157:
	.align	2, 0
.L156:
	.word	gStringVar4
	.word	sPlayerActivityGroupSize
.L54:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L158
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB599
	b	.L46	@long jump
.LCB599:
	mov	r0, #0x6
	strb	r0, [r5, #0xc]
	b	.L46
.L159:
	.align	2, 0
.L158:
	.word	gStringVar4
.L56:
	add	r0, r5, #0
	mov	r1, #0x7
	mov	r2, #0xa
	bl	Leader_SetStateIfMemberListChanged
	ldr	r0, .L160
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L57	@cond_branch
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0x1
	bne	.L58	@cond_branch
	mov	r0, #0x17
	b	.L142
.L161:
	.align	2, 0
.L160:
	.word	gMain
.L58:
	ldr	r0, .L162
	ldrb	r1, [r0]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L60	@cond_branch
	mov	r0, #0x1e
	b	.L142
.L163:
	.align	2, 0
.L162:
	.word	sPlayerActivityGroupSize
.L60:
	mov	r0, #0x13
.L142:
	strb	r0, [r5, #0xc]
.L57:
	ldr	r0, .L164
	ldrb	r2, [r0]
	lsr	r0, r2, #0x4
	cmp	r0, #0
	beq	.L62	@cond_branch
	ldrb	r1, [r5, #0x13]
	sub	r0, r0, #0x1
	cmp	r1, r0
	ble	.L62	@cond_branch
	mov	r4, #0xf
	add	r0, r4, #0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L62	@cond_branch
	bl	IsRfuCommunicatingWithAllChildren
	cmp	r0, #0
	beq	.L62	@cond_branch
	ldr	r0, .L164+0x4
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L62	@cond_branch
	strb	r4, [r5, #0xc]
	bl	LinkRfu_StopManagerAndFinalizeSlots
.L62:
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0x6
	beq	.LCB707
	b	.L46	@long jump
.LCB707:
	bl	RfuTryDisconnectLeavingChildren
	cmp	r0, #0
	bne	.LCB711
	b	.L46	@long jump
.LCB711:
	b	.L79
.L165:
	.align	2, 0
.L164:
	.word	sPlayerActivityGroupSize
	.word	gMain
.L64:
	bl	RfuTryDisconnectLeavingChildren
	cmp	r0, #0
	beq	.LCB726
	b	.L46	@long jump
.LCB726:
	mov	r0, #0x6
	strb	r0, [r5, #0xc]
	ldr	r0, [r5]
	bl	LeaderPrunePlayerList
	strb	r0, [r5, #0x13]
	b	.L46
.L66:
	mov	r3, #0x0
	ldr	r0, .L166
	ldrb	r1, [r0]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x2
	bne	.L67	@cond_branch
	mov	r3, #0x1
.L67:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r2, .L166+0x4
	lsl	r1, r3, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB762
	b	.L46	@long jump
.LCB762:
	ldr	r0, [r5]
	bl	LeaderPrunePlayerList
	strb	r0, [r5, #0x13]
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	b	.L119
.L167:
	.align	2, 0
.L166:
	.word	sPlayerCurrActivity
	.word	gTexts_UR_PlayerUnavailable
.L69:
	ldr	r0, .L168
	ldrb	r0, [r0]
	mov	r1, #0xf
	and	r1, r1, r0
	mov	r0, #0x2
	eor	r1, r1, r0
	neg	r0, r1
	orr	r0, r0, r1
	lsr	r3, r0, #0x1f
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r2, .L168+0x4
	lsl	r1, r3, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB808
	b	.L46	@long jump
.LCB808:
	mov	r0, #0x15
	strb	r0, [r5, #0xc]
	b	.L46
.L169:
	.align	2, 0
.L168:
	.word	sPlayerActivityGroupSize
	.word	gTexts_UR_PlayerUnavailable
.L72:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L170
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB831
	b	.L46	@long jump
.LCB831:
	mov	r0, #0xb
	strb	r0, [r5, #0xc]
	b	.L46
.L171:
	.align	2, 0
.L170:
	.word	gStringVar4
.L74:
	add	r4, r5, #0
	add	r4, r4, #0xd
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r2, [r5, #0x13]
	lsl	r2, r2, #0x5
	ldr	r1, [r5]
	add	r1, r1, r2
	add	r1, r1, #0x10
	bl	HasTrainerLeftPartnersList
	add	r1, r0, #0
	add	r0, r4, #0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L78	@cond_branch
	cmp	r1, r0
	bgt	.L82	@cond_branch
	sub	r0, r0, #0x2
	cmp	r1, r0
	beq	.L79	@cond_branch
	b	.L46
.L82:
	cmp	r1, #0
	beq	.L76	@cond_branch
	cmp	r1, #0x1
	beq	.L78	@cond_branch
	b	.L46
.L76:
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	mov	r0, #0x5
	strb	r0, [r5, #0x19]
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	ldr	r2, [r5]
	add	r2, r2, r0
	add	r2, r2, #0x10
	mov	r0, #0x5
	b	.L143
.L78:
	mov	r0, #0x6
	strb	r0, [r5, #0x19]
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	ldr	r2, [r5]
	add	r2, r2, r0
	add	r2, r2, #0x10
	mov	r0, #0x6
.L143:
	bl	SendRfuStatusToPartner
	mov	r0, #0xc
	strb	r0, [r5, #0xc]
	b	.L46
.L79:
	mov	r0, #0x9
	strb	r0, [r5, #0xc]
	b	.L46
.L83:
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r2, [r5, #0x13]
	lsl	r2, r2, #0x5
	ldr	r1, [r5]
	add	r1, r1, r2
	add	r1, r1, #0x10
	bl	WaitSendRfuStatusToPartner
	cmp	r0, #0x1
	bne	.L84	@cond_branch
	ldrb	r0, [r5, #0x19]
	cmp	r0, #0x5
	bne	.L85	@cond_branch
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	mov	r0, #0x0
	strb	r0, [r1, #0x1b]
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	ldrb	r0, [r5, #0x13]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x13]
	ldr	r1, .L172
	ldrb	r1, [r1]
	mov	r3, #0xf
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r2, r0
	bne	.L144	@cond_branch
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L88	@cond_branch
	cmp	r2, #0x4
	bne	.L87	@cond_branch
.L88:
	strb	r3, [r5, #0xc]
	b	.L89
.L173:
	.align	2, 0
.L172:
	.word	sPlayerActivityGroupSize
.L87:
	ldr	r4, .L174
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r1, r1, r0
	sub	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy_PlayerName
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r0, .L174+0x4
	ldr	r1, .L174+0x8
	bl	StringExpandPlaceholders
	mov	r0, #0xd
	strb	r0, [r5, #0xc]
.L89:
	bl	LinkRfu_StopManagerAndFinalizeSlots
	ldrb	r0, [r5, #0x11]
	ldr	r1, .L174+0xc
	ldrb	r1, [r1]
	ldrb	r2, [r5, #0x13]
	bl	PrintNumPlayersWaitingForMsg
	b	.L91
.L175:
	.align	2, 0
.L174:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_UR_AnOKWasSentToPlayer
	.word	sPlayerActivityGroupSize
.L85:
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	RequestDisconnectSlotByTrainerNameAndId
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r2, [r1, #0x1a]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1a]
	ldr	r0, [r5]
	bl	LeaderPrunePlayerList
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
.L144:
	mov	r0, #0x4
	strb	r0, [r5, #0xc]
.L91:
	mov	r0, #0x0
	strb	r0, [r5, #0x19]
	b	.L46
.L84:
	cmp	r0, #0x2
	beq	.LCB1126
	b	.L46	@long jump
.LCB1126:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	RfuSetStatus
	b	.L119
.L94:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L176
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1144
	b	.L46	@long jump
.LCB1144:
	mov	r0, #0xe
	strb	r0, [r5, #0xc]
	b	.L46
.L177:
	.align	2, 0
.L176:
	.word	gStringVar4
.L96:
	ldrb	r0, [r5, #0xe]
	add	r0, r0, #0x1
	strb	r0, [r5, #0xe]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x78
	bhi	.LCB1164
	b	.L46	@long jump
.LCB1164:
	b	.L102
.L98:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L178
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1178
	b	.L46	@long jump
.LCB1178:
	mov	r0, #0x10
	strb	r0, [r5, #0xc]
	b	.L46
.L179:
	.align	2, 0
.L178:
	.word	gText_UR_AreTheseMembersOK
.L100:
	add	r0, r5, #0
	add	r0, r0, #0xd
	mov	r1, #0x0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L102	@cond_branch
	cmp	r1, #0
	bgt	.L109	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L104	@cond_branch
	b	.L46
.L109:
	cmp	r1, #0x1
	beq	.L104	@cond_branch
	b	.L46
.L102:
	mov	r0, #0x11
	strb	r0, [r5, #0xc]
	b	.L46
.L104:
	ldr	r0, .L180
	ldrb	r1, [r0]
	mov	r0, #0xf0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L105	@cond_branch
	mov	r0, #0x1e
	strb	r0, [r5, #0xc]
	b	.L46
.L181:
	.align	2, 0
.L180:
	.word	sPlayerActivityGroupSize
.L105:
	mov	r0, #0x13
	strb	r0, [r5, #0xc]
	b	.L46
.L110:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L182
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB1256
	b	.L46	@long jump
.LCB1256:
	mov	r0, #0x14
	strb	r0, [r5, #0xc]
	b	.L46
.L183:
	.align	2, 0
.L182:
	.word	gText_UR_CancelModeWithTheseMembers
.L112:
	add	r0, r5, #0
	add	r0, r0, #0xd
	mov	r1, #0x0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L145	@cond_branch
	cmp	r1, #0
	bgt	.L123	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L116	@cond_branch
	b	.L46
.L123:
	cmp	r1, #0x1
	bne	.L46	@cond_branch
.L116:
	ldr	r0, .L184
	ldrb	r2, [r0]
	mov	r0, #0xf0
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L117	@cond_branch
	mov	r0, #0xf
	strb	r0, [r5, #0xc]
	b	.L46
.L185:
	.align	2, 0
.L184:
	.word	sPlayerActivityGroupSize
.L117:
	mov	r3, #0xf
	ldrb	r1, [r5, #0x13]
	add	r0, r3, #0
	and	r0, r0, r2
	cmp	r1, r0
	bne	.L119	@cond_branch
	strb	r3, [r5, #0xc]
	b	.L46
.L119:
	mov	r0, #0x4
	strb	r0, [r5, #0xc]
	b	.L46
.L124:
	add	r0, r5, #0
	mov	r1, #0x7
	mov	r2, #0x17
	bl	Leader_SetStateIfMemberListChanged
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L46	@cond_branch
	mov	r0, #0x12
	strb	r0, [r5, #0xc]
	b	.L46
.L126:
	bl	LmanAcceptSlotFlagIsNotZero
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L127	@cond_branch
	mov	r0, #0x0
	bl	WaitRfuState
	cmp	r0, #0
	beq	.L46	@cond_branch
	mov	r0, #0x1a
	strb	r0, [r5, #0xc]
	b	.L46
.L127:
	mov	r0, #0x1d
	strb	r0, [r5, #0xc]
	strb	r1, [r5, #0xd]
	b	.L46
.L130:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L186
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L46	@cond_branch
.L145:
	mov	r0, #0x17
	strb	r0, [r5, #0xc]
	b	.L46
.L187:
	.align	2, 0
.L186:
	.word	gText_UR_ModeWithTheseMembersWillBeCanceled
.L133:
	bl	DestroyWirelessStatusIndicatorSprite
	bl	LinkRfu_Shutdown
	add	r0, r5, #0
	bl	Leader_DestroyResources
	ldrb	r0, [r5, #0xc]
	add	r0, r0, #0x1
	strb	r0, [r5, #0xc]
	b	.L46
.L134:
	bl	ScriptContext_Enable
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r1, .L188
	mov	r0, #0x5
	strh	r0, [r1]
	b	.L46
.L189:
	.align	2, 0
.L188:
	.word	gSpecialVar_Result
.L135:
	bl	ScriptContext_Enable
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r1, .L190
	mov	r0, #0x8
	strh	r0, [r1]
	b	.L46
.L191:
	.align	2, 0
.L190:
	.word	gSpecialVar_Result
.L136:
	bl	RfuHasErrored
	cmp	r0, #0
	beq	.L137	@cond_branch
	mov	r0, #0x1d
	strb	r0, [r5, #0xc]
	b	.L46
.L137:
	ldr	r0, .L192
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L46	@cond_branch
	mov	r0, #0x1
	bl	UpdateGameData_GroupLockedIn
	bl	CreateTask_RunScriptAndFadeToActivity
	add	r0, r5, #0
	bl	Leader_DestroyResources
	add	r0, r4, #0
	bl	DestroyTask
.L46:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L193:
	.align	2, 0
.L192:
	.word	gReceivedRemoteLinkPlayers
.Lfe5:
	.size	 Task_TryBecomeLinkLeader,.Lfe5-Task_TryBecomeLinkLeader
	.align	2, 0
	.type	 Leader_DestroyResources,function
	.thumb_func
Leader_DestroyResources:
	push	{r4, lr}
	add	r4, r0, #0
	ldrb	r0, [r4, #0x11]
	bl	ClearWindowTilemap
	ldrb	r0, [r4, #0x11]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4, #0x12]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r4, #0x10]
	bl	ClearWindowTilemap
	ldrb	r0, [r4, #0xf]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r4, #0x11]
	bl	RemoveWindow
	ldrb	r0, [r4, #0xf]
	bl	RemoveWindow
	ldrb	r0, [r4, #0x10]
	bl	RemoveWindow
	ldrb	r0, [r4, #0x17]
	bl	DestroyTask
	ldr	r0, [r4, #0x8]
	bl	Free
	ldr	r0, [r4]
	bl	Free
	ldr	r0, [r4, #0x4]
	bl	Free
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 Leader_DestroyResources,.Lfe6-Leader_DestroyResources
	.align	2, 0
	.type	 Leader_GetAcceptNewMemberPrompt,function
	.thumb_func
Leader_GetAcceptNewMemberPrompt:
	push	{lr}
	add	r2, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	sub	r0, r1, #0x1
	cmp	r0, #0x15
	bhi	.L196	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L209
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L210:
	.align	2, 0
.L209:
	.word	.L206
	.align	2, 0
	.align	2, 0
.L206:
	.word	.L199
	.word	.L199
	.word	.L205
	.word	.L199
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L205
	.word	.L205
	.word	.L205
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L196
	.word	.L201
	.word	.L201
.L199:
	ldr	r1, .L211
	b	.L208
.L212:
	.align	2, 0
.L211:
	.word	gText_UR_PlayerContactedYouForXAccept
.L201:
	ldr	r1, .L213
.L208:
	add	r0, r2, #0
	bl	StringExpandPlaceholders
	b	.L196
.L214:
	.align	2, 0
.L213:
	.word	gText_UR_PlayerContactedYouShareX
.L205:
	ldr	r1, .L215
	add	r0, r2, #0
	bl	StringExpandPlaceholders
.L196:
	pop	{r0}
	bx	r0
.L216:
	.align	2, 0
.L215:
	.word	gText_UR_PlayerContactedYouAddToMembers
.Lfe7:
	.size	 Leader_GetAcceptNewMemberPrompt,.Lfe7-Leader_GetAcceptNewMemberPrompt
	.align	2, 0
	.type	 GetYouDeclinedTheOfferMessage,function
	.thumb_func
GetYouDeclinedTheOfferMessage:
	push	{lr}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r2, r1, #0
	cmp	r1, #0x44
	beq	.L220	@cond_branch
	cmp	r1, #0x44
	bgt	.L225	@cond_branch
	cmp	r1, #0x41
	beq	.L220	@cond_branch
	b	.L218
.L225:
	cmp	r2, #0x45
	beq	.L222	@cond_branch
	cmp	r2, #0x48
	beq	.L222	@cond_branch
	b	.L218
.L220:
	ldr	r1, .L226
	bl	StringExpandPlaceholders
	b	.L218
.L227:
	.align	2, 0
.L226:
	.word	gText_UR_OfferDeclined1
.L222:
	ldr	r1, .L228
	bl	StringExpandPlaceholders
.L218:
	pop	{r0}
	bx	r0
.L229:
	.align	2, 0
.L228:
	.word	gText_UR_OfferDeclined2
.Lfe8:
	.size	 GetYouDeclinedTheOfferMessage,.Lfe8-GetYouDeclinedTheOfferMessage
	.align	2, 0
	.type	 GetYouAskedToJoinGroupPleaseWaitMessage,function
	.thumb_func
GetYouAskedToJoinGroupPleaseWaitMessage:
	push	{lr}
	add	r2, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	sub	r0, r1, #0x1
	cmp	r0, #0x15
	bhi	.L231	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L243
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L244:
	.align	2, 0
.L243:
	.word	.L241
	.align	2, 0
	.align	2, 0
.L241:
	.word	.L236
	.word	.L236
	.word	.L240
	.word	.L236
	.word	.L231
	.word	.L231
	.word	.L231
	.word	.L231
	.word	.L240
	.word	.L240
	.word	.L240
	.word	.L231
	.word	.L231
	.word	.L231
	.word	.L231
	.word	.L231
	.word	.L231
	.word	.L231
	.word	.L231
	.word	.L231
	.word	.L236
	.word	.L236
.L236:
	ldr	r1, .L245
	add	r0, r2, #0
	bl	StringExpandPlaceholders
	b	.L231
.L246:
	.align	2, 0
.L245:
	.word	gText_UR_AwaitingPlayersResponse
.L240:
	ldr	r1, .L247
	add	r0, r2, #0
	bl	StringExpandPlaceholders
.L231:
	pop	{r0}
	bx	r0
.L248:
	.align	2, 0
.L247:
	.word	gText_UR_PlayerHasBeenAskedToRegisterYouPleaseWait
.Lfe9:
	.size	 GetYouAskedToJoinGroupPleaseWaitMessage,.Lfe9-GetYouAskedToJoinGroupPleaseWaitMessage
	.align	2, 0
	.type	 GetGroupLeaderSentAnOKMessage,function
	.thumb_func
GetGroupLeaderSentAnOKMessage:
	push	{lr}
	add	r2, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	sub	r0, r1, #0x1
	cmp	r0, #0x15
	bhi	.L250	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L262
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L263:
	.align	2, 0
.L262:
	.word	.L260
	.align	2, 0
	.align	2, 0
.L260:
	.word	.L255
	.word	.L255
	.word	.L259
	.word	.L255
	.word	.L250
	.word	.L250
	.word	.L250
	.word	.L250
	.word	.L259
	.word	.L259
	.word	.L259
	.word	.L250
	.word	.L250
	.word	.L250
	.word	.L250
	.word	.L250
	.word	.L250
	.word	.L250
	.word	.L250
	.word	.L250
	.word	.L255
	.word	.L255
.L255:
	ldr	r1, .L264
	add	r0, r2, #0
	bl	StringExpandPlaceholders
	b	.L250
.L265:
	.align	2, 0
.L264:
	.word	gText_UR_PlayerSentBackOK
.L259:
	ldr	r1, .L266
	add	r0, r2, #0
	bl	StringExpandPlaceholders
.L250:
	pop	{r0}
	bx	r0
.L267:
	.align	2, 0
.L266:
	.word	gText_UR_PlayerOKdRegistration
.Lfe10:
	.size	 GetGroupLeaderSentAnOKMessage,.Lfe10-GetGroupLeaderSentAnOKMessage
	.align	2, 0
	.type	 Leader_SetStateIfMemberListChanged,function
	.thumb_func
Leader_SetStateIfMemberListChanged:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	add	r4, r2, #0
	ldr	r0, [r5]
	bl	LeaderUpdateGroupMembership
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L270	@cond_branch
	cmp	r0, #0x2
	beq	.L271	@cond_branch
	b	.L269
.L270:
	mov	r0, #0x2
	bl	PlaySE
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	ldr	r4, .L275
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	ldr	r1, [r5]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy_PlayerName
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r0, .L275+0x4
	ldr	r1, .L275+0x8
	ldrb	r1, [r1]
	bl	Leader_GetAcceptNewMemberPrompt
	strb	r6, [r5, #0xc]
	b	.L269
.L276:
	.align	2, 0
.L275:
	.word	gStringVar2
	.word	gStringVar4
	.word	sPlayerCurrActivity
.L271:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	RfuSetStatus
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	strb	r4, [r5, #0xc]
	mov	r0, #0x1
	b	.L274
.L269:
	mov	r0, #0x0
.L274:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 Leader_SetStateIfMemberListChanged,.Lfe11-Leader_SetStateIfMemberListChanged
	.align	2, 0
	.type	 ItemPrintFunc_PossibleGroupMembers,function
	.thumb_func
ItemPrintFunc_PossibleGroupMembers:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldr	r0, .L284
	ldr	r3, [r0]
	mov	r2, #0x0
	ldr	r1, [r3]
	lsl	r0, r4, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	beq	.L279	@cond_branch
	cmp	r0, #0x2
	beq	.L281	@cond_branch
	b	.L278
.L285:
	.align	2, 0
.L284:
	.word	sWirelessLinkMain
.L279:
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L278	@cond_branch
	mov	r2, #0x2
	b	.L278
.L281:
	mov	r2, #0x1
.L278:
	lsl	r0, r4, #0x5
	ldr	r3, [r3]
	add	r3, r3, r0
	str	r2, [sp]
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x4]
	add	r0, r5, #0
	mov	r1, #0x0
	add	r2, r6, #0
	bl	PrintGroupCandidateOnWindow
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe12:
	.size	 ItemPrintFunc_PossibleGroupMembers,.Lfe12-ItemPrintFunc_PossibleGroupMembers
	.align	2, 0
	.type	 LeaderUpdateGroupMembership,function
	.thumb_func
LeaderUpdateGroupMembership:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x4
	ldr	r0, .L307
	ldr	r5, [r0]
	mov	r0, #0x0
	mov	r8, r0
	mov	r3, #0x1
.L290:
	ldr	r0, [r5]
	lsl	r6, r3, #0x5
	add	r2, r0, r6
	ldrb	r0, [r2, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	mov	r9, r0
	cmp	r0, #0x1
	bne	.L289	@cond_branch
	ldr	r1, [r5, #0x4]
	add	r0, r2, #0
	str	r3, [sp]
	bl	GetNewIncomingPlayerId
	add	r4, r0, #0
	ldr	r3, [sp]
	cmp	r4, #0xff
	beq	.L292	@cond_branch
	ldr	r1, [r5]
	ldr	r0, [r5, #0x4]
	lsl	r2, r4, #0x3
	sub	r2, r2, r4
	lsl	r2, r2, #0x2
	add	r1, r1, r6
	add	r0, r0, r2
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldr	r0, [r5]
	add	r0, r0, r6
	mov	r1, r9
	strh	r1, [r0, #0x18]
	b	.L289
.L308:
	.align	2, 0
.L307:
	.word	sWirelessLinkMain
.L292:
	ldr	r2, [r5]
	add	r2, r2, r6
	ldrb	r1, [r2, #0x1a]
	mov	r4, #0x4
	neg	r4, r4
	add	r0, r4, #0
	and	r1, r1, r0
	mov	r0, #0x2
	orr	r1, r1, r0
	strb	r1, [r2, #0x1a]
	mov	r7, #0x2
	mov	r8, r7
.L289:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x4
	bls	.L290	@cond_branch
	mov	r6, #0x0
	mov	r4, #0x3
.L298:
	ldr	r0, [r5]
	ldr	r1, [r5, #0x4]
	add	r1, r1, r6
	mov	r2, #0x5
	bl	TryAddIncomingPlayerToList
	add	r6, r6, #0x1c
	sub	r4, r4, #0x1
	ldr	r0, [r5]
	cmp	r4, #0
	bge	.L298	@cond_branch
	mov	r1, r8
	cmp	r1, #0x2
	beq	.L300	@cond_branch
	add	r1, r0, #0
	mov	r4, #0x4
.L304:
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L303	@cond_branch
	mov	r2, #0x1
	mov	r8, r2
.L303:
	add	r1, r1, #0x20
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L304	@cond_branch
.L300:
	mov	r0, r8
	add	sp, sp, #0x4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe13:
	.size	 LeaderUpdateGroupMembership,.Lfe13-LeaderUpdateGroupMembership
	.align	2, 0
	.type	 LeaderPrunePlayerList,function
	.thumb_func
LeaderPrunePlayerList:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	ldr	r0, .L333
	ldr	r4, [r0]
	mov	r3, #0x0
.L313:
	ldr	r0, [r4, #0x8]
	lsl	r2, r3, #0x5
	ldr	r1, [r4]
	add	r0, r0, r2
	add	r1, r1, r2
	ldmia	r1!, {r2, r5, r6}
	stmia	r0!, {r2, r5, r6}
	ldmia	r1!, {r2, r5, r7}
	stmia	r0!, {r2, r5, r7}
	ldmia	r1!, {r6, r7}
	stmia	r0!, {r6, r7}
	add	r3, r3, #0x1
	ldr	r0, [r4, #0x8]
	ldr	r1, [r4]
	cmp	r3, #0x4
	ble	.L313	@cond_branch
	mov	r5, #0x0
	mov	r8, r1
	mov	r9, r0
	mov	r3, #0x4
.L318:
	mov	r1, r9
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L317	@cond_branch
	lsl	r0, r5, #0x5
	add	r0, r0, r8
	ldmia	r1!, {r2, r6, r7}
	stmia	r0!, {r2, r6, r7}
	ldmia	r1!, {r2, r6, r7}
	stmia	r0!, {r2, r6, r7}
	ldmia	r1!, {r2, r6}
	stmia	r0!, {r2, r6}
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
.L317:
	mov	r7, #0x20
	add	r9, r9, r7
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L318	@cond_branch
	mov	sl, r5
	cmp	r5, #0x4
	bhi	.L322	@cond_branch
	ldr	r0, .L333+0x4
	mov	r9, r0
	mov	r1, #0x0
	mov	ip, r1
	mov	r2, #0x4
	neg	r2, r2
	mov	r8, r2
.L324:
	ldr	r1, [r4]
	lsl	r3, r5, #0x5
	add	r1, r1, r3
	mov	r0, r9
	ldmia	r0!, {r2, r6, r7}
	stmia	r1!, {r2, r6, r7}
	ldmia	r0!, {r2, r6, r7}
	stmia	r1!, {r2, r6, r7}
	ldr	r0, [r4]
	add	r0, r0, r3
	mov	r1, #0x0
	strh	r1, [r0, #0x18]
	ldr	r1, [r4]
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1a]
	mov	r0, r8
	and	r0, r0, r2
	strb	r0, [r1, #0x1a]
	ldr	r1, [r4]
	add	r1, r1, r3
	ldrb	r2, [r1, #0x1a]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1a]
	ldr	r0, [r4]
	add	r0, r0, r3
	mov	r6, ip
	strb	r6, [r0, #0x1b]
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x4
	bls	.L324	@cond_branch
.L322:
	mov	r3, #0x0
	ldr	r1, [r4]
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L328	@cond_branch
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0x40
	bne	.L328	@cond_branch
	mov	sl, r3
	b	.L327
.L334:
	.align	2, 0
.L333:
	.word	sWirelessLinkMain
	.word	sRfuPlayerData_Dummy
.L328:
	add	r3, r3, #0x1
	cmp	r3, #0x4
	bgt	.L327	@cond_branch
	lsl	r0, r3, #0x5
	add	r2, r1, r0
	ldrb	r0, [r2, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L328	@cond_branch
	ldrb	r0, [r2, #0x1b]
	cmp	r0, #0x40
	bne	.L328	@cond_branch
	lsl	r0, r3, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
.L327:
	mov	r0, sl
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 LeaderPrunePlayerList,.Lfe14-LeaderPrunePlayerList
	.align	2, 0
	.globl	TryJoinLinkGroup
	.type	 TryJoinLinkGroup,function
	.thumb_func
TryJoinLinkGroup:
	push	{lr}
	ldr	r0, .L336
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L336+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L336+0x8
	add	r1, r1, r0
	str	r1, [r2]
	ldr	r0, .L336+0xc
	str	r1, [r0]
	mov	r0, #0x0
	strb	r0, [r1, #0x8]
	strb	r0, [r1, #0x9]
	ldr	r1, .L336+0x10
	strh	r0, [r1]
	pop	{r0}
	bx	r0
.L337:
	.align	2, 0
.L336:
	.word	Task_TryJoinLinkGroup
	.word	sWirelessLinkMain
	.word	gTasks+0x8
	.word	sGroup
	.word	gSpecialVar_Result
.Lfe15:
	.size	 TryJoinLinkGroup,.Lfe15-TryJoinLinkGroup
	.align	2, 0
	.type	 Task_TryJoinLinkGroup,function
	.thumb_func
Task_TryJoinLinkGroup:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L426
	ldr	r6, [r0]
	ldrb	r0, [r6, #0x8]
	cmp	r0, #0x17
	bls	.LCB2322
	b	.L339	@long jump
.LCB2322:
	lsl	r0, r0, #0x2
	ldr	r1, .L426+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L427:
	.align	2, 0
.L426:
	.word	sWirelessLinkMain
	.word	.L417
	.align	2, 0
	.align	2, 0
.L417:
	.word	.L340
	.word	.L341
	.word	.L343
	.word	.L344
	.word	.L339
	.word	.L357
	.word	.L359
	.word	.L390
	.word	.L392
	.word	.L401
	.word	.L407
	.word	.L410
	.word	.L407
	.word	.L408
	.word	.L407
	.word	.L411
	.word	.L339
	.word	.L339
	.word	.L407
	.word	.L413
	.word	.L407
	.word	.L416
	.word	.L339
	.word	.L415
.L340:
	ldr	r5, .L428
	ldr	r4, .L428+0x4
	ldrh	r0, [r4]
	add	r0, r0, r5
	ldrb	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRfuGameData
	ldr	r1, .L428+0x8
	ldrh	r0, [r4]
	add	r0, r0, r5
	ldrb	r0, [r0]
	strb	r0, [r1]
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	InitializeRfuLinkManager_JoinGroup
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r6, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r6]
	mov	r0, #0x1
	strb	r0, [r6, #0x8]
	b	.L339
.L429:
	.align	2, 0
.L428:
	.word	sLinkGroupToURoomActivity
	.word	gSpecialVar_0x8004
	.word	sPlayerCurrActivity
.L341:
	add	r0, r6, #0
	add	r0, r0, #0x9
	ldr	r2, .L430
	ldr	r1, .L430+0x4
	ldrh	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2397
	b	.L339	@long jump
.LCB2397:
	mov	r0, #0x2
	strb	r0, [r6, #0x8]
	b	.L339
.L431:
	.align	2, 0
.L430:
	.word	gTexts_UR_ChooseTrainer
	.word	gSpecialVar_0x8004
.L343:
	ldr	r0, [r6, #0x4]
	mov	r1, #0x4
	bl	ClearIncomingPlayerList
	ldr	r0, [r6]
	mov	r1, #0x10
	bl	ClearRfuPlayerList
	ldr	r0, [r6, #0x4]
	ldr	r1, .L432
	ldrh	r1, [r1]
	bl	CreateTask_ListenForCompatiblePartners
	mov	r4, #0x0
	strb	r0, [r6, #0x11]
	ldr	r0, .L432+0x4
	bl	AddWindow
	strb	r0, [r6, #0xc]
	ldr	r0, .L432+0x8
	bl	AddWindow
	strb	r0, [r6, #0xb]
	ldr	r0, .L432+0xc
	bl	AddWindow
	strb	r0, [r6, #0xd]
	ldrb	r0, [r6, #0xc]
	mov	r1, #0x22
	bl	FillWindowPixelBuffer
	ldrb	r0, [r6, #0xc]
	ldr	r2, .L432+0x10
	mov	r1, #0x2
	str	r1, [sp]
	mov	r1, #0x4
	str	r1, [sp, #0x4]
	mov	r1, #0x0
	mov	r3, #0x8
	bl	PrintUnionRoomText
	ldrb	r0, [r6, #0xc]
	bl	PutWindowTilemap
	ldrb	r0, [r6, #0xc]
	mov	r1, #0x2
	bl	CopyWindowToVram
	ldrb	r0, [r6, #0xb]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L432+0x14
	add	r2, r0, #0
	ldr	r1, .L432+0x18
	ldmia	r1!, {r3, r5, r7}
	stmia	r2!, {r3, r5, r7}
	ldmia	r1!, {r3, r5, r7}
	stmia	r2!, {r3, r5, r7}
	ldrb	r1, [r6, #0xb]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r6, #0xe]
	ldrb	r0, [r6, #0xd]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldrb	r0, [r6, #0xd]
	bl	PutWindowTilemap
	ldrb	r0, [r6, #0xd]
	bl	PrintPlayerNameAndIdOnWindow
	ldrb	r0, [r6, #0xd]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	strb	r4, [r6, #0xf]
	mov	r0, #0x3
	strb	r0, [r6, #0x8]
	b	.L339
.L433:
	.align	2, 0
.L432:
	.word	gSpecialVar_0x8004
	.word	sWindowTemplate_BButtonCancel
	.word	sWindowTemplate_GroupList
	.word	sWindowTemplate_PlayerNameAndId
	.word	gText_UR_ChooseJoinCancel
	.word	gMultiuseListMenuTemplate
	.word	sListMenuTemplate_UnionRoomGroups
.L344:
	bl	GetNewLeaderCandidate
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	beq	.L347	@cond_branch
	cmp	r4, #0x1
	beq	.LCB2524
	b	.L419	@long jump
.LCB2524:
	mov	r0, #0x2
	bl	PlaySE
	b	.L419
.L347:
	ldrb	r0, [r6, #0xe]
	bl	ListMenu_ProcessInput
	add	r4, r0, #0
	ldr	r0, .L434
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L348	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L348	@cond_branch
	ldr	r0, [r6]
	lsl	r1, r4, #0x5
	add	r0, r0, r1
	ldrb	r1, [r0, #0xa]
	ldrb	r0, [r0, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L349	@cond_branch
	lsr	r0, r1, #0x7
	cmp	r0, #0
	bne	.L349	@cond_branch
	add	r0, r6, #0
	add	r1, r4, #0
	bl	IsTryingToTradeAcrossVersionTooSoon
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L350	@cond_branch
	add	r0, r6, #0
	add	r1, r4, #0
	bl	AskToJoinRfuGroup
	mov	r0, #0x5
	b	.L420
.L435:
	.align	2, 0
.L434:
	.word	gMain
.L350:
	ldr	r0, .L436
	ldr	r2, .L436+0x4
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0x12
.L420:
	strb	r0, [r6, #0x8]
	mov	r0, #0x67
	bl	PlaySE
	b	.L339
.L437:
	.align	2, 0
.L436:
	.word	gStringVar4
	.word	gTexts_UR_CantTransmitToTrainer
.L349:
	mov	r0, #0x7
	bl	PlaySE
	b	.L339
.L348:
	ldr	r0, .L438
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB2636
	b	.L339	@long jump
.LCB2636:
	mov	r0, #0xa
	strb	r0, [r6, #0x8]
	b	.L339
.L439:
	.align	2, 0
.L438:
	.word	gMain
.L357:
	ldr	r4, .L440
	ldr	r0, .L440+0x4
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	GetYouAskedToJoinGroupPleaseWaitMessage
	add	r0, r6, #0
	add	r0, r0, #0x9
	add	r1, r4, #0
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2665
	b	.L339	@long jump
.LCB2665:
	ldr	r4, .L440+0x8
	ldrb	r0, [r6, #0xf]
	lsl	r0, r0, #0x5
	ldr	r1, [r6]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy_PlayerName
	ldr	r1, [r6]
	ldrb	r0, [r6, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	b	.L421
.L441:
	.align	2, 0
.L440:
	.word	gStringVar4
	.word	sPlayerCurrActivity
	.word	gStringVar1
.L359:
	ldr	r0, .L442
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L360	@cond_branch
	ldr	r4, .L442+0x4
	ldr	r1, [r6]
	ldrb	r0, [r6, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	strb	r0, [r4]
	mov	r0, #0x0
	mov	r1, #0x0
	bl	RfuSetStatus
	ldrb	r0, [r4]
	sub	r0, r0, #0x1
	cmp	r0, #0x15
	bhi	.L360	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L442+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L443:
	.align	2, 0
.L442:
	.word	gReceivedRemoteLinkPlayers
	.word	sPlayerCurrActivity
	.word	.L374
	.align	2, 0
	.align	2, 0
.L374:
	.word	.L373
	.word	.L373
	.word	.L373
	.word	.L373
	.word	.L373
	.word	.L360
	.word	.L360
	.word	.L360
	.word	.L373
	.word	.L373
	.word	.L373
	.word	.L360
	.word	.L373
	.word	.L373
	.word	.L360
	.word	.L360
	.word	.L360
	.word	.L360
	.word	.L360
	.word	.L360
	.word	.L373
	.word	.L373
.L373:
	mov	r0, #0x14
	strb	r0, [r6, #0x8]
.L360:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x8
	bhi	.L376	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L444
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L445:
	.align	2, 0
.L444:
	.word	.L387
	.align	2, 0
	.align	2, 0
.L387:
	.word	.L377
	.word	.L380
	.word	.L376
	.word	.L376
	.word	.L381
	.word	.L380
	.word	.L383
	.word	.L376
	.word	.L380
.L377:
	mov	r0, #0xc
	strb	r0, [r6, #0x8]
	b	.L376
.L380:
	mov	r0, #0xe
	strb	r0, [r6, #0x8]
	b	.L376
.L381:
	ldr	r4, .L446
	ldr	r5, .L446+0x4
	ldrb	r1, [r5]
	add	r0, r4, #0
	bl	GetGroupLeaderSentAnOKMessage
	add	r0, r6, #0
	add	r0, r0, #0x9
	add	r1, r4, #0
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L376	@cond_branch
	mov	r0, #0x7
	mov	r1, #0x0
	bl	RfuSetStatus
	ldr	r0, .L446+0x8
	ldr	r2, .L446+0xc
	ldrb	r1, [r5]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r1, .L446+0x10
	add	r0, r4, #0
	bl	StringExpandPlaceholders
	b	.L376
.L447:
	.align	2, 0
.L446:
	.word	gStringVar4
	.word	sPlayerCurrActivity
	.word	gStringVar1
	.word	sLinkGroupActivityNameTexts
	.word	gText_UR_AwaitingOtherMembers
.L383:
	ldrb	r0, [r6, #0x15]
	cmp	r0, #0xf0
	bls	.L384	@cond_branch
	add	r0, r6, #0
	add	r0, r0, #0x9
	ldr	r1, .L448
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L376	@cond_branch
	mov	r0, #0xc
	mov	r1, #0x0
	bl	RfuSetStatus
	mov	r0, #0x0
	b	.L422
.L449:
	.align	2, 0
.L448:
	.word	gStringVar4
.L384:
	add	r0, r0, #0x1
.L422:
	strb	r0, [r6, #0x15]
.L376:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB2873
	b	.L339	@long jump
.LCB2873:
	ldr	r0, .L450
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB2884
	b	.L339	@long jump
.LCB2884:
	mov	r0, #0x7
	strb	r0, [r6, #0x8]
	b	.L339
.L451:
	.align	2, 0
.L450:
	.word	gMain
.L390:
	add	r0, r6, #0
	add	r0, r0, #0x9
	ldr	r1, .L452
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2906
	b	.L339	@long jump
.LCB2906:
	mov	r0, #0x8
	strb	r0, [r6, #0x8]
	b	.L339
.L453:
	.align	2, 0
.L452:
	.word	gText_UR_QuitBeingMember
.L392:
	add	r4, r6, #0
	add	r4, r4, #0x9
	bl	RfuGetStatus
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L396	@cond_branch
	cmp	r1, r0
	bgt	.L400	@cond_branch
	sub	r0, r0, #0x2
	cmp	r1, r0
	beq	.L397	@cond_branch
	b	.L339
.L400:
	cmp	r1, #0
	beq	.L394	@cond_branch
	cmp	r1, #0x1
	beq	.L396	@cond_branch
	b	.L339
.L394:
	bl	SendLeaveGroupNotice
	mov	r0, #0x9
	b	.L423
.L396:
	mov	r0, #0x5
	b	.L423
.L397:
	mov	r0, #0x6
.L423:
	strb	r0, [r6, #0x8]
.L419:
	ldrb	r0, [r6, #0xe]
	bl	RedrawListMenu
	b	.L339
.L401:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB2978
	b	.L339	@long jump
.LCB2978:
.L421:
	mov	r0, #0x6
	strb	r0, [r6, #0x8]
	b	.L339
.L407:
	ldrb	r0, [r6, #0xd]
	bl	ClearWindowTilemap
	ldrb	r0, [r6, #0xd]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r6, #0xe]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r6, #0xc]
	bl	ClearWindowTilemap
	ldrb	r0, [r6, #0xb]
	mov	r1, #0x0
	bl	ClearStdWindowAndFrame
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r6, #0xd]
	bl	RemoveWindow
	ldrb	r0, [r6, #0xb]
	bl	RemoveWindow
	ldrb	r0, [r6, #0xc]
	bl	RemoveWindow
	ldrb	r0, [r6, #0x11]
	bl	DestroyTask
	ldr	r0, [r6]
	bl	Free
	ldr	r0, [r6, #0x4]
	bl	Free
	ldrb	r0, [r6, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r6, #0x8]
	b	.L339
.L408:
	bl	DestroyWirelessStatusIndicatorSprite
	add	r5, r6, #0
	add	r5, r5, #0x9
	ldr	r4, .L454
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L339	@cond_branch
	ldr	r0, .L454+0x4
	mov	r1, #0x6
	b	.L424
.L455:
	.align	2, 0
.L454:
	.word	gTexts_UR_PlayerDisconnected
	.word	gSpecialVar_Result
.L410:
	bl	DestroyWirelessStatusIndicatorSprite
	ldr	r0, .L456
	mov	r1, #0x5
	b	.L424
.L457:
	.align	2, 0
.L456:
	.word	gSpecialVar_Result
.L411:
	bl	DestroyWirelessStatusIndicatorSprite
	add	r5, r6, #0
	add	r5, r5, #0x9
	ldr	r4, .L458
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r1, [r0]
	add	r0, r5, #0
	b	.L425
.L459:
	.align	2, 0
.L458:
	.word	gTexts_UR_PlayerDisconnected
.L413:
	add	r0, r6, #0
	add	r0, r0, #0x9
	ldr	r1, .L460
.L425:
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L339	@cond_branch
	ldr	r0, .L460+0x4
	mov	r1, #0x8
.L424:
	strh	r1, [r0]
	mov	r0, #0x17
	strb	r0, [r6, #0x8]
	b	.L339
.L461:
	.align	2, 0
.L460:
	.word	gStringVar4
	.word	gSpecialVar_Result
.L415:
	add	r0, r4, #0
	bl	DestroyTask
	bl	JoinGroup_EnableScriptContexts
	bl	LinkRfu_Shutdown
	b	.L339
.L416:
	bl	CreateTask_RunScriptAndFadeToActivity
	add	r0, r4, #0
	bl	DestroyTask
.L339:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe16:
	.size	 Task_TryJoinLinkGroup,.Lfe16-Task_TryJoinLinkGroup
	.align	2, 0
	.type	 IsTryingToTradeAcrossVersionTooSoon,function
	.thumb_func
IsTryingToTradeAcrossVersionTooSoon:
	push	{lr}
	lsl	r1, r1, #0x5
	ldr	r0, [r0]
	add	r3, r0, r1
	ldr	r0, .L470
	ldrb	r0, [r0]
	cmp	r0, #0x4
	bne	.L469	@cond_branch
	ldrb	r0, [r3, #0x1]
	mov	r1, #0x3c
	and	r1, r1, r0
	cmp	r1, #0x10
	beq	.L469	@cond_branch
	cmp	r1, #0x14
	beq	.L469	@cond_branch
	ldr	r0, .L470+0x4
	ldr	r0, [r0]
	ldrb	r1, [r0, #0x9]
	mov	r2, #0x80
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L464	@cond_branch
	mov	r0, #0x1
	b	.L468
.L471:
	.align	2, 0
.L470:
	.word	sPlayerCurrActivity
	.word	gSaveBlock2Ptr
.L464:
	ldrb	r1, [r3]
	add	r0, r2, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L467	@cond_branch
.L469:
	mov	r0, #0x0
	b	.L468
.L467:
	mov	r0, #0x2
.L468:
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 IsTryingToTradeAcrossVersionTooSoon,.Lfe17-IsTryingToTradeAcrossVersionTooSoon
	.align	2, 0
	.type	 AskToJoinRfuGroup,function
	.thumb_func
AskToJoinRfuGroup:
	push	{r4, r5, lr}
	add	r4, r0, #0
	strb	r1, [r4, #0xf]
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	ldrb	r0, [r4, #0xe]
	bl	RedrawListMenu
	ldr	r5, .L473
	ldrb	r0, [r4, #0xf]
	lsl	r0, r0, #0x5
	ldr	r1, [r4]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r5, #0
	bl	StringCopy_PlayerName
	ldr	r1, [r4]
	ldrb	r0, [r4, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r5, #0
	bl	ConvertInternationalString
	ldr	r1, .L473+0x4
	ldr	r0, .L473+0x8
	ldrh	r0, [r0]
	add	r0, r0, r1
	ldrb	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameData_SetActivity
	ldrb	r1, [r4, #0xf]
	lsl	r1, r1, #0x5
	ldr	r0, [r4]
	add	r0, r0, r1
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	CreateTask_RfuReconnectWithParent
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L474:
	.align	2, 0
.L473:
	.word	gStringVar1
	.word	sLinkGroupToURoomActivity
	.word	gSpecialVar_0x8004
.Lfe18:
	.size	 AskToJoinRfuGroup,.Lfe18-AskToJoinRfuGroup
	.align	2, 0
	.globl	CreateTask_ListenToWireless
	.type	 CreateTask_ListenToWireless,function
	.thumb_func
CreateTask_ListenToWireless:
	push	{lr}
	ldr	r0, .L476
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L476+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r2, .L476+0x8
	add	r1, r1, r2
	str	r1, [r3]
	mov	r2, #0x0
	strb	r2, [r1, #0x8]
	strb	r2, [r1, #0x9]
	ldr	r2, .L476+0xc
	str	r1, [r2]
	pop	{r1}
	bx	r1
.L477:
	.align	2, 0
.L476:
	.word	Task_ListenToWireless
	.word	sWirelessLinkMain
	.word	gTasks+0x8
	.word	sGroup
.Lfe19:
	.size	 CreateTask_ListenToWireless,.Lfe19-CreateTask_ListenToWireless
	.align	2, 0
	.type	 Task_ListenToWireless,function
	.thumb_func
Task_ListenToWireless:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldr	r0, .L489
	ldr	r4, [r0]
	ldrb	r0, [r4, #0x8]
	cmp	r0, #0xb
	bhi	.L479	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L489+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L490:
	.align	2, 0
.L489:
	.word	sWirelessLinkMain
	.word	.L487
	.align	2, 0
	.align	2, 0
.L487:
	.word	.L480
	.word	.L479
	.word	.L481
	.word	.L482
	.word	.L479
	.word	.L479
	.word	.L479
	.word	.L479
	.word	.L479
	.word	.L479
	.word	.L485
	.word	.L486
.L480:
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRfuGameData
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	InitializeRfuLinkManager_JoinGroup
	mov	r0, #0x1
	bl	RfuSetIgnoreError
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r4, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r4]
	mov	r0, #0x2
	strb	r0, [r4, #0x8]
	b	.L479
.L481:
	ldr	r0, [r4, #0x4]
	mov	r1, #0x4
	bl	ClearIncomingPlayerList
	ldr	r0, [r4]
	mov	r1, #0x10
	bl	ClearRfuPlayerList
	ldr	r0, [r4, #0x4]
	mov	r1, #0xff
	bl	CreateTask_ListenForCompatiblePartners
	mov	r1, #0x0
	strb	r0, [r4, #0x11]
	strb	r1, [r4, #0xf]
	mov	r0, #0x3
	strb	r0, [r4, #0x8]
	b	.L479
.L482:
	bl	GetNewLeaderCandidate
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L483	@cond_branch
	mov	r0, #0x2
	bl	PlaySE
.L483:
	ldr	r0, .L491
	lsl	r1, r5, #0x2
	add	r1, r1, r5
	lsl	r1, r1, #0x3
	add	r1, r1, r0
	mov	r2, #0x26
	ldrsh	r0, [r1, r2]
	cmp	r0, #0xff
	bne	.L479	@cond_branch
	mov	r0, #0xa
	strb	r0, [r4, #0x8]
	b	.L479
.L492:
	.align	2, 0
.L491:
	.word	gTasks
.L485:
	ldrb	r0, [r4, #0x11]
	bl	DestroyTask
	ldr	r0, [r4]
	bl	Free
	ldr	r0, [r4, #0x4]
	bl	Free
	bl	LinkRfu_Shutdown
	ldrb	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r4, #0x8]
	b	.L479
.L486:
	bl	LinkRfu_Shutdown
	add	r0, r5, #0
	bl	DestroyTask
.L479:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 Task_ListenToWireless,.Lfe20-Task_ListenToWireless
	.align	2, 0
	.type	 IsPartnerActivityAcceptable,function
	.thumb_func
IsPartnerActivityAcceptable:
	push	{lr}
	add	r2, r0, #0
	cmp	r1, #0xff
	bne	.L494	@cond_branch
.L503:
	mov	r0, #0x1
	b	.L501
.L494:
	cmp	r1, #0xd
	bhi	.L495	@cond_branch
	ldr	r0, .L505
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	b	.L504
.L506:
	.align	2, 0
.L505:
	.word	sAcceptedActivityIds
.L498:
	ldrb	r0, [r1]
	cmp	r0, r2
	beq	.L503	@cond_branch
	add	r1, r1, #0x1
.L504:
	ldrb	r0, [r1]
	cmp	r0, #0xff
	bne	.L498	@cond_branch
.L495:
	mov	r0, #0x0
.L501:
	pop	{r1}
	bx	r1
.Lfe21:
	.size	 IsPartnerActivityAcceptable,.Lfe21-IsPartnerActivityAcceptable
	.align	2, 0
	.type	 GetGroupListTextColor,function
	.thumb_func
GetGroupListTextColor:
	push	{lr}
	ldr	r0, [r0]
	lsl	r1, r1, #0x5
	add	r1, r0, r1
	ldrb	r2, [r1, #0x1a]
	lsl	r0, r2, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L508	@cond_branch
	ldrb	r0, [r1, #0xa]
	lsr	r0, r0, #0x7
	cmp	r0, #0
	beq	.L509	@cond_branch
	mov	r0, #0x3
	b	.L514
.L509:
	lsl	r0, r2, #0x1d
	cmp	r0, #0
	bge	.L511	@cond_branch
	mov	r0, #0x1
	b	.L514
.L511:
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L508	@cond_branch
	mov	r0, #0x2
	b	.L514
.L508:
	mov	r0, #0x0
.L514:
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 GetGroupListTextColor,.Lfe22-GetGroupListTextColor
	.align	2, 0
	.type	 ListMenuItemPrintFunc_UnionRoomGroups,function
	.thumb_func
ListMenuItemPrintFunc_UnionRoomGroups:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	add	r4, r1, #0
	add	r6, r2, #0
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r6, r6, #0x18
	lsr	r6, r6, #0x18
	ldr	r0, .L516
	ldr	r0, [r0]
	mov	r8, r0
	bl	GetGroupListTextColor
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r4, #0x5
	mov	r2, r8
	ldr	r3, [r2]
	add	r3, r3, r1
	str	r0, [sp]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r4, [sp, #0x4]
	add	r0, r5, #0
	mov	r1, #0x8
	add	r2, r6, #0
	bl	PrintGroupMemberOnWindow
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L517:
	.align	2, 0
.L516:
	.word	sWirelessLinkMain
.Lfe23:
	.size	 ListMenuItemPrintFunc_UnionRoomGroups,.Lfe23-ListMenuItemPrintFunc_UnionRoomGroups
	.align	2, 0
	.type	 GetNewLeaderCandidate,function
	.thumb_func
GetNewLeaderCandidate:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	ldr	r0, .L542
	ldr	r6, [r0]
	mov	r7, #0x0
	mov	r3, #0x0
.L522:
	ldr	r0, [r6]
	lsl	r5, r3, #0x5
	add	r2, r0, r5
	ldrb	r0, [r2, #0x1a]
	lsl	r0, r0, #0x1e
	mov	r8, r5
	cmp	r0, #0
	beq	.L521	@cond_branch
	ldr	r1, [r6, #0x4]
	add	r0, r2, #0
	str	r3, [sp]
	bl	GetNewIncomingPlayerId
	add	r4, r0, #0
	ldr	r3, [sp]
	cmp	r4, #0xff
	beq	.L524	@cond_branch
	ldr	r0, [r6]
	add	r2, r0, r5
	ldrb	r1, [r2, #0x1a]
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L525	@cond_branch
	lsl	r0, r4, #0x3
	sub	r0, r0, r4
	lsl	r4, r0, #0x2
	ldr	r1, [r6, #0x4]
	add	r1, r1, r4
	add	r0, r2, #0
	bl	ArePlayerDataDifferent
	ldr	r3, [sp]
	cmp	r0, #0
	beq	.L526	@cond_branch
	ldr	r1, [r6]
	ldr	r0, [r6, #0x4]
	add	r1, r1, r5
	add	r0, r0, r4
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	b	.L541
.L543:
	.align	2, 0
.L542:
	.word	sWirelessLinkMain
.L526:
	ldr	r0, [r6]
	add	r1, r0, r5
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L530	@cond_branch
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x1b]
	ldr	r0, [r6]
	add	r0, r0, r5
	ldrb	r0, [r0, #0x1b]
	cmp	r0, #0
	bne	.L530	@cond_branch
	mov	r7, #0x2
	b	.L530
.L525:
	mov	r4, #0x4
	neg	r4, r4
	add	r0, r4, #0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
.L541:
	ldr	r0, [r6]
	add	r0, r0, r5
	mov	r1, #0x40
	strb	r1, [r0, #0x1b]
	mov	r7, #0x1
.L530:
	ldr	r0, [r6]
	add	r0, r0, r8
	mov	r1, #0x0
	strh	r1, [r0, #0x18]
	b	.L521
.L524:
	ldr	r0, [r6]
	add	r1, r0, r5
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x2
	beq	.L521	@cond_branch
	ldrh	r0, [r1, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x18]
	ldr	r0, [r6]
	add	r2, r0, r5
	ldrh	r1, [r2, #0x18]
	ldr	r0, .L544
	cmp	r1, r0
	bls	.L521	@cond_branch
	ldrb	r0, [r2, #0x1a]
	mov	r7, #0x4
	neg	r7, r7
	add	r1, r7, #0
	and	r0, r0, r1
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	mov	r7, #0x2
.L521:
	add	r0, r3, #0x1
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0xf
	bls	.L522	@cond_branch
	mov	r5, #0x0
	mov	r4, #0x3
.L538:
	ldr	r0, [r6]
	ldr	r1, [r6, #0x4]
	add	r1, r1, r5
	mov	r2, #0x10
	bl	TryAddIncomingPlayerToList
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L537	@cond_branch
	mov	r7, #0x1
.L537:
	add	r5, r5, #0x1c
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L538	@cond_branch
	add	r0, r7, #0
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L545:
	.align	2, 0
.L544:
	.word	0x12b
.Lfe24:
	.size	 GetNewLeaderCandidate,.Lfe24-GetNewLeaderCandidate
	.align	2, 0
	.type	 Task_CreateTradeMenu,function
	.thumb_func
Task_CreateTradeMenu:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	bl	CB2_StartCreateTradeMenu
	add	r0, r4, #0
	bl	DestroyTask
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 Task_CreateTradeMenu,.Lfe25-Task_CreateTradeMenu
	.align	2, 0
	.globl	CreateTask_CreateTradeMenu
	.type	 CreateTask_CreateTradeMenu,function
	.thumb_func
CreateTask_CreateTradeMenu:
	push	{lr}
	ldr	r0, .L548
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.L549:
	.align	2, 0
.L548:
	.word	Task_CreateTradeMenu
.Lfe26:
	.size	 CreateTask_CreateTradeMenu,.Lfe26-CreateTask_CreateTradeMenu
	.align	2, 0
	.type	 Task_StartUnionRoomTrade,function
	.thumb_func
Task_StartUnionRoomTrade:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L563
	mov	r8, r0
	bl	GetMultiplayerId
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, r8
	bl	GetPartyPositionOfRegisteredMon
	add	r7, r0, #0
	ldr	r1, .L563+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x3
	add	r5, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L553	@cond_branch
	cmp	r0, #0x1
	bgt	.L561	@cond_branch
	cmp	r0, #0
	beq	.L552	@cond_branch
	b	.L551
.L564:
	.align	2, 0
.L563:
	.word	sUnionRoomTrade
	.word	gTasks
.L561:
	cmp	r0, #0x2
	beq	.L555	@cond_branch
	cmp	r0, #0x3
	beq	.L557	@cond_branch
	b	.L551
.L552:
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	mov	r0, #0x64
	mov	r1, r7
	mul	r1, r1, r0
	ldr	r0, .L565
	add	r1, r1, r0
	mov	r0, #0x0
	mov	r2, #0x64
	bl	SendBlock
	b	.L551
.L566:
	.align	2, 0
.L565:
	.word	gPlayerParty
.L553:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L551	@cond_branch
	bl	GetMultiplayerId
	add	r1, r0, #0
	ldr	r0, .L567
	mov	r2, #0x1
	eor	r1, r1, r2
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x10
	ldr	r2, .L567+0x4
	add	r1, r1, r2
	mov	r2, #0x64
	bl	memcpy
	mov	r0, #0x32
	bl	IncrementGameStat
	bl	ResetBlockReceivedFlags
	b	.L562
.L568:
	.align	2, 0
.L567:
	.word	gEnemyParty
	.word	gBlockRecvBuffer
.L555:
	ldr	r4, .L569
	ldr	r0, .L569+0x4
	ldr	r1, [r0]
	ldr	r0, .L569+0x8
	add	r1, r1, r0
	add	r0, r4, #0
	mov	r2, #0xdc
	bl	memcpy
	mov	r0, #0x0
	add	r1, r4, #0
	mov	r2, #0xdc
	bl	SendBlock
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L551	@cond_branch
.L562:
	ldrh	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x8]
	b	.L551
.L570:
	.align	2, 0
.L569:
	.word	gBlockSendBuffer
	.word	gSaveBlock1Ptr
	.word	0x2ce4
.L557:
	bl	GetBlockReceivedStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L551	@cond_branch
	ldr	r4, .L571
	bl	GetMultiplayerId
	add	r1, r0, #0
	mov	r0, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x10
	ldr	r0, .L571+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	mov	r2, #0xd8
	bl	memcpy
	bl	ResetBlockReceivedFlags
	ldr	r1, .L571+0x8
	strb	r7, [r1]
	mov	r0, #0x6
	strb	r0, [r1, #0x1]
	ldr	r1, .L571+0xc
	ldr	r0, .L571+0x10
	str	r0, [r1, #0x8]
	ldr	r0, .L571+0x14
	bl	SetMainCallback2
	mov	r0, r8
	bl	ResetUnionRoomTrade
	add	r0, r6, #0
	bl	DestroyTask
.L551:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L572:
	.align	2, 0
.L571:
	.word	gLinkPartnerMail
	.word	gBlockRecvBuffer
	.word	gSelectedTradeMonPositions
	.word	gMain
	.word	CB2_ReturnToField
	.word	CB2_LinkTrade
.Lfe27:
	.size	 Task_StartUnionRoomTrade,.Lfe27-Task_StartUnionRoomTrade
	.align	2, 0
	.type	 Task_ExchangeCards,function
	.thumb_func
Task_ExchangeCards:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r8, r0
	ldr	r1, .L588
	lsl	r0, r0, #0x2
	add	r0, r0, r8
	lsl	r0, r0, #0x3
	add	r4, r0, r1
	mov	r1, #0x8
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	beq	.L575	@cond_branch
	cmp	r0, #0x1
	beq	.L577	@cond_branch
	b	.L574
.L589:
	.align	2, 0
.L588:
	.word	gTasks
.L575:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L576	@cond_branch
	mov	r0, #0x2
	bl	SendBlockRequest
.L576:
	ldrh	r0, [r4, #0x8]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x8]
	b	.L574
.L577:
	bl	GetBlockReceivedStatus
	add	r4, r0, #0
	bl	GetLinkPlayerCountAsBitFlags
	lsl	r4, r4, #0x18
	lsl	r0, r0, #0x18
	cmp	r4, r0
	bne	.L574	@cond_branch
	mov	r4, #0x0
	ldr	r0, .L590
	add	r7, r0, #0
	add	r7, r7, #0x38
	ldr	r6, .L590+0x4
	add	r5, r0, #0
	b	.L579
.L591:
	.align	2, 0
.L590:
	.word	gTrainerCards
	.word	gLinkPlayers
.L582:
	lsl	r0, r4, #0x8
	ldr	r1, .L592
	add	r1, r0, r1
	add	r0, r5, #0
	mov	r2, #0x60
	bl	memcpy
	ldrh	r0, [r6]
	strb	r0, [r7]
	add	r7, r7, #0x60
	add	r6, r6, #0x1c
	add	r5, r5, #0x60
	add	r4, r4, #0x1
.L579:
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r4, r0
	blt	.L582	@cond_branch
	bl	GetLinkPlayerCount
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L584	@cond_branch
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x10
	ldr	r1, .L592
	add	r1, r0, r1
	add	r0, r1, #0
	add	r0, r0, #0x60
	ldrh	r0, [r0]
	bl	MysteryGift_TryEnableStatsByFlagId
	b	.L585
.L593:
	.align	2, 0
.L592:
	.word	gBlockRecvBuffer
.L584:
	bl	MysteryGift_DisableStats
.L585:
	bl	ResetBlockReceivedFlags
	mov	r0, r8
	bl	DestroyTask
.L574:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe28:
	.size	 Task_ExchangeCards,.Lfe28-Task_ExchangeCards
	.align	2, 0
	.type	 CB2_ShowCard,function
	.thumb_func
CB2_ShowCard:
	push	{r4, lr}
	ldr	r0, .L601
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L596	@cond_branch
	cmp	r0, #0x1
	beq	.L597	@cond_branch
	b	.L595
.L602:
	.align	2, 0
.L601:
	.word	gMain
.L596:
	ldr	r0, .L603
	mov	r1, #0x5
	bl	CreateTask
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L595
.L604:
	.align	2, 0
.L603:
	.word	Task_ExchangeCards
.L597:
	ldr	r0, .L605
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L595	@cond_branch
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L605+0x4
	bl	ShowTrainerCardInLink
.L595:
	bl	RunTasks
	bl	RunTextPrinters
	bl	AnimateSprites
	bl	BuildOamBuffer
	pop	{r4}
	pop	{r0}
	bx	r0
.L606:
	.align	2, 0
.L605:
	.word	Task_ExchangeCards
	.word	CB2_ReturnToField
.Lfe29:
	.size	 CB2_ShowCard,.Lfe29-CB2_ShowCard
	.align	2, 0
	.globl	StartUnionRoomBattle
	.type	 StartUnionRoomBattle,function
	.thumb_func
StartUnionRoomBattle:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	lsl	r6, r6, #0x10
	lsr	r6, r6, #0x10
	bl	HealPlayerParty
	bl	SavePlayerParty
	bl	LoadPlayerBag
	ldr	r5, .L608
	ldr	r0, .L608+0x4
	str	r0, [r5, #0x14]
	bl	GetMultiplayerId
	add	r4, r0, #0
	bl	GetMultiplayerId
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r4, #0x3
	sub	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0x18]
	bl	GetMultiplayerId
	add	r4, r0, #0
	bl	GetMultiplayerId
	mov	r2, #0x1
	eor	r4, r4, r2
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r1, r4, #0x3
	sub	r1, r1, r4
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	eor	r0, r0, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	strh	r0, [r1, #0x18]
	ldr	r1, .L608+0x8
	ldr	r0, .L608+0xc
	str	r0, [r1, #0x8]
	ldr	r0, .L608+0x10
	str	r6, [r0]
	bl	PlayBattleBGM
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L609:
	.align	2, 0
.L608:
	.word	gLinkPlayers
	.word	0x2211
	.word	gMain
	.word	CB2_ReturnFromCableClubBattle
	.word	gBattleTypeFlags
.Lfe30:
	.size	 StartUnionRoomBattle,.Lfe30-StartUnionRoomBattle
	.align	2, 0
	.type	 WarpForWirelessMinigame,function
	.thumb_func
WarpForWirelessMinigame:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x8
	add	r3, r0, #0
	add	r4, r1, #0
	add	r5, r2, #0
	lsl	r3, r3, #0x10
	lsr	r3, r3, #0x10
	lsl	r4, r4, #0x10
	lsr	r4, r4, #0x10
	lsl	r5, r5, #0x10
	lsr	r5, r5, #0x10
	ldr	r0, .L611
	add	r1, r3, #0
	bl	VarSet
	ldr	r6, .L611+0x4
	ldr	r1, [r6]
	mov	r0, #0x4
	ldrsb	r0, [r1, r0]
	ldrb	r1, [r1, #0x5]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	mov	r2, #0x1
	neg	r2, r2
	mov	r8, r2
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	str	r5, [sp]
	add	r3, r4, #0
	bl	SetWarpDestination
	ldr	r0, [r6]
	mov	r1, #0x4
	ldrsb	r1, [r0, r1]
	mov	r2, #0x5
	ldrsb	r2, [r0, r2]
	str	r4, [sp]
	str	r5, [sp, #0x4]
	mov	r0, #0x0
	mov	r3, r8
	bl	SetDynamicWarpWithCoords
	bl	WarpIntoMap
	add	sp, sp, #0x8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L612:
	.align	2, 0
.L611:
	.word	0x406f
	.word	gSaveBlock1Ptr
.Lfe31:
	.size	 WarpForWirelessMinigame,.Lfe31-WarpForWirelessMinigame
	.align	2, 0
	.type	 WarpForCableClubActivity,function
	.thumb_func
WarpForCableClubActivity:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r5, r1, #0
	mov	r8, r2
	add	r6, r3, #0
	ldr	r1, [sp, #0x18]
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r0, .L614
	strh	r1, [r0]
	ldr	r0, .L614+0x4
	bl	VarSet
	bl	GetLinkPlayerCount
	ldr	r1, .L614+0x8
	strb	r0, [r1]
	bl	GetMultiplayerId
	ldr	r1, .L614+0xc
	strb	r0, [r1]
	bl	SetCableClubWarp
	lsl	r4, r4, #0x18
	asr	r4, r4, #0x18
	lsl	r5, r5, #0x18
	asr	r5, r5, #0x18
	mov	r2, #0x1
	neg	r2, r2
	mov	r0, r8
	lsl	r0, r0, #0x18
	asr	r0, r0, #0x18
	mov	r8, r0
	lsl	r6, r6, #0x18
	asr	r6, r6, #0x18
	str	r6, [sp]
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r3, r8
	bl	SetWarpDestination
	bl	WarpIntoMap
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L615:
	.align	2, 0
.L614:
	.word	gSpecialVar_0x8004
	.word	0x406f
	.word	gFieldLinkPlayerCount
	.word	gLocalLinkPlayerId
.Lfe32:
	.size	 WarpForCableClubActivity,.Lfe32-WarpForCableClubActivity
	.align	2, 0
	.type	 CB2_TransitionToCableClub,function
	.thumb_func
CB2_TransitionToCableClub:
	push	{r4, lr}
	ldr	r0, .L623
	mov	r1, #0x87
	lsl	r1, r1, #0x3
	add	r4, r0, r1
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L618	@cond_branch
	cmp	r0, #0x1
	beq	.L619	@cond_branch
	b	.L617
.L624:
	.align	2, 0
.L623:
	.word	gMain
.L618:
	ldr	r0, .L625
	mov	r1, #0x5
	bl	CreateTask
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L617
.L626:
	.align	2, 0
.L625:
	.word	Task_ExchangeCards
.L619:
	ldr	r0, .L627
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L617	@cond_branch
	ldr	r0, .L627+0x4
	bl	SetMainCallback2
.L617:
	bl	RunTasks
	bl	RunTextPrinters
	bl	AnimateSprites
	bl	BuildOamBuffer
	pop	{r4}
	pop	{r0}
	bx	r0
.L628:
	.align	2, 0
.L627:
	.word	Task_ExchangeCards
	.word	CB2_ReturnToFieldCableClub
.Lfe33:
	.size	 CB2_TransitionToCableClub,.Lfe33-CB2_TransitionToCableClub
	.align	2, 0
	.type	 CreateTrainerCardInBuffer,function
	.thumb_func
CreateTrainerCardInBuffer:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	bl	TrainerCard_GenerateCardForLinkPlayer
	cmp	r5, #0
	beq	.L630	@cond_branch
	bl	GetWonderCardFlagId
	add	r1, r4, #0
	add	r1, r1, #0x60
	strh	r0, [r1]
	b	.L631
.L630:
	add	r0, r4, #0
	add	r0, r0, #0x60
	strh	r5, [r0]
.L631:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe34:
	.size	 CreateTrainerCardInBuffer,.Lfe34-CreateTrainerCardInBuffer
	.align	2, 0
	.type	 Task_StartActivity,function
	.thumb_func
Task_StartActivity:
	push	{r4, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	bl	MysteryGift_DisableStats
	ldr	r0, .L666
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0xd
	bhi	.L633	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L666+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L667:
	.align	2, 0
.L666:
	.word	sPlayerCurrActivity
	.word	.L643
	.align	2, 0
	.align	2, 0
.L643:
	.word	.L642
	.word	.L642
	.word	.L642
	.word	.L642
	.word	.L633
	.word	.L633
	.word	.L633
	.word	.L633
	.word	.L642
	.word	.L642
	.word	.L642
	.word	.L633
	.word	.L642
	.word	.L642
.L642:
	bl	SaveLinkTrainerNames
.L633:
	ldr	r0, .L668
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	cmp	r0, #0x50
	bls	.LCB4628
	b	.L645	@long jump
.LCB4628:
	lsl	r0, r0, #0x2
	ldr	r1, .L668+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L669:
	.align	2, 0
.L668:
	.word	sPlayerCurrActivity
	.word	.L662
	.align	2, 0
	.align	2, 0
.L662:
	.word	.L648
	.word	.L649
	.word	.L650
	.word	.L651
	.word	.L654
	.word	.L645
	.word	.L645
	.word	.L658
	.word	.L659
	.word	.L660
	.word	.L661
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L647
	.word	.L645
	.word	.L645
	.word	.L652
	.word	.L654
	.word	.L645
	.word	.L645
	.word	.L658
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L645
	.word	.L647
.L647:
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r1, .L670
	ldr	r0, .L670+0x4
	str	r0, [r1, #0x8]
	mov	r0, #0x2
	bl	InitChooseMonsForBattle
	b	.L645
.L671:
	.align	2, 0
.L670:
	.word	gMain
	.word	CB2_UnionRoomBattle
.L648:
	bl	CleanupOverworldWindowsAndTilemaps
	ldr	r0, .L672
	mov	r1, #0x1
	bl	CreateTrainerCardInBuffer
	bl	HealPlayerParty
	bl	SavePlayerParty
	bl	LoadPlayerBag
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x6
	b	.L664
.L673:
	.align	2, 0
.L672:
	.word	gBlockSendBuffer
.L649:
	bl	CleanupOverworldWindowsAndTilemaps
	bl	HealPlayerParty
	bl	SavePlayerParty
	bl	LoadPlayerBag
	ldr	r0, .L674
	mov	r1, #0x1
	bl	CreateTrainerCardInBuffer
	mov	r0, #0x2
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x6
	b	.L664
.L675:
	.align	2, 0
.L674:
	.word	gBlockSendBuffer
.L650:
	bl	CleanupOverworldWindowsAndTilemaps
	bl	HealPlayerParty
	bl	SavePlayerParty
	bl	LoadPlayerBag
	ldr	r0, .L676
	mov	r1, #0x1
	bl	CreateTrainerCardInBuffer
	mov	r0, #0x5
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x3
	b	.L665
.L677:
	.align	2, 0
.L676:
	.word	gBlockSendBuffer
.L651:
	ldr	r0, .L678
	mov	r1, #0x1
	bl	CreateTrainerCardInBuffer
	bl	CleanupOverworldWindowsAndTilemaps
	mov	r0, #0x3
	str	r0, [sp]
	mov	r0, #0x0
	mov	r1, #0x1
.L665:
	mov	r2, #0x5
.L664:
	mov	r3, #0x8
	bl	WarpForCableClubActivity
	ldr	r0, .L678+0x4
	bl	SetMainCallback2
	b	.L645
.L679:
	.align	2, 0
.L678:
	.word	gBlockSendBuffer
	.word	CB2_TransitionToCableClub
.L652:
	ldr	r0, .L680
	mov	r1, #0x0
	bl	CreateTask
	b	.L645
.L681:
	.align	2, 0
.L680:
	.word	Task_StartUnionRoomTrade
.L654:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L655	@cond_branch
	bl	LinkRfu_CreateConnectionAsParent
	b	.L656
.L655:
	bl	LinkRfu_StopManagerBeforeEnteringChat
	mov	r0, #0x45
	mov	r1, #0x0
	mov	r2, #0x1
	bl	SetHostRfuGameData
.L656:
	bl	EnterUnionRoomChat
	b	.L645
.L658:
	ldr	r0, .L682
	mov	r1, #0x0
	bl	CreateTrainerCardInBuffer
	ldr	r0, .L682+0x4
	bl	SetMainCallback2
	b	.L645
.L683:
	.align	2, 0
.L682:
	.word	gBlockSendBuffer
	.word	CB2_ShowCard
.L659:
	mov	r0, #0x8
	mov	r1, #0x5
	mov	r2, #0x1
	bl	WarpForWirelessMinigame
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L684
	bl	StartPokemonJump
	b	.L645
.L685:
	.align	2, 0
.L684:
	.word	CB2_LoadMap
.L660:
	mov	r0, #0x7
	mov	r1, #0x9
	mov	r2, #0x1
	bl	WarpForWirelessMinigame
	ldr	r0, .L686
	bl	StartBerryCrush
	b	.L645
.L687:
	.align	2, 0
.L686:
	.word	CB2_LoadMap
.L661:
	mov	r0, #0x8
	mov	r1, #0x5
	mov	r2, #0x1
	bl	WarpForWirelessMinigame
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r1, .L688
	bl	StartDodrioBerryPicking
.L645:
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r1, .L688+0x4
	mov	r0, #0x1
	strh	r0, [r1]
	bl	UnlockPlayerFieldControls
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L689:
	.align	2, 0
.L688:
	.word	CB2_LoadMap
	.word	gSpecialVar_Result
.Lfe35:
	.size	 Task_StartActivity,.Lfe35-Task_StartActivity
	.align	2, 0
	.type	 Task_RunScriptAndFadeToActivity,function
	.thumb_func
Task_RunScriptAndFadeToActivity:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	lsl	r0, r0, #0x3
	ldr	r1, .L703
	add	r4, r0, r1
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x1
	beq	.L693	@cond_branch
	cmp	r0, #0x1
	bgt	.L701	@cond_branch
	cmp	r0, #0
	beq	.L692	@cond_branch
	b	.L691
.L704:
	.align	2, 0
.L703:
	.word	gTasks+0x8
.L701:
	cmp	r0, #0x2
	beq	.L695	@cond_branch
	cmp	r0, #0x3
	beq	.L697	@cond_branch
	b	.L691
.L692:
	ldr	r1, .L705
	mov	r0, #0x1
	strh	r0, [r1]
	bl	ScriptContext_Enable
	b	.L702
.L706:
	.align	2, 0
.L705:
	.word	gSpecialVar_Result
.L693:
	bl	ScriptContext_IsEnabled
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L691	@cond_branch
	mov	r0, #0x1
	mov	r1, #0x0
	bl	FadeScreen
	b	.L702
.L695:
	ldr	r0, .L707
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L691	@cond_branch
	bl	SetLinkStandbyCallback
.L702:
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	b	.L691
.L708:
	.align	2, 0
.L707:
	.word	gPaletteFade
.L697:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L691	@cond_branch
	add	r0, r5, #0
	bl	DestroyTask
	bl	CreateTask_StartActivity
.L691:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe36:
	.size	 Task_RunScriptAndFadeToActivity,.Lfe36-Task_RunScriptAndFadeToActivity
	.align	2, 0
	.type	 CreateTask_RunScriptAndFadeToActivity,function
	.thumb_func
CreateTask_RunScriptAndFadeToActivity:
	push	{lr}
	ldr	r0, .L710
	mov	r1, #0x0
	bl	CreateTask
	pop	{r0}
	bx	r0
.L711:
	.align	2, 0
.L710:
	.word	Task_RunScriptAndFadeToActivity
.Lfe37:
	.size	 CreateTask_RunScriptAndFadeToActivity,.Lfe37-CreateTask_RunScriptAndFadeToActivity
	.align	2, 0
	.type	 CreateTask_StartActivity,function
	.thumb_func
CreateTask_StartActivity:
	push	{lr}
	ldr	r0, .L713
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L713+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	add	r1, r1, r2
	mov	r0, #0x0
	strh	r0, [r1, #0x8]
	pop	{r0}
	bx	r0
.L714:
	.align	2, 0
.L713:
	.word	Task_StartActivity
	.word	gTasks
.Lfe38:
	.size	 CreateTask_StartActivity,.Lfe38-CreateTask_StartActivity
	.align	2, 0
	.globl	CreateTask_SendMysteryGift
	.type	 CreateTask_SendMysteryGift,function
	.thumb_func
CreateTask_SendMysteryGift:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L716
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L716+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L716+0x8
	add	r1, r1, r0
	str	r1, [r2]
	mov	r2, #0x0
	strb	r2, [r1, #0xc]
	strb	r2, [r1, #0xd]
	strb	r4, [r1, #0x18]
	ldr	r0, .L716+0xc
	strh	r2, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L717:
	.align	2, 0
.L716:
	.word	Task_SendMysteryGift
	.word	sWirelessLinkMain
	.word	gTasks+0x8
	.word	gSpecialVar_Result
.Lfe39:
	.size	 CreateTask_SendMysteryGift,.Lfe39-CreateTask_SendMysteryGift
	.align	2, 0
	.type	 Task_SendMysteryGift,function
	.thumb_func
Task_SendMysteryGift:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L767
	ldr	r5, [r0]
	ldrb	r0, [r5, #0xc]
	cmp	r0, #0x11
	bls	.LCB5091
	b	.L719	@long jump
.LCB5091:
	lsl	r0, r0, #0x2
	ldr	r1, .L767+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L768:
	.align	2, 0
.L767:
	.word	sWirelessLinkMain
	.word	.L762
	.align	2, 0
	.align	2, 0
.L762:
	.word	.L720
	.word	.L721
	.word	.L722
	.word	.L723
	.word	.L724
	.word	.L728
	.word	.L726
	.word	.L729
	.word	.L737
	.word	.L743
	.word	.L744
	.word	.L746
	.word	.L748
	.word	.L751
	.word	.L752
	.word	.L754
	.word	.L759
	.word	.L760
.L720:
	ldr	r1, .L769
	ldrb	r0, [r5, #0x18]
	strb	r0, [r1]
	ldr	r1, .L769+0x4
	mov	r0, #0x2
	strb	r0, [r1]
	ldrb	r0, [r5, #0x18]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRfuGameData
	mov	r0, #0x0
	mov	r1, #0x0
	bl	SetHostRfuWonderFlags
	bl	SetWirelessCommType1
	bl	OpenLink
	mov	r0, #0x2
	bl	InitializeRfuLinkManager_LinkLeader
	mov	r0, #0x1
	strb	r0, [r5, #0xc]
	b	.L719
.L770:
	.align	2, 0
.L769:
	.word	sPlayerCurrActivity
	.word	sPlayerActivityGroupSize
.L721:
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0x4]
	mov	r0, #0xa0
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, #0xa0
	bl	AllocZeroed
	str	r0, [r5, #0x8]
	ldr	r0, [r5, #0x4]
	mov	r1, #0x4
	bl	ClearIncomingPlayerList
	ldr	r0, [r5]
	mov	r1, #0x5
	bl	ClearRfuPlayerList
	ldr	r0, [r5]
	add	r1, r0, #0
	add	r1, r1, #0x10
	bl	CopyHostRfuGameDataAndUsername
	ldr	r1, [r5]
	mov	r3, #0x0
	mov	r0, #0x0
	strh	r0, [r1, #0x18]
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	sub	r0, r0, #0x4
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r0, [r5]
	strb	r3, [r0, #0x1b]
	ldr	r0, [r5, #0x4]
	mov	r1, #0xff
	bl	CreateTask_ListenForCompatiblePartners
	strb	r0, [r5, #0x17]
	ldr	r0, .L771
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	bl	GetMysteryGiftBaseBlock
	lsl	r0, r0, #0x10
	ldr	r2, .L771+0x4
	ldr	r1, [sp, #0x4]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp, #0x4]
	mov	r0, sp
	bl	AddWindow
	strb	r0, [r5, #0xf]
	ldrb	r0, [r5, #0xf]
	bl	MG_DrawTextBorder
	ldr	r0, .L771+0x8
	add	r2, r0, #0
	ldr	r1, .L771+0xc
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldrb	r1, [r5, #0xf]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r5, #0x12]
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	mov	r0, #0x1
	strb	r0, [r5, #0x13]
	b	.L764
.L772:
	.align	2, 0
.L771:
	.word	sWindowTemplate_List_PossibleGroupMembers
	.word	0xffff
	.word	gMultiuseListMenuTemplate
	.word	sListMenuTemplate_PossibleGroupMembers
.L722:
	ldr	r0, .L773
	ldr	r2, .L773+0x4
	ldr	r4, .L773+0x8
	ldrb	r1, [r4]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L773+0xc
	ldrb	r1, [r4]
	bl	GetAwaitingCommunicationText
	mov	r0, #0x3
	strb	r0, [r5, #0xc]
	b	.L719
.L774:
	.align	2, 0
.L773:
	.word	gStringVar1
	.word	sLinkGroupActivityNameTexts
	.word	sPlayerCurrActivity
	.word	gStringVar4
.L723:
	ldr	r0, .L775
	bl	AddTextPrinterToWindow1
	mov	r0, #0x4
	strb	r0, [r5, #0xc]
	b	.L719
.L776:
	.align	2, 0
.L775:
	.word	gStringVar4
.L724:
	add	r0, r5, #0
	mov	r1, #0x5
	mov	r2, #0x6
	bl	Leader_SetStateIfMemberListChanged
	ldr	r0, .L777
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB5302
	b	.L719	@long jump
.LCB5302:
	mov	r0, #0xd
	strb	r0, [r5, #0xc]
	bl	DestroyWirelessStatusIndicatorSprite
	b	.L719
.L778:
	.align	2, 0
.L777:
	.word	gMain
.L726:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L779
	bl	PrintMysteryGiftMenuMessage
	cmp	r0, #0
	bne	.LCB5324
	b	.L719	@long jump
.LCB5324:
	ldr	r0, [r5]
	bl	LeaderPrunePlayerList
	strb	r0, [r5, #0x13]
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
.L764:
	mov	r0, #0x2
	strb	r0, [r5, #0xc]
	b	.L719
.L780:
	.align	2, 0
.L779:
	.word	gText_UR_LinkWithFriendDropped
.L728:
	mov	r0, #0x7
	strb	r0, [r5, #0xc]
	b	.L719
.L729:
	add	r0, r5, #0
	add	r0, r0, #0xd
	add	r1, r5, #0
	add	r1, r1, #0x14
	ldr	r3, .L781
	mov	r2, #0x0
	bl	DoMysteryGiftYesNo
	lsl	r0, r0, #0x18
	asr	r4, r0, #0x18
	cmp	r4, #0
	beq	.L731	@cond_branch
	cmp	r4, #0
	bgt	.L736	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r4, r0
	beq	.L733	@cond_branch
	b	.L719
.L782:
	.align	2, 0
.L781:
	.word	gStringVar4
.L736:
	cmp	r4, #0x1
	beq	.L733	@cond_branch
	b	.L719
.L731:
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	strb	r4, [r1, #0x1b]
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	mov	r0, #0x5
	strb	r0, [r5, #0x19]
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	ldr	r2, [r5]
	add	r2, r2, r0
	add	r2, r2, #0x10
	mov	r0, #0x5
	b	.L765
.L733:
	mov	r0, #0x6
	strb	r0, [r5, #0x19]
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	ldr	r2, [r5]
	add	r2, r2, r0
	add	r2, r2, #0x10
	mov	r0, #0x6
.L765:
	bl	SendRfuStatusToPartner
	mov	r0, #0x8
	strb	r0, [r5, #0xc]
	b	.L719
.L737:
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r0, r0, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r2, [r5, #0x13]
	lsl	r2, r2, #0x5
	ldr	r1, [r5]
	add	r1, r1, r2
	add	r1, r1, #0x10
	bl	WaitSendRfuStatusToPartner
	add	r4, r0, #0
	cmp	r4, #0x1
	bne	.L738	@cond_branch
	ldrb	r0, [r5, #0x19]
	cmp	r0, #0x5
	bne	.L739	@cond_branch
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	mov	r0, #0x0
	strb	r0, [r1, #0x1b]
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	ldrb	r0, [r5, #0x13]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x13]
	ldr	r4, .L783
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r1, r1, r0
	sub	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy_PlayerName
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r0, .L783+0x4
	ldr	r1, .L783+0x8
	bl	StringExpandPlaceholders
	mov	r0, #0x9
	strb	r0, [r5, #0xc]
	bl	LinkRfu_StopManagerAndFinalizeSlots
	b	.L740
.L784:
	.align	2, 0
.L783:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_UR_AnOKWasSentToPlayer
.L739:
	ldrb	r1, [r5, #0x13]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	RequestDisconnectSlotByTrainerNameAndId
	ldr	r1, [r5]
	ldrb	r0, [r5, #0x13]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r2, [r1, #0x1a]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r2
	strb	r0, [r1, #0x1a]
	ldr	r0, [r5]
	bl	LeaderPrunePlayerList
	ldrb	r0, [r5, #0x12]
	bl	RedrawListMenu
	mov	r0, #0x2
	strb	r0, [r5, #0xc]
.L740:
	mov	r0, #0x0
	strb	r0, [r5, #0x19]
	b	.L719
.L738:
	cmp	r4, #0x2
	beq	.LCB5580
	b	.L719	@long jump
.LCB5580:
	mov	r0, #0x0
	mov	r1, #0x0
	bl	RfuSetStatus
	strb	r4, [r5, #0xc]
	b	.L719
.L743:
	ldr	r0, .L785
	bl	AddTextPrinterToWindow1
	mov	r0, #0xa
	strb	r0, [r5, #0xc]
	b	.L719
.L786:
	.align	2, 0
.L785:
	.word	gStringVar4
.L744:
	ldrb	r0, [r5, #0xe]
	add	r0, r0, #0x1
	strb	r0, [r5, #0xe]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x78
	bhi	.LCB5611
	b	.L719	@long jump
.LCB5611:
	mov	r0, #0xb
	strb	r0, [r5, #0xc]
	b	.L719
.L746:
	add	r0, r5, #0
	mov	r1, #0x5
	mov	r2, #0x6
	bl	Leader_SetStateIfMemberListChanged
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB5625
	b	.L719	@long jump
.LCB5625:
	mov	r0, #0xc
	strb	r0, [r5, #0xc]
	b	.L719
.L748:
	bl	LmanAcceptSlotFlagIsNotZero
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L749	@cond_branch
	mov	r0, #0x0
	bl	WaitRfuState
	mov	r0, #0xf
	strb	r0, [r5, #0xc]
	b	.L719
.L749:
	mov	r0, #0x6
	strb	r0, [r5, #0xc]
	b	.L719
.L751:
	bl	DestroyWirelessStatusIndicatorSprite
	bl	LinkRfu_Shutdown
	ldrb	r0, [r5, #0x12]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r5, #0xf]
	bl	RemoveWindow
	ldrb	r0, [r5, #0x17]
	bl	DestroyTask
	ldr	r0, [r5, #0x8]
	bl	Free
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	b	.L766
.L752:
	add	r0, r5, #0
	add	r0, r0, #0xd
	ldr	r1, .L787
	bl	PrintMysteryGiftMenuMessage
	cmp	r0, #0
	beq	.L719	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r1, .L787+0x4
	mov	r0, #0x5
	strh	r0, [r1]
	b	.L719
.L788:
	.align	2, 0
.L787:
	.word	gText_UR_PleaseStartOver
	.word	gSpecialVar_Result
.L754:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L756	@cond_branch
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bne	.L755	@cond_branch
.L756:
	mov	r0, #0xd
	strb	r0, [r5, #0xc]
	b	.L719
.L755:
	ldr	r0, .L789
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L719	@cond_branch
	mov	r0, #0x1
	bl	UpdateGameData_GroupLockedIn
	b	.L766
.L790:
	.align	2, 0
.L789:
	.word	gReceivedRemoteLinkPlayers
.L759:
	ldrb	r0, [r5, #0x12]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r5, #0xf]
	bl	RemoveWindow
	ldrb	r0, [r5, #0x17]
	bl	DestroyTask
	ldr	r0, [r5, #0x8]
	bl	Free
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	bl	SetLinkStandbyCallback
.L766:
	ldrb	r0, [r5, #0xc]
	add	r0, r0, #0x1
	strb	r0, [r5, #0xc]
	b	.L719
.L760:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L719	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
.L719:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe40:
	.size	 Task_SendMysteryGift,.Lfe40-Task_SendMysteryGift
	.align	2, 0
	.globl	CreateTask_LinkMysteryGiftWithFriend
	.type	 CreateTask_LinkMysteryGiftWithFriend,function
	.thumb_func
CreateTask_LinkMysteryGiftWithFriend:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L792
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L792+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L792+0x8
	add	r1, r1, r0
	str	r1, [r2]
	ldr	r0, .L792+0xc
	str	r1, [r0]
	mov	r2, #0x0
	strb	r2, [r1, #0x8]
	strb	r2, [r1, #0x9]
	sub	r4, r4, #0x15
	strb	r4, [r1, #0x12]
	ldr	r0, .L792+0x10
	strh	r2, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L793:
	.align	2, 0
.L792:
	.word	Task_CardOrNewsWithFriend
	.word	sWirelessLinkMain
	.word	gTasks+0x8
	.word	sGroup
	.word	gSpecialVar_Result
.Lfe41:
	.size	 CreateTask_LinkMysteryGiftWithFriend,.Lfe41-CreateTask_LinkMysteryGiftWithFriend
	.align	2, 0
	.type	 Task_CardOrNewsWithFriend,function
	.thumb_func
Task_CardOrNewsWithFriend:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r0, .L833
	ldr	r5, [r0]
	ldrb	r0, [r5, #0x8]
	cmp	r0, #0xc
	bls	.LCB5845
	b	.L795	@long jump
.LCB5845:
	lsl	r0, r0, #0x2
	ldr	r1, .L833+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L834:
	.align	2, 0
.L833:
	.word	sWirelessLinkMain
	.word	.L830
	.align	2, 0
	.align	2, 0
.L830:
	.word	.L796
	.word	.L797
	.word	.L798
	.word	.L799
	.word	.L810
	.word	.L811
	.word	.L823
	.word	.L826
	.word	.L823
	.word	.L824
	.word	.L823
	.word	.L827
	.word	.L828
.L796:
	ldrb	r0, [r5, #0x12]
	add	r0, r0, #0x15
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRfuGameData
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	InitializeRfuLinkManager_JoinGroup
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, #0x1
	strb	r0, [r5, #0x8]
	b	.L795
.L797:
	ldr	r0, .L835
	bl	AddTextPrinterToWindow1
	mov	r0, #0x2
	strb	r0, [r5, #0x8]
	b	.L795
.L836:
	.align	2, 0
.L835:
	.word	gText_UR_ChooseTrainer
.L798:
	ldr	r0, [r5, #0x4]
	mov	r1, #0x4
	bl	ClearIncomingPlayerList
	ldr	r0, [r5]
	mov	r1, #0x10
	bl	ClearRfuPlayerList
	ldr	r0, [r5, #0x4]
	ldrb	r1, [r5, #0x12]
	add	r1, r1, #0x7
	bl	CreateTask_ListenForCompatiblePartners
	mov	r4, #0x0
	strb	r0, [r5, #0x11]
	ldr	r0, .L837
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	bl	GetMysteryGiftBaseBlock
	lsl	r0, r0, #0x10
	ldr	r2, .L837+0x4
	ldr	r1, [sp, #0x4]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp, #0x4]
	mov	r0, sp
	bl	AddWindow
	strb	r0, [r5, #0xb]
	ldr	r0, .L837+0x8
	bl	AddWindow
	strb	r0, [r5, #0xd]
	ldrb	r0, [r5, #0xb]
	bl	MG_DrawTextBorder
	ldr	r0, .L837+0xc
	add	r2, r0, #0
	ldr	r1, .L837+0x10
	ldmia	r1!, {r3, r6, r7}
	stmia	r2!, {r3, r6, r7}
	ldmia	r1!, {r3, r6, r7}
	stmia	r2!, {r3, r6, r7}
	ldrb	r1, [r5, #0xb]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r5, #0xe]
	ldrb	r0, [r5, #0xd]
	bl	MG_DrawTextBorder
	ldrb	r0, [r5, #0xd]
	mov	r1, #0x11
	bl	FillWindowPixelBuffer
	ldrb	r0, [r5, #0xd]
	bl	PutWindowTilemap
	ldrb	r0, [r5, #0xd]
	bl	PrintPlayerNameAndIdOnWindow
	ldrb	r0, [r5, #0xd]
	mov	r1, #0x2
	bl	CopyWindowToVram
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	strb	r4, [r5, #0xf]
	mov	r0, #0x3
	strb	r0, [r5, #0x8]
	b	.L795
.L838:
	.align	2, 0
.L837:
	.word	sWindowTemplate_GroupList
	.word	0xffff
	.word	sWindowTemplate_PlayerNameAndId
	.word	gMultiuseListMenuTemplate
	.word	sListMenuTemplate_UnionRoomGroups
.L799:
	bl	GetNewLeaderCandidate
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0
	beq	.L803	@cond_branch
	cmp	r2, #0x1
	bne	.L802	@cond_branch
	mov	r0, #0x2
	bl	PlaySE
.L802:
	ldrb	r0, [r5, #0xe]
	bl	RedrawListMenu
	b	.L795
.L803:
	ldrb	r0, [r5, #0xe]
	bl	ListMenu_ProcessInput
	add	r2, r0, #0
	ldr	r0, .L839
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L804	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r2, r0
	beq	.L804	@cond_branch
	ldr	r0, [r5]
	lsl	r1, r2, #0x5
	add	r0, r0, r1
	ldrb	r1, [r0, #0xa]
	ldrb	r0, [r0, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L805	@cond_branch
	lsr	r0, r1, #0x7
	cmp	r0, #0
	bne	.L805	@cond_branch
	strb	r2, [r5, #0xf]
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	ldrb	r0, [r5, #0xe]
	bl	RedrawListMenu
	ldr	r4, .L839+0x4
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	ldr	r1, [r5]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, [r5]
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldrb	r1, [r5, #0xf]
	lsl	r1, r1, #0x5
	ldr	r0, [r5]
	add	r0, r0, r1
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	CreateTask_RfuReconnectWithParent
	mov	r0, #0x67
	bl	PlaySE
	mov	r0, #0x4
	strb	r0, [r5, #0x8]
	b	.L795
.L840:
	.align	2, 0
.L839:
	.word	gMain
	.word	gStringVar1
.L805:
	mov	r0, #0x7
	bl	PlaySE
	b	.L795
.L804:
	ldr	r0, .L841
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB6137
	b	.L795	@long jump
.LCB6137:
	mov	r0, #0x6
	strb	r0, [r5, #0x8]
	b	.L795
.L842:
	.align	2, 0
.L841:
	.word	gMain
.L810:
	ldr	r0, .L843
	bl	AddTextPrinterToWindow1
	ldr	r4, .L843+0x4
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	ldr	r1, [r5]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, [r5]
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	mov	r0, #0x5
	strb	r0, [r5, #0x8]
	b	.L795
.L844:
	.align	2, 0
.L843:
	.word	gText_UR_AwaitingPlayersResponse
	.word	gStringVar1
.L811:
	ldr	r0, .L845
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L812	@cond_branch
	ldr	r2, .L845+0x4
	ldr	r1, [r5]
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	strb	r0, [r2]
	mov	r0, #0xa
	strb	r0, [r5, #0x8]
.L812:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	beq	.L817	@cond_branch
	cmp	r0, #0x5
	bgt	.L820	@cond_branch
	cmp	r0, #0x2
	bgt	.L795	@cond_branch
	cmp	r0, #0x1
	blt	.L795	@cond_branch
	b	.L816
.L846:
	.align	2, 0
.L845:
	.word	gReceivedRemoteLinkPlayers
	.word	sPlayerCurrActivity
.L820:
	cmp	r0, #0x6
	bne	.L795	@cond_branch
.L816:
	mov	r0, #0x8
	strb	r0, [r5, #0x8]
	b	.L795
.L817:
	ldr	r0, .L847
	bl	AddTextPrinterToWindow1
	mov	r0, #0x0
	mov	r1, #0x0
	bl	RfuSetStatus
	b	.L795
.L848:
	.align	2, 0
.L847:
	.word	gText_UR_PlayerSentBackOK
.L823:
	ldrb	r0, [r5, #0xe]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r5, #0xd]
	bl	RemoveWindow
	ldrb	r0, [r5, #0xb]
	bl	RemoveWindow
	ldrb	r0, [r5, #0x11]
	bl	DestroyTask
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	ldrb	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x8]
	b	.L795
.L824:
	add	r5, r5, #0x9
	ldr	r4, .L849
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x16
	add	r0, r0, r4
	ldr	r1, [r0]
	add	r0, r5, #0
	bl	PrintMysteryGiftMenuMessage
	cmp	r0, #0
	beq	.L795	@cond_branch
	bl	DestroyWirelessStatusIndicatorSprite
	b	.L832
.L850:
	.align	2, 0
.L849:
	.word	gTexts_UR_LinkDropped
.L826:
	bl	DestroyWirelessStatusIndicatorSprite
	ldr	r0, .L851
	bl	AddTextPrinterToWindow1
.L832:
	add	r0, r6, #0
	bl	DestroyTask
	bl	LinkRfu_Shutdown
	ldr	r1, .L851+0x4
	mov	r0, #0x5
	strh	r0, [r1]
	b	.L795
.L852:
	.align	2, 0
.L851:
	.word	gText_UR_PleaseStartOver
	.word	gSpecialVar_Result
.L827:
	ldrb	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x8]
	bl	SetLinkStandbyCallback
	b	.L795
.L828:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L795	@cond_branch
	add	r0, r6, #0
	bl	DestroyTask
.L795:
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 Task_CardOrNewsWithFriend,.Lfe42-Task_CardOrNewsWithFriend
	.align	2, 0
	.globl	CreateTask_LinkMysteryGiftOverWireless
	.type	 CreateTask_LinkMysteryGiftOverWireless,function
	.thumb_func
CreateTask_LinkMysteryGiftOverWireless:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L854
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L854+0x4
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L854+0x8
	add	r1, r1, r0
	str	r1, [r2]
	ldr	r0, .L854+0xc
	str	r1, [r0]
	mov	r2, #0x0
	strb	r2, [r1, #0x8]
	strb	r2, [r1, #0x9]
	sub	r4, r4, #0x15
	strb	r4, [r1, #0x12]
	ldr	r0, .L854+0x10
	strh	r2, [r0]
	pop	{r4}
	pop	{r0}
	bx	r0
.L855:
	.align	2, 0
.L854:
	.word	Task_CardOrNewsOverWireless
	.word	sWirelessLinkMain
	.word	gTasks+0x8
	.word	sGroup
	.word	gSpecialVar_Result
.Lfe43:
	.size	 CreateTask_LinkMysteryGiftOverWireless,.Lfe43-CreateTask_LinkMysteryGiftOverWireless
	.align	2, 0
	.type	 Task_CardOrNewsOverWireless,function
	.thumb_func
Task_CardOrNewsOverWireless:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x8
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L904
	ldr	r5, [r0]
	ldrb	r0, [r5, #0x8]
	cmp	r0, #0xe
	bls	.LCB6414
	b	.L857	@long jump
.LCB6414:
	lsl	r0, r0, #0x2
	ldr	r1, .L904+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L905:
	.align	2, 0
.L904:
	.word	sWirelessLinkMain
	.word	.L901
	.align	2, 0
	.align	2, 0
.L901:
	.word	.L858
	.word	.L859
	.word	.L860
	.word	.L862
	.word	.L876
	.word	.L877
	.word	.L890
	.word	.L894
	.word	.L890
	.word	.L892
	.word	.L890
	.word	.L896
	.word	.L890
	.word	.L898
	.word	.L899
.L858:
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRfuGameData
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	InitializeRfuLinkManager_JoinGroup
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r5]
	mov	r0, #0x1
	strb	r0, [r5, #0x8]
	b	.L857
.L859:
	ldr	r0, .L906
	bl	AddTextPrinterToWindow1
	mov	r0, #0x2
	strb	r0, [r5, #0x8]
	b	.L857
.L907:
	.align	2, 0
.L906:
	.word	gText_UR_SearchingForWirelessSystemWait
.L860:
	ldr	r0, [r5, #0x4]
	mov	r1, #0x4
	bl	ClearIncomingPlayerList
	ldr	r0, [r5]
	mov	r1, #0x10
	bl	ClearRfuPlayerList
	ldr	r0, [r5, #0x4]
	ldrb	r1, [r5, #0x12]
	add	r1, r1, #0x7
	bl	CreateTask_ListenForWonderDistributor
	strb	r0, [r5, #0x11]
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0
	beq	.L861	@cond_branch
	ldr	r0, .L908
	ldr	r1, [r0, #0x4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	str	r0, [sp]
	str	r1, [sp, #0x4]
	bl	GetMysteryGiftBaseBlock
	lsl	r0, r0, #0x10
	ldr	r2, .L908+0x4
	ldr	r1, [sp, #0x4]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp, #0x4]
	mov	r0, sp
	bl	AddWindow
	strb	r0, [r5, #0xb]
	ldrb	r0, [r5, #0xb]
	bl	MG_DrawTextBorder
	ldr	r0, .L908+0x8
	add	r2, r0, #0
	ldr	r1, .L908+0xc
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldrb	r1, [r5, #0xb]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	strb	r0, [r5, #0xe]
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
.L861:
	mov	r0, #0x0
	strb	r0, [r5, #0xf]
	mov	r0, #0x3
	strb	r0, [r5, #0x8]
	b	.L857
.L909:
	.align	2, 0
.L908:
	.word	sWindowTemplate_GroupList
	.word	0xffff
	.word	gMultiuseListMenuTemplate
	.word	sListMenuTemplate_UnionRoomGroups
.L862:
	bl	GetNewLeaderCandidate
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L867	@cond_branch
	cmp	r0, #0x1
	bne	.L865	@cond_branch
	mov	r0, #0x2
	bl	PlaySE
.L865:
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0
	bne	.LCB6567
	b	.L857	@long jump
.LCB6567:
	ldrb	r0, [r5, #0xe]
	bl	RedrawListMenu
	b	.L857
.L867:
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0
	beq	.L868	@cond_branch
	ldrb	r0, [r5, #0xe]
	bl	ListMenu_ProcessInput
.L868:
	ldrb	r0, [r5, #0x14]
	cmp	r0, #0x78
	bls	.L869	@cond_branch
	ldr	r2, [r5]
	ldrb	r1, [r2, #0x1a]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L873	@cond_branch
	ldrb	r1, [r2, #0xa]
	mov	r0, #0x80
	and	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0
	bne	.L873	@cond_branch
	ldrb	r1, [r5, #0x12]
	add	r1, r1, #0x7
	add	r0, r2, #0
	bl	HasWonderCardOrNewsByLinkGroup
	cmp	r0, #0
	beq	.L871	@cond_branch
	strb	r4, [r5, #0xf]
	strb	r4, [r5, #0x14]
	bl	LoadWirelessStatusIndicatorSpriteGfx
	mov	r0, #0x0
	mov	r1, #0x0
	bl	CreateWirelessStatusIndicatorSprite
	ldr	r0, [r5]
	add	r4, r0, #0
	add	r4, r4, #0x10
	add	r0, r0, #0x2
	bl	ReadAsU16
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	add	r0, r4, #0
	bl	CreateTask_RfuReconnectWithParent
	mov	r0, #0x67
	bl	PlaySE
	mov	r0, #0x4
	strb	r0, [r5, #0x8]
	b	.L873
.L871:
	mov	r0, #0x16
	bl	PlaySE
	mov	r0, #0xa
	strb	r0, [r5, #0x8]
	b	.L873
.L869:
	ldr	r0, .L910
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L873	@cond_branch
	mov	r1, #0x0
	mov	r0, #0x6
	strb	r0, [r5, #0x8]
	strb	r1, [r5, #0x14]
.L873:
	ldrb	r0, [r5, #0x14]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x14]
	b	.L857
.L911:
	.align	2, 0
.L910:
	.word	gMain
.L876:
	ldr	r0, .L912
	bl	AddTextPrinterToWindow1
	ldr	r4, .L912+0x4
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	ldr	r1, [r5]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, [r5]
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	mov	r0, #0x5
	strb	r0, [r5, #0x8]
	b	.L857
.L913:
	.align	2, 0
.L912:
	.word	gText_UR_AwaitingResponseFromWirelessSystem
	.word	gStringVar1
.L877:
	ldr	r0, .L914
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L878	@cond_branch
	ldr	r2, .L914+0x4
	ldr	r1, [r5]
	ldrb	r0, [r5, #0xf]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	strb	r0, [r2]
	mov	r0, #0xc
	strb	r0, [r5, #0x8]
.L878:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x5
	beq	.L883	@cond_branch
	cmp	r0, #0x5
	bgt	.L886	@cond_branch
	cmp	r0, #0x2
	bgt	.L857	@cond_branch
	cmp	r0, #0x1
	blt	.L857	@cond_branch
	b	.L882
.L915:
	.align	2, 0
.L914:
	.word	gReceivedRemoteLinkPlayers
	.word	sPlayerCurrActivity
.L886:
	cmp	r0, #0x6
	bne	.L857	@cond_branch
.L882:
	mov	r0, #0x8
	strb	r0, [r5, #0x8]
	b	.L857
.L883:
	ldr	r0, .L916
	bl	AddTextPrinterToWindow1
	mov	r0, #0x0
	mov	r1, #0x0
	bl	RfuSetStatus
	b	.L857
.L917:
	.align	2, 0
.L916:
	.word	gText_UR_WirelessLinkEstablished
.L890:
	ldrb	r0, [r5, #0x13]
	cmp	r0, #0
	beq	.L891	@cond_branch
	ldrb	r0, [r5, #0xe]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldrb	r0, [r5, #0xb]
	bl	RemoveWindow
.L891:
	ldrb	r0, [r5, #0x11]
	bl	DestroyTask
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	ldrb	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x8]
	b	.L857
.L892:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L918
	b	.L903
.L919:
	.align	2, 0
.L918:
	.word	gText_UR_WirelessLinkDropped
.L894:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r1, .L920
	b	.L903
.L921:
	.align	2, 0
.L920:
	.word	gText_UR_WirelessSearchCanceled
.L896:
	add	r0, r5, #0
	add	r0, r0, #0x9
	ldr	r2, .L922
	ldrb	r1, [r5, #0x12]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
.L903:
	bl	PrintMysteryGiftMenuMessage
	cmp	r0, #0
	beq	.L857	@cond_branch
	bl	DestroyWirelessStatusIndicatorSprite
	add	r0, r4, #0
	bl	DestroyTask
	bl	LinkRfu_Shutdown
	ldr	r1, .L922+0x4
	mov	r0, #0x5
	strh	r0, [r1]
	b	.L857
.L923:
	.align	2, 0
.L922:
	.word	gTexts_UR_NoWonderShared
	.word	gSpecialVar_Result
.L898:
	ldrb	r0, [r5, #0x8]
	add	r0, r0, #0x1
	strb	r0, [r5, #0x8]
	bl	SetLinkStandbyCallback
	b	.L857
.L899:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L857	@cond_branch
	add	r0, r4, #0
	bl	DestroyTask
.L857:
	add	sp, sp, #0x8
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 Task_CardOrNewsOverWireless,.Lfe44-Task_CardOrNewsOverWireless
	.align	2, 0
	.globl	RunUnionRoom
	.type	 RunUnionRoom,function
	.thumb_func
RunUnionRoom:
	push	{r4, lr}
	bl	ResetHostRfuGameData
	ldr	r0, .L925
	mov	r1, #0xa
	bl	CreateTask
	ldr	r4, .L925+0x4
	mov	r0, #0x96
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r1, .L925+0x8
	str	r0, [r1]
	mov	r1, #0x0
	strb	r1, [r0, #0x14]
	strb	r1, [r0, #0x16]
	strh	r1, [r0, #0x10]
	strh	r1, [r0, #0x12]
	ldr	r0, .L925+0xc
	strh	r1, [r0]
	mov	r0, #0xd0
	mov	r1, #0x1
	bl	ListMenuLoadStdPalAt
	pop	{r4}
	pop	{r0}
	bx	r0
.L926:
	.align	2, 0
.L925:
	.word	Task_RunUnionRoom
	.word	sWirelessLinkMain
	.word	sURoom
	.word	gSpecialVar_Result
.Lfe45:
	.size	 RunUnionRoom,.Lfe45-RunUnionRoom
	.align	2, 0
	.type	 ReadAsU16,function
	.thumb_func
ReadAsU16:
	ldrb	r1, [r0, #0x1]
	lsl	r1, r1, #0x8
	ldrb	r0, [r0]
	orr	r0, r0, r1
	bx	lr
.Lfe46:
	.size	 ReadAsU16,.Lfe46-ReadAsU16
	.align	2, 0
	.type	 ScheduleFieldMessageWithFollowupState,function
	.thumb_func
ScheduleFieldMessageWithFollowupState:
	push	{lr}
	add	r3, r1, #0
	ldr	r1, .L930
	ldr	r2, [r1]
	mov	r1, #0x8
	strb	r1, [r2, #0x14]
	strb	r0, [r2, #0x15]
	ldr	r0, .L930+0x4
	cmp	r3, r0
	beq	.L929	@cond_branch
	add	r1, r3, #0
	bl	StringExpandPlaceholders
.L929:
	pop	{r0}
	bx	r0
.L931:
	.align	2, 0
.L930:
	.word	sWirelessLinkMain
	.word	gStringVar4
.Lfe47:
	.size	 ScheduleFieldMessageWithFollowupState,.Lfe47-ScheduleFieldMessageWithFollowupState
	.align	2, 0
	.type	 ScheduleFieldMessageAndExit,function
	.thumb_func
ScheduleFieldMessageAndExit:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L934
	ldr	r1, [r0]
	mov	r0, #0x1a
	strb	r0, [r1, #0x14]
	ldr	r0, .L934+0x4
	cmp	r2, r0
	beq	.L933	@cond_branch
	add	r1, r2, #0
	bl	StringExpandPlaceholders
.L933:
	pop	{r0}
	bx	r0
.L935:
	.align	2, 0
.L934:
	.word	sWirelessLinkMain
	.word	gStringVar4
.Lfe48:
	.size	 ScheduleFieldMessageAndExit,.Lfe48-ScheduleFieldMessageAndExit
	.align	2, 0
	.type	 CopyPlayerListToBuffer,function
	.thumb_func
CopyPlayerListToBuffer:
	push	{lr}
	ldr	r3, .L937
	ldr	r1, [r0]
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	add	r0, r3, #0
	bl	memcpy
	pop	{r0}
	bx	r0
.L938:
	.align	2, 0
.L937:
	.word	gDecompressionBuffer+0x3f00
.Lfe49:
	.size	 CopyPlayerListToBuffer,.Lfe49-CopyPlayerListToBuffer
	.align	2, 0
	.type	 CopyPlayerListFromBuffer,function
	.thumb_func
CopyPlayerListFromBuffer:
	push	{lr}
	ldr	r0, [r0]
	ldr	r1, .L940
	mov	r2, #0x80
	lsl	r2, r2, #0x1
	bl	memcpy
	pop	{r0}
	bx	r0
.L941:
	.align	2, 0
.L940:
	.word	gDecompressionBuffer+0x3f00
.Lfe50:
	.size	 CopyPlayerListFromBuffer,.Lfe50-CopyPlayerListFromBuffer
	.align	2, 0
	.type	 Task_RunUnionRoom,function
	.thumb_func
Task_RunUnionRoom:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r5, #0x0
	ldr	r0, .L1180
	ldr	r6, [r0]
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	lsl	r0, r0, #0x3
	ldr	r1, .L1180+0x4
	add	r7, r0, r1
	ldrb	r0, [r6, #0x14]
	cmp	r0, #0x38
	bls	.LCB7104
	bl	.L943	@far jump
.LCB7104:
	lsl	r0, r0, #0x2
	ldr	r1, .L1180+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1181:
	.align	2, 0
.L1180:
	.word	sWirelessLinkMain
	.word	gTasks+0x8
	.word	.L1174
	.align	2, 0
	.align	2, 0
.L1174:
	.word	.L944
	.word	.L945
	.word	.L947
	.word	.L948
	.word	.L963
	.word	.L1031
	.word	.L1009
	.word	.L1031
	.word	.L1172
	.word	.L1076
	.word	.L1092
	.word	.L1064
	.word	.L1065
	.word	.L1096
	.word	.L1097
	.word	.L1098
	.word	.L1100
	.word	.L1101
	.word	.L1102
	.word	.L1038
	.word	.L1046
	.word	.L1048
	.word	.L1059
	.word	.L982
	.word	.L984
	.word	.L992
	.word	.L1170
	.word	.L1019
	.word	.L1018
	.word	.L1023
	.word	.L1006
	.word	.L1022
	.word	.L1021
	.word	.L1071
	.word	.L1073
	.word	.L1075
	.word	.L1093
	.word	.L1095
	.word	.L1002
	.word	.L1069
	.word	.L1032
	.word	.L1034
	.word	.L1104
	.word	.L1109
	.word	.L1132
	.word	.L1142
	.word	.L1144
	.word	.L1111
	.word	.L1145
	.word	.L1159
	.word	.L1167
	.word	.L1169
	.word	.L1124
	.word	.L1121
	.word	.L1122
	.word	.L1131
	.word	.L1140
.L944:
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r6, #0x4]
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r6, #0xc]
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	AllocZeroed
	str	r0, [r6]
	mov	r0, #0x20
	bl	AllocZeroed
	str	r0, [r6, #0x8]
	ldr	r0, [r6]
	mov	r1, #0x8
	bl	ClearRfuPlayerList
	ldr	r1, .L1182
	mov	r0, #0x40
	strb	r0, [r1]
	ldr	r0, [r6, #0xc]
	ldr	r1, [r6, #0x4]
	mov	r2, #0x9
	bl	CreateTask_SearchForChildOrParent
	add	r1, r6, #0
	add	r1, r1, #0x20
	strb	r0, [r1]
	add	r0, r6, #0
	add	r0, r0, #0x8c
	bl	InitUnionRoomPlayerObjects
	bl	MakeGroupAssemblyAreasPassable
	mov	r0, #0x1
	bl	.L1176	@ far jump
.L1183:
	.align	2, 0
.L1182:
	.word	sPlayerCurrActivity
.L945:
	add	r0, r6, #0
	add	r0, r0, #0x21
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	CreateUnionRoomPlayerSprites
	ldrh	r0, [r7]
	add	r0, r0, #0x1
	strh	r0, [r7]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x8
	beq	.LCB7188
	bl	.L943	@far jump
.LCB7188:
	mov	r0, #0x2
	bl	.L1176	@ far jump
.L947:
	mov	r0, #0x40
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRfuGameData
	ldr	r2, .L1184
	ldrh	r0, [r2, #0x2]
	ldrh	r1, [r2, #0xa]
	ldrh	r2, [r2, #0xc]
	bl	SetTradeBoardRegisteredMonInfo
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	InitializeRfuLinkManager_EnterUnionRoom
	ldr	r0, [r6, #0x8]
	mov	r1, #0x1
	bl	ClearRfuPlayerList
	ldr	r0, [r6, #0x4]
	mov	r1, #0x4
	bl	ClearIncomingPlayerList
	ldr	r0, [r6, #0xc]
	mov	r1, #0x4
	bl	ClearIncomingPlayerList
	ldr	r1, .L1184+0x4
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r0, #0x3
	bl	.L1176	@ far jump
.L1185:
	.align	2, 0
.L1184:
	.word	sUnionRoomTrade
	.word	gSpecialVar_Result
.L948:
	bl	GetPartyMenuType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x8
	beq	.L950	@cond_branch
	bl	GetPartyMenuType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x9
	bne	.L949	@cond_branch
.L950:
	ldr	r4, .L1186
	ldrh	r0, [r4]
	cmp	r0, #0
	beq	.L949	@cond_branch
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldrh	r0, [r4]
	cmp	r0, #0x1
	beq	.L952	@cond_branch
	cmp	r0, #0x2
	beq	.L957	@cond_branch
	b	.L951
.L1187:
	.align	2, 0
.L1186:
	.word	sUnionRoomTrade
.L952:
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameData_SetActivity
	cmp	r5, #0x5
	bls	.L953	@cond_branch
	add	r0, r4, #0
	bl	ResetUnionRoomTrade
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetTradeBoardRegisteredMonInfo
	ldr	r0, .L1188
	bl	ScheduleFieldMessageAndExit
	b	.L951
.L1189:
	.align	2, 0
.L1188:
	.word	gText_UR_RegistrationCanceled
.L953:
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	RegisterTradeMonAndGetIsEgg
	cmp	r0, #0
	bne	.L955	@cond_branch
	ldr	r1, .L1190
	mov	r0, #0x34
	bl	ScheduleFieldMessageWithFollowupState
	b	.L951
.L1191:
	.align	2, 0
.L1190:
	.word	gText_UR_ChooseRequestedMonType
.L955:
	mov	r0, #0x37
	b	.L1177
.L957:
	add	r0, r6, #0
	bl	CopyPlayerListFromBuffer
	ldrb	r0, [r4, #0x8]
	strh	r0, [r7, #0x2]
	cmp	r5, #0x5
	bls	.L958	@cond_branch
	ldr	r0, .L1192
	bl	ScheduleFieldMessageAndExit
	b	.L951
.L1193:
	.align	2, 0
.L1192:
	.word	gText_UR_TradeCanceled
.L958:
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameData_SetActivity
	ldr	r1, .L1194
	mov	r0, #0x44
	strb	r0, [r1]
	bl	GetCursorSelectionMonId
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	bl	RegisterTradeMon
	mov	r0, #0x33
.L1177:
	strb	r0, [r6, #0x14]
.L951:
	ldr	r1, .L1194+0x4
	mov	r0, #0x0
	strh	r0, [r1]
	bl	.L943	@ far jump
.L1195:
	.align	2, 0
.L1194:
	.word	sPlayerCurrActivity
	.word	sUnionRoomTrade
.L949:
	mov	r0, #0x4
	bl	.L1176	@ far jump
.L963:
	ldr	r4, .L1196
	ldrh	r0, [r4]
	cmp	r0, #0
	beq	.L964	@cond_branch
	cmp	r0, #0x9
	bne	.L965	@cond_branch
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameData_SetActivity
	mov	r0, #0x2
	bl	PlaySE
	ldr	r0, .L1196+0x4
	ldr	r1, .L1196+0x8
	ldr	r1, [r1]
	bl	StringCopy
	mov	r1, #0x0
	mov	r0, #0x2a
	b	.L1178
.L1197:
	.align	2, 0
.L1196:
	.word	gSpecialVar_Result
	.word	gStringVar1
	.word	gSaveBlock2Ptr
.L965:
	cmp	r0, #0xb
	bne	.L967	@cond_branch
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameData_SetActivity
	mov	r1, #0x0
	mov	r0, #0x17
	b	.L1178
.L967:
	mov	r0, #0x0
	strh	r0, [r7]
	ldrh	r0, [r4]
	sub	r0, r0, #0x1
	strh	r0, [r7, #0x2]
	mov	r1, #0x0
	mov	r0, #0x18
.L1178:
	strb	r0, [r6, #0x14]
	strh	r1, [r4]
	bl	.L943	@ far jump
.L964:
	bl	ArePlayerFieldControlsLocked
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB7451
	bl	.L943	@far jump
.LCB7451:
	ldr	r0, .L1198
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L971	@cond_branch
	ldr	r0, [r6]
	add	r2, r7, #0x2
	add	r3, r6, #0
	add	r3, r3, #0x21
	add	r1, r7, #0
	bl	TryInteractWithUnionRoomMember
	cmp	r0, #0
	beq	.L972	@cond_branch
	mov	r0, #0x5
	bl	PlaySE
	bl	StartScriptInteraction
	mov	r0, #0x18
	bl	.L1176	@ far jump
.L1199:
	.align	2, 0
.L1198:
	.word	gMain
.L972:
	bl	IsPlayerFacingTradingBoard
	cmp	r0, #0
	beq	.L971	@cond_branch
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameData_SetActivity
	mov	r0, #0x2
	bl	PlaySE
	bl	StartScriptInteraction
	ldr	r0, .L1200
	ldr	r1, .L1200+0x4
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0x2d
	bl	.L1176	@ far jump
.L1201:
	.align	2, 0
.L1200:
	.word	gStringVar1
	.word	gSaveBlock2Ptr
.L971:
	bl	HandlePlayerListUpdate
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	beq	.L977	@cond_branch
	cmp	r0, #0x2
	bgt	.L981	@cond_branch
	cmp	r0, #0x1
	beq	.L976	@cond_branch
	b	.L975
.L981:
	cmp	r0, #0x4
	beq	.L978	@cond_branch
	b	.L975
.L976:
	mov	r0, #0x37
	bl	PlaySE
.L977:
	add	r0, r6, #0
	bl	ScheduleUnionRoomPlayerRefresh
	b	.L975
.L978:
	mov	r0, #0xb
	strb	r0, [r6, #0x14]
	bl	StartScriptInteraction
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetTradeBoardRegisteredMonInfo
	add	r0, r6, #0
	bl	GetActivePartnersInfo
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r0, #0x53
	mov	r2, #0x0
	bl	UpdateGameData_SetActivity
.L975:
	add	r0, r6, #0
	bl	HandleUnionRoomPlayerRefresh
	bl	.L943	@ far jump
.L982:
	ldr	r0, .L1202
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB7580
	bl	.L943	@far jump
.LCB7580:
	mov	r0, #0x40
	mov	r1, #0x0
	mov	r2, #0x0
	bl	UpdateGameData_SetActivity
	mov	r0, #0x4
	bl	.L1176	@ far jump
.L1203:
	.align	2, 0
.L1202:
	.word	Task_StartMenuHandleInput
.L984:
	bl	UR_RunTextPrinters
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	add	r4, r0, #0
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameData_SetActivity
	ldr	r0, [r6]
	ldrb	r1, [r7]
	ldrb	r2, [r7, #0x2]
	add	r3, r4, #0
	bl	UnionRoomGetPlayerInteractionResponse
	cmp	r0, #0x1
	beq	.L987	@cond_branch
	cmp	r0, #0x1
	bgt	.L991	@cond_branch
	cmp	r0, #0
	beq	.L986	@cond_branch
	bl	.L943	@ far jump
.L991:
	cmp	r0, #0x2
	beq	.L988	@cond_branch
	bl	.L943	@ far jump
.L986:
	mov	r0, #0x1a
	bl	.L1176	@ far jump
.L987:
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	lsl	r0, r0, #0x5
	ldr	r1, [r6]
	add	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, #0x10
	ldr	r2, .L1204
	ldrb	r2, [r2]
	bl	TryConnectToUnionRoomParent
	strh	r5, [r6, #0x12]
	mov	r0, #0x19
	bl	.L1176	@ far jump
.L1205:
	.align	2, 0
.L1204:
	.word	sPlayerCurrActivity
.L988:
	ldr	r1, .L1206
	mov	r0, #0x13
	bl	ScheduleFieldMessageWithFollowupState
	bl	.L943	@ far jump
.L1207:
	.align	2, 0
.L1206:
	.word	gStringVar4
.L992:
	bl	UR_RunTextPrinters
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x1
	blt	.L993	@cond_branch
	cmp	r4, #0x2
	ble	.L996	@cond_branch
	cmp	r4, #0x4
	bne	.L993	@cond_branch
	mov	r0, #0x1
	bl	HandleCancelActivity
	strb	r4, [r6, #0x14]
	b	.L993
.L996:
	bl	IsUnionRoomListenTaskActive
	cmp	r0, #0x1
	bne	.L997	@cond_branch
	ldr	r0, .L1208
	bl	ScheduleFieldMessageAndExit
	b	.L998
.L1209:
	.align	2, 0
.L1208:
	.word	gText_UR_TrainerAppearsBusy
.L997:
	ldr	r1, .L1210
	mov	r0, #0x1e
	bl	ScheduleFieldMessageWithFollowupState
.L998:
	ldr	r1, .L1210+0x4
	mov	r0, #0x40
	strb	r0, [r1]
.L993:
	ldr	r0, .L1210+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB7730
	bl	.L943	@far jump
.LCB7730:
	ldr	r0, .L1210+0xc
	mov	r1, #0x1
	bl	CreateTrainerCardInBuffer
	ldr	r0, .L1210+0x10
	mov	r1, #0x5
	bl	CreateTask
	mov	r0, #0x26
	bl	.L1176	@ far jump
.L1211:
	.align	2, 0
.L1210:
	.word	gText_UR_TrainerAppearsBusy
	.word	sPlayerCurrActivity
	.word	gReceivedRemoteLinkPlayers
	.word	gBlockSendBuffer
	.word	Task_ExchangeCards
.L1002:
	ldr	r0, .L1212
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB7761
	bl	.L943	@far jump
.LCB7761:
	ldr	r0, .L1212+0x4
	ldrb	r0, [r0]
	cmp	r0, #0x44
	bne	.L1004	@cond_branch
	ldr	r1, .L1212+0x8
	mov	r0, #0x1f
	bl	ScheduleFieldMessageWithFollowupState
	bl	.L943	@ far jump
.L1213:
	.align	2, 0
.L1212:
	.word	Task_ExchangeCards
	.word	sPlayerCurrActivity
	.word	gText_UR_AwaitingPlayersResponseAboutTrade
.L1004:
	mov	r0, #0x5
	bl	.L1176	@ far jump
.L1006:
	ldr	r0, .L1214
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.LCB7793
	bl	.L943	@far jump
.LCB7793:
	mov	r0, #0x0
	bl	HandleCancelActivity
	mov	r2, #0x0
	ldrsh	r0, [r7, r2]
	mov	r3, #0x2
	ldrsh	r1, [r7, r3]
	ldr	r2, [r6]
	bl	UpdateUnionRoomMemberFacing
	mov	r0, #0x2
	bl	.L1176	@ far jump
.L1215:
	.align	2, 0
.L1214:
	.word	gReceivedRemoteLinkPlayers
.L1009:
	add	r0, r6, #0
	add	r0, r0, #0x16
	add	r1, r6, #0
	add	r1, r1, #0x1b
	add	r2, r6, #0
	add	r2, r2, #0x1c
	ldr	r3, .L1216
	ldr	r4, .L1216+0x4
	str	r4, [sp]
	bl	ListMenuHandler_AllItemsAvailable
	add	r5, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	bne	.LCB7836
	bl	.L943	@far jump
.LCB7836:
	ldr	r0, .L1216+0x8
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1011	@cond_branch
	mov	r0, #0x1c
	bl	.L1176	@ far jump
.L1217:
	.align	2, 0
.L1216:
	.word	sWindowTemplate_InviteToActivity
	.word	sListMenuTemplate_InviteToActivity
	.word	gReceivedRemoteLinkPlayers
.L1011:
	add	r1, r6, #0
	add	r1, r1, #0x84
	mov	r0, #0x0
	strh	r0, [r1]
	mov	r2, #0x2
	ldrsh	r0, [r7, r2]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	mov	r0, #0x2
	neg	r0, r0
	cmp	r5, r0
	beq	.L1014	@cond_branch
	cmp	r5, #0x40
	bne	.L1013	@cond_branch
.L1014:
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x40
	strh	r1, [r0]
	bl	Rfu_SendPacket
	ldr	r0, .L1218
	ldr	r2, .L1218+0x4
	ldr	r1, .L1218+0x8
	ldrb	r1, [r1, #0x13]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	mov	r0, #0x20
	bl	.L1176	@ far jump
.L1219:
	.align	2, 0
.L1218:
	.word	gStringVar4
	.word	gTexts_UR_IfYouWantToDoSomething
	.word	gLinkPlayers
.L1013:
	ldr	r0, .L1220
	strb	r5, [r0]
	ldr	r1, .L1220+0x4
	lsr	r0, r5, #0x8
	strb	r0, [r1]
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x41
	bne	.L1016	@cond_branch
	bl	HasAtLeastTwoMonsOfLevel30OrLower
	cmp	r0, #0
	bne	.L1016	@cond_branch
	ldr	r1, .L1220+0x8
	mov	r0, #0x5
	bl	ScheduleFieldMessageWithFollowupState
	bl	.L943	@ far jump
.L1221:
	.align	2, 0
.L1220:
	.word	sPlayerCurrActivity
	.word	sPlayerActivityGroupSize
	.word	gText_UR_NeedTwoMonsOfLevel30OrLower1
.L1016:
	ldr	r0, .L1222
	ldrb	r0, [r0]
	mov	r1, #0x40
	orr	r1, r1, r0
	add	r0, r6, #0
	add	r0, r0, #0x4c
	strh	r1, [r0]
	bl	Rfu_SendPacket
	mov	r0, #0x1b
	bl	.L1176	@ far jump
.L1223:
	.align	2, 0
.L1222:
	.word	sPlayerCurrActivity
.L1018:
	ldr	r0, .L1224
	ldr	r1, .L1224+0x4
	bl	StringCopy
	mov	r0, #0x24
	bl	.L1176	@ far jump
.L1225:
	.align	2, 0
.L1224:
	.word	gStringVar4
	.word	gText_UR_TrainerBattleBusy
.L1019:
	add	r0, r6, #0
	bl	PollPartnerYesNoResponse
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	add	r4, r0, #0
	add	r0, r6, #0
	add	r0, r0, #0x4c
	ldrh	r1, [r0]
	mov	r0, #0x3f
	and	r0, r0, r1
	bl	GetResponseIdx_InviteToURoomActivity
	add	r5, r0, #0
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r3, .L1226
	lsl	r1, r5, #0x2
	lsl	r2, r4, #0x4
	add	r1, r1, r2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8006
	bl	.L943	@far jump
.LCB8006:
	mov	r0, #0x0
	strh	r0, [r7, #0x6]
	mov	r0, #0x1d
	bl	.L1176	@ far jump
.L1227:
	.align	2, 0
.L1226:
	.word	gTexts_UR_WaitOrShowCard
.L1021:
	bl	SetCloseLinkCallback
	mov	r0, #0x24
	bl	.L1176	@ far jump
.L1022:
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x44
	strh	r1, [r0]
	ldr	r2, .L1228
	ldrh	r1, [r2, #0xe]
	add	r3, r6, #0
	add	r3, r3, #0x4e
	strh	r1, [r3]
	ldrh	r2, [r2, #0x10]
	add	r1, r6, #0
	add	r1, r1, #0x50
	strh	r2, [r1]
	bl	Rfu_SendPacket
	mov	r0, #0x1d
	bl	.L1176	@ far jump
.L1229:
	.align	2, 0
.L1228:
	.word	sUnionRoomTrade
.L1023:
	ldr	r0, .L1230
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L1024	@cond_branch
	ldr	r0, .L1230+0x4
	ldr	r1, .L1230+0x8
	bl	StringCopy
	mov	r0, #0x1c
	bl	.L1176	@ far jump
.L1231:
	.align	2, 0
.L1230:
	.word	gReceivedRemoteLinkPlayers
	.word	gStringVar4
	.word	gText_UR_TrainerBattleBusy
.L1024:
	add	r0, r6, #0
	bl	PollPartnerYesNoResponse
	add	r0, r6, #0
	add	r0, r0, #0x84
	ldrh	r0, [r0]
	cmp	r0, #0x51
	bne	.L1026	@cond_branch
	ldr	r0, .L1232
	ldrb	r0, [r0]
	cmp	r0, #0x8
	bne	.L1027	@cond_branch
	ldr	r0, .L1232+0x4
	add	r1, r6, #0
	mov	r2, #0x0
	bl	ViewURoomPartnerTrainerCard
	mov	r0, #0x28
	bl	.L1176	@ far jump
.L1233:
	.align	2, 0
.L1232:
	.word	sPlayerCurrActivity
	.word	gStringVar4
.L1027:
	mov	r0, #0xd
	bl	.L1176	@ far jump
.L1026:
	cmp	r0, #0x52
	beq	.LCB8114
	bl	.L943	@far jump
.LCB8114:
	mov	r5, #0x0
	mov	r0, #0x20
	strb	r0, [r6, #0x14]
	ldr	r0, .L1234
	ldr	r4, .L1234+0x4
	ldrb	r2, [r4]
	mov	r1, #0x40
	orr	r1, r1, r2
	ldr	r2, .L1234+0x8
	ldrb	r2, [r2, #0x13]
	bl	GetURoomActivityRejectMsg
	strb	r5, [r4]
	bl	.L943	@ far jump
.L1235:
	.align	2, 0
.L1234:
	.word	gStringVar4
	.word	sPlayerCurrActivity
	.word	gLinkPlayers
.L1031:
	mov	r0, #0x2
	ldrsh	r1, [r7, r0]
	lsl	r1, r1, #0x5
	ldr	r0, [r6]
	add	r0, r0, r1
	bl	ConvPartnerUnameAndGetWhetherMetAlready
	add	r5, r0, #0
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	add	r4, r0, #0
	ldr	r2, .L1236
	lsl	r0, r4, #0x2
	lsl	r1, r5, #0x3
	add	r0, r0, r1
	add	r0, r0, r2
	ldr	r1, [r0]
	mov	r0, #0x6
	bl	ScheduleFieldMessageWithFollowupState
	bl	.L943	@ far jump
.L1237:
	.align	2, 0
.L1236:
	.word	gTexts_UR_HiDoSomething
.L1032:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1238
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8185
	bl	.L943	@far jump
.LCB8185:
	mov	r4, #0x0
	mov	r0, #0x29
	strb	r0, [r6, #0x14]
	bl	SetLinkStandbyCallback
	add	r0, r6, #0
	add	r0, r0, #0x84
	strh	r4, [r0]
	add	r0, r0, #0x2
	strh	r4, [r0]
	bl	.L943	@ far jump
.L1239:
	.align	2, 0
.L1238:
	.word	gStringVar4
.L1034:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8211
	bl	.L943	@far jump
.LCB8211:
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1036	@cond_branch
	ldr	r5, .L1240
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r4, .L1240+0x4
	add	r1, r1, r4
	add	r0, r5, #0
	bl	StringCopy
	ldrh	r0, [r4, #0x18]
	add	r4, r4, #0x1c
	add	r1, r4, #0
	bl	PlayerHasMetTrainerBefore
	add	r5, r0, #0
	ldr	r0, .L1240+0x8
	ldr	r2, .L1240+0xc
	lsl	r1, r5, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringExpandPlaceholders
	mov	r0, #0x21
	bl	.L1176	@ far jump
.L1241:
	.align	2, 0
.L1240:
	.word	gStringVar1
	.word	gLinkPlayers+0x8
	.word	gStringVar4
	.word	gTexts_UR_AwaitingResponse
.L1036:
	mov	r0, #0x7
	bl	.L1176	@ far jump
.L1038:
	add	r0, r6, #0
	add	r0, r0, #0x16
	mov	r1, #0x0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r5, r0, #0x18
	cmp	r5, #0
	beq	.L1040	@cond_branch
	cmp	r5, #0
	bgt	.L1045	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	beq	.L1042	@cond_branch
	bl	.L943	@ far jump
.L1045:
	cmp	r5, #0x1
	beq	.L1042	@cond_branch
	bl	.L943	@ far jump
.L1040:
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	ldr	r4, .L1242
	mov	r0, #0x45
	strb	r0, [r4]
	mov	r0, #0x45
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameData_SetActivity
	mov	r2, #0x2
	ldrsh	r0, [r7, r2]
	lsl	r0, r0, #0x5
	ldr	r1, [r6]
	add	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, #0x10
	ldrb	r2, [r4]
	bl	TryConnectToUnionRoomParent
	ldrh	r0, [r7, #0x2]
	strh	r0, [r6, #0x12]
	mov	r0, #0x14
	strb	r0, [r6, #0x14]
	strh	r5, [r7, #0x6]
	bl	.L943	@ far jump
.L1243:
	.align	2, 0
.L1242:
	.word	sPlayerCurrActivity
.L1042:
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	add	r4, r0, #0
	ldr	r1, .L1244
	lsl	r0, r4, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	bl	ScheduleFieldMessageAndExit
	bl	.L943	@ far jump
.L1245:
	.align	2, 0
.L1244:
	.word	gTexts_UR_DeclineChat
.L1046:
	ldrh	r0, [r7, #0x4]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x4]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3c
	bgt	.LCB8360
	bl	.L943	@far jump
.LCB8360:
	mov	r1, #0x0
	mov	r0, #0x15
	strb	r0, [r6, #0x14]
	strh	r1, [r7, #0x4]
	bl	.L943	@ far jump
.L1048:
	bl	RfuGetStatus
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x3
	beq	.L1055	@cond_branch
	cmp	r4, #0x3
	ble	.L1058	@cond_branch
	cmp	r4, #0x4
	bne	.L1049	@cond_branch
	mov	r0, #0x1
	bl	HandleCancelActivity
	strb	r4, [r6, #0x14]
	b	.L1049
.L1058:
	cmp	r4, #0x1
	blt	.L1049	@cond_branch
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	add	r4, r0, #0
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameData_SetActivity
	bl	IsUnionRoomListenTaskActive
	cmp	r0, #0x1
	bne	.L1053	@cond_branch
	ldr	r0, .L1246
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ScheduleFieldMessageAndExit
	b	.L1049
.L1247:
	.align	2, 0
.L1246:
	.word	gTexts_UR_ChatDeclined
.L1053:
	ldr	r0, .L1248
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	mov	r0, #0x1e
	bl	ScheduleFieldMessageWithFollowupState
	b	.L1049
.L1249:
	.align	2, 0
.L1248:
	.word	gTexts_UR_ChatDeclined
.L1055:
	mov	r0, #0x16
	strb	r0, [r6, #0x14]
.L1049:
	ldrh	r0, [r7, #0x6]
	add	r0, r0, #0x1
	strh	r0, [r7, #0x6]
	bl	.L943	@ far jump
.L1059:
	bl	RfuHasErrored
	cmp	r0, #0
	beq	.L1060	@cond_branch
	mov	r2, #0x2
	ldrsh	r0, [r7, r2]
	ldr	r1, [r6]
	bl	GetUnionRoomPlayerGender
	add	r4, r0, #0
	mov	r0, #0x54
	mov	r1, #0x0
	mov	r2, #0x1
	bl	UpdateGameData_SetActivity
	bl	IsUnionRoomListenTaskActive
	cmp	r0, #0x1
	bne	.L1061	@cond_branch
	ldr	r0, .L1250
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	ScheduleFieldMessageAndExit
	b	.L1060
.L1251:
	.align	2, 0
.L1250:
	.word	gTexts_UR_ChatDeclined
.L1061:
	ldr	r0, .L1252
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	mov	r0, #0x1e
	bl	ScheduleFieldMessageWithFollowupState
.L1060:
	ldr	r0, .L1252+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB8492
	bl	.L943	@far jump
.LCB8492:
	mov	r0, #0x10
	bl	.L1176	@ far jump
.L1253:
	.align	2, 0
.L1252:
	.word	gTexts_UR_ChatDeclined
	.word	gReceivedRemoteLinkPlayers
.L1064:
	mov	r0, #0x42
	bl	PlaySE
	bl	StopUnionRoomLinkManager
	mov	r0, #0x0
	mov	r1, #0xc
	strb	r1, [r6, #0x14]
	add	r1, r6, #0
	add	r1, r1, #0x86
	strh	r0, [r1]
	bl	.L943	@ far jump
.L1065:
	bl	RfuHasErrored
	cmp	r0, #0
	beq	.L1066	@cond_branch
	mov	r0, #0x0
	bl	HandleCancelActivity
	mov	r0, #0x2
	bl	.L1176	@ far jump
.L1066:
	ldr	r0, .L1254
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.LCB8532
	bl	.L943	@far jump
.LCB8532:
	ldr	r0, .L1254+0x4
	mov	r1, #0x1
	bl	CreateTrainerCardInBuffer
	ldr	r0, .L1254+0x8
	mov	r1, #0x5
	bl	CreateTask
	mov	r0, #0x27
	bl	.L1176	@ far jump
.L1255:
	.align	2, 0
.L1254:
	.word	gReceivedRemoteLinkPlayers
	.word	gBlockSendBuffer
	.word	Task_ExchangeCards
.L1069:
	add	r0, r6, #0
	bl	ReceiveUnionRoomActivityPacket
	ldr	r0, .L1256
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB8563
	bl	.L943	@far jump
.LCB8563:
	mov	r0, #0x21
	strb	r0, [r6, #0x14]
	ldr	r0, .L1256+0x4
	ldr	r4, .L1256+0x8
	add	r1, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	sub	r0, r0, #0x24
	ldrh	r0, [r0, #0x20]
	add	r1, r4, #0
	bl	PlayerHasMetTrainerBefore
	add	r5, r0, #0
	ldr	r0, .L1256+0xc
	ldr	r2, .L1256+0x10
	lsl	r1, r5, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringExpandPlaceholders
	b	.L943
.L1257:
	.align	2, 0
.L1256:
	.word	Task_ExchangeCards
	.word	gStringVar1
	.word	gLinkPlayers+0x24
	.word	gStringVar4
	.word	gTexts_UR_PlayerContactedYou
.L1071:
	add	r0, r6, #0
	bl	ReceiveUnionRoomActivityPacket
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1258
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8615
	b	.L943	@long jump
.LCB8615:
	mov	r0, #0x22
	b	.L1176
.L1259:
	.align	2, 0
.L1258:
	.word	gStringVar4
.L1073:
	add	r0, r6, #0
	bl	ReceiveUnionRoomActivityPacket
	add	r0, r6, #0
	bl	HandleContactFromOtherPlayer
	cmp	r0, #0
	bne	.LCB8632
	b	.L943	@long jump
.LCB8632:
	ldr	r0, .L1260
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	bne	.LCB8643
	b	.L943	@long jump
.LCB8643:
	mov	r0, #0x1
	bl	Rfu_DisconnectPlayerById
	ldr	r0, .L1260+0x4
	ldr	r1, .L1260+0x8
	bl	StringCopy
	mov	r0, #0x24
	b	.L1176
.L1261:
	.align	2, 0
.L1260:
	.word	gMain
	.word	gStringVar4
	.word	gText_UR_ChatEnded
.L1075:
	ldr	r1, .L1262
	mov	r0, #0x9
	bl	ScheduleFieldMessageWithFollowupState
	b	.L943
.L1263:
	.align	2, 0
.L1262:
	.word	gStringVar4
.L1076:
	add	r0, r6, #0
	add	r0, r0, #0x16
	mov	r1, #0x0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1078	@cond_branch
	cmp	r1, #0
	bgt	.L1091	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1088	@cond_branch
	b	.L943
.L1091:
	cmp	r1, #0x1
	beq	.L1088	@cond_branch
	b	.L943
.L1078:
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x51
	strh	r1, [r0]
	ldr	r1, .L1264
	ldrb	r1, [r1]
	add	r5, r0, #0
	cmp	r1, #0x45
	bne	.L1079	@cond_branch
	mov	r4, #0x40
	orr	r4, r4, r1
	mov	r0, #0x1
	bl	GetLinkPlayerInfoFlags
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	mov	r2, #0x0
	bl	UpdateGameData_SetActivity
	b	.L1080
.L1265:
	.align	2, 0
.L1264:
	.word	sPlayerCurrActivity
.L1079:
	mov	r0, #0x40
	add	r4, r1, #0
	orr	r4, r4, r0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r0, #0x1
	bl	GetLinkPlayerInfoFlags
	add	r1, r0, #0
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	mov	r2, #0x1
	bl	UpdateGameData_SetActivity
.L1080:
	ldr	r1, [r6, #0x8]
	mov	r0, #0x0
	strb	r0, [r1, #0x1b]
	strh	r0, [r7, #0x6]
	ldr	r0, .L1266
	ldrb	r0, [r0]
	cmp	r0, #0x41
	bne	.L1081	@cond_branch
	bl	HasAtLeastTwoMonsOfLevel30OrLower
	cmp	r0, #0
	bne	.L1082	@cond_branch
	mov	r0, #0x52
	strh	r0, [r5]
	add	r0, r5, #0
	bl	Rfu_SendPacket
	mov	r0, #0xa
	strb	r0, [r6, #0x14]
	ldr	r0, .L1266+0x4
	ldr	r1, .L1266+0x8
	bl	StringCopy
	b	.L943
.L1267:
	.align	2, 0
.L1266:
	.word	sPlayerCurrActivity
	.word	gStringVar4
	.word	gText_UR_NeedTwoMonsOfLevel30OrLower2
.L1082:
	add	r0, r5, #0
	bl	Rfu_SendPacket
	mov	r0, #0xd
	b	.L1176
.L1081:
	cmp	r0, #0x48
	bne	.L1085	@cond_branch
	add	r0, r5, #0
	bl	Rfu_SendPacket
	ldr	r0, .L1268
	add	r1, r6, #0
	mov	r2, #0x1
	bl	ViewURoomPartnerTrainerCard
	mov	r0, #0x28
	b	.L1176
.L1269:
	.align	2, 0
.L1268:
	.word	gStringVar4
.L1085:
	add	r0, r5, #0
	bl	Rfu_SendPacket
	mov	r0, #0xd
	b	.L1176
.L1088:
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x52
	strh	r1, [r0]
	bl	Rfu_SendPacket
	mov	r0, #0xa
	strb	r0, [r6, #0x14]
	ldr	r0, .L1270
	ldr	r1, .L1270+0x4
	ldrb	r1, [r1]
	bl	GetYouDeclinedTheOfferMessage
	b	.L943
.L1271:
	.align	2, 0
.L1270:
	.word	gStringVar4
	.word	sPlayerCurrActivity
.L1092:
	bl	SetCloseLinkCallback
	mov	r0, #0x24
	b	.L1176
.L1093:
	ldr	r0, .L1272
	ldrb	r4, [r0]
	cmp	r4, #0
	beq	.LCB8863
	b	.L943	@long jump
.LCB8863:
	ldr	r1, .L1272+0x4
	mov	r0, #0x40
	strb	r0, [r1]
	ldr	r1, .L1272+0x8
	mov	r0, #0x25
	bl	ScheduleFieldMessageWithFollowupState
	add	r0, r6, #0
	add	r0, r0, #0x4c
	mov	r1, #0x0
	mov	r2, #0xc
	bl	memset
	add	r0, r6, #0
	add	r0, r0, #0x86
	strh	r4, [r0]
	sub	r0, r0, #0x2
	strh	r4, [r0]
	b	.L943
.L1273:
	.align	2, 0
.L1272:
	.word	gReceivedRemoteLinkPlayers
	.word	sPlayerCurrActivity
	.word	gStringVar4
.L1095:
	mov	r0, #0x2
	strb	r0, [r6, #0x14]
	mov	r0, #0x0
	bl	HandleCancelActivity
	b	.L943
.L1096:
	ldr	r4, .L1274
	ldr	r0, .L1274+0x4
	ldrb	r0, [r0]
	mov	r1, #0x40
	orr	r1, r1, r0
	add	r0, r4, #0
	bl	GetURoomActivityStartMsg
	mov	r0, #0xe
	add	r1, r4, #0
	bl	ScheduleFieldMessageWithFollowupState
	b	.L943
.L1275:
	.align	2, 0
.L1274:
	.word	gStringVar4
	.word	sPlayerCurrActivity
.L1097:
	bl	SetLinkStandbyCallback
	mov	r0, #0xf
	b	.L1176
.L1098:
	bl	IsLinkTaskFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB8935
	b	.L943	@long jump
.LCB8935:
	mov	r0, #0x10
	b	.L1176
.L1100:
	ldr	r0, [r6, #0x8]
	bl	Free
	ldr	r0, [r6]
	bl	Free
	ldr	r0, [r6, #0xc]
	bl	Free
	ldr	r0, [r6, #0x4]
	bl	Free
	add	r0, r6, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	bl	DestroyTask
	add	r0, r6, #0
	add	r0, r0, #0x21
	bl	DestroyUnionRoomPlayerSprites
	mov	r0, #0x11
	b	.L1176
.L1101:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x12
	b	.L1176
.L1102:
	bl	UpdatePaletteFade
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.LCB8983
	b	.L943	@long jump
.LCB8983:
	bl	DestroyUnionRoomPlayerObjects
	add	r0, r4, #0
	bl	DestroyTask
	ldr	r0, .L1276
	ldr	r0, [r0]
	bl	Free
	bl	CreateTask_StartActivity
	b	.L943
.L1277:
	.align	2, 0
.L1276:
	.word	sWirelessLinkMain
.L1104:
	bl	GetHostRfuGameData
	ldrh	r1, [r0, #0x8]
	ldr	r4, .L1278
	add	r0, r4, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1105	@cond_branch
	mov	r0, #0x2b
	b	.L1176
.L1279:
	.align	2, 0
.L1278:
	.word	0x3ff
.L1105:
	bl	GetHostRfuGameData
	ldrh	r1, [r0, #0x8]
	add	r0, r4, #0
	and	r0, r0, r1
	ldr	r1, .L1280
	cmp	r0, r1
	bne	.L1107	@cond_branch
	ldr	r0, .L1280+0x4
	ldr	r1, .L1280+0x8
	bl	StringCopy
	b	.L1108
.L1281:
	.align	2, 0
.L1280:
	.word	0x19d
	.word	gStringVar4
	.word	gText_UR_CancelRegistrationOfEgg
.L1107:
	ldr	r4, .L1282
	bl	GetHostRfuGameData
	ldrh	r0, [r0, #0x8]
	lsl	r0, r0, #0x16
	lsr	r0, r0, #0x16
	mov	r1, #0xb
	mul	r1, r1, r0
	ldr	r0, .L1282+0x4
	add	r1, r1, r0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r4, .L1282+0x8
	bl	GetHostRfuGameData
	ldrb	r1, [r0, #0xb]
	lsr	r1, r1, #0x1
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldr	r0, .L1282+0xc
	ldr	r1, .L1282+0x10
	bl	StringExpandPlaceholders
.L1108:
	ldr	r1, .L1282+0xc
	mov	r0, #0x2c
	bl	ScheduleFieldMessageWithFollowupState
	b	.L943
.L1283:
	.align	2, 0
.L1282:
	.word	gStringVar1
	.word	gSpeciesNames
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_UR_CancelRegistrationOfMon
.L1109:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1284
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB9117
	b	.L943	@long jump
.LCB9117:
	mov	r0, #0x2f
	b	.L1176
.L1285:
	.align	2, 0
.L1284:
	.word	gText_UR_RegisterMonAtTradingBoard
.L1111:
	add	r0, r6, #0
	add	r0, r0, #0x16
	add	r1, r6, #0
	add	r1, r1, #0x1d
	add	r2, r6, #0
	add	r2, r2, #0x1e
	ldr	r3, .L1286
	ldr	r4, .L1286+0x4
	str	r4, [sp]
	bl	ListMenuHandler_AllItemsAvailable
	add	r5, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	bne	.LCB9146
	b	.L943	@long jump
.LCB9146:
	sub	r0, r0, #0x1
	cmp	r5, r0
	beq	.L1114	@cond_branch
	cmp	r5, #0x3
	bne	.L1113	@cond_branch
.L1114:
	mov	r0, #0x4
	strb	r0, [r6, #0x14]
	mov	r0, #0x1
	bl	HandleCancelActivity
	b	.L1115
.L1287:
	.align	2, 0
.L1286:
	.word	sWindowTemplate_RegisterForTrade
	.word	sListMenuTemplate_RegisterForTrade
.L1113:
	cmp	r5, #0x1
	beq	.L1117	@cond_branch
	cmp	r5, #0x2
	beq	.L1118	@cond_branch
	b	.L1115
.L1117:
	ldr	r1, .L1288
	mov	r0, #0x35
	bl	ScheduleFieldMessageWithFollowupState
	b	.L1115
.L1289:
	.align	2, 0
.L1288:
	.word	gText_UR_WhichMonWillYouOffer
.L1118:
	ldr	r1, .L1290
	mov	r0, #0x2f
	bl	ScheduleFieldMessageWithFollowupState
.L1115:
	bl	DestroyHelpMessageWindow_
	b	.L943
.L1291:
	.align	2, 0
.L1290:
	.word	gText_UR_TradingBoardInfo
.L1121:
	mov	r0, #0x1
	neg	r0, r0
	mov	r1, #0x0
	str	r1, [sp]
	mov	r2, #0x0
	mov	r3, #0x10
	bl	BeginNormalPaletteFade
	mov	r0, #0x36
	b	.L1176
.L1122:
	ldr	r0, .L1292
	ldrb	r1, [r0, #0x7]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	beq	.LCB9228
	b	.L943	@long jump
.LCB9228:
	ldr	r1, .L1292+0x4
	mov	r0, #0x1
	strh	r0, [r1]
	ldr	r1, .L1292+0x8
	ldr	r0, .L1292+0xc
	str	r0, [r1]
	ldr	r1, .L1292+0x10
	mov	r0, #0x8
	bl	ChooseMonForTradingBoard
	b	.L943
.L1293:
	.align	2, 0
.L1292:
	.word	gPaletteFade
	.word	sUnionRoomTrade
	.word	gFieldCallback
	.word	FieldCB_ContinueScriptUnionRoom
	.word	CB2_ReturnToField
.L1124:
	add	r0, r6, #0
	add	r0, r0, #0x16
	add	r1, r6, #0
	add	r1, r1, #0x1d
	add	r2, r6, #0
	add	r2, r2, #0x1e
	ldr	r3, .L1294
	ldr	r4, .L1294+0x4
	str	r4, [sp]
	bl	ListMenuHandler_AllItemsAvailable
	add	r5, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	bne	.LCB9271
	b	.L943	@long jump
.LCB9271:
	sub	r0, r0, #0x1
	cmp	r5, r0
	beq	.L1128	@cond_branch
	cmp	r5, #0x12
	bne	.L1129	@cond_branch
.L1128:
	ldr	r0, .L1294+0x8
	bl	ResetUnionRoomTrade
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetTradeBoardRegisteredMonInfo
	ldr	r0, .L1294+0xc
	bl	ScheduleFieldMessageAndExit
	b	.L943
.L1295:
	.align	2, 0
.L1294:
	.word	sWindowTemplate_TypeNames
	.word	sListMenuTemplate_TypeNames
	.word	sUnionRoomTrade
	.word	gText_UR_RegistrationCanceled
.L1129:
	ldr	r0, .L1296
	strh	r5, [r0, #0x2]
	mov	r0, #0x37
	b	.L1176
.L1297:
	.align	2, 0
.L1296:
	.word	sUnionRoomTrade
.L1131:
	ldr	r2, .L1298
	ldrh	r0, [r2, #0x2]
	ldrh	r1, [r2, #0xa]
	ldrh	r2, [r2, #0xc]
	bl	SetTradeBoardRegisteredMonInfo
	ldr	r0, .L1298+0x4
	bl	ScheduleFieldMessageAndExit
	b	.L943
.L1299:
	.align	2, 0
.L1298:
	.word	sUnionRoomTrade
	.word	gText_UR_RegistraionCompleted
.L1132:
	add	r0, r6, #0
	add	r0, r0, #0x16
	mov	r1, #0x0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1134	@cond_branch
	cmp	r1, #0
	bgt	.L1139	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1136	@cond_branch
	b	.L943
.L1139:
	cmp	r1, #0x1
	beq	.L1136	@cond_branch
	b	.L943
.L1134:
	mov	r0, #0x38
	b	.L1176
.L1136:
	mov	r0, #0x1
	bl	HandleCancelActivity
	mov	r0, #0x4
	b	.L1176
.L1140:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1300
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB9383
	b	.L943	@long jump
.LCB9383:
	mov	r0, #0x0
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetTradeBoardRegisteredMonInfo
	ldr	r0, .L1300+0x4
	bl	ResetUnionRoomTrade
	mov	r0, #0x1
	bl	HandleCancelActivity
	mov	r0, #0x4
	b	.L1176
.L1301:
	.align	2, 0
.L1300:
	.word	gText_UR_RegistrationCanceled2
	.word	sUnionRoomTrade
.L1142:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1302
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB9415
	b	.L943	@long jump
.LCB9415:
	mov	r0, #0x2e
	b	.L1176
.L1303:
	.align	2, 0
.L1302:
	.word	gText_UR_XCheckedTradingBoard
.L1144:
	bl	UR_ClearBg0
	mov	r0, #0x30
	b	.L1176
.L1145:
	add	r0, r6, #0
	add	r0, r0, #0x16
	add	r1, r6, #0
	add	r1, r1, #0x1d
	add	r2, r6, #0
	add	r2, r2, #0x4a
	add	r3, r6, #0
	add	r3, r3, #0x1e
	ldr	r4, .L1304
	str	r4, [sp]
	ldr	r4, .L1304+0x4
	str	r4, [sp, #0x4]
	ldr	r4, [r6]
	str	r4, [sp, #0x8]
	bl	TradeBoardMenuHandler
	add	r5, r0, #0
	mov	r0, #0x1
	neg	r0, r0
	cmp	r5, r0
	bne	.LCB9454
	b	.L943	@long jump
.LCB9454:
	sub	r0, r0, #0x1
	cmp	r5, r0
	beq	.L1149	@cond_branch
	cmp	r5, #0x8
	bne	.L1150	@cond_branch
.L1149:
	mov	r0, #0x1
	bl	HandleCancelActivity
	bl	DestroyHelpMessageWindow_
	mov	r0, #0x4
	b	.L1176
.L1305:
	.align	2, 0
.L1304:
	.word	sWindowTemplate_TradingBoardMain
	.word	sListMenuTemplate_TradeBoard
.L1150:
	ldr	r1, [r6]
	lsl	r3, r5, #0x5
	mov	r8, r3
	add	r1, r1, r8
	ldrb	r0, [r1, #0x9]
	lsr	r0, r0, #0x2
	ldrh	r1, [r1, #0x8]
	lsl	r1, r1, #0x16
	lsr	r1, r1, #0x16
	bl	IsRequestedTradeInPlayerParty
	cmp	r0, #0x1
	beq	.L1153	@cond_branch
	cmp	r0, #0x1
	bgt	.L1157	@cond_branch
	cmp	r0, #0
	beq	.L1152	@cond_branch
	b	.L943
.L1157:
	cmp	r0, #0x2
	beq	.L1154	@cond_branch
	b	.L943
.L1152:
	ldr	r4, .L1306
	ldr	r1, [r6]
	add	r1, r1, r8
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, r8
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r1, .L1306+0x4
	mov	r0, #0x31
	bl	ScheduleFieldMessageWithFollowupState
	strh	r5, [r7, #0x2]
	b	.L943
.L1307:
	.align	2, 0
.L1306:
	.word	gStringVar1
	.word	gText_UR_AskTrainerToMakeTrade
.L1153:
	ldr	r4, .L1308
	ldr	r1, [r6]
	add	r1, r1, r8
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, r8
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r0, .L1308+0x4
	ldr	r1, [r6]
	add	r1, r1, r8
	ldrb	r2, [r1, #0x9]
	lsr	r2, r2, #0x2
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	ldr	r2, .L1308+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L1308+0xc
	b	.L1179
.L1309:
	.align	2, 0
.L1308:
	.word	gStringVar1
	.word	gStringVar2
	.word	gTypeNames
	.word	gText_UR_DontHaveTypeTrainerWants
.L1154:
	ldr	r4, .L1310
	ldr	r1, [r6]
	add	r1, r1, r8
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, r8
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r0, .L1310+0x4
	ldr	r1, [r6]
	add	r1, r1, r8
	ldrb	r2, [r1, #0x9]
	lsr	r2, r2, #0x2
	lsl	r1, r2, #0x3
	sub	r1, r1, r2
	ldr	r2, .L1310+0x8
	add	r1, r1, r2
	bl	StringCopy
	ldr	r1, .L1310+0xc
.L1179:
	mov	r0, #0x2e
	bl	ScheduleFieldMessageWithFollowupState
	b	.L943
.L1311:
	.align	2, 0
.L1310:
	.word	gStringVar1
	.word	gStringVar2
	.word	gTypeNames
	.word	gText_UR_DontHaveEggTrainerWants
.L1159:
	add	r0, r6, #0
	add	r0, r0, #0x16
	mov	r1, #0x0
	bl	UnionRoomHandleYesNo
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	cmp	r1, #0
	beq	.L1161	@cond_branch
	cmp	r1, #0
	bgt	.L1166	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
	cmp	r1, r0
	beq	.L1163	@cond_branch
	b	.L943
.L1166:
	cmp	r1, #0x1
	beq	.L1163	@cond_branch
	b	.L943
.L1161:
	mov	r0, #0x32
	b	.L1176
.L1163:
	mov	r0, #0x1
	bl	HandleCancelActivity
	mov	r0, #0x4
	b	.L1176
.L1167:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1312
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.LCB9699
	b	.L943	@long jump
.LCB9699:
	ldr	r4, .L1312+0x4
	mov	r0, #0x2
	strh	r0, [r4]
	ldr	r2, .L1312+0x8
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	ldr	r1, [r6]
	lsl	r0, r0, #0x5
	add	r0, r0, r1
	ldr	r0, [r0]
	str	r0, [r2]
	ldr	r2, .L1312+0xc
	ldr	r1, [r6]
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r0, [r1, #0x9]
	lsr	r0, r0, #0x2
	strb	r0, [r2]
	ldr	r2, .L1312+0x10
	ldr	r1, [r6]
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrh	r0, [r1, #0x8]
	lsl	r0, r0, #0x16
	lsr	r0, r0, #0x16
	strh	r0, [r2]
	ldr	r1, .L1312+0x14
	ldr	r0, .L1312+0x18
	str	r0, [r1]
	ldr	r1, .L1312+0x1c
	mov	r0, #0x9
	bl	ChooseMonForTradingBoard
	add	r0, r6, #0
	bl	CopyPlayerListToBuffer
	ldrh	r0, [r7, #0x2]
	strb	r0, [r4, #0x8]
	b	.L943
.L1313:
	.align	2, 0
.L1312:
	.word	gText_UR_WhichMonWillYouOffer
	.word	sUnionRoomTrade
	.word	gRfuPartnerCompatibilityData
	.word	gUnionRoomRequestedMonType
	.word	gUnionRoomOfferedSpecies
	.word	gFieldCallback
	.word	FieldCB_ContinueScriptUnionRoom
	.word	CB2_ReturnToField
.L1169:
	ldr	r1, .L1314
	mov	r0, #0x44
	strb	r0, [r1]
	mov	r1, #0x2
	ldrsh	r0, [r7, r1]
	lsl	r0, r0, #0x5
	ldr	r1, [r6]
	add	r1, r1, r0
	add	r0, r1, #0
	add	r0, r0, #0x10
	mov	r2, #0x44
	bl	TryConnectToUnionRoomParent
	ldr	r4, .L1314+0x4
	mov	r2, #0x2
	ldrsh	r0, [r7, r2]
	lsl	r0, r0, #0x5
	ldr	r1, [r6]
	add	r1, r1, r0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldr	r1, [r6]
	mov	r3, #0x2
	ldrsh	r0, [r7, r3]
	lsl	r0, r0, #0x5
	add	r1, r1, r0
	ldrb	r1, [r1]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	ldr	r0, .L1314+0x8
	ldr	r0, [r0, #0x8]
	bl	UR_PrintFieldMessage
	mov	r0, #0x19
	b	.L1176
.L1315:
	.align	2, 0
.L1314:
	.word	sPlayerCurrActivity
	.word	gStringVar1
	.word	gTexts_UR_CommunicatingWait
.L1170:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1316
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L943	@cond_branch
	mov	r0, #0x1
	bl	HandleCancelActivity
	mov	r1, #0x0
	ldrsh	r0, [r7, r1]
	mov	r2, #0x2
	ldrsh	r1, [r7, r2]
	ldr	r2, [r6]
	bl	UpdateUnionRoomMemberFacing
	mov	r0, #0x4
	b	.L1176
.L1317:
	.align	2, 0
.L1316:
	.word	gStringVar4
.L1172:
	add	r0, r6, #0
	add	r0, r0, #0x16
	ldr	r1, .L1318
	bl	PrintOnTextbox
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L943	@cond_branch
	ldrb	r0, [r6, #0x15]
.L1176:
	strb	r0, [r6, #0x14]
.L943:
	add	sp, sp, #0xc
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1319:
	.align	2, 0
.L1318:
	.word	gStringVar4
.Lfe51:
	.size	 Task_RunUnionRoom,.Lfe51-Task_RunUnionRoom
	.align	2, 0
	.globl	SetUsingUnionRoomStartMenu
	.type	 SetUsingUnionRoomStartMenu,function
	.thumb_func
SetUsingUnionRoomStartMenu:
	push	{lr}
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.L1321	@cond_branch
	ldr	r1, .L1322
	mov	r0, #0xb
	strh	r0, [r1]
.L1321:
	pop	{r0}
	bx	r0
.L1323:
	.align	2, 0
.L1322:
	.word	gSpecialVar_Result
.Lfe52:
	.size	 SetUsingUnionRoomStartMenu,.Lfe52-SetUsingUnionRoomStartMenu
	.align	2, 0
	.type	 ReceiveUnionRoomActivityPacket,function
	.thumb_func
ReceiveUnionRoomActivityPacket:
	push	{r4, r5, lr}
	add	r2, r0, #0
	ldr	r3, .L1327
	ldrh	r5, [r3, #0x12]
	add	r4, r5, #0
	cmp	r4, #0
	beq	.L1325	@cond_branch
	ldrh	r0, [r3, #0x10]
	mov	r1, #0xff
	lsl	r1, r1, #0x8
	and	r1, r1, r0
	mov	r0, #0xbc
	lsl	r0, r0, #0x6
	cmp	r1, r0
	bne	.L1325	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x86
	strh	r5, [r0]
	cmp	r4, #0x44
	bne	.L1325	@cond_branch
	ldrh	r1, [r3, #0x14]
	add	r0, r0, #0x2
	strh	r1, [r0]
	ldrh	r1, [r3, #0x16]
	add	r0, r0, #0x2
	strh	r1, [r0]
.L1325:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1328:
	.align	2, 0
.L1327:
	.word	gRecvCmds
.Lfe53:
	.size	 ReceiveUnionRoomActivityPacket,.Lfe53-ReceiveUnionRoomActivityPacket
	.align	2, 0
	.type	 HandleContactFromOtherPlayer,function
	.thumb_func
HandleContactFromOtherPlayer:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r4, #0
	add	r5, r5, #0x86
	ldrh	r0, [r5]
	cmp	r0, #0
	beq	.L1330	@cond_branch
	ldr	r0, .L1337
	ldr	r1, .L1337+0x4
	add	r1, r1, #0x2f
	ldrb	r1, [r1]
	add	r2, r5, #0
	add	r3, r4, #0
	bl	GetChatLeaderActionRequestMessage
	cmp	r0, #0
	beq	.L1330	@cond_branch
	cmp	r0, #0x1
	bne	.L1333	@cond_branch
	mov	r0, #0x23
	strb	r0, [r4, #0x14]
	ldr	r1, .L1337+0x8
	ldrh	r0, [r5]
	strb	r0, [r1]
	mov	r0, #0x0
	b	.L1336
.L1338:
	.align	2, 0
.L1337:
	.word	gStringVar4
	.word	gLinkPlayers
	.word	sPlayerCurrActivity
.L1333:
	cmp	r0, #0x2
	bne	.L1330	@cond_branch
	mov	r0, #0x24
	strb	r0, [r4, #0x14]
	bl	SetCloseLinkCallback
	mov	r0, #0x0
	b	.L1336
.L1330:
	mov	r0, #0x1
.L1336:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe54:
	.size	 HandleContactFromOtherPlayer,.Lfe54-HandleContactFromOtherPlayer
	.align	2, 0
	.globl	InitUnionRoom
	.type	 InitUnionRoom,function
	.thumb_func
InitUnionRoom:
	push	{r4, r5, r6, lr}
	ldr	r5, .L1341
	mov	r0, #0x1
	neg	r0, r0
	add	r6, r0, #0
	mov	r0, #0xff
	strb	r0, [r5]
	ldr	r0, .L1341+0x4
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L1339	@cond_branch
	ldr	r0, .L1341+0x8
	mov	r1, #0x0
	bl	CreateTask
	ldr	r4, .L1341+0xc
	mov	r0, #0x96
	lsl	r0, r0, #0x2
	bl	AllocZeroed
	str	r0, [r4]
	ldr	r1, .L1341+0x10
	str	r0, [r1]
	mov	r1, #0x0
	strb	r1, [r0, #0x14]
	strb	r1, [r0, #0x16]
	strh	r1, [r0, #0x10]
	strh	r1, [r0, #0x12]
	ldrb	r0, [r5]
	orr	r0, r0, r6
	strb	r0, [r5]
.L1339:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1342:
	.align	2, 0
.L1341:
	.word	sUnionRoomPlayerName
	.word	gQuestLogState
	.word	Task_InitUnionRoom
	.word	sWirelessLinkMain
	.word	sURoom
.Lfe55:
	.size	 InitUnionRoom,.Lfe55-InitUnionRoom
	.align	2, 0
	.type	 Task_InitUnionRoom,function
	.thumb_func
Task_InitUnionRoom:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x20
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldr	r0, .L1367
	ldr	r5, [r0]
	ldrb	r0, [r5, #0x14]
	cmp	r0, #0x4
	bls	.LCB10082
	b	.L1344	@long jump
.LCB10082:
	lsl	r0, r0, #0x2
	ldr	r1, .L1367+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1368:
	.align	2, 0
.L1367:
	.word	sWirelessLinkMain
	.word	.L1364
	.align	2, 0
	.align	2, 0
.L1364:
	.word	.L1345
	.word	.L1346
	.word	.L1347
	.word	.L1348
	.word	.L1363
.L1345:
	mov	r0, #0x1
	strb	r0, [r5, #0x14]
	b	.L1344
.L1346:
	mov	r0, #0xc
	mov	r1, #0x0
	mov	r2, #0x0
	bl	SetHostRfuGameData
	bl	SetWirelessCommType1
	bl	OpenLink
	bl	InitializeRfuLinkManager_EnterUnionRoom
	mov	r0, #0x1
	bl	RfuSetIgnoreError
	mov	r0, #0x2
	strb	r0, [r5, #0x14]
	b	.L1344
.L1347:
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0x4]
	mov	r1, #0x4
	bl	ClearIncomingPlayerList
	mov	r0, #0x70
	bl	AllocZeroed
	str	r0, [r5, #0xc]
	mov	r1, #0x4
	bl	ClearIncomingPlayerList
	mov	r0, #0x80
	lsl	r0, r0, #0x1
	bl	AllocZeroed
	str	r0, [r5]
	mov	r1, #0x8
	bl	ClearRfuPlayerList
	mov	r0, #0x20
	bl	AllocZeroed
	str	r0, [r5, #0x8]
	mov	r1, #0x1
	bl	ClearRfuPlayerList
	ldr	r0, [r5, #0xc]
	ldr	r1, [r5, #0x4]
	mov	r2, #0xa
	bl	CreateTask_SearchForChildOrParent
	add	r1, r5, #0
	add	r1, r1, #0x20
	strb	r0, [r1]
	mov	r0, #0x3
	strb	r0, [r5, #0x14]
	b	.L1344
.L1348:
	bl	HandlePlayerListUpdate
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	blt	.L1344	@cond_branch
	cmp	r0, #0x2
	bgt	.L1344	@cond_branch
	ldr	r0, .L1369
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L1344	@cond_branch
	mov	r6, #0x0
.L1356:
	ldr	r0, [r5]
	lsl	r4, r6, #0x5
	add	r1, r0, r4
	ldrb	r0, [r1, #0x1a]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L1355	@cond_branch
	add	r1, r1, #0x10
	mov	r0, sp
	bl	StringCopy
	ldr	r0, [r5]
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	mov	r0, sp
	bl	ConvertInternationalString
	ldr	r0, [r5]
	add	r0, r0, r4
	add	r0, r0, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, sp
	bl	PlayerHasMetTrainerBefore
	cmp	r0, #0
	bne	.L1366	@cond_branch
.L1355:
	add	r6, r6, #0x1
	cmp	r6, #0x7
	ble	.L1356	@cond_branch
	b	.L1344
.L1370:
	.align	2, 0
.L1369:
	.word	sUnionRoomPlayerName
.L1366:
	ldr	r0, .L1371
	mov	r1, sp
	bl	StringCopy
	b	.L1344
.L1372:
	.align	2, 0
.L1371:
	.word	sUnionRoomPlayerName
.L1363:
	ldr	r0, [r5, #0x8]
	bl	Free
	ldr	r0, [r5]
	bl	Free
	ldr	r0, [r5, #0xc]
	bl	Free
	ldr	r0, [r5, #0x4]
	bl	Free
	add	r0, r5, #0
	add	r0, r0, #0x20
	ldrb	r0, [r0]
	bl	DestroyTask
	ldr	r0, .L1373
	ldr	r0, [r0]
	bl	Free
	bl	LinkRfu_Shutdown
	add	r0, r4, #0
	bl	DestroyTask
.L1344:
	add	sp, sp, #0x20
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1374:
	.align	2, 0
.L1373:
	.word	sWirelessLinkMain
.Lfe56:
	.size	 Task_InitUnionRoom,.Lfe56-Task_InitUnionRoom
	.align	2, 0
	.globl	BufferUnionRoomPlayerName
	.type	 BufferUnionRoomPlayerName,function
	.thumb_func
BufferUnionRoomPlayerName:
	push	{r4, lr}
	ldr	r4, .L1379
	ldrb	r0, [r4]
	cmp	r0, #0xff
	bne	.L1376	@cond_branch
	mov	r0, #0x0
	b	.L1378
.L1380:
	.align	2, 0
.L1379:
	.word	sUnionRoomPlayerName
.L1376:
	ldr	r0, .L1381
	add	r1, r4, #0
	bl	StringCopy
	mov	r0, #0xff
	strb	r0, [r4]
	mov	r0, #0x1
.L1378:
	pop	{r4}
	pop	{r1}
	bx	r1
.L1382:
	.align	2, 0
.L1381:
	.word	gStringVar1
.Lfe57:
	.size	 BufferUnionRoomPlayerName,.Lfe57-BufferUnionRoomPlayerName
	.align	2, 0
	.type	 HandlePlayerListUpdate,function
	.thumb_func
HandlePlayerListUpdate:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	ldr	r0, .L1417
	ldr	r4, [r0]
	mov	r7, #0x0
	mov	r6, #0x0
	mov	r5, #0x0
.L1387:
	ldr	r0, [r4, #0xc]
	add	r0, r0, r5
	ldr	r1, .L1417+0x4
	bl	ArePlayersDifferent
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	cmp	r3, #0x1
	bne	.L1386	@cond_branch
	ldr	r1, [r4, #0xc]
	ldr	r0, [r4, #0x8]
	add	r1, r1, r5
	ldmia	r1!, {r2, r5, r6}
	stmia	r0!, {r2, r5, r6}
	ldmia	r1!, {r2, r5, r6}
	stmia	r0!, {r2, r5, r6}
	ldr	r1, [r4, #0x8]
	mov	r0, #0x0
	strh	r0, [r1, #0x18]
	ldr	r2, [r4, #0x8]
	ldrb	r1, [r2, #0x1a]
	mov	r5, #0x4
	neg	r5, r5
	add	r0, r5, #0
	and	r1, r1, r0
	mov	r0, #0x1
	orr	r1, r1, r0
	strb	r1, [r2, #0x1a]
	ldr	r0, [r4, #0x8]
	strb	r3, [r0, #0x1b]
	mov	r0, #0x4
	b	.L1415
.L1418:
	.align	2, 0
.L1417:
	.word	sWirelessLinkMain
	.word	sRfuPlayerData_Dummy
.L1386:
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L1387	@cond_branch
	mov	r6, #0x0
	mov	r9, r6
.L1393:
	ldr	r0, [r4]
	mov	r1, r9
	lsl	r5, r1, #0x5
	add	r2, r0, r5
	ldrb	r0, [r2, #0x1a]
	lsl	r0, r0, #0x1e
	mov	r8, r5
	cmp	r0, #0
	beq	.L1392	@cond_branch
	ldr	r1, [r4, #0x4]
	add	r0, r2, #0
	bl	GetNewIncomingPlayerId
	add	r6, r0, #0
	cmp	r6, #0xff
	beq	.L1395	@cond_branch
	ldr	r0, [r4]
	add	r2, r0, r5
	ldrb	r1, [r2, #0x1a]
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	bne	.L1396	@cond_branch
	lsl	r0, r6, #0x3
	sub	r0, r0, r6
	lsl	r6, r0, #0x2
	ldr	r1, [r4, #0x4]
	add	r1, r1, r6
	add	r0, r2, #0
	bl	ArePlayerDataDifferent
	cmp	r0, #0
	beq	.L1397	@cond_branch
	ldr	r1, [r4]
	ldr	r0, [r4, #0x4]
	add	r1, r1, r5
	add	r0, r0, r6
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r1, #0x40
	strb	r1, [r0, #0x1b]
	mov	r7, #0x1
	b	.L1401
.L1397:
	ldr	r0, [r4]
	add	r1, r0, r5
	ldrb	r0, [r1, #0x1b]
	cmp	r0, #0
	beq	.L1401	@cond_branch
	sub	r0, r0, #0x1
	strb	r0, [r1, #0x1b]
	ldr	r0, [r4]
	add	r0, r0, r5
	ldrb	r0, [r0, #0x1b]
	cmp	r0, #0
	bne	.L1401	@cond_branch
	b	.L1416
.L1396:
	mov	r3, #0x4
	neg	r3, r3
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r1, #0x0
	strb	r1, [r0, #0x1b]
.L1416:
	mov	r7, #0x2
.L1401:
	ldr	r0, [r4]
	add	r0, r0, r8
	mov	r1, #0x0
	strh	r1, [r0, #0x18]
	b	.L1392
.L1395:
	ldr	r0, [r4]
	add	r1, r0, r5
	ldrb	r0, [r1, #0x1a]
	lsl	r2, r0, #0x1e
	lsr	r0, r2, #0x1e
	cmp	r0, #0x2
	beq	.L1403	@cond_branch
	ldrh	r0, [r1, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x18]
	ldr	r0, [r4]
	add	r2, r0, r5
	ldrh	r1, [r2, #0x18]
	ldr	r0, .L1419
	cmp	r1, r0
	bls	.L1392	@cond_branch
	ldrb	r0, [r2, #0x1a]
	mov	r5, #0x4
	neg	r5, r5
	add	r1, r5, #0
	and	r0, r0, r1
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2, #0x1a]
	mov	r7, #0x2
	b	.L1392
.L1420:
	.align	2, 0
.L1419:
	.word	0x257
.L1403:
	lsr	r0, r2, #0x1e
	cmp	r0, #0x2
	bne	.L1392	@cond_branch
	ldrh	r0, [r1, #0x18]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x18]
	ldr	r0, [r4]
	add	r2, r0, r5
	ldrh	r1, [r2, #0x18]
	ldr	r0, .L1421
	cmp	r1, r0
	bls	.L1392	@cond_branch
	add	r0, r2, #0
	mov	r1, #0x1
	bl	ClearRfuPlayerList
.L1392:
	mov	r0, r9
	add	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	cmp	r0, #0x7
	bhi	.LCB10601
	b	.L1393	@long jump
.LCB10601:
	mov	r5, #0x0
	mov	r6, #0x3
.L1412:
	ldr	r0, [r4]
	ldr	r1, [r4, #0x4]
	add	r1, r1, r5
	mov	r2, #0x8
	bl	TryAddIncomingPlayerToList
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xff
	beq	.L1411	@cond_branch
	mov	r7, #0x1
.L1411:
	add	r5, r5, #0x1c
	sub	r6, r6, #0x1
	cmp	r6, #0
	bge	.L1412	@cond_branch
	add	r0, r7, #0
.L1415:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1422:
	.align	2, 0
.L1421:
	.word	0x383
.Lfe58:
	.size	 HandlePlayerListUpdate,.Lfe58-HandlePlayerListUpdate
	.align	2, 0
	.type	 Task_SearchForChildOrParent,function
	.thumb_func
Task_SearchForChildOrParent:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x20
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	lsl	r0, r0, #0x2
	add	r0, r0, sl
	lsl	r0, r0, #0x3
	ldr	r1, .L1439
	add	r6, r0, r1
	mov	r7, #0x0
	mov	r0, sp
	add	r0, r0, #0x10
	str	r0, [sp, #0x18]
.L1427:
	lsl	r2, r7, #0x18
	lsr	r2, r2, #0x18
	mov	r0, sp
	ldr	r1, [sp, #0x18]
	bl	Rfu_GetCompatiblePlayerData
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, sp
	ldrb	r0, [r0, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	mov	r2, sl
	lsl	r1, r2, #0x2
	add	r1, r1, sl
	lsl	r1, r1, #0x3
	ldr	r3, .L1439+0x4
	add	r1, r1, r3
	mov	r5, #0x10
	ldrsh	r1, [r1, r5]
	bl	IsPartnerActivityAcceptable
	cmp	r0, #0
	bne	.L1428	@cond_branch
	mov	r1, sp
	ldr	r0, .L1439+0x8
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
.L1428:
	mov	r0, sp
	ldrb	r1, [r0]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1429	@cond_branch
	mov	r1, sp
	ldr	r0, .L1439+0x8
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
.L1429:
	cmp	r4, #0
	bne	.L1430	@cond_branch
	lsl	r0, r7, #0x3
	mov	r8, r0
	add	r1, r7, #0x1
	mov	r9, r1
	cmp	r7, #0
	ble	.L1432	@cond_branch
	mov	r2, #0x0
	str	r2, [sp, #0x1c]
	add	r4, r7, #0
.L1434:
	ldr	r0, [r6, #0x4]
	ldr	r3, [sp, #0x1c]
	add	r0, r0, r3
	mov	r1, sp
	bl	ArePlayersDifferent
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1433	@cond_branch
	mov	r1, sp
	ldr	r0, .L1439+0x8
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
.L1433:
	ldr	r5, [sp, #0x1c]
	add	r5, r5, #0x1c
	str	r5, [sp, #0x1c]
	sub	r4, r4, #0x1
	cmp	r4, #0
	bne	.L1434	@cond_branch
.L1432:
	ldr	r1, [r6, #0x4]
	mov	r0, r8
	sub	r4, r0, r7
	lsl	r4, r4, #0x2
	add	r1, r1, r4
	mov	r0, sp
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldr	r0, [r6, #0x4]
	add	r0, r0, r4
	ldr	r1, .L1439+0x8
	bl	ArePlayersDifferent
	ldr	r3, [r6, #0x4]
	add	r3, r3, r4
	mov	r2, #0x1
	and	r2, r2, r0
	ldrb	r0, [r3, #0x18]
	mov	r4, #0x2
	neg	r4, r4
	add	r1, r4, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r3, #0x18]
	b	.L1426
.L1440:
	.align	2, 0
.L1439:
	.word	gTasks+0x8
	.word	gTasks
	.word	sRfuPlayerData_Dummy
.L1430:
	ldr	r1, [r6]
	lsl	r4, r7, #0x3
	sub	r4, r4, r7
	lsl	r4, r4, #0x2
	add	r1, r1, r4
	mov	r0, sp
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldr	r0, [r6]
	add	r0, r0, r4
	ldr	r1, .L1441
	bl	ArePlayersDifferent
	ldr	r3, [r6]
	add	r3, r3, r4
	mov	r2, #0x1
	and	r2, r2, r0
	ldrb	r0, [r3, #0x18]
	mov	r4, #0x2
	neg	r4, r4
	add	r1, r4, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r3, #0x18]
	add	r7, r7, #0x1
	mov	r9, r7
.L1426:
	mov	r7, r9
	cmp	r7, #0x3
	bgt	.LCB10847
	b	.L1427	@long jump
.LCB10847:
	add	sp, sp, #0x20
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1442:
	.align	2, 0
.L1441:
	.word	sRfuPlayerData_Dummy
.Lfe59:
	.size	 Task_SearchForChildOrParent,.Lfe59-Task_SearchForChildOrParent
	.align	2, 0
	.type	 CreateTask_SearchForChildOrParent,function
	.thumb_func
CreateTask_SearchForChildOrParent:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r0, .L1444
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r2, .L1444+0x4
	add	r3, r1, r2
	str	r4, [r3]
	str	r5, [r3, #0x4]
	add	r2, r2, r1
	strh	r6, [r2, #0x8]
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L1445:
	.align	2, 0
.L1444:
	.word	Task_SearchForChildOrParent
	.word	gTasks+0x8
.Lfe60:
	.size	 CreateTask_SearchForChildOrParent,.Lfe60-CreateTask_SearchForChildOrParent
	.align	2, 0
	.type	 Task_ListenForCompatiblePartners,function
	.thumb_func
Task_ListenForCompatiblePartners:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0xc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	sl, r0
	lsl	r0, r0, #0x2
	add	r0, r0, sl
	lsl	r0, r0, #0x3
	ldr	r1, .L1459
	add	r6, r0, r1
	mov	r3, #0x0
.L1450:
	lsl	r4, r3, #0x3
	sub	r0, r4, r3
	lsl	r5, r0, #0x2
	ldr	r0, [r6]
	add	r0, r0, r5
	add	r1, r0, #0
	add	r1, r1, #0x10
	lsl	r2, r3, #0x18
	lsr	r2, r2, #0x18
	str	r3, [sp]
	bl	Rfu_GetCompatiblePlayerData
	ldr	r0, [r6]
	add	r0, r0, r5
	ldrb	r0, [r0, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	mov	r2, sl
	lsl	r1, r2, #0x2
	add	r1, r1, sl
	lsl	r1, r1, #0x3
	ldr	r7, .L1459+0x4
	add	r1, r1, r7
	mov	r2, #0xc
	ldrsh	r1, [r1, r2]
	bl	IsPartnerActivityAcceptable
	mov	r8, r4
	ldr	r3, [sp]
	cmp	r0, #0
	bne	.L1451	@cond_branch
	ldr	r1, [r6]
	add	r1, r1, r5
	ldr	r0, .L1459+0x8
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
	ldmia	r0!, {r2, r4, r7}
	stmia	r1!, {r2, r4, r7}
.L1451:
	add	r4, r3, #0x1
	mov	r9, r4
	cmp	r3, #0
	ble	.L1453	@cond_branch
	str	r5, [sp, #0x4]
	mov	r5, #0x0
	str	r5, [sp, #0x8]
	add	r4, r3, #0
.L1455:
	ldr	r1, [r6]
	ldr	r7, [sp, #0x8]
	add	r0, r1, r7
	ldr	r2, [sp, #0x4]
	add	r1, r1, r2
	str	r3, [sp]
	bl	ArePlayersDifferent
	lsl	r0, r0, #0x18
	ldr	r3, [sp]
	cmp	r0, #0
	bne	.L1454	@cond_branch
	ldr	r1, [r6]
	ldr	r5, [sp, #0x4]
	add	r1, r1, r5
	ldr	r0, .L1459+0x8
	ldmia	r0!, {r2, r5, r7}
	stmia	r1!, {r2, r5, r7}
	ldmia	r0!, {r2, r5, r7}
	stmia	r1!, {r2, r5, r7}
.L1454:
	ldr	r7, [sp, #0x8]
	add	r7, r7, #0x1c
	str	r7, [sp, #0x8]
	sub	r4, r4, #0x1
	cmp	r4, #0
	bne	.L1455	@cond_branch
.L1453:
	mov	r0, r8
	sub	r4, r0, r3
	lsl	r4, r4, #0x2
	ldr	r0, [r6]
	add	r0, r0, r4
	ldr	r1, .L1459+0x8
	bl	ArePlayersDifferent
	ldr	r3, [r6]
	add	r3, r3, r4
	mov	r2, #0x1
	and	r2, r2, r0
	ldrb	r0, [r3, #0x18]
	mov	r4, #0x2
	neg	r4, r4
	add	r1, r4, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r3, #0x18]
	mov	r3, r9
	cmp	r3, #0x3
	ble	.L1450	@cond_branch
	add	sp, sp, #0xc
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1460:
	.align	2, 0
.L1459:
	.word	gTasks+0x8
	.word	gTasks
	.word	sRfuPlayerData_Dummy
.Lfe61:
	.size	 Task_ListenForCompatiblePartners,.Lfe61-Task_ListenForCompatiblePartners
	.align	2, 0
	.type	 HasWonderCardOrNewsByLinkGroup,function
	.thumb_func
HasWonderCardOrNewsByLinkGroup:
	push	{lr}
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	cmp	r1, #0x7
	bne	.L1462	@cond_branch
	ldrb	r1, [r0]
	mov	r0, #0x20
	b	.L1471
.L1462:
	cmp	r1, #0x8
	bne	.L1466	@cond_branch
	ldrb	r1, [r0]
	mov	r0, #0x10
.L1471:
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1466	@cond_branch
	mov	r0, #0x1
	b	.L1470
.L1466:
	mov	r0, #0x0
.L1470:
	pop	{r1}
	bx	r1
.Lfe62:
	.size	 HasWonderCardOrNewsByLinkGroup,.Lfe62-HasWonderCardOrNewsByLinkGroup
	.align	2, 0
	.type	 Task_ListenForWonderDistributor,function
	.thumb_func
Task_ListenForWonderDistributor:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L1479
	add	r4, r1, r0
	mov	r6, #0x0
	sub	r0, r0, #0x8
	mov	r5, #0x0
	add	r1, r1, r0
	mov	r8, r1
.L1476:
	ldr	r0, [r4]
	add	r0, r0, r5
	add	r1, r0, #0
	add	r1, r1, #0x10
	lsl	r2, r6, #0x18
	lsr	r2, r2, #0x18
	bl	Rfu_GetWonderDistributorPlayerData
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L1477	@cond_branch
	ldr	r0, [r4]
	add	r0, r0, r5
	mov	r2, r8
	mov	r3, #0xc
	ldrsh	r1, [r2, r3]
	bl	HasWonderCardOrNewsByLinkGroup
.L1477:
	ldr	r0, [r4]
	add	r0, r0, r5
	ldr	r1, .L1479+0x4
	bl	ArePlayersDifferent
	ldr	r3, [r4]
	add	r3, r3, r5
	mov	r2, #0x1
	and	r2, r2, r0
	ldrb	r0, [r3, #0x18]
	mov	r7, #0x2
	neg	r7, r7
	add	r1, r7, #0
	and	r0, r0, r1
	orr	r0, r0, r2
	strb	r0, [r3, #0x18]
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L1476	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1480:
	.align	2, 0
.L1479:
	.word	gTasks+0x8
	.word	sRfuPlayerData_Dummy
.Lfe63:
	.size	 Task_ListenForWonderDistributor,.Lfe63-Task_ListenForWonderDistributor
	.align	2, 0
	.type	 CreateTask_ListenForCompatiblePartners,function
	.thumb_func
CreateTask_ListenForCompatiblePartners:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, .L1482
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x3
	ldr	r1, .L1482+0x4
	add	r3, r2, r1
	str	r4, [r3]
	add	r1, r1, r2
	strh	r5, [r1, #0x4]
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L1483:
	.align	2, 0
.L1482:
	.word	Task_ListenForCompatiblePartners
	.word	gTasks+0x8
.Lfe64:
	.size	 CreateTask_ListenForCompatiblePartners,.Lfe64-CreateTask_ListenForCompatiblePartners
	.align	2, 0
	.type	 CreateTask_ListenForWonderDistributor,function
	.thumb_func
CreateTask_ListenForWonderDistributor:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, .L1485
	mov	r1, #0x0
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x2
	add	r2, r2, r0
	lsl	r2, r2, #0x3
	ldr	r1, .L1485+0x4
	add	r3, r2, r1
	str	r4, [r3]
	add	r1, r1, r2
	strh	r5, [r1, #0x4]
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L1486:
	.align	2, 0
.L1485:
	.word	Task_ListenForWonderDistributor
	.word	gTasks+0x8
.Lfe65:
	.size	 CreateTask_ListenForWonderDistributor,.Lfe65-CreateTask_ListenForWonderDistributor
	.align	2, 0
	.type	 UR_PrintFieldMessage,function
	.thumb_func
UR_PrintFieldMessage:
	push	{r4, lr}
	add	r4, r0, #0
	bl	LoadStdWindowFrameGfx
	mov	r0, #0x0
	mov	r1, #0x1
	bl	DrawDialogueFrame
	ldr	r0, .L1488
	add	r1, r4, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x0
	mov	r1, #0x1
	bl	AddTextPrinterWithCustomSpeedForMessage
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L1489:
	.align	2, 0
.L1488:
	.word	gStringVar4
.Lfe66:
	.size	 UR_PrintFieldMessage,.Lfe66-UR_PrintFieldMessage
	.align	2, 0
	.type	 UR_RunTextPrinters,function
	.thumb_func
UR_RunTextPrinters:
	push	{lr}
	bl	RunTextPrinters_CheckPrinter0Active
	lsl	r0, r0, #0x10
	cmp	r0, #0
	beq	.L1491	@cond_branch
	mov	r0, #0x0
	b	.L1493
.L1491:
	mov	r0, #0x1
.L1493:
	pop	{r1}
	bx	r1
.Lfe67:
	.size	 UR_RunTextPrinters,.Lfe67-UR_RunTextPrinters
	.align	2, 0
	.type	 PrintOnTextbox,function
	.thumb_func
PrintOnTextbox:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L1496	@cond_branch
	cmp	r0, #0x1
	beq	.L1497	@cond_branch
	b	.L1495
.L1496:
	bl	LoadStdWindowFrameGfx
	mov	r0, #0x0
	mov	r1, #0x1
	bl	DrawDialogueFrame
	ldr	r0, .L1502
	add	r1, r5, #0
	bl	StringExpandPlaceholders
	mov	r0, #0x1
	bl	AddTextPrinterForMessage
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L1495
.L1503:
	.align	2, 0
.L1502:
	.word	gStringVar4
.L1497:
	bl	RunTextPrinters_CheckPrinter0Active
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0
	bne	.L1495	@cond_branch
	strb	r0, [r4]
	mov	r0, #0x1
	b	.L1501
.L1495:
	mov	r0, #0x0
.L1501:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe68:
	.size	 PrintOnTextbox,.Lfe68-PrintOnTextbox
	.align	2, 0
	.type	 UnionRoomHandleYesNo,function
	.thumb_func
UnionRoomHandleYesNo:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L1506	@cond_branch
	cmp	r0, #0x1
	beq	.L1508	@cond_branch
	b	.L1505
.L1506:
	cmp	r5, #0
	beq	.L1507	@cond_branch
	mov	r0, #0x3
	neg	r0, r0
	b	.L1513
.L1507:
	bl	DisplayYesNoMenuDefaultYes
	ldrb	r0, [r4]
	add	r0, r0, #0x1
	strb	r0, [r4]
	b	.L1505
.L1508:
	cmp	r5, #0
	beq	.L1509	@cond_branch
	bl	DestroyYesNoMenu
	mov	r0, #0x0
	strb	r0, [r4]
	mov	r0, #0x3
	neg	r0, r0
	b	.L1513
.L1509:
	bl	Menu_ProcessInputNoWrapClearOnChoose
	lsl	r0, r0, #0x18
	asr	r1, r0, #0x18
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r0, r0, r2
	lsr	r0, r0, #0x18
	cmp	r0, #0x2
	bhi	.L1505	@cond_branch
	strb	r5, [r4]
	add	r0, r1, #0
	b	.L1513
.L1505:
	mov	r0, #0x2
	neg	r0, r0
.L1513:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 UnionRoomHandleYesNo,.Lfe69-UnionRoomHandleYesNo
	.align	2, 0
	.type	 CreateTradeBoardWindow,function
	.thumb_func
CreateTradeBoardWindow:
	push	{r4, lr}
	add	sp, sp, #-0x8
	bl	AddWindow
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	add	r0, r4, #0
	mov	r1, #0xff
	bl	FillWindowPixelBuffer
	ldr	r2, .L1515
	mov	r0, #0x1
	str	r0, [sp]
	mov	r0, #0x6
	str	r0, [sp, #0x4]
	add	r0, r4, #0
	mov	r1, #0x0
	mov	r3, #0x8
	bl	PrintUnionRoomText
	add	r0, r4, #0
	bl	PutWindowTilemap
	add	r0, r4, #0
	mov	r1, #0x2
	bl	CopyWindowToVram
	add	r0, r4, #0
	add	sp, sp, #0x8
	pop	{r4}
	pop	{r1}
	bx	r1
.L1516:
	.align	2, 0
.L1515:
	.word	gText_UR_NameWantedOfferLv
.Lfe70:
	.size	 CreateTradeBoardWindow,.Lfe70-CreateTradeBoardWindow
	.align	2, 0
	.type	 DeleteTradeBoardWindow,function
	.thumb_func
DeleteTradeBoardWindow:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	add	r0, r4, #0
	bl	RemoveWindow
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe71:
	.size	 DeleteTradeBoardWindow,.Lfe71-DeleteTradeBoardWindow
	.align	2, 0
	.type	 ListMenuHandler_AllItemsAvailable,function
	.thumb_func
ListMenuHandler_AllItemsAvailable:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r7, r0, #0
	add	r5, r1, #0
	mov	r9, r2
	add	r0, r3, #0
	ldrb	r4, [r7]
	cmp	r4, #0
	beq	.L1520	@cond_branch
	cmp	r4, #0x1
	beq	.L1521	@cond_branch
	b	.L1519
.L1520:
	bl	AddWindow
	strb	r0, [r5]
	ldrb	r0, [r5]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L1528
	add	r2, r0, #0
	ldr	r1, [sp, #0x1c]
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldmia	r1!, {r3, r4, r6}
	stmia	r2!, {r3, r4, r6}
	ldrb	r1, [r5]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	ListMenuInit
	mov	r1, r9
	strb	r0, [r1]
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	CopyWindowToVram
	ldrb	r0, [r7]
	add	r0, r0, #0x1
	strb	r0, [r7]
	b	.L1519
.L1529:
	.align	2, 0
.L1528:
	.word	gMultiuseListMenuTemplate
.L1521:
	mov	r3, r9
	ldrb	r0, [r3]
	bl	ListMenu_ProcessInput
	mov	r8, r0
	ldr	r0, .L1530
	ldrh	r1, [r0, #0x2e]
	and	r4, r4, r1
	cmp	r4, #0
	beq	.L1522	@cond_branch
	mov	r4, r9
	ldrb	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r5]
	bl	RemoveWindow
	mov	r0, #0x0
	strb	r0, [r7]
	mov	r0, r8
	b	.L1527
.L1531:
	.align	2, 0
.L1530:
	.word	gMain
.L1522:
	mov	r0, #0x2
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1519	@cond_branch
	mov	r6, r9
	ldrb	r0, [r6]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r5]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r5]
	bl	RemoveWindow
	strb	r4, [r7]
	mov	r0, #0x2
	neg	r0, r0
	b	.L1527
.L1519:
	mov	r0, #0x1
	neg	r0, r0
.L1527:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe72:
	.size	 ListMenuHandler_AllItemsAvailable,.Lfe72-ListMenuHandler_AllItemsAvailable
	.align	2, 0
	.type	 TradeBoardMenuHandler,function
	.thumb_func
TradeBoardMenuHandler:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	mov	r9, r0
	add	r4, r1, #0
	add	r5, r2, #0
	add	r7, r3, #0
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L1534	@cond_branch
	cmp	r0, #0x1
	beq	.L1535	@cond_branch
	b	.L1533
.L1534:
	ldr	r0, .L1545
	bl	CreateTradeBoardWindow
	strb	r0, [r7]
	ldr	r0, [sp, #0x1c]
	bl	AddWindow
	strb	r0, [r4]
	ldrb	r0, [r4]
	mov	r1, #0x0
	bl	DrawStdWindowFrame
	ldr	r0, .L1545+0x4
	add	r2, r0, #0
	ldr	r1, [sp, #0x20]
	ldmia	r1!, {r3, r6, r7}
	stmia	r2!, {r3, r6, r7}
	ldmia	r1!, {r3, r6, r7}
	stmia	r2!, {r3, r6, r7}
	ldrb	r1, [r4]
	strb	r1, [r0, #0x10]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	ListMenuInit
	strb	r0, [r5]
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	CopyWindowToVram
	mov	r1, r9
	ldrb	r0, [r1]
	add	r0, r0, #0x1
	strb	r0, [r1]
	b	.L1533
.L1546:
	.align	2, 0
.L1545:
	.word	sWindowTemplate_TradingBoardHeader
	.word	gMultiuseListMenuTemplate
.L1535:
	ldrb	r0, [r5]
	bl	ListMenu_ProcessInput
	add	r1, r0, #0
	ldr	r0, .L1547
	ldrh	r2, [r0, #0x2e]
	mov	r0, #0x3
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L1533	@cond_branch
	cmp	r1, #0x8
	beq	.L1538	@cond_branch
	mov	r0, #0x2
	and	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	cmp	r0, #0
	beq	.L1537	@cond_branch
.L1538:
	ldrb	r0, [r5]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4]
	bl	RemoveWindow
	ldrb	r0, [r7]
	bl	DeleteTradeBoardWindow
	mov	r0, #0x0
	mov	r3, r9
	strb	r0, [r3]
	mov	r0, #0x2
	neg	r0, r0
	b	.L1544
.L1548:
	.align	2, 0
.L1547:
	.word	gMain
.L1537:
	ldr	r0, [sp, #0x24]
	bl	GetIndexOfNthTradeBoardOffer
	add	r6, r0, #0
	cmp	r6, #0
	blt	.L1540	@cond_branch
	ldrb	r0, [r5]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	DestroyListMenuTask
	ldrb	r0, [r4]
	mov	r1, #0x1
	bl	ClearStdWindowAndFrame
	ldrb	r0, [r4]
	bl	RemoveWindow
	ldrb	r0, [r7]
	bl	DeleteTradeBoardWindow
	mov	r0, r8
	mov	r7, r9
	strb	r0, [r7]
	add	r0, r6, #0
	b	.L1544
.L1540:
	mov	r0, #0x7
	bl	PlaySE
.L1533:
	mov	r0, #0x1
	neg	r0, r0
.L1544:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe73:
	.size	 TradeBoardMenuHandler,.Lfe73-TradeBoardMenuHandler
	.align	2, 0
	.type	 UR_ClearBg0,function
	.thumb_func
UR_ClearBg0:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x20
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.Lfe74:
	.size	 UR_ClearBg0,.Lfe74-UR_ClearBg0
	.align	2, 0
	.type	 JoinGroup_EnableScriptContexts,function
	.thumb_func
JoinGroup_EnableScriptContexts:
	push	{lr}
	add	sp, sp, #-0xc
	mov	r0, #0x20
	str	r0, [sp]
	str	r0, [sp, #0x4]
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	FillBgTilemapBufferRect
	mov	r0, #0x0
	bl	CopyBgTilemapBufferToVram
	bl	ScriptContext_Enable
	add	sp, sp, #0xc
	pop	{r0}
	bx	r0
.Lfe75:
	.size	 JoinGroup_EnableScriptContexts,.Lfe75-JoinGroup_EnableScriptContexts
	.align	2, 0
	.type	 PrintUnionRoomText,function
	.thumb_func
PrintUnionRoomText:
	push	{r4, r5, lr}
	add	sp, sp, #-0x10
	ldr	r5, [sp, #0x1c]
	ldr	r4, [sp, #0x20]
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	lsl	r5, r5, #0x18
	lsr	r5, r5, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	str	r2, [sp]
	mov	r2, sp
	strb	r0, [r2, #0x4]
	mov	r0, sp
	strb	r1, [r0, #0x5]
	strb	r3, [r0, #0x6]
	strb	r5, [r0, #0x7]
	strb	r3, [r0, #0x8]
	strb	r5, [r0, #0x9]
	ldrb	r1, [r2, #0xc]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldr	r2, .L1564
	ldrb	r1, [r2]
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	cmp	r4, #0x6
	bls	.LCB11927
	b	.L1552	@long jump
.LCB11927:
	lsl	r0, r4, #0x2
	ldr	r1, .L1564+0x4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1565:
	.align	2, 0
.L1564:
	.word	gTextFlags
	.word	.L1560
	.align	2, 0
	.align	2, 0
.L1560:
	.word	.L1553
	.word	.L1554
	.word	.L1555
	.word	.L1556
	.word	.L1557
	.word	.L1558
	.word	.L1559
.L1553:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x20
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x30
	b	.L1562
.L1554:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x40
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x50
	b	.L1562
.L1555:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x60
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x70
	b	.L1562
.L1556:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x30
	b	.L1562
.L1557:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x10
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	ldrb	r1, [r2, #0xd]
	mov	r0, #0x10
	neg	r0, r0
	and	r0, r0, r1
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
	and	r0, r0, r3
	mov	r1, #0x30
	b	.L1562
.L1558:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r4, #0xf
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0x70
	b	.L1563
.L1559:
	mov	r0, sp
	mov	r1, #0x0
	strb	r1, [r0, #0xa]
	strb	r1, [r0, #0xb]
	mov	r2, sp
	ldrb	r1, [r2, #0xc]
	mov	r4, #0xf
	mov	r3, #0xf
	add	r0, r3, #0
	and	r0, r0, r1
	mov	r1, #0xe0
.L1563:
	orr	r0, r0, r1
	strb	r0, [r2, #0xc]
	mov	r1, sp
	ldrb	r0, [r1, #0xd]
	orr	r0, r0, r4
	strb	r0, [r1, #0xd]
	and	r0, r0, r3
	mov	r1, #0x90
.L1562:
	orr	r0, r0, r1
	strb	r0, [r2, #0xd]
.L1552:
	mov	r0, sp
	mov	r1, #0xff
	mov	r2, #0x0
	bl	AddTextPrinter
	add	sp, sp, #0x10
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 PrintUnionRoomText,.Lfe76-PrintUnionRoomText
	.align	2, 0
	.type	 ClearRfuPlayerList,function
	.thumb_func
ClearRfuPlayerList:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	cmp	r1, #0
	beq	.L1568	@cond_branch
	ldr	r2, .L1572
	mov	r8, r2
	mov	r5, #0x0
	mov	r9, r5
	mov	r6, #0x4
	neg	r6, r6
	mov	ip, r6
	add	r2, r0, #0
	add	r2, r2, #0x18
	add	r4, r0, #0
	mov	r7, #0xff
	mov	sl, r7
	add	r3, r1, #0
.L1570:
	add	r1, r4, #0
	mov	r0, r8
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	mov	r0, sl
	strh	r0, [r2]
	ldrb	r1, [r2, #0x2]
	mov	r0, ip
	and	r0, r0, r1
	mov	r1, #0x5
	neg	r1, r1
	and	r0, r0, r1
	strb	r0, [r2, #0x2]
	mov	r5, r9
	strb	r5, [r2, #0x3]
	add	r2, r2, #0x20
	add	r4, r4, #0x20
	sub	r3, r3, #0x1
	cmp	r3, #0
	bne	.L1570	@cond_branch
.L1568:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1573:
	.align	2, 0
.L1572:
	.word	sRfuPlayerData_Dummy
.Lfe77:
	.size	 ClearRfuPlayerList,.Lfe77-ClearRfuPlayerList
	.align	2, 0
	.type	 ClearIncomingPlayerList,function
	.thumb_func
ClearIncomingPlayerList:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r1, .L1580
	mov	ip, r1
	mov	r5, #0x2
	neg	r5, r5
	mov	r8, r5
	add	r2, r0, #0
	add	r2, r2, #0x18
	add	r3, r0, #0
	mov	r4, #0x3
.L1578:
	add	r1, r3, #0
	mov	r0, ip
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	ldmia	r0!, {r5, r6, r7}
	stmia	r1!, {r5, r6, r7}
	ldrb	r1, [r2]
	mov	r0, r8
	and	r0, r0, r1
	strb	r0, [r2]
	add	r2, r2, #0x1c
	add	r3, r3, #0x1c
	sub	r4, r4, #0x1
	cmp	r4, #0
	bge	.L1578	@cond_branch
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1581:
	.align	2, 0
.L1580:
	.word	sRfuPlayerData_Dummy
.Lfe78:
	.size	 ClearIncomingPlayerList,.Lfe78-ClearIncomingPlayerList
	.align	2, 0
	.type	 ArePlayersDifferent,function
	.thumb_func
ArePlayersDifferent:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r2, #0x0
	add	r4, r5, #0x2
	add	r3, r6, #0x2
.L1586:
	add	r0, r4, r2
	add	r1, r3, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1596	@cond_branch
	add	r2, r2, #0x1
	cmp	r2, #0x1
	ble	.L1586	@cond_branch
	mov	r2, #0x0
	add	r4, r5, #0
	add	r4, r4, #0x10
	add	r3, r6, #0
	add	r3, r3, #0x10
.L1592:
	add	r0, r4, r2
	add	r1, r3, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	beq	.L1591	@cond_branch
.L1596:
	mov	r0, #0x1
	b	.L1595
.L1591:
	add	r2, r2, #0x1
	cmp	r2, #0x7
	ble	.L1592	@cond_branch
	mov	r0, #0x0
.L1595:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe79:
	.size	 ArePlayersDifferent,.Lfe79-ArePlayersDifferent
	.align	2, 0
	.type	 ArePlayerDataDifferent,function
	.thumb_func
ArePlayerDataDifferent:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r1, #0
	ldrb	r3, [r5, #0xa]
	mov	r0, #0x7f
	ldrb	r2, [r6, #0xa]
	add	r1, r0, #0
	and	r1, r1, r3
	and	r0, r0, r2
	cmp	r1, r0
	bne	.L1607	@cond_branch
	mov	r0, #0x80
	add	r1, r0, #0
	and	r1, r1, r3
	and	r0, r0, r2
	cmp	r1, r0
	bne	.L1607	@cond_branch
	mov	r2, #0x0
	add	r4, r5, #0x4
	add	r3, r6, #0x4
.L1603:
	add	r0, r4, r2
	add	r1, r3, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L1609	@cond_branch
	add	r2, r2, #0x1
	cmp	r2, #0x3
	ble	.L1603	@cond_branch
	ldrh	r2, [r5, #0x8]
	ldr	r0, .L1610
	ldrh	r3, [r6, #0x8]
	add	r1, r0, #0
	and	r1, r1, r2
	and	r0, r0, r3
	cmp	r1, r0
	bne	.L1607	@cond_branch
	ldrb	r2, [r5, #0x9]
	mov	r0, #0xfc
	ldrb	r3, [r6, #0x9]
	add	r1, r0, #0
	and	r1, r1, r2
	and	r0, r0, r3
	cmp	r1, r0
	bne	.L1607	@cond_branch
	mov	r0, #0x0
	b	.L1608
.L1611:
	.align	2, 0
.L1610:
	.word	0x3ff
.L1609:
.L1607:
	mov	r0, #0x1
.L1608:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe80:
	.size	 ArePlayerDataDifferent,.Lfe80-ArePlayerDataDifferent
	.align	2, 0
	.type	 GetNewIncomingPlayerId,function
	.thumb_func
GetNewIncomingPlayerId:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	mov	r8, r0
	mov	r7, #0xff
	mov	r6, #0x0
	add	r4, r1, #0
	add	r4, r4, #0x18
	add	r5, r1, #0
.L1616:
	ldrb	r1, [r4]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1615	@cond_branch
	mov	r0, r8
	add	r1, r5, #0
	bl	ArePlayersDifferent
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L1615	@cond_branch
	lsl	r0, r6, #0x18
	lsr	r7, r0, #0x18
	ldrb	r0, [r4]
	mov	r2, #0x2
	neg	r2, r2
	add	r1, r2, #0
	and	r0, r0, r1
	strb	r0, [r4]
.L1615:
	add	r4, r4, #0x1c
	add	r5, r5, #0x1c
	add	r6, r6, #0x1
	cmp	r6, #0x3
	ble	.L1616	@cond_branch
	add	r0, r7, #0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe81:
	.size	 GetNewIncomingPlayerId,.Lfe81-GetNewIncomingPlayerId
	.align	2, 0
	.type	 TryAddIncomingPlayerToList,function
	.thumb_func
TryAddIncomingPlayerToList:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r3, r0, #0
	mov	r8, r1
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	ldrb	r1, [r1, #0x18]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1620	@cond_branch
	mov	r5, #0x0
	cmp	r5, r6
	bge	.L1620	@cond_branch
	mov	r0, #0x4
	neg	r0, r0
	mov	r9, r0
	mov	r1, #0x2
	neg	r1, r1
	mov	ip, r1
	add	r2, r3, #0
	add	r2, r2, #0x18
	add	r1, r3, #0
.L1624:
	ldrb	r0, [r2, #0x2]
	mov	r3, #0x3
	and	r3, r3, r0
	cmp	r3, #0
	bne	.L1623	@cond_branch
	mov	r0, r8
	ldmia	r0!, {r4, r6, r7}
	stmia	r1!, {r4, r6, r7}
	ldmia	r0!, {r4, r6, r7}
	stmia	r1!, {r4, r6, r7}
	strh	r3, [r2]
	ldrb	r1, [r2, #0x2]
	mov	r0, r9
	and	r0, r0, r1
	mov	r1, #0x1
	orr	r0, r0, r1
	strb	r0, [r2, #0x2]
	mov	r0, #0x40
	strb	r0, [r2, #0x3]
	mov	r0, r8
	ldrb	r1, [r0, #0x18]
	mov	r0, ip
	and	r0, r0, r1
	mov	r1, r8
	strb	r0, [r1, #0x18]
	lsl	r0, r5, #0x18
	lsr	r0, r0, #0x18
	b	.L1627
.L1623:
	add	r2, r2, #0x20
	add	r1, r1, #0x20
	add	r5, r5, #0x1
	cmp	r5, r6
	blt	.L1624	@cond_branch
.L1620:
	mov	r0, #0xff
.L1627:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe82:
	.size	 TryAddIncomingPlayerToList,.Lfe82-TryAddIncomingPlayerToList
	.align	2, 0
	.type	 PrintGroupMemberOnWindow,function
	.thumb_func
PrintGroupMemberOnWindow:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x30
	add	r4, r1, #0
	add	r5, r3, #0
	ldr	r3, [sp, #0x50]
	ldr	r1, [sp, #0x54]
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	sl, r3
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldr	r0, .L1630
	mov	r8, r0
	add	r1, r1, #0x1
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L1630+0x4
	mov	r0, r8
	bl	StringAppend
	str	r6, [sp]
	mov	r0, #0x0
	str	r0, [sp, #0x4]
	add	r0, r7, #0
	mov	r1, #0x0
	mov	r2, r8
	add	r3, r4, #0
	bl	PrintUnionRoomText
	add	r4, r4, #0x12
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r9, r4
	ldrb	r0, [r5, #0xa]
	lsl	r0, r0, #0x19
	lsr	r2, r0, #0x19
	ldrb	r1, [r5, #0x1a]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1629	@cond_branch
	mov	r0, #0x40
	and	r2, r2, r0
	cmp	r2, #0
	bne	.L1629	@cond_branch
	add	r4, sp, #0x10
	add	r1, r5, #0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r1, [r5]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	str	r6, [sp]
	mov	r0, sl
	str	r0, [sp, #0x4]
	add	r0, r7, #0
	mov	r1, #0x2
	add	r2, r4, #0
	mov	r3, r9
	bl	PrintUnionRoomText
	ldrb	r1, [r5, #0x2]
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	add	r0, sp, #0x8
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r1, .L1630+0x8
	mov	r0, r8
	bl	StringCopy
	mov	r0, r8
	add	r1, sp, #0x8
	bl	StringAppend
	mov	r3, r9
	add	r3, r3, #0x4d
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r6, [sp]
	mov	r0, sl
	str	r0, [sp, #0x4]
	add	r0, r7, #0
	mov	r1, #0x0
	mov	r2, r8
	bl	PrintUnionRoomText
.L1629:
	add	sp, sp, #0x30
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1631:
	.align	2, 0
.L1630:
	.word	gStringVar4
	.word	gText_UR_Colon
	.word	gText_UR_ID
.Lfe83:
	.size	 PrintGroupMemberOnWindow,.Lfe83-PrintGroupMemberOnWindow
	.align	2, 0
	.type	 PrintGroupCandidateOnWindow,function
	.thumb_func
PrintGroupCandidateOnWindow:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x30
	add	r5, r3, #0
	ldr	r3, [sp, #0x4c]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	lsl	r3, r3, #0x18
	lsr	r7, r3, #0x18
	ldrb	r1, [r5, #0x1a]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1633	@cond_branch
	add	r4, sp, #0x10
	add	r1, r5, #0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r1, [r5]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	mov	r0, r8
	str	r0, [sp]
	str	r7, [sp, #0x4]
	mov	r0, r9
	mov	r1, #0x2
	add	r2, r4, #0
	add	r3, r6, #0
	bl	PrintUnionRoomText
	ldrb	r1, [r5, #0x2]
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x8
	orr	r1, r1, r0
	add	r0, sp, #0x8
	mov	r2, #0x2
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	ldr	r4, .L1634
	ldr	r1, .L1634+0x4
	add	r0, r4, #0
	bl	StringCopy
	add	r0, r4, #0
	add	r1, sp, #0x8
	bl	StringAppend
	add	r3, r6, #0
	add	r3, r3, #0x47
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	mov	r0, r8
	str	r0, [sp]
	str	r7, [sp, #0x4]
	mov	r0, r9
	mov	r1, #0x0
	add	r2, r4, #0
	bl	PrintUnionRoomText
.L1633:
	add	sp, sp, #0x30
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1635:
	.align	2, 0
.L1634:
	.word	gStringVar4
	.word	gText_UR_ID
.Lfe84:
	.size	 PrintGroupCandidateOnWindow,.Lfe84-PrintGroupCandidateOnWindow
	.align	2, 0
	.type	 IsPlayerFacingTradingBoard,function
	.thumb_func
IsPlayerFacingTradingBoard:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r0, [r0, r1]
	cmp	r0, #0x9
	bne	.L1639	@cond_branch
	mov	r1, #0x0
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x8
	bne	.L1639	@cond_branch
	ldr	r0, .L1642
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0x2
	beq	.L1640	@cond_branch
	cmp	r0, #0
	bne	.L1639	@cond_branch
.L1640:
	mov	r0, #0x1
	b	.L1641
.L1643:
	.align	2, 0
.L1642:
	.word	gPlayerAvatar
.L1639:
	mov	r0, #0x0
.L1641:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe85:
	.size	 IsPlayerFacingTradingBoard,.Lfe85-IsPlayerFacingTradingBoard
	.align	2, 0
	.type	 GetResponseIdx_InviteToURoomActivity,function
	.thumb_func
GetResponseIdx_InviteToURoomActivity:
	push	{lr}
	cmp	r0, #0x4
	beq	.L1647	@cond_branch
	cmp	r0, #0x4
	ble	.L1650	@cond_branch
	cmp	r0, #0x5
	beq	.L1646	@cond_branch
	cmp	r0, #0x8
	beq	.L1648	@cond_branch
	b	.L1650
.L1646:
	mov	r0, #0x1
	b	.L1653
.L1647:
	mov	r0, #0x2
	b	.L1653
.L1648:
	mov	r0, #0x3
	b	.L1653
.L1650:
	mov	r0, #0x0
.L1653:
	pop	{r1}
	bx	r1
.Lfe86:
	.size	 GetResponseIdx_InviteToURoomActivity,.Lfe86-GetResponseIdx_InviteToURoomActivity
	.align	2, 0
	.type	 ConvPartnerUnameAndGetWhetherMetAlready,function
	.thumb_func
ConvPartnerUnameAndGetWhetherMetAlready:
	push	{r4, lr}
	add	sp, sp, #-0x20
	add	r4, r0, #0
	add	r1, r4, #0
	add	r1, r1, #0x10
	mov	r0, sp
	bl	StringCopy
	ldrb	r1, [r4]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	mov	r0, sp
	bl	ConvertInternationalString
	add	r4, r4, #0x2
	add	r0, r4, #0
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, sp
	bl	PlayerHasMetTrainerBefore
	add	sp, sp, #0x20
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe87:
	.size	 ConvPartnerUnameAndGetWhetherMetAlready,.Lfe87-ConvPartnerUnameAndGetWhetherMetAlready
	.align	2, 0
	.type	 UnionRoomGetPlayerInteractionResponse,function
	.thumb_func
UnionRoomGetPlayerInteractionResponse:
	push	{r4, r5, r6, r7, lr}
	add	r7, r3, #0
	lsl	r1, r1, #0x18
	lsr	r6, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x13
	add	r5, r0, r2
	ldrb	r1, [r5, #0xa]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L1656	@cond_branch
	cmp	r6, #0
	bne	.L1656	@cond_branch
	ldr	r4, .L1672
	add	r1, r5, #0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r1, [r5]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	add	r0, r5, #0x2
	bl	ReadAsU16
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r4, #0
	bl	PlayerHasMetTrainerBefore
	add	r2, r0, #0
	ldrb	r1, [r5, #0xa]
	mov	r0, #0x7f
	and	r0, r0, r1
	cmp	r0, #0x45
	bne	.L1657	@cond_branch
	ldr	r0, .L1672+0x4
	ldr	r3, .L1672+0x8
	lsl	r1, r7, #0x2
	lsl	r2, r2, #0x3
	add	r1, r1, r2
	add	r1, r1, r3
	ldr	r1, [r1]
	bl	StringExpandPlaceholders
	mov	r0, #0x2
	b	.L1669
.L1673:
	.align	2, 0
.L1672:
	.word	gStringVar1
	.word	gStringVar4
	.word	gTexts_UR_JoinChat
.L1657:
	ldr	r0, .L1674
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r0, [r1]
	bl	UR_PrintFieldMessage
	mov	r0, #0x1
	b	.L1669
.L1675:
	.align	2, 0
.L1674:
	.word	gTexts_UR_CommunicatingWait
.L1656:
	ldr	r4, .L1676
	add	r1, r5, #0
	add	r1, r1, #0x10
	add	r0, r4, #0
	bl	StringCopy
	ldrb	r1, [r5]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, r4, #0
	bl	ConvertInternationalString
	cmp	r6, #0
	beq	.L1660	@cond_branch
	add	r0, r5, r6
	ldrb	r0, [r0, #0x3]
	lsr	r7, r0, #0x3
	mov	r0, #0x1
	and	r7, r7, r0
.L1660:
	ldrb	r0, [r5, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	mov	r1, #0x3f
	and	r1, r1, r0
	cmp	r1, #0x4
	beq	.L1663	@cond_branch
	cmp	r1, #0x4
	bgt	.L1668	@cond_branch
	cmp	r1, #0x1
	beq	.L1662	@cond_branch
	b	.L1666
.L1677:
	.align	2, 0
.L1676:
	.word	gStringVar1
.L1668:
	cmp	r1, #0x5
	beq	.L1664	@cond_branch
	cmp	r1, #0x8
	beq	.L1665	@cond_branch
	b	.L1666
.L1662:
	ldr	r5, .L1678
	ldr	r4, .L1678+0x4
	bl	Random
	lsl	r0, r0, #0x10
	mov	r1, #0xc0
	lsl	r1, r1, #0xa
	and	r1, r1, r0
	lsr	r1, r1, #0xe
	lsl	r0, r7, #0x4
	add	r1, r1, r0
	add	r1, r1, r4
	ldr	r1, [r1]
	b	.L1670
.L1679:
	.align	2, 0
.L1678:
	.word	gStringVar4
	.word	gTexts_UR_BattleReaction
.L1663:
	ldr	r5, .L1680
	ldr	r4, .L1680+0x4
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	lsl	r1, r7, #0x4
	b	.L1671
.L1681:
	.align	2, 0
.L1680:
	.word	gStringVar4
	.word	gTexts_UR_TradeReaction
.L1664:
	ldr	r5, .L1682
	ldr	r4, .L1682+0x4
	bl	Random
	lsl	r0, r0, #0x10
	mov	r1, #0xc0
	lsl	r1, r1, #0xa
	and	r1, r1, r0
	lsr	r1, r1, #0xe
	lsl	r0, r7, #0x4
	add	r1, r1, r0
	add	r1, r1, r4
	ldr	r1, [r1]
	b	.L1670
.L1683:
	.align	2, 0
.L1682:
	.word	gStringVar4
	.word	gTexts_UR_ChatReaction
.L1665:
	ldr	r5, .L1684
	ldr	r4, .L1684+0x4
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x1
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	lsl	r1, r7, #0x3
.L1671:
	add	r0, r0, r1
	add	r0, r0, r4
	ldr	r1, [r0]
.L1670:
	add	r0, r5, #0
	bl	StringExpandPlaceholders
	b	.L1661
.L1685:
	.align	2, 0
.L1684:
	.word	gStringVar4
	.word	gTexts_UR_TrainerCardReaction
.L1666:
	ldr	r0, .L1686
	ldr	r1, .L1686+0x4
	bl	StringExpandPlaceholders
.L1661:
	mov	r0, #0x0
.L1669:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1687:
	.align	2, 0
.L1686:
	.word	gStringVar4
	.word	gText_UR_TrainerAppearsBusy
.Lfe88:
	.size	 UnionRoomGetPlayerInteractionResponse,.Lfe88-UnionRoomGetPlayerInteractionResponse
	.align	2, 0
	.type	 ItemPrintFunc_Unused,function
	.thumb_func
ItemPrintFunc_Unused:
	bx	lr
.Lfe89:
	.size	 ItemPrintFunc_Unused,.Lfe89-ItemPrintFunc_Unused
	.align	2, 0
	.type	 TradeBoardPrintItemInfo,function
	.thumb_func
TradeBoardPrintItemInfo:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0xc
	ldr	r4, [sp, #0x28]
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldrh	r0, [r2, #0x8]
	lsl	r0, r0, #0x16
	lsr	r0, r0, #0x16
	mov	r8, r0
	ldrb	r0, [r2, #0x9]
	lsr	r7, r0, #0x2
	ldrb	r0, [r2, #0xb]
	lsr	r0, r0, #0x1
	mov	r9, r0
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x2
	add	r2, r3, #0
	mov	r3, #0x8
	bl	PrintUnionRoomText
	ldr	r0, .L1692
	cmp	r8, r0
	bne	.L1690	@cond_branch
	ldr	r2, .L1692+0x4
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x2
	mov	r3, #0x44
	bl	PrintUnionRoomText
	b	.L1691
.L1693:
	.align	2, 0
.L1692:
	.word	0x19d
	.word	gText_UR_EggTrade
.L1690:
	add	r1, r7, #0x1
	add	r0, r6, #0
	mov	r2, #0x44
	add	r3, r5, #0
	bl	BlitMenuInfoIcon
	mov	r0, #0xb
	mov	r2, r8
	mul	r2, r2, r0
	ldr	r0, .L1694
	add	r2, r2, r0
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x2
	mov	r3, #0x76
	bl	PrintUnionRoomText
	add	r0, sp, #0x8
	mov	r1, r9
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x2
	add	r1, sp, #0x8
	mov	r2, #0x0
	bl	GetStringWidth
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r3, #0xda
	sub	r3, r3, r0
	lsl	r3, r3, #0x18
	lsr	r3, r3, #0x18
	str	r5, [sp]
	str	r4, [sp, #0x4]
	add	r0, r6, #0
	mov	r1, #0x2
	add	r2, sp, #0x8
	bl	PrintUnionRoomText
.L1691:
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1695:
	.align	2, 0
.L1694:
	.word	gSpeciesNames
.Lfe90:
	.size	 TradeBoardPrintItemInfo,.Lfe90-TradeBoardPrintItemInfo
	.align	2, 0
	.type	 TradeBoardListMenuItemPrintFunc,function
	.thumb_func
TradeBoardListMenuItemPrintFunc:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0xc
	add	r4, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r9, r0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	ldr	r0, .L1708
	ldr	r6, [r0]
	mov	r0, #0x3
	neg	r0, r0
	cmp	r4, r0
	bne	.L1697	@cond_branch
	ldr	r0, .L1708+0x4
	ldrb	r0, [r0, #0x14]
	lsl	r0, r0, #0x1c
	lsr	r0, r0, #0x1c
	cmp	r8, r0
	bne	.L1697	@cond_branch
	bl	GetHostRfuGameData
	add	r2, r0, #0
	ldrh	r1, [r2, #0x8]
	ldr	r0, .L1708+0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1699	@cond_branch
	ldr	r0, .L1708+0xc
	ldr	r3, [r0]
	mov	r0, #0x5
	str	r0, [sp]
	mov	r0, r9
	mov	r1, r8
	bl	TradeBoardPrintItemInfo
	b	.L1699
.L1709:
	.align	2, 0
.L1708:
	.word	sWirelessLinkMain
	.word	sListMenuTemplate_TradeBoard
	.word	0x3ff
	.word	gSaveBlock2Ptr
.L1707:
	mov	r0, ip
	add	r1, r0, r4
	add	r1, r1, #0x10
	add	r0, sp, #0x4
	bl	StringCopy
	ldr	r0, [r6]
	add	r0, r0, r4
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1c
	lsr	r1, r1, #0x1c
	add	r0, sp, #0x4
	bl	ConvertInternationalString
	ldr	r2, [r6]
	add	r2, r2, r4
	mov	r0, #0x6
	str	r0, [sp]
	mov	r0, r9
	mov	r1, r8
	add	r3, sp, #0x4
	bl	TradeBoardPrintItemInfo
	b	.L1699
.L1697:
	mov	r5, #0x0
	mov	r1, #0x0
	ldr	r0, [r6]
	mov	ip, r0
	mov	r2, ip
	add	r2, r2, #0x8
	mov	r3, #0x0
	add	r7, r4, #0x1
.L1703:
	ldrb	r0, [r2, #0x12]
	lsl	r0, r0, #0x1e
	lsr	r0, r0, #0x1e
	add	r4, r3, #0
	cmp	r0, #0x1
	bne	.L1704	@cond_branch
	ldrh	r0, [r2]
	lsl	r0, r0, #0x16
	cmp	r0, #0
	beq	.L1704	@cond_branch
	add	r5, r5, #0x1
.L1704:
	cmp	r5, r7
	beq	.L1707	@cond_branch
	add	r2, r2, #0x20
	add	r3, r3, #0x20
	add	r1, r1, #0x1
	cmp	r1, #0x7
	ble	.L1703	@cond_branch
.L1699:
	add	sp, sp, #0xc
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe91:
	.size	 TradeBoardListMenuItemPrintFunc,.Lfe91-TradeBoardListMenuItemPrintFunc
	.align	2, 0
	.type	 GetIndexOfNthTradeBoardOffer,function
	.thumb_func
GetIndexOfNthTradeBoardOffer:
	push	{r4, r5, r6, r7, lr}
	mov	r4, #0x0
	mov	r3, #0x0
	mov	r7, #0x3
	ldr	r6, .L1719
	add	r2, r0, #0
	add	r2, r2, #0x8
	add	r5, r1, #0x1
.L1714:
	ldrb	r1, [r2, #0x12]
	add	r0, r7, #0
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L1715	@cond_branch
	ldrh	r1, [r2]
	add	r0, r6, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L1715	@cond_branch
	add	r4, r4, #0x1
.L1715:
	cmp	r4, r5
	bne	.L1713	@cond_branch
	add	r0, r3, #0
	b	.L1718
.L1720:
	.align	2, 0
.L1719:
	.word	0x3ff
.L1713:
	add	r2, r2, #0x20
	add	r3, r3, #0x1
	cmp	r3, #0x7
	ble	.L1714	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L1718:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe92:
	.size	 GetIndexOfNthTradeBoardOffer,.Lfe92-GetIndexOfNthTradeBoardOffer
	.align	2, 0
	.type	 GetUnionRoomPlayerGender,function
	.thumb_func
GetUnionRoomPlayerGender:
	lsl	r0, r0, #0x5
	add	r0, r0, r1
	ldrb	r0, [r0, #0xb]
	lsl	r0, r0, #0x1f
	lsr	r0, r0, #0x1f
	bx	lr
.Lfe93:
	.size	 GetUnionRoomPlayerGender,.Lfe93-GetUnionRoomPlayerGender
	.align	2, 0
	.type	 IsRequestedTradeInPlayerParty,function
	.thumb_func
IsRequestedTradeInPlayerParty:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r0, .L1741
	cmp	r1, r0
	bne	.L1723	@cond_branch
	mov	r4, #0x0
	b	.L1740
.L1742:
	.align	2, 0
.L1741:
	.word	0x19d
.L1727:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L1743
	add	r0, r0, r1
	mov	r1, #0x41
	bl	GetMonData
	add	r1, r0, #0
	ldr	r0, .L1743+0x4
	cmp	r1, r0
	beq	.L1736	@cond_branch
	add	r4, r4, #0x1
.L1740:
	ldr	r0, .L1743+0x8
	ldrb	r0, [r0]
	cmp	r4, r0
	blt	.L1727	@cond_branch
	mov	r0, #0x2
	b	.L1738
.L1744:
	.align	2, 0
.L1743:
	.word	gPlayerParty
	.word	0x19d
	.word	gPlayerPartyCount
.L1723:
	mov	r4, #0x0
	ldr	r0, .L1745
	ldrb	r0, [r0]
	cmp	r4, r0
	bge	.L1732	@cond_branch
	ldr	r6, .L1745+0x4
.L1734:
	mov	r0, #0x64
	mul	r0, r0, r4
	ldr	r1, .L1745+0x8
	add	r0, r0, r1
	mov	r1, #0x41
	bl	GetMonData
	add	r1, r0, #0
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r6
	ldrb	r0, [r1, #0x6]
	cmp	r0, r5
	beq	.L1736	@cond_branch
	ldrb	r0, [r1, #0x7]
	cmp	r0, r5
	bne	.L1733	@cond_branch
.L1736:
	mov	r0, #0x0
	b	.L1738
.L1746:
	.align	2, 0
.L1745:
	.word	gPlayerPartyCount
	.word	gSpeciesInfo
	.word	gPlayerParty
.L1733:
	add	r4, r4, #0x1
	ldr	r0, .L1747
	ldrb	r0, [r0]
	cmp	r4, r0
	blt	.L1734	@cond_branch
.L1732:
	mov	r0, #0x1
.L1738:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L1748:
	.align	2, 0
.L1747:
	.word	gPlayerPartyCount
.Lfe94:
	.size	 IsRequestedTradeInPlayerParty,.Lfe94-IsRequestedTradeInPlayerParty
	.align	2, 0
	.type	 GetURoomActivityRejectMsg,function
	.thumb_func
GetURoomActivityRejectMsg:
	push	{lr}
	add	r3, r0, #0
	cmp	r1, #0x44
	beq	.L1753	@cond_branch
	cmp	r1, #0x44
	bgt	.L1757	@cond_branch
	cmp	r1, #0x41
	beq	.L1751	@cond_branch
	b	.L1750
.L1757:
	cmp	r1, #0x45
	beq	.L1752	@cond_branch
	cmp	r1, #0x48
	beq	.L1754	@cond_branch
	b	.L1750
.L1751:
	ldr	r0, .L1759
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	b	.L1758
.L1760:
	.align	2, 0
.L1759:
	.word	gTexts_UR_BattleDeclined
.L1752:
	ldr	r0, .L1761
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	b	.L1758
.L1762:
	.align	2, 0
.L1761:
	.word	gTexts_UR_ChatDeclined
.L1753:
	ldr	r1, .L1763
.L1758:
	add	r0, r3, #0
	bl	StringExpandPlaceholders
	b	.L1750
.L1764:
	.align	2, 0
.L1763:
	.word	gText_UR_TradeOfferRejected
.L1754:
	ldr	r0, .L1765
	lsl	r1, r2, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	add	r0, r3, #0
	bl	StringExpandPlaceholders
.L1750:
	pop	{r0}
	bx	r0
.L1766:
	.align	2, 0
.L1765:
	.word	gTexts_UR_ShowTrainerCardDeclined
.Lfe95:
	.size	 GetURoomActivityRejectMsg,.Lfe95-GetURoomActivityRejectMsg
	.align	2, 0
	.type	 GetURoomActivityStartMsg,function
	.thumb_func
GetURoomActivityStartMsg:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	lsl	r1, r1, #0x18
	lsr	r4, r1, #0x18
	add	r6, r4, #0
	bl	GetMultiplayerId
	lsl	r0, r0, #0x18
	lsr	r3, r0, #0x18
	ldr	r2, .L1776
	mov	r0, #0x1
	add	r1, r3, #0
	eor	r1, r1, r0
	lsl	r0, r1, #0x3
	sub	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r0, [r0, #0x13]
	cmp	r4, #0x44
	beq	.L1770	@cond_branch
	cmp	r4, #0x44
	bgt	.L1774	@cond_branch
	cmp	r4, #0x41
	beq	.L1769	@cond_branch
	b	.L1768
.L1777:
	.align	2, 0
.L1776:
	.word	gLinkPlayers
.L1774:
	cmp	r6, #0x45
	beq	.L1771	@cond_branch
	b	.L1768
.L1769:
	ldr	r2, .L1778
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	b	.L1775
.L1779:
	.align	2, 0
.L1778:
	.word	gTexts_UR_StartActivity
.L1770:
	ldr	r2, .L1780
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r2, r2, #0x8
.L1775:
	add	r1, r1, r2
	ldr	r1, [r1]
	add	r0, r5, #0
	bl	StringCopy
	b	.L1768
.L1781:
	.align	2, 0
.L1780:
	.word	gTexts_UR_StartActivity
.L1771:
	ldr	r2, .L1782
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	lsl	r0, r3, #0x1
	add	r0, r0, r3
	lsl	r0, r0, #0x3
	add	r1, r1, r0
	add	r2, r2, #0x4
	add	r1, r1, r2
	ldr	r1, [r1]
	add	r0, r5, #0
	bl	StringCopy
.L1768:
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L1783:
	.align	2, 0
.L1782:
	.word	gTexts_UR_StartActivity
.Lfe96:
	.size	 GetURoomActivityStartMsg,.Lfe96-GetURoomActivityStartMsg
	.align	2, 0
	.type	 GetChatLeaderActionRequestMessage,function
	.thumb_func
GetChatLeaderActionRequestMessage:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r7, r0, #0
	add	r5, r2, #0
	add	r6, r3, #0
	mov	r2, #0x0
	mov	r8, r2
	ldrh	r0, [r5]
	sub	r0, r0, #0x40
	cmp	r0, #0x8
	bls	.LCB13947
	b	.L1785	@long jump
.LCB13947:
	lsl	r0, r0, #0x2
	ldr	r1, .L1808
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L1809:
	.align	2, 0
.L1808:
	.word	.L1804
	.align	2, 0
	.align	2, 0
.L1804:
	.word	.L1803
	.word	.L1786
	.word	.L1785
	.word	.L1785
	.word	.L1788
	.word	.L1787
	.word	.L1785
	.word	.L1785
	.word	.L1802
.L1786:
	ldr	r1, .L1810
	b	.L1806
.L1811:
	.align	2, 0
.L1810:
	.word	gText_UR_BattleChallenge
.L1787:
	ldr	r1, .L1812
	b	.L1806
.L1813:
	.align	2, 0
.L1812:
	.word	gText_UR_ChatInvitation
.L1788:
	add	r0, r6, #0
	add	r0, r0, #0x58
	ldr	r4, .L1814
	ldrh	r1, [r4, #0xc]
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	add	r0, r6, #0
	add	r0, r0, #0x63
	ldrh	r2, [r4, #0xa]
	mov	r1, #0xb
	mul	r1, r1, r2
	ldr	r2, .L1814+0x4
	add	r1, r1, r2
	bl	StringCopy
	mov	r4, #0x0
	b	.L1789
.L1815:
	.align	2, 0
.L1814:
	.word	sUnionRoomTrade
	.word	gSpeciesNames
.L1791:
	add	r4, r4, #0x1
.L1789:
	cmp	r4, #0x3
	bgt	.L1790	@cond_branch
	ldr	r0, .L1816
	ldr	r0, [r0]
	lsl	r1, r4, #0x5
	add	r0, r0, r1
	ldrh	r0, [r0, #0x18]
	cmp	r0, #0x2
	bne	.L1791	@cond_branch
	ldrh	r1, [r5, #0x4]
	add	r0, r6, #0
	add	r0, r0, #0x6e
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	ldrh	r1, [r5, #0x2]
	mov	r0, #0xb
	mul	r1, r1, r0
	ldr	r0, .L1816+0x4
	add	r1, r1, r0
	add	r0, r6, #0
	add	r0, r0, #0x79
	bl	StringCopy
	ldrh	r5, [r5, #0x2]
	mov	r8, r5
.L1790:
	ldr	r0, .L1816+0x8
	cmp	r8, r0
	bne	.L1795	@cond_branch
	ldr	r1, .L1816+0xc
	add	r0, r7, #0
	bl	StringCopy
	b	.L1807
.L1817:
	.align	2, 0
.L1816:
	.word	gRfuLinkStatus
	.word	gSpeciesNames
	.word	0x19d
	.word	gText_UR_OfferToTradeEgg
.L1795:
	mov	r4, #0x0
	add	r5, r6, #0
	add	r5, r5, #0x58
.L1800:
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	add	r1, r5, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	add	r5, r5, #0xb
	add	r4, r4, #0x1
	cmp	r4, #0x3
	ble	.L1800	@cond_branch
	ldr	r1, .L1818
	add	r0, r7, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L1807
.L1819:
	.align	2, 0
.L1818:
	.word	gText_UR_OfferToTradeMon
.L1802:
	ldr	r1, .L1820
.L1806:
	add	r0, r7, #0
	bl	StringExpandPlaceholders
.L1807:
	mov	r2, #0x1
	b	.L1785
.L1821:
	.align	2, 0
.L1820:
	.word	gText_UR_ShowTrainerCard
.L1803:
	ldr	r1, .L1822
	add	r0, r7, #0
	bl	StringExpandPlaceholders
	mov	r2, #0x2
.L1785:
	add	r0, r2, #0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1823:
	.align	2, 0
.L1822:
	.word	gText_UR_ChatDropped
.Lfe97:
	.size	 GetChatLeaderActionRequestMessage,.Lfe97-GetChatLeaderActionRequestMessage
	.align	2, 0
	.type	 PollPartnerYesNoResponse,function
	.thumb_func
PollPartnerYesNoResponse:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L1831
	ldrh	r1, [r0, #0x2]
	cmp	r1, #0
	beq	.L1825	@cond_branch
	cmp	r1, #0x51
	beq	.L1830	@cond_branch
	cmp	r1, #0x52
	bne	.L1825	@cond_branch
.L1830:
	add	r0, r2, #0
	add	r0, r0, #0x84
	strh	r1, [r0]
	mov	r0, #0x1
	b	.L1829
.L1832:
	.align	2, 0
.L1831:
	.word	gRecvCmds
.L1825:
	mov	r0, #0x0
.L1829:
	pop	{r1}
	bx	r1
.Lfe98:
	.size	 PollPartnerYesNoResponse,.Lfe98-PollPartnerYesNoResponse
	.align	2, 0
	.globl	InUnionRoom
	.type	 InUnionRoom,function
	.thumb_func
InUnionRoom:
	push	{lr}
	mov	r2, #0x0
	ldr	r0, .L1835
	ldr	r0, [r0]
	ldrh	r1, [r0, #0x4]
	mov	r0, #0x80
	lsl	r0, r0, #0x3
	cmp	r1, r0
	bne	.L1834	@cond_branch
	mov	r2, #0x1
.L1834:
	add	r0, r2, #0
	pop	{r1}
	bx	r1
.L1836:
	.align	2, 0
.L1835:
	.word	gSaveBlock1Ptr
.Lfe99:
	.size	 InUnionRoom,.Lfe99-InUnionRoom
	.align	2, 0
	.type	 HasAtLeastTwoMonsOfLevel30OrLower,function
	.thumb_func
HasAtLeastTwoMonsOfLevel30OrLower:
	push	{r4, r5, r6, lr}
	mov	r6, #0x0
	mov	r5, #0x0
	ldr	r0, .L1847
	ldrb	r0, [r0]
	cmp	r6, r0
	bge	.L1839	@cond_branch
.L1841:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L1847+0x4
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	cmp	r0, #0x1e
	bhi	.L1840	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	ldr	r1, .L1847+0x8
	cmp	r0, r1
	beq	.L1840	@cond_branch
	add	r6, r6, #0x1
.L1840:
	add	r5, r5, #0x1
	ldr	r0, .L1847
	ldrb	r0, [r0]
	cmp	r5, r0
	blt	.L1841	@cond_branch
.L1839:
	cmp	r6, #0x1
	bgt	.L1844	@cond_branch
	mov	r0, #0x0
	b	.L1846
.L1848:
	.align	2, 0
.L1847:
	.word	gPlayerPartyCount
	.word	gPlayerParty
	.word	0x19d
.L1844:
	mov	r0, #0x1
.L1846:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe100:
	.size	 HasAtLeastTwoMonsOfLevel30OrLower,.Lfe100-HasAtLeastTwoMonsOfLevel30OrLower
	.align	2, 0
	.type	 ResetUnionRoomTrade,function
	.thumb_func
ResetUnionRoomTrade:
	mov	r1, #0x0
	strh	r1, [r0]
	strh	r1, [r0, #0x2]
	str	r1, [r0, #0x4]
	strh	r1, [r0, #0xa]
	strh	r1, [r0, #0xc]
	strh	r1, [r0, #0xe]
	strh	r1, [r0, #0x10]
	str	r1, [r0, #0x14]
	bx	lr
.Lfe101:
	.size	 ResetUnionRoomTrade,.Lfe101-ResetUnionRoomTrade
	.align	2, 0
	.globl	Script_ResetUnionRoomTrade
	.type	 Script_ResetUnionRoomTrade,function
	.thumb_func
Script_ResetUnionRoomTrade:
	push	{lr}
	ldr	r0, .L1851
	bl	ResetUnionRoomTrade
	pop	{r0}
	bx	r0
.L1852:
	.align	2, 0
.L1851:
	.word	sUnionRoomTrade
.Lfe102:
	.size	 Script_ResetUnionRoomTrade,.Lfe102-Script_ResetUnionRoomTrade
	.align	2, 0
	.type	 RegisterTradeMonAndGetIsEgg,function
	.thumb_func
RegisterTradeMonAndGetIsEgg:
	push	{r4, r5, lr}
	add	r5, r1, #0
	mov	r1, #0x64
	mov	r4, r0
	mul	r4, r4, r1
	ldr	r0, .L1857
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	strh	r0, [r5, #0xa]
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	strh	r0, [r5, #0xc]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	str	r0, [r5, #0x4]
	ldrh	r1, [r5, #0xa]
	ldr	r0, .L1857+0x4
	cmp	r1, r0
	beq	.L1854	@cond_branch
	mov	r0, #0x0
	b	.L1856
.L1858:
	.align	2, 0
.L1857:
	.word	gPlayerParty
	.word	0x19d
.L1854:
	mov	r0, #0x1
.L1856:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe103:
	.size	 RegisterTradeMonAndGetIsEgg,.Lfe103-RegisterTradeMonAndGetIsEgg
	.align	2, 0
	.type	 RegisterTradeMon,function
	.thumb_func
RegisterTradeMon:
	push	{r4, r5, lr}
	add	r5, r1, #0
	mov	r1, #0x64
	mov	r4, r0
	mul	r4, r4, r1
	ldr	r0, .L1860
	add	r4, r4, r0
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	strh	r0, [r5, #0xe]
	add	r0, r4, #0
	mov	r1, #0x38
	bl	GetMonData
	strh	r0, [r5, #0x10]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	str	r0, [r5, #0x14]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L1861:
	.align	2, 0
.L1860:
	.word	gPlayerParty
.Lfe104:
	.size	 RegisterTradeMon,.Lfe104-RegisterTradeMon
	.align	2, 0
	.type	 GetPartyPositionOfRegisteredMon,function
	.thumb_func
GetPartyPositionOfRegisteredMon:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	lsl	r1, r1, #0x18
	mov	r2, #0x0
	mov	r8, r2
	cmp	r1, #0
	bne	.L1863	@cond_branch
	ldrh	r7, [r0, #0xa]
	ldr	r6, [r0, #0x4]
	b	.L1864
.L1872:
	lsl	r0, r5, #0x10
	lsr	r0, r0, #0x10
	mov	r8, r0
	b	.L1866
.L1863:
	ldrh	r7, [r0, #0xe]
	ldr	r6, [r0, #0x14]
.L1864:
	mov	r5, #0x0
	b	.L1873
.L1868:
	mov	r0, #0x64
	mov	r1, r5
	mul	r1, r1, r0
	ldr	r0, .L1874
	add	r4, r1, r0
	add	r0, r4, #0
	mov	r1, #0x0
	bl	GetMonData
	cmp	r0, r6
	bne	.L1867	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x41
	bl	GetMonData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, r7
	beq	.L1872	@cond_branch
.L1867:
	add	r5, r5, #0x1
.L1873:
	ldr	r0, .L1874+0x4
	ldrb	r0, [r0]
	cmp	r5, r0
	blt	.L1868	@cond_branch
.L1866:
	mov	r0, r8
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L1875:
	.align	2, 0
.L1874:
	.word	gPlayerParty
	.word	gPlayerPartyCount
.Lfe105:
	.size	 GetPartyPositionOfRegisteredMon,.Lfe105-GetPartyPositionOfRegisteredMon
	.align	2, 0
	.type	 HandleCancelActivity,function
	.thumb_func
HandleCancelActivity:
	push	{r4, lr}
	add	r4, r0, #0
	bl	UR_ClearBg0
	bl	UnlockPlayerFieldControls
	bl	UnionRoom_UnlockPlayerAndChatPartner
	ldr	r1, .L1878
	mov	r0, #0x0
	strb	r0, [r1]
	cmp	r4, #0
	beq	.L1877	@cond_branch
	ldr	r2, .L1878+0x4
	ldrh	r0, [r2, #0x2]
	ldrh	r1, [r2, #0xa]
	ldrh	r2, [r2, #0xc]
	bl	SetTradeBoardRegisteredMonInfo
	mov	r0, #0x40
	mov	r1, #0x0
	mov	r2, #0x0
	bl	UpdateGameData_SetActivity
.L1877:
	pop	{r4}
	pop	{r0}
	bx	r0
.L1879:
	.align	2, 0
.L1878:
	.word	sPlayerCurrActivity
	.word	sUnionRoomTrade
.Lfe106:
	.size	 HandleCancelActivity,.Lfe106-HandleCancelActivity
	.align	2, 0
	.type	 StartScriptInteraction,function
	.thumb_func
StartScriptInteraction:
	push	{lr}
	bl	LockPlayerFieldControls
	bl	FreezeObjects_WaitForPlayer
	pop	{r0}
	bx	r0
.Lfe107:
	.size	 StartScriptInteraction,.Lfe107-StartScriptInteraction
	.align	2, 0
	.type	 GetLinkPlayerInfoFlags,function
	.thumb_func
GetLinkPlayerInfoFlags:
	push	{r4, lr}
	mov	r4, #0x80
	ldr	r3, .L1882
	lsl	r1, r0, #0x3
	sub	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r0, r1, r3
	ldrb	r2, [r0, #0x13]
	lsl	r2, r2, #0x3
	orr	r2, r2, r4
	add	r3, r3, #0x4
	add	r1, r1, r3
	ldr	r0, [r1]
	mov	r1, #0x7
	and	r0, r0, r1
	orr	r0, r0, r2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L1883:
	.align	2, 0
.L1882:
	.word	gLinkPlayers
.Lfe108:
	.size	 GetLinkPlayerInfoFlags,.Lfe108-GetLinkPlayerInfoFlags
	.align	2, 0
	.type	 GetActivePartnersInfo,function
	.thumb_func
GetActivePartnersInfo:
	push	{r4, lr}
	mov	r3, #0x80
	mov	r2, #0x0
	ldr	r4, [r0, #0xc]
.L1888:
	lsl	r0, r2, #0x3
	sub	r0, r0, r2
	lsl	r0, r0, #0x2
	add	r1, r4, r0
	ldrb	r0, [r1, #0x18]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L1887	@cond_branch
	ldrb	r0, [r1, #0xb]
	lsl	r0, r0, #0x1f
	lsr	r0, r0, #0x1f
	lsl	r0, r0, #0x3
	orr	r3, r3, r0
	ldrb	r1, [r1, #0x2]
	mov	r0, #0x7
	and	r0, r0, r1
	orr	r3, r3, r0
	lsl	r0, r3, #0x18
	lsr	r3, r0, #0x18
	b	.L1886
.L1887:
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x3
	bls	.L1888	@cond_branch
.L1886:
	add	r0, r3, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe109:
	.size	 GetActivePartnersInfo,.Lfe109-GetActivePartnersInfo
	.align	2, 0
	.type	 ViewURoomPartnerTrainerCard,function
	.thumb_func
ViewURoomPartnerTrainerCard:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	mov	r9, r1
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	str	r2, [sp]
	bl	GetMultiplayerId
	mov	r1, #0x1
	eor	r0, r0, r1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x1
	add	r1, r1, r0
	lsl	r1, r1, #0x5
	ldr	r0, .L1902
	add	r1, r1, r0
	mov	r8, r1
	bl	DynamicPlaceholderTextUtil_Reset
	mov	r6, r9
	add	r6, r6, #0xac
	bl	GetUnionRoomTrainerClass
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xd
	mul	r1, r1, r0
	ldr	r0, .L1902+0x4
	add	r1, r1, r0
	add	r0, r6, #0
	bl	StringCopy
	mov	r0, #0x0
	add	r1, r6, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r1, r8
	add	r1, r1, #0x30
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r4, #0xb0
	lsl	r4, r4, #0x1
	add	r4, r4, r9
	ldr	r1, .L1902+0x8
	mov	r2, r8
	ldrb	r0, [r2, #0x1]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	StringCopy
	mov	r0, #0x2
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r5, r9
	add	r5, r5, #0xca
	mov	r0, r8
	ldrh	r1, [r0, #0xc]
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x3
	add	r1, r5, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r2, #0xd9
	add	r2, r2, r9
	mov	sl, r2
	mov	r0, r8
	ldrh	r1, [r0, #0x10]
	mov	r0, sl
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r4, r9
	add	r4, r4, #0xe8
	mov	r2, r8
	ldrh	r1, [r2, #0x12]
	add	r0, r4, #0
	mov	r2, #0x2
	mov	r3, #0x2
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x4
	mov	r1, sl
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r0, #0x5
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r4, #0xc8
	lsl	r4, r4, #0x1
	add	r4, r4, r9
	ldr	r1, .L1902+0xc
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	ldr	r0, .L1902+0x10
	add	r1, r4, #0
	bl	StringCopy
	mov	r0, r8
	ldrh	r1, [r0, #0x14]
	ldr	r4, .L1902+0x14
	cmp	r1, r4
	ble	.L1892	@cond_branch
	add	r1, r4, #0
.L1892:
	add	r0, r6, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x0
	add	r1, r6, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r2, r8
	ldrh	r1, [r2, #0x16]
	cmp	r1, r4
	ble	.L1893	@cond_branch
	add	r1, r4, #0
.L1893:
	mov	r4, r9
	add	r4, r4, #0xbb
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x4
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x2
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r0, r8
	ldrh	r1, [r0, #0x20]
	add	r0, r5, #0
	mov	r2, #0x0
	mov	r3, #0x5
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x3
	add	r1, r5, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r7, #0x0
	mov	r6, #0x80
	lsl	r6, r6, #0x13
	mov	r5, r8
	add	r5, r5, #0x28
	mov	r4, sl
.L1897:
	ldrh	r1, [r5]
	add	r0, r4, #0
	bl	CopyEasyChatWord
	lsr	r0, r6, #0x18
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r2, #0x80
	lsl	r2, r2, #0x11
	add	r6, r6, r2
	add	r5, r5, #0x2
	add	r4, r4, #0xf
	add	r7, r7, #0x1
	cmp	r7, #0x3
	ble	.L1897	@cond_branch
	mov	r4, #0xc8
	lsl	r4, r4, #0x1
	add	r4, r4, r9
	ldr	r1, .L1902+0x18
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	ldr	r5, .L1902+0x10
	add	r0, r5, #0
	add	r1, r4, #0
	bl	StringAppend
	ldr	r0, [sp]
	cmp	r0, #0x1
	bne	.L1899	@cond_branch
	ldr	r1, .L1902+0x1c
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r0, r5, #0
	add	r1, r4, #0
	bl	StringAppend
	b	.L1900
.L1903:
	.align	2, 0
.L1902:
	.word	gTrainerCards
	.word	gTrainerClassNames
	.word	gTexts_UR_CardColor
	.word	gText_UR_TrainerCardInfoPage1
	.word	gStringVar4
	.word	0x270f
	.word	gText_UR_TrainerCardInfoPage2
	.word	gText_UR_FinishedCheckingPlayersTrainerCard
.L1899:
	ldr	r2, [sp]
	cmp	r2, #0
	bne	.L1900	@cond_branch
	ldr	r0, .L1904
	mov	r2, r8
	ldrb	r1, [r2]
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	ldr	r1, [r1]
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r0, r5, #0
	add	r1, r4, #0
	bl	StringAppend
.L1900:
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L1905:
	.align	2, 0
.L1904:
	.word	gTexts_UR_GladToMeetYou
.Lfe110:
	.size	 ViewURoomPartnerTrainerCard,.Lfe110-ViewURoomPartnerTrainerCard

	.lcomm	sLeader,4

	.lcomm	sGroup,4

	.lcomm	sURoom,4
.text
	.align	2, 0 @ Don't pad with nop

