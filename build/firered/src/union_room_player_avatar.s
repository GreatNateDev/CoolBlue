@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sUnionObjWork,object
	.size	 sUnionObjWork,4
sUnionObjWork:
	.word	0x0
	.align	2, 0
	.type	 sUnionObjRefreshTimer,object
	.size	 sUnionObjRefreshTimer,4
sUnionObjRefreshTimer:
	.word	0x0
	.section .rodata
	.type	 sUnionRoomObjGfxIds,object
	.size	 sUnionRoomObjGfxIds,20
sUnionRoomObjGfxIds:
	.byte	0x29
	.byte	0x36
	.byte	0x27
	.byte	0x12
	.byte	0x13
	.byte	0x14
	.byte	0x19
	.byte	0x1a
	.space	2
	.byte	0x2a
	.byte	0x3a
	.byte	0x28
	.byte	0x16
	.byte	0x17
	.byte	0x18
	.byte	0x1c
	.byte	0x1d
	.space	2
	.align	1, 0
	.type	 sUnionRoomPlayerCoords,object
	.size	 sUnionRoomPlayerCoords,32
sUnionRoomPlayerCoords:
	.short	0x4
	.short	0x6
	.short	0xd
	.short	0x8
	.short	0xa
	.short	0x6
	.short	0x1
	.short	0x8
	.short	0xd
	.short	0x4
	.short	0x7
	.short	0x4
	.short	0x1
	.short	0x4
	.short	0x7
	.short	0x8
	.type	 sUnionRoomGroupOffsets,object
sUnionRoomGroupOffsets:
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	-0x1
	.byte	-0x1
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.size	 sUnionRoomGroupOffsets,10
	.type	 sOppositeFacingDirection,object
sOppositeFacingDirection:
	.byte	0x0
	.byte	0x2
	.byte	0x1
	.byte	0x4
	.byte	0x3
	.size	 sOppositeFacingDirection,5
	.type	 sMemberFacingDirections,object
sMemberFacingDirections:
	.byte	0x1
	.byte	0x3
	.byte	0x1
	.byte	0x4
	.byte	0x2
	.size	 sMemberFacingDirections,5
	.type	 sUnionRoomLocalIds,object
sUnionRoomLocalIds:
	.byte	0x9
	.byte	0x8
	.byte	0x7
	.byte	0x2
	.byte	0x6
	.byte	0x5
	.byte	0x4
	.byte	0x3
	.size	 sUnionRoomLocalIds,8
	.align	1, 0
	.type	 sHidePlayerFlags,object
sHidePlayerFlags:
	.short	0x63
	.short	0x64
	.short	0x65
	.short	0x66
	.short	0x67
	.short	0x68
	.short	0x69
	.short	0x6a
	.size	 sHidePlayerFlags,16
.text
	.align	2, 0
	.type	 IsPlayerStandingStill,function
	.thumb_func
IsPlayerStandingStill:
	push	{lr}
	ldr	r0, .L7
	ldrb	r0, [r0, #0x3]
	cmp	r0, #0x2
	beq	.L4	@cond_branch
	cmp	r0, #0
	bne	.L3	@cond_branch
.L4:
	mov	r0, #0x1
	b	.L6
.L8:
	.align	2, 0
.L7:
	.word	gPlayerAvatar
.L3:
	mov	r0, #0x0
.L6:
	pop	{r1}
	bx	r1
.Lfe1:
	.size	 IsPlayerStandingStill,.Lfe1-IsPlayerStandingStill
	.align	2, 0
	.type	 GetUnionRoomPlayerGraphicsId,function
	.thumb_func
GetUnionRoomPlayerGraphicsId:
	ldr	r3, .L10
	mov	r2, #0x7
	and	r2, r2, r1
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x1
	add	r2, r2, r1
	add	r2, r2, r3
	ldrb	r0, [r2]
	bx	lr
.L11:
	.align	2, 0
.L10:
	.word	sUnionRoomObjGfxIds
.Lfe2:
	.size	 GetUnionRoomPlayerGraphicsId,.Lfe2-GetUnionRoomPlayerGraphicsId
	.align	2, 0
	.type	 GetUnionRoomPlayerCoords,function
	.thumb_func
GetUnionRoomPlayerCoords:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	ldr	r4, .L13
	mov	r8, r4
	lsl	r0, r0, #0x2
	add	r4, r0, r4
	mov	r6, #0x0
	ldrsh	r5, [r4, r6]
	ldr	r6, .L13+0x4
	lsl	r1, r1, #0x1
	add	r4, r1, r6
	ldrb	r4, [r4, #0]
	lsl	r4, r4, #24
	asr	r4, r4, #24
	add	r5, r5, r4
	add	r5, r5, #0x7
	str	r5, [r2]
	mov	r2, #0x2
	add	r8, r8, r2
	add	r0, r0, r8
	mov	r4, #0x0
	ldrsh	r0, [r0, r4]
	add	r6, r6, #0x1
	add	r1, r1, r6
	ldrb	r1, [r1, #0]
	lsl	r1, r1, #24
	asr	r1, r1, #24
	add	r0, r0, r1
	add	r0, r0, #0x7
	str	r0, [r3]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L14:
	.align	2, 0
.L13:
	.word	sUnionRoomPlayerCoords
	.word	sUnionRoomGroupOffsets
.Lfe3:
	.size	 GetUnionRoomPlayerCoords,.Lfe3-GetUnionRoomPlayerCoords
	.align	2, 0
	.type	 IsUnionRoomPlayerAt,function
	.thumb_func
IsUnionRoomPlayerAt:
	push	{r4, r5, r6, r7, lr}
	mov	ip, r3
	ldr	r7, .L19
	lsl	r5, r0, #0x2
	add	r0, r5, r7
	mov	r4, #0x0
	ldrsh	r3, [r0, r4]
	ldr	r6, .L19+0x4
	lsl	r4, r1, #0x1
	add	r0, r4, r6
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r3, r3, r0
	add	r3, r3, #0x7
	cmp	r3, r2
	bne	.L16	@cond_branch
	add	r0, r7, #0x2
	add	r0, r5, r0
	mov	r2, #0x0
	ldrsh	r1, [r0, r2]
	add	r0, r6, #0x1
	add	r0, r4, r0
	ldrb	r0, [r0, #0]
	lsl	r0, r0, #24
	asr	r0, r0, #24
	add	r1, r1, r0
	add	r1, r1, #0x7
	cmp	r1, ip
	bne	.L16	@cond_branch
	mov	r0, #0x1
	b	.L18
.L20:
	.align	2, 0
.L19:
	.word	sUnionRoomPlayerCoords
	.word	sUnionRoomGroupOffsets
.L16:
	mov	r0, #0x0
.L18:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 IsUnionRoomPlayerAt,.Lfe4-IsUnionRoomPlayerAt
	.align	2, 0
	.type	 IsUnionRoomPlayerHidden,function
	.thumb_func
IsUnionRoomPlayerHidden:
	push	{lr}
	add	r0, r0, #0x63
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 IsUnionRoomPlayerHidden,.Lfe5-IsUnionRoomPlayerHidden
	.align	2, 0
	.type	 HideUnionRoomPlayer,function
	.thumb_func
HideUnionRoomPlayer:
	push	{lr}
	add	r0, r0, #0x63
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagSet
	pop	{r0}
	bx	r0
.Lfe6:
	.size	 HideUnionRoomPlayer,.Lfe6-HideUnionRoomPlayer
	.align	2, 0
	.type	 ShowUnionRoomPlayer,function
	.thumb_func
ShowUnionRoomPlayer:
	push	{lr}
	add	r0, r0, #0x63
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	FlagClear
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 ShowUnionRoomPlayer,.Lfe7-ShowUnionRoomPlayer
	.align	2, 0
	.type	 SetUnionRoomPlayerGfx,function
	.thumb_func
SetUnionRoomPlayerGfx:
	push	{lr}
	ldr	r2, .L25
	add	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	bl	VarSet
	pop	{r0}
	bx	r0
.L26:
	.align	2, 0
.L25:
	.word	0x4010
.Lfe8:
	.size	 SetUnionRoomPlayerGfx,.Lfe8-SetUnionRoomPlayerGfx
	.align	2, 0
	.type	 CreateUnionRoomPlayerObjectEvent,function
	.thumb_func
CreateUnionRoomPlayerObjectEvent:
	push	{lr}
	ldr	r1, .L28
	add	r0, r0, r1
	ldrb	r0, [r0]
	ldr	r1, .L28+0x4
	ldr	r2, [r1]
	ldrb	r1, [r2, #0x5]
	ldrb	r2, [r2, #0x4]
	bl	TrySpawnObjectEvent
	pop	{r0}
	bx	r0
.L29:
	.align	2, 0
.L28:
	.word	sUnionRoomLocalIds
	.word	gSaveBlock1Ptr
.Lfe9:
	.size	 CreateUnionRoomPlayerObjectEvent,.Lfe9-CreateUnionRoomPlayerObjectEvent
	.align	2, 0
	.type	 RemoveUnionRoomPlayerObjectEvent,function
	.thumb_func
RemoveUnionRoomPlayerObjectEvent:
	push	{lr}
	ldr	r1, .L31
	add	r0, r0, r1
	ldrb	r0, [r0]
	ldr	r1, .L31+0x4
	ldr	r2, [r1]
	ldrb	r1, [r2, #0x5]
	ldrb	r2, [r2, #0x4]
	bl	RemoveObjectEventByLocalIdAndMap
	pop	{r0}
	bx	r0
.L32:
	.align	2, 0
.L31:
	.word	sUnionRoomLocalIds
	.word	gSaveBlock1Ptr
.Lfe10:
	.size	 RemoveUnionRoomPlayerObjectEvent,.Lfe10-RemoveUnionRoomPlayerObjectEvent
	.section .rodata
	.align	2, 0
.LC18:
	.ascii	"C:/WORK/POKeFRLG/src/pm_lgfr_ose/source/rfu_union_tool.c"
	.ascii	"\000"
	.align	2, 0
.LC20:
	.ascii	"0\000"
.text
	.align	2, 0
	.type	 SetUnionRoomPlayerEnterExitMovement,function
	.thumb_func
SetUnionRoomPlayerEnterExitMovement:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r5, r1, #0
	ldr	r1, .L39
	add	r0, r0, r1
	ldrb	r0, [r0]
	ldr	r1, .L39+0x4
	ldr	r2, [r1]
	ldrb	r1, [r2, #0x5]
	ldrb	r2, [r2, #0x4]
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L38	@cond_branch
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L39+0x8
	add	r4, r0, r1
	add	r0, r4, #0
	bl	ObjectEventIsMovementOverridden
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L38	@cond_branch
	ldrb	r1, [r5]
	add	r0, r4, #0
	bl	ObjectEventSetHeldMovement
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L36	@cond_branch
	mov	r0, #0x1
	b	.L37
.L40:
	.align	2, 0
.L39:
	.word	sUnionRoomLocalIds
	.word	gSaveBlock1Ptr
	.word	gObjectEvents
.L36:
	ldr	r0, .L41
	ldr	r1, .L41+0x4
	ldr	r2, .L41+0x8
	mov	r3, #0x1
	bl	AGBAssert
.L38:
	mov	r0, #0x0
.L37:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L42:
	.align	2, 0
.L41:
	.word	.LC18
	.word	0x183
	.word	.LC20
.Lfe11:
	.size	 SetUnionRoomPlayerEnterExitMovement,.Lfe11-SetUnionRoomPlayerEnterExitMovement
	.align	2, 0
	.type	 TryReleaseUnionRoomPlayerObjectEvent,function
	.thumb_func
TryReleaseUnionRoomPlayerObjectEvent:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r1, .L49
	add	r0, r0, r1
	ldrb	r0, [r0]
	ldr	r1, .L49+0x4
	ldr	r2, [r1]
	ldrb	r1, [r2, #0x5]
	ldrb	r2, [r2, #0x4]
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L47	@cond_branch
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L49+0x8
	add	r4, r0, r1
	add	r0, r4, #0
	bl	ObjectEventClearHeldMovementIfFinished
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L45	@cond_branch
	mov	r0, #0x0
	b	.L48
.L50:
	.align	2, 0
.L49:
	.word	sUnionRoomLocalIds
	.word	gSaveBlock1Ptr
	.word	gObjectEvents
.L45:
	bl	ArePlayerFieldControlsLocked
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L46	@cond_branch
	add	r0, r4, #0
	bl	UnfreezeObjectEvent
	b	.L47
.L46:
	add	r0, r4, #0
	bl	FreezeObjectEvent
.L47:
	mov	r0, #0x1
.L48:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe12:
	.size	 TryReleaseUnionRoomPlayerObjectEvent,.Lfe12-TryReleaseUnionRoomPlayerObjectEvent
	.section .rodata
	.align	2, 0
.LC28:
	.ascii	"UnionObjWork != NULL\000"
.text
	.align	2, 0
	.globl	InitUnionRoomPlayerObjects
	.type	 InitUnionRoomPlayerObjects,function
	.thumb_func
InitUnionRoomPlayerObjects:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L59
	mov	r1, #0x0
	str	r1, [r0]
	ldr	r0, .L59+0x4
	str	r4, [r0]
	cmp	r4, #0
	bne	.L53	@cond_branch
	ldr	r0, .L59+0x8
	mov	r1, #0xdd
	lsl	r1, r1, #0x1
	ldr	r2, .L59+0xc
	mov	r3, #0x1
	bl	AGBAssert
.L53:
	mov	r1, #0x0
	add	r0, r4, #0
	mov	r2, #0x7
.L57:
	strb	r1, [r0]
	strb	r1, [r0, #0x1]
	strb	r1, [r0, #0x2]
	strb	r1, [r0, #0x3]
	add	r0, r0, #0x4
	sub	r2, r2, #0x1
	cmp	r2, #0
	bge	.L57	@cond_branch
	bl	CreateTask_AnimateUnionRoomPlayers
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	pop	{r4}
	pop	{r1}
	bx	r1
.L60:
	.align	2, 0
.L59:
	.word	sUnionObjRefreshTimer
	.word	sUnionObjWork
	.word	.LC18
	.word	.LC28
.Lfe13:
	.size	 InitUnionRoomPlayerObjects,.Lfe13-InitUnionRoomPlayerObjects
	.section .rodata
	.type	 sMovement_UnionPlayerExit,object
	.size	 sMovement_UnionPlayerExit,2
sMovement_UnionPlayerExit:
	.byte	0xa4
	.byte	0xfe
.text
	.align	2, 0
	.type	 AnimateUnionRoomPlayerDespawn,function
	.thumb_func
AnimateUnionRoomPlayerDespawn:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	cmp	r0, #0
	beq	.L63	@cond_branch
	cmp	r0, #0x1
	beq	.L65	@cond_branch
	b	.L62
.L63:
	ldr	r1, .L70
	add	r0, r4, #0
	bl	SetUnionRoomPlayerEnterExitMovement
	cmp	r0, #0x1
	bne	.L62	@cond_branch
	add	r0, r4, #0
	bl	HideUnionRoomPlayer
	ldrb	r0, [r5]
	add	r0, r0, #0x1
	strb	r0, [r5]
	b	.L62
.L71:
	.align	2, 0
.L70:
	.word	sMovement_UnionPlayerExit
.L65:
	add	r0, r4, #0
	bl	TryReleaseUnionRoomPlayerObjectEvent
	cmp	r0, #0
	beq	.L62	@cond_branch
	add	r0, r4, #0
	bl	RemoveUnionRoomPlayerObjectEvent
	add	r0, r4, #0
	bl	HideUnionRoomPlayer
	mov	r0, #0x0
	strb	r0, [r5]
	mov	r0, #0x1
	b	.L69
.L62:
	mov	r0, #0x0
.L69:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 AnimateUnionRoomPlayerDespawn,.Lfe14-AnimateUnionRoomPlayerDespawn
	.section .rodata
	.type	 sMovement_UnionPlayerEnter,object
	.size	 sMovement_UnionPlayerEnter,2
sMovement_UnionPlayerEnter:
	.byte	0xa5
	.byte	0xfe
.text
	.align	2, 0
	.type	 AnimateUnionRoomPlayerSpawn,function
	.thumb_func
AnimateUnionRoomPlayerSpawn:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	add	r6, r0, #0
	add	r5, r1, #0
	add	r7, r2, #0
	mov	r0, #0x0
	ldrsb	r0, [r6, r0]
	cmp	r0, #0x2
	beq	.L80	@cond_branch
	cmp	r0, #0x2
	bgt	.L84	@cond_branch
	cmp	r0, #0
	beq	.L74	@cond_branch
	b	.L73
.L84:
	cmp	r0, #0x3
	beq	.L78	@cond_branch
	b	.L73
.L74:
	bl	IsPlayerStandingStill
	cmp	r0, #0
	beq	.L73	@cond_branch
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	PlayerGetDestCoords
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r2, [r0, r1]
	mov	r0, #0x0
	ldrsh	r3, [r4, r0]
	add	r0, r5, #0
	mov	r1, #0x0
	bl	IsUnionRoomPlayerAt
	cmp	r0, #0x1
	beq	.L73	@cond_branch
	mov	r0, sp
	add	r1, r4, #0
	bl	player_get_pos_including_state_based_drift
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r2, [r0, r1]
	mov	r0, #0x0
	ldrsh	r3, [r4, r0]
	add	r0, r5, #0
	mov	r1, #0x0
	bl	IsUnionRoomPlayerAt
	cmp	r0, #0x1
	beq	.L73	@cond_branch
	ldrb	r1, [r7, #0x1]
	add	r0, r5, #0
	bl	SetUnionRoomPlayerGfx
	add	r0, r5, #0
	bl	CreateUnionRoomPlayerObjectEvent
	add	r0, r5, #0
	bl	ShowUnionRoomPlayer
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	strb	r0, [r6]
.L78:
	ldr	r1, .L86
	add	r0, r5, #0
	bl	SetUnionRoomPlayerEnterExitMovement
	cmp	r0, #0x1
	bne	.L73	@cond_branch
	ldrb	r0, [r6]
	add	r0, r0, #0x1
	strb	r0, [r6]
	b	.L73
.L87:
	.align	2, 0
.L86:
	.word	sMovement_UnionPlayerEnter
.L80:
	add	r0, r5, #0
	bl	TryReleaseUnionRoomPlayerObjectEvent
	cmp	r0, #0
	beq	.L73	@cond_branch
	mov	r0, #0x0
	strb	r0, [r6]
	mov	r0, #0x1
	b	.L85
.L73:
	mov	r0, #0x0
.L85:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 AnimateUnionRoomPlayerSpawn,.Lfe15-AnimateUnionRoomPlayerSpawn
	.align	2, 0
	.type	 SpawnGroupLeader,function
	.thumb_func
SpawnGroupLeader:
	push	{r4, r5, r6, lr}
	add	r5, r1, #0
	add	r6, r2, #0
	ldr	r1, .L94
	lsl	r0, r0, #0x2
	ldr	r1, [r1]
	add	r4, r1, r0
	cmp	r1, #0
	bne	.L90	@cond_branch
	ldr	r0, .L94+0x4
	ldr	r1, .L94+0x8
	ldr	r2, .L94+0xc
	mov	r3, #0x1
	bl	AGBAssert
.L90:
	mov	r0, #0x1
	strb	r0, [r4, #0x3]
	add	r0, r5, #0
	add	r1, r6, #0
	bl	GetUnionRoomPlayerGraphicsId
	strb	r0, [r4, #0x1]
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L91	@cond_branch
	mov	r0, #0x0
	b	.L93
.L95:
	.align	2, 0
.L94:
	.word	sUnionObjWork
	.word	.LC18
	.word	0x231
	.word	.LC28
.L91:
	mov	r0, #0x1
.L93:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 SpawnGroupLeader,.Lfe16-SpawnGroupLeader
	.align	2, 0
	.type	 DespawnGroupLeader,function
	.thumb_func
DespawnGroupLeader:
	push	{r4, lr}
	ldr	r1, .L102
	lsl	r0, r0, #0x2
	ldr	r1, [r1]
	add	r4, r1, r0
	cmp	r1, #0
	bne	.L98	@cond_branch
	ldr	r0, .L102+0x4
	ldr	r1, .L102+0x8
	ldr	r2, .L102+0xc
	mov	r3, #0x1
	bl	AGBAssert
.L98:
	mov	r0, #0x2
	strb	r0, [r4, #0x3]
	ldrb	r0, [r4]
	cmp	r0, #0x1
	beq	.L99	@cond_branch
	mov	r0, #0x0
	b	.L101
.L103:
	.align	2, 0
.L102:
	.word	sUnionObjWork
	.word	.LC18
	.word	0x241
	.word	.LC28
.L99:
	mov	r0, #0x1
.L101:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 DespawnGroupLeader,.Lfe17-DespawnGroupLeader
	.align	2, 0
	.type	 AnimateUnionRoomPlayer,function
	.thumb_func
AnimateUnionRoomPlayer:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	ldrb	r1, [r4]
	cmp	r1, #0x1
	beq	.L113	@cond_branch
	cmp	r1, #0x1
	bgt	.L119	@cond_branch
	cmp	r1, #0
	beq	.L106	@cond_branch
	b	.L105
.L119:
	cmp	r1, #0x2
	beq	.L109	@cond_branch
	cmp	r1, #0x3
	beq	.L115	@cond_branch
	b	.L105
.L106:
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x1
	bne	.L105	@cond_branch
	mov	r0, #0x2
	strb	r0, [r4]
	strb	r1, [r4, #0x2]
.L109:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	IsUnionRoomPlayerInvisible
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L110	@cond_branch
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x2
	bne	.L110	@cond_branch
	strb	r1, [r4]
	strb	r1, [r4, #0x2]
	add	r0, r5, #0
	bl	RemoveUnionRoomPlayerObjectEvent
	add	r0, r5, #0
	bl	HideUnionRoomPlayer
	b	.L105
.L110:
	add	r0, r4, #0x2
	add	r1, r5, #0
	add	r2, r4, #0
	bl	AnimateUnionRoomPlayerSpawn
	cmp	r0, #0x1
	bne	.L105	@cond_branch
	b	.L120
.L113:
	ldrb	r0, [r4, #0x3]
	cmp	r0, #0x2
	bne	.L105	@cond_branch
	mov	r1, #0x0
	mov	r0, #0x3
	strb	r0, [r4]
	strb	r1, [r4, #0x2]
.L115:
	add	r0, r4, #0x2
	add	r1, r5, #0
	add	r2, r4, #0
	bl	AnimateUnionRoomPlayerDespawn
	cmp	r0, #0x1
	bne	.L105	@cond_branch
	mov	r0, #0x0
.L120:
	strb	r0, [r4]
.L105:
	mov	r0, #0x0
	strb	r0, [r4, #0x3]
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe18:
	.size	 AnimateUnionRoomPlayer,.Lfe18-AnimateUnionRoomPlayer
	.align	2, 0
	.type	 Task_AnimateUnionRoomPlayers,function
	.thumb_func
Task_AnimateUnionRoomPlayers:
	push	{r4, r5, lr}
	ldr	r5, .L129
	ldr	r0, [r5]
	cmp	r0, #0
	bne	.L123	@cond_branch
	ldr	r0, .L129+0x4
	ldr	r1, .L129+0x8
	ldr	r2, .L129+0xc
	mov	r3, #0x1
	bl	AGBAssert
.L123:
	mov	r4, #0x0
.L127:
	lsl	r0, r4, #0x2
	ldr	r1, [r5]
	add	r1, r1, r0
	add	r0, r4, #0
	bl	AnimateUnionRoomPlayer
	add	r4, r4, #0x1
	cmp	r4, #0x7
	ble	.L127	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L130:
	.align	2, 0
.L129:
	.word	sUnionObjWork
	.word	.LC18
	.word	0x283
	.word	.LC28
.Lfe19:
	.size	 Task_AnimateUnionRoomPlayers,.Lfe19-Task_AnimateUnionRoomPlayers
	.align	2, 0
	.type	 CreateTask_AnimateUnionRoomPlayers,function
	.thumb_func
CreateTask_AnimateUnionRoomPlayers:
	push	{r4, lr}
	ldr	r4, .L135
	add	r0, r4, #0
	bl	FuncIsActiveTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L132	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x5
	bl	CreateTask
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	b	.L134
.L136:
	.align	2, 0
.L135:
	.word	Task_AnimateUnionRoomPlayers
.L132:
	ldr	r0, .L137
	ldr	r1, .L137+0x4
	ldr	r2, .L137+0x8
	mov	r3, #0x1
	bl	AGBAssert
	mov	r0, #0x10
.L134:
	pop	{r4}
	pop	{r1}
	bx	r1
.L138:
	.align	2, 0
.L137:
	.word	.LC18
	.word	0x28f
	.word	.LC20
.Lfe20:
	.size	 CreateTask_AnimateUnionRoomPlayers,.Lfe20-CreateTask_AnimateUnionRoomPlayers
	.align	2, 0
	.type	 DestroyTask_AnimateUnionRoomPlayers,function
	.thumb_func
DestroyTask_AnimateUnionRoomPlayers:
	push	{lr}
	ldr	r0, .L141
	bl	FindTaskIdByFunc
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xf
	bhi	.L140	@cond_branch
	bl	DestroyTask
.L140:
	pop	{r0}
	bx	r0
.L142:
	.align	2, 0
.L141:
	.word	Task_AnimateUnionRoomPlayers
.Lfe21:
	.size	 DestroyTask_AnimateUnionRoomPlayers,.Lfe21-DestroyTask_AnimateUnionRoomPlayers
	.align	2, 0
	.globl	DestroyUnionRoomPlayerObjects
	.type	 DestroyUnionRoomPlayerObjects,function
	.thumb_func
DestroyUnionRoomPlayerObjects:
	push	{r4, lr}
	mov	r4, #0x0
.L147:
	add	r0, r4, #0
	bl	IsUnionRoomPlayerHidden
	cmp	r0, #0
	bne	.L146	@cond_branch
	add	r0, r4, #0
	bl	RemoveUnionRoomPlayerObjectEvent
	add	r0, r4, #0
	bl	HideUnionRoomPlayer
.L146:
	add	r4, r4, #0x1
	cmp	r4, #0x7
	ble	.L147	@cond_branch
	ldr	r1, .L150
	mov	r0, #0x0
	str	r0, [r1]
	bl	DestroyTask_AnimateUnionRoomPlayers
	pop	{r4}
	pop	{r0}
	bx	r0
.L151:
	.align	2, 0
.L150:
	.word	sUnionObjWork
.Lfe22:
	.size	 DestroyUnionRoomPlayerObjects,.Lfe22-DestroyUnionRoomPlayerObjects
	.align	2, 0
	.globl	CreateUnionRoomPlayerSprites
	.type	 CreateUnionRoomPlayerSprites,function
	.thumb_func
CreateUnionRoomPlayerSprites:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x10
	str	r0, [sp, #0x8]
	mov	r9, r1
	mov	r7, #0x0
	mov	r0, r9
	lsl	r0, r0, #0x2
	mov	r8, r0
	ldr	r0, .L158
	mov	r2, r8
	add	r1, r2, r0
	ldrh	r1, [r1]
	mov	r2, sp
	strh	r1, [r2, #0xc]
	add	r0, r0, #0x2
	add	r0, r0, r8
	ldrh	r0, [r0]
	mov	sl, r0
	ldr	r6, .L158+0x4
.L156:
	mov	r5, r8
	add	r5, r5, r9
	add	r5, r5, r7
	add	r4, r5, #0
	sub	r4, r4, #0x38
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	mov	r2, #0x0
	ldrsb	r2, [r6, r2]
	mov	r0, sp
	ldrh	r0, [r0, #0xc]
	add	r2, r0, r2
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	mov	r3, #0x1
	ldrsb	r3, [r6, r3]
	add	r3, r3, sl
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	mov	r0, #0x3
	str	r0, [sp]
	mov	r0, #0x1
	str	r0, [sp, #0x4]
	mov	r0, #0x19
	add	r1, r4, #0
	bl	CreateVirtualObject
	ldr	r1, [sp, #0x8]
	add	r5, r1, r5
	strb	r0, [r5]
	add	r0, r4, #0
	mov	r1, #0x1
	bl	SetVirtualObjectInvisibility
	add	r6, r6, #0x2
	add	r7, r7, #0x1
	cmp	r7, #0x4
	ble	.L156	@cond_branch
	add	sp, sp, #0x10
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L159:
	.align	2, 0
.L158:
	.word	sUnionRoomPlayerCoords
	.word	sUnionRoomGroupOffsets
.Lfe23:
	.size	 CreateUnionRoomPlayerSprites,.Lfe23-CreateUnionRoomPlayerSprites
	.align	2, 0
	.globl	DestroyUnionRoomPlayerSprites
	.type	 DestroyUnionRoomPlayerSprites,function
	.thumb_func
DestroyUnionRoomPlayerSprites:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r4, #0x0
	ldr	r6, .L166
.L164:
	add	r0, r5, r4
	ldrb	r1, [r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r6
	bl	DestroySprite
	add	r4, r4, #0x1
	cmp	r4, #0x27
	ble	.L164	@cond_branch
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L167:
	.align	2, 0
.L166:
	.word	gSprites
.Lfe24:
	.size	 DestroyUnionRoomPlayerSprites,.Lfe24-DestroyUnionRoomPlayerSprites
	.align	2, 0
	.globl	MakeGroupAssemblyAreasPassable
	.type	 MakeGroupAssemblyAreasPassable,function
	.thumb_func
MakeGroupAssemblyAreasPassable:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x8
	mov	r5, #0x0
	add	r7, sp, #0x4
.L172:
	mov	r4, #0x0
	add	r6, r5, #0x1
.L176:
	add	r0, r5, #0
	add	r1, r4, #0
	mov	r2, sp
	add	r3, r7, #0
	bl	GetUnionRoomPlayerCoords
	ldr	r0, [sp]
	ldr	r1, [sp, #0x4]
	mov	r2, #0x0
	bl	MapGridSetMetatileImpassabilityAt
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L176	@cond_branch
	add	r5, r6, #0
	cmp	r5, #0x7
	ble	.L172	@cond_branch
	add	sp, sp, #0x8
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 MakeGroupAssemblyAreasPassable,.Lfe25-MakeGroupAssemblyAreasPassable
	.align	2, 0
	.type	 GetNewFacingDirectionForUnionRoomPlayer,function
	.thumb_func
GetNewFacingDirectionForUnionRoomPlayer:
	push	{lr}
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L180	@cond_branch
	ldr	r0, .L185
	add	r0, r1, r0
	ldrb	r0, [r0]
	b	.L184
.L186:
	.align	2, 0
.L185:
	.word	sMemberFacingDirections
.L180:
	ldrb	r1, [r2, #0xa]
	mov	r0, #0x7f
	and	r0, r0, r1
	cmp	r0, #0x45
	beq	.L182	@cond_branch
	mov	r0, #0x4
	b	.L184
.L182:
	mov	r0, #0x1
.L184:
	pop	{r1}
	bx	r1
.Lfe26:
	.size	 GetNewFacingDirectionForUnionRoomPlayer,.Lfe26-GetNewFacingDirectionForUnionRoomPlayer
	.align	2, 0
	.type	 IsUnionRoomPlayerInvisible,function
	.thumb_func
IsUnionRoomPlayerInvisible:
	push	{lr}
	add	r2, r0, #0
	lsl	r0, r2, #0x2
	add	r0, r0, r2
	add	r0, r0, r1
	sub	r0, r0, #0x38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsVirtualObjectInvisible
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 IsUnionRoomPlayerInvisible,.Lfe27-IsUnionRoomPlayerInvisible
	.align	2, 0
	.type	 SpawnGroupMember,function
	.thumb_func
SpawnGroupMember:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-0x8
	add	r5, r0, #0
	add	r6, r1, #0
	mov	r9, r3
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r8, r2
	lsl	r0, r5, #0x2
	add	r0, r0, r5
	add	r7, r0, r6
	add	r0, r5, #0
	bl	IsUnionRoomPlayerInvisible
	cmp	r0, #0x1
	bne	.L189	@cond_branch
	add	r4, r7, #0
	sub	r4, r4, #0x38
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	add	r0, r4, #0
	mov	r1, #0x0
	bl	SetVirtualObjectInvisibility
	add	r0, r4, #0
	mov	r1, #0x1
	bl	SetVirtualObjectSpriteAnim
.L189:
	add	r0, r7, #0
	sub	r0, r0, #0x38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, r8
	bl	SetVirtualObjectGraphics
	add	r0, r6, #0
	add	r1, r5, #0
	mov	r2, r9
	bl	GetNewFacingDirectionForUnionRoomPlayer
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r6, #0
	add	r1, r5, #0
	bl	SetUnionRoomObjectFacingDirection
	add	r3, sp, #0x4
	add	r0, r5, #0
	add	r1, r6, #0
	mov	r2, sp
	bl	GetUnionRoomPlayerCoords
	ldr	r0, [sp]
	ldr	r1, [sp, #0x4]
	mov	r2, #0x1
	bl	MapGridSetMetatileImpassabilityAt
	add	sp, sp, #0x8
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe28:
	.size	 SpawnGroupMember,.Lfe28-SpawnGroupMember
	.align	2, 0
	.type	 DespawnGroupMember,function
	.thumb_func
DespawnGroupMember:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	add	r5, r1, #0
	lsl	r0, r4, #0x2
	add	r0, r0, r4
	add	r0, r0, r5
	sub	r0, r0, #0x38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x2
	bl	SetVirtualObjectSpriteAnim
	add	r3, sp, #0x4
	add	r0, r4, #0
	add	r1, r5, #0
	mov	r2, sp
	bl	GetUnionRoomPlayerCoords
	ldr	r0, [sp]
	ldr	r1, [sp, #0x4]
	mov	r2, #0x0
	bl	MapGridSetMetatileImpassabilityAt
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe29:
	.size	 DespawnGroupMember,.Lfe29-DespawnGroupMember
	.align	2, 0
	.type	 AssembleGroup,function
	.thumb_func
AssembleGroup:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x8
	add	r7, r0, #0
	mov	r8, r1
	mov	r6, sp
	add	r6, r6, #0x2
	mov	r0, sp
	add	r1, r6, #0
	bl	PlayerGetDestCoords
	add	r4, sp, #0x4
	mov	r5, sp
	add	r5, r5, #0x6
	add	r0, r4, #0
	add	r1, r5, #0
	bl	player_get_pos_including_state_based_drift
	lsl	r0, r7, #0x2
	add	r0, r0, r7
	sub	r0, r0, #0x38
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	IsVirtualObjectInvisible
	mov	sl, r6
	mov	r9, r4
	add	r6, r5, #0
	cmp	r0, #0x1
	bne	.L192	@cond_branch
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r2, [r0, r1]
	mov	r0, sl
	mov	r1, #0x0
	ldrsh	r3, [r0, r1]
	add	r0, r7, #0
	mov	r1, #0x0
	bl	IsUnionRoomPlayerAt
	cmp	r0, #0x1
	beq	.L191	@cond_branch
	mov	r0, #0x0
	ldrsh	r2, [r4, r0]
	mov	r1, #0x0
	ldrsh	r3, [r6, r1]
	add	r0, r7, #0
	mov	r1, #0x0
	bl	IsUnionRoomPlayerAt
	cmp	r0, #0x1
	beq	.L191	@cond_branch
	mov	r2, r8
	ldrb	r0, [r2, #0xb]
	lsl	r0, r0, #0x1f
	lsr	r0, r0, #0x1f
	ldrb	r1, [r2, #0x2]
	bl	GetUnionRoomPlayerGraphicsId
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r7, #0
	mov	r1, #0x0
	mov	r3, r8
	bl	SpawnGroupMember
.L192:
	mov	r5, #0x1
	mov	r4, r8
	add	r4, r4, #0x4
.L198:
	ldrb	r0, [r4]
	cmp	r0, #0
	bne	.L199	@cond_branch
	add	r0, r7, #0
	add	r1, r5, #0
	bl	DespawnGroupMember
	b	.L197
.L199:
	mov	r0, sp
	mov	r1, #0x0
	ldrsh	r2, [r0, r1]
	mov	r0, sl
	mov	r1, #0x0
	ldrsh	r3, [r0, r1]
	add	r0, r7, #0
	add	r1, r5, #0
	bl	IsUnionRoomPlayerAt
	cmp	r0, #0
	bne	.L197	@cond_branch
	mov	r0, r9
	mov	r1, #0x0
	ldrsh	r2, [r0, r1]
	mov	r0, #0x0
	ldrsh	r3, [r6, r0]
	add	r0, r7, #0
	add	r1, r5, #0
	bl	IsUnionRoomPlayerAt
	cmp	r0, #0
	bne	.L197	@cond_branch
	ldrb	r2, [r4]
	lsr	r0, r2, #0x3
	mov	r1, #0x1
	and	r0, r0, r1
	mov	r1, #0x7
	and	r1, r1, r2
	bl	GetUnionRoomPlayerGraphicsId
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r7, #0
	add	r1, r5, #0
	mov	r3, r8
	bl	SpawnGroupMember
.L197:
	add	r4, r4, #0x1
	add	r5, r5, #0x1
	cmp	r5, #0x4
	ble	.L198	@cond_branch
.L191:
	add	sp, sp, #0x8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe30:
	.size	 AssembleGroup,.Lfe30-AssembleGroup
	.align	2, 0
	.type	 SpawnGroupLeaderAndMembers,function
	.thumb_func
SpawnGroupLeaderAndMembers:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	ldrb	r0, [r4, #0xa]
	lsl	r0, r0, #0x19
	lsr	r0, r0, #0x19
	sub	r0, r0, #0x40
	cmp	r0, #0x14
	bhi	.L219	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L221
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L222:
	.align	2, 0
.L221:
	.word	.L220
	.align	2, 0
	.align	2, 0
.L220:
	.word	.L206
	.word	.L218
	.word	.L219
	.word	.L219
	.word	.L218
	.word	.L218
	.word	.L219
	.word	.L219
	.word	.L218
	.word	.L219
	.word	.L219
	.word	.L219
	.word	.L219
	.word	.L219
	.word	.L219
	.word	.L219
	.word	.L219
	.word	.L218
	.word	.L218
	.word	.L218
	.word	.L206
.L206:
	ldrb	r1, [r4, #0xb]
	lsl	r1, r1, #0x1f
	lsr	r1, r1, #0x1f
	ldrb	r2, [r4, #0x2]
	add	r0, r5, #0
	bl	SpawnGroupLeader
	mov	r4, #0x0
.L210:
	add	r0, r5, #0
	add	r1, r4, #0
	bl	DespawnGroupMember
	add	r4, r4, #0x1
	cmp	r4, #0x4
	bls	.L210	@cond_branch
	b	.L204
.L218:
	add	r0, r5, #0
	bl	DespawnGroupLeader
	add	r0, r5, #0
	add	r1, r4, #0
	bl	AssembleGroup
	b	.L204
.L219:
	ldr	r0, .L223
	ldr	r1, .L223+0x4
	ldr	r2, .L223+0x8
	mov	r3, #0x1
	bl	AGBAssert
.L204:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L224:
	.align	2, 0
.L223:
	.word	.LC18
	.word	0x3d3
	.word	.LC20
.Lfe31:
	.size	 SpawnGroupLeaderAndMembers,.Lfe31-SpawnGroupLeaderAndMembers
	.align	2, 0
	.type	 DespawnGroupLeaderAndMembers,function
	.thumb_func
DespawnGroupLeaderAndMembers:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	DespawnGroupLeader
	mov	r4, #0x0
.L229:
	add	r0, r5, #0
	add	r1, r4, #0
	bl	DespawnGroupMember
	add	r4, r4, #0x1
	cmp	r4, #0x4
	ble	.L229	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe32:
	.size	 DespawnGroupLeaderAndMembers,.Lfe32-DespawnGroupLeaderAndMembers
	.align	2, 0
	.type	 UpdateUnionRoomPlayerSprites,function
	.thumb_func
UpdateUnionRoomPlayerSprites:
	push	{r4, r5, lr}
	ldr	r2, .L240
	mov	r1, #0x0
	str	r1, [r2]
	mov	r5, #0x0
	ldr	r4, [r0]
.L235:
	ldrb	r0, [r4, #0x1a]
	mov	r1, #0x3
	and	r1, r1, r0
	cmp	r1, #0x1
	bne	.L236	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	bl	SpawnGroupLeaderAndMembers
	b	.L234
.L241:
	.align	2, 0
.L240:
	.word	sUnionObjRefreshTimer
.L236:
	cmp	r1, #0x2
	bne	.L234	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	bl	DespawnGroupLeaderAndMembers
.L234:
	add	r4, r4, #0x20
	add	r5, r5, #0x1
	cmp	r5, #0x7
	ble	.L235	@cond_branch
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe33:
	.size	 UpdateUnionRoomPlayerSprites,.Lfe33-UpdateUnionRoomPlayerSprites
	.align	2, 0
	.globl	ScheduleUnionRoomPlayerRefresh
	.type	 ScheduleUnionRoomPlayerRefresh,function
	.thumb_func
ScheduleUnionRoomPlayerRefresh:
	ldr	r1, .L243
	mov	r0, #0x96
	lsl	r0, r0, #0x1
	str	r0, [r1]
	bx	lr
.L244:
	.align	2, 0
.L243:
	.word	sUnionObjRefreshTimer
.Lfe34:
	.size	 ScheduleUnionRoomPlayerRefresh,.Lfe34-ScheduleUnionRoomPlayerRefresh
	.align	2, 0
	.globl	HandleUnionRoomPlayerRefresh
	.type	 HandleUnionRoomPlayerRefresh,function
	.thumb_func
HandleUnionRoomPlayerRefresh:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L247
	ldr	r1, [r0]
	add	r1, r1, #0x1
	str	r1, [r0]
	mov	r0, #0x96
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bls	.L246	@cond_branch
	add	r0, r2, #0
	bl	UpdateUnionRoomPlayerSprites
.L246:
	pop	{r0}
	bx	r0
.L248:
	.align	2, 0
.L247:
	.word	sUnionObjRefreshTimer
.Lfe35:
	.size	 HandleUnionRoomPlayerRefresh,.Lfe35-HandleUnionRoomPlayerRefresh
	.align	2, 0
	.globl	TryInteractWithUnionRoomMember
	.type	 TryInteractWithUnionRoomMember,function
	.thumb_func
TryInteractWithUnionRoomMember:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x18
	add	r5, r0, #0
	str	r1, [sp, #0x4]
	str	r2, [sp, #0x8]
	bl	IsPlayerStandingStill
	cmp	r0, #0
	bne	.L250	@cond_branch
	b	.L268
.L267:
	ldr	r4, .L269
	bl	GetPlayerFacingDirection
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r0, r0, r4
	ldrb	r2, [r0]
	add	r0, r6, #0
	ldr	r1, [sp, #0xc]
	bl	SetUnionRoomObjectFacingDirection
	ldr	r0, [sp, #0x4]
	strh	r6, [r0]
	mov	r1, sp
	ldrh	r2, [r1, #0xc]
	ldr	r1, [sp, #0x8]
	strh	r2, [r1]
	mov	r0, #0x1
	b	.L266
.L270:
	.align	2, 0
.L269:
	.word	sOppositeFacingDirection
.L250:
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r0, sp
	add	r1, r4, #0
	bl	GetXYCoordsOneStepInFrontOfPlayer
	mov	r0, #0x0
	str	r0, [sp, #0xc]
	ldr	r0, .L271
	add	r7, r5, #0
	mov	r1, #0x0
	mov	sl, r1
	add	r2, r0, #0x2
	str	r2, [sp, #0x10]
	str	r0, [sp, #0x14]
.L254:
	mov	r6, #0x0
	ldr	r4, [sp, #0x14]
	mov	r0, #0x0
	ldrsh	r4, [r4, r0]
	mov	r9, r4
	ldr	r1, [sp, #0x10]
	mov	r8, r1
	ldr	r5, .L271+0x4
.L258:
	mov	r2, sl
	add	r3, r2, r6
	mov	r0, sp
	mov	r4, #0x0
	ldrsh	r1, [r0, r4]
	mov	r0, #0x0
	ldrsb	r0, [r5, r0]
	add	r0, r0, r9
	add	r0, r0, #0x7
	cmp	r1, r0
	bne	.L257	@cond_branch
	mov	r1, sp
	mov	r2, #0x2
	ldrsh	r0, [r1, r2]
	mov	r4, r8
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r2, #0x1
	ldrsb	r2, [r5, r2]
	add	r1, r1, r2
	add	r1, r1, #0x7
	cmp	r0, r1
	bne	.L257	@cond_branch
	add	r0, r3, #0
	sub	r0, r0, #0x38
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r0, r4, #0
	bl	IsVirtualObjectInvisible
	cmp	r0, #0
	bne	.L257	@cond_branch
	add	r0, r4, #0
	bl	IsVirtualObjectAnimating
	cmp	r0, #0
	bne	.L257	@cond_branch
	ldrb	r1, [r7, #0x1a]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	beq	.L267	@cond_branch
.L257:
	add	r5, r5, #0x2
	add	r6, r6, #0x1
	cmp	r6, #0x4
	ble	.L258	@cond_branch
	add	r7, r7, #0x20
	mov	r4, #0x5
	add	sl, sl, r4
	ldr	r0, [sp, #0x10]
	add	r0, r0, #0x4
	str	r0, [sp, #0x10]
	ldr	r1, [sp, #0x14]
	add	r1, r1, #0x4
	str	r1, [sp, #0x14]
	ldr	r2, [sp, #0xc]
	add	r2, r2, #0x1
	str	r2, [sp, #0xc]
	cmp	r2, #0x7
	ble	.L254	@cond_branch
.L268:
	mov	r0, #0x0
.L266:
	add	sp, sp, #0x18
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L272:
	.align	2, 0
.L271:
	.word	sUnionRoomPlayerCoords
	.word	sUnionRoomGroupOffsets
.Lfe36:
	.size	 TryInteractWithUnionRoomMember,.Lfe36-TryInteractWithUnionRoomMember
	.align	2, 0
	.type	 SetUnionRoomObjectFacingDirection,function
	.thumb_func
SetUnionRoomObjectFacingDirection:
	push	{r4, lr}
	add	r4, r0, #0
	add	r3, r1, #0
	lsl	r1, r2, #0x18
	lsr	r1, r1, #0x18
	lsl	r0, r3, #0x2
	add	r0, r0, r3
	sub	r0, r0, #0x38
	add	r0, r0, r4
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	bl	TurnVirtualObject
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe37:
	.size	 SetUnionRoomObjectFacingDirection,.Lfe37-SetUnionRoomObjectFacingDirection
	.align	2, 0
	.globl	UpdateUnionRoomMemberFacing
	.type	 UpdateUnionRoomMemberFacing,function
	.thumb_func
UpdateUnionRoomMemberFacing:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	lsl	r3, r4, #0x5
	add	r3, r3, r2
	add	r2, r3, #0
	bl	GetNewFacingDirectionForUnionRoomPlayer
	add	r2, r0, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r0, r5, #0
	add	r1, r4, #0
	bl	SetUnionRoomObjectFacingDirection
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe38:
	.size	 UpdateUnionRoomMemberFacing,.Lfe38-UpdateUnionRoomMemberFacing
.text
	.align	2, 0 @ Don't pad with nop

