@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	1, 0
	.type	 sDexAreas_Kanto,object
sDexAreas_Kanto:
	.short	0x58
	.short	0x1
	.short	0x59
	.short	0x2
	.short	0x5a
	.short	0x3
	.short	0x5b
	.short	0x4
	.short	0x5c
	.short	0x5
	.short	0x5d
	.short	0x6
	.short	0x5e
	.short	0x7
	.short	0x5f
	.short	0x8
	.short	0x60
	.short	0x9
	.short	0x61
	.short	0xa
	.short	0x62
	.short	0xb
	.short	0x63
	.short	0xf
	.short	0x64
	.short	0x15
	.short	0x65
	.short	0xc
	.short	0x66
	.short	0xd
	.short	0x67
	.short	0xe
	.short	0x68
	.short	0xf
	.short	0x69
	.short	0x10
	.short	0x6a
	.short	0x11
	.short	0x6b
	.short	0x12
	.short	0x6c
	.short	0x13
	.short	0x6d
	.short	0x14
	.short	0x6e
	.short	0x15
	.short	0x6f
	.short	0x16
	.short	0x70
	.short	0x17
	.short	0x71
	.short	0x18
	.short	0x72
	.short	0x19
	.short	0x73
	.short	0x1a
	.short	0x74
	.short	0x1b
	.short	0x75
	.short	0x1c
	.short	0x76
	.short	0x1d
	.short	0x77
	.short	0x1e
	.short	0x78
	.short	0x1f
	.short	0x79
	.short	0x20
	.short	0x7a
	.short	0x21
	.short	0x7b
	.short	0x22
	.short	0x7c
	.short	0x23
	.short	0x7d
	.short	0x24
	.short	0x7e
	.short	0x25
	.short	0x7f
	.short	0x27
	.short	0x80
	.short	0x6
	.short	0x81
	.short	0xb
	.short	0x82
	.short	0xb
	.short	0x83
	.short	0x26
	.short	0x84
	.short	0x2f
	.short	0x85
	.short	0x7
	.short	0x86
	.short	0xb
	.short	0x87
	.short	0x2e
	.short	0x88
	.short	0x2c
	.short	0x89
	.short	0x2f
	.short	0x8a
	.short	0x29
	.short	0x8b
	.short	0x2d
	.short	0x8c
	.short	0x2b
	.short	0x8d
	.short	0x28
	.short	0x8e
	.short	0x2a
	.size	 sDexAreas_Kanto,220
	.align	1, 0
	.type	 sDexAreas_Sevii1,object
sDexAreas_Sevii1:
	.short	0x96
	.short	0x37
	.short	0x97
	.short	0x38
	.short	0x8f
	.short	0x30
	.short	0xaf
	.short	0x48
	.size	 sDexAreas_Sevii1,16
	.align	1, 0
	.type	 sDexAreas_Sevii2,object
sDexAreas_Sevii2:
	.short	0x98
	.short	0x39
	.short	0x90
	.short	0x31
	.size	 sDexAreas_Sevii2,8
	.align	1, 0
	.type	 sDexAreas_Sevii3,object
sDexAreas_Sevii3:
	.short	0x99
	.short	0x3a
	.short	0x9a
	.short	0x3b
	.short	0x91
	.short	0x32
	.short	0xb0
	.short	0x49
	.short	0xb9
	.short	0x3b
	.size	 sDexAreas_Sevii3,20
	.align	1, 0
	.type	 sDexAreas_Sevii4,object
sDexAreas_Sevii4:
	.short	0x92
	.short	0x33
	.short	0xb1
	.short	0x4a
	.size	 sDexAreas_Sevii4,8
	.align	1, 0
	.type	 sDexAreas_Sevii5,object
sDexAreas_Sevii5:
	.short	0x9f
	.short	0x3c
	.short	0xa0
	.short	0x3d
	.short	0xa1
	.short	0x3e
	.short	0xa2
	.short	0x3f
	.short	0x93
	.short	0x34
	.short	0xb2
	.short	0x3e
	.short	0xb5
	.short	0x4b
	.size	 sDexAreas_Sevii5,28
	.align	1, 0
	.type	 sDexAreas_Sevii6,object
sDexAreas_Sevii6:
	.short	0xa3
	.short	0x40
	.short	0xa4
	.short	0x41
	.short	0xa5
	.short	0x42
	.short	0xa6
	.short	0x43
	.short	0xb4
	.short	0x4e
	.short	0xb6
	.short	0x4d
	.short	0xb7
	.short	0x4c
	.size	 sDexAreas_Sevii6,28
	.align	1, 0
	.type	 sDexAreas_Sevii7,object
sDexAreas_Sevii7:
	.short	0xa7
	.short	0x44
	.short	0xa8
	.short	0x45
	.short	0xa9
	.short	0x46
	.short	0xaa
	.short	0x47
	.short	0xbc
	.short	0x4f
	.short	0xbd
	.short	0x4f
	.short	0xbe
	.short	0x4f
	.short	0xbf
	.short	0x4f
	.short	0xc0
	.short	0x4f
	.short	0xc1
	.short	0x4f
	.short	0xc2
	.short	0x4f
	.size	 sDexAreas_Sevii7,44
	.align	2, 0
	.type	 sSeviiDexAreas,object
sSeviiDexAreas:
	.word	sDexAreas_Sevii1
	.word	0x4
	.word	sDexAreas_Sevii2
	.word	0x2
	.word	sDexAreas_Sevii3
	.word	0x5
	.word	sDexAreas_Sevii4
	.word	0x2
	.word	sDexAreas_Sevii5
	.word	0x7
	.word	sDexAreas_Sevii6
	.word	0x7
	.word	sDexAreas_Sevii7
	.word	0xb
	.size	 sSeviiDexAreas,56
	.align	2, 0
	.type	 sRoamerPairs,object
sRoamerPairs:
	.short	0xf4
	.short	0x1
	.short	0xf5
	.short	0x4
	.short	0xf3
	.short	0x7
	.size	 sRoamerPairs,12
.text
	.align	2, 0
	.globl	GetSpeciesPokedexAreaMarkers
	.type	 GetSpeciesPokedexAreaMarkers,function
	.thumb_func
GetSpeciesPokedexAreaMarkers:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x24
	str	r1, [sp, #0x10]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0xc]
	bl	GetRoamerIndex
	cmp	r0, #0
	blt	.L3	@cond_branch
	ldr	r0, [sp, #0xc]
	ldr	r1, [sp, #0x10]
	bl	GetRoamerPokedexAreaMarkers
	b	.L29
.L3:
	bl	GetUnlockedSeviiAreas
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	str	r0, [sp, #0x14]
	mov	r0, #0x0
	str	r0, [sp, #0x18]
	ldr	r0, .L30
	bl	VarGet
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [sp, #0x1c]
	cmp	r0, #0x8
	ble	.L4	@cond_branch
	mov	r1, #0x0
	str	r1, [sp, #0x1c]
.L4:
	mov	r6, #0x0
	mov	r8, r6
	ldr	r1, .L30+0x4
	ldrb	r0, [r1]
	cmp	r0, #0xff
	beq	.L6	@cond_branch
.L8:
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r4, r0, r1
	add	r0, r4, #0
	bl	GetMapSecIdFromWildMonHeader
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, #0xb7
	bne	.L9	@cond_branch
	ldr	r2, [sp, #0x18]
	add	r2, r2, #0x1
	str	r2, [sp, #0x18]
	add	r0, r2, #0
	sub	r0, r0, #0x1
	add	r1, r6, #0x1
	str	r1, [sp, #0x20]
	ldr	r2, [sp, #0x1c]
	cmp	r2, r0
	bne	.L7	@cond_branch
.L9:
	add	r0, r4, #0
	ldr	r1, [sp, #0xc]
	bl	IsSpeciesOnMap
	add	r6, r6, #0x1
	str	r6, [sp, #0x20]
	cmp	r0, #0
	beq	.L7	@cond_branch
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	lsl	r7, r5, #0x10
	add	r6, sp, #0x8
	b	.L12
.L31:
	.align	2, 0
.L30:
	.word	0x4024
	.word	gWildMonHeaders
.L14:
	add	r0, sp, #0x4
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L12	@cond_branch
	mov	r0, r8
	mov	r1, #0x1
	add	r8, r8, r1
	add	r1, sp, #0x4
	ldrh	r1, [r1]
	ldr	r2, [sp, #0x10]
	bl	GetAreaMarkerSubsprite
.L12:
	lsr	r0, r7, #0x10
	add	r2, sp, #0x4
	str	r2, [sp]
	ldr	r1, .L32
	mov	r2, #0x37
	add	r3, r6, #0
	bl	FindDexAreaByMapSec
	cmp	r0, #0
	bne	.L14	@cond_branch
	mov	r2, #0x0
	add	r5, sp, #0x4
	ldr	r0, .L32+0x4
	mov	sl, r0
.L20:
	ldr	r0, [sp, #0x14]
	asr	r0, r0, r2
	mov	r1, #0x1
	and	r0, r0, r1
	add	r1, r2, #0x1
	mov	r9, r1
	cmp	r0, #0
	beq	.L19	@cond_branch
	mov	r0, #0x0
	str	r0, [sp, #0x8]
	lsl	r4, r2, #0x3
	b	.L22
.L33:
	.align	2, 0
.L32:
	.word	sDexAreas_Kanto
	.word	sSeviiDexAreas
.L24:
	ldrh	r0, [r5]
	cmp	r0, #0
	beq	.L22	@cond_branch
	mov	r0, r8
	mov	r2, #0x1
	add	r8, r8, r2
	ldrh	r1, [r5]
	ldr	r2, [sp, #0x10]
	bl	GetAreaMarkerSubsprite
.L22:
	mov	r1, sl
	add	r0, r4, r1
	ldr	r1, [r0]
	ldr	r2, .L34
	add	r0, r4, r2
	ldr	r2, [r0]
	add	r0, sp, #0x4
	str	r0, [sp]
	lsr	r0, r7, #0x10
	add	r3, r6, #0
	bl	FindDexAreaByMapSec
	cmp	r0, #0
	bne	.L24	@cond_branch
.L19:
	mov	r2, r9
	cmp	r2, #0x6
	bls	.L20	@cond_branch
.L7:
	ldr	r6, [sp, #0x20]
	ldr	r1, .L34+0x4
	lsl	r0, r6, #0x2
	add	r0, r0, r6
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldrb	r0, [r0]
	cmp	r0, #0xff
	bne	.L8	@cond_branch
.L6:
	mov	r0, r8
.L29:
	add	sp, sp, #0x24
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L35:
	.align	2, 0
.L34:
	.word	sSeviiDexAreas+0x4
	.word	gWildMonHeaders
.Lfe1:
	.size	 GetSpeciesPokedexAreaMarkers,.Lfe1-GetSpeciesPokedexAreaMarkers
	.align	2, 0
	.type	 GetRoamerIndex,function
	.thumb_func
GetRoamerIndex:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r3, r0, #0x10
	mov	r1, #0x0
	ldr	r2, .L44
.L40:
	ldrh	r0, [r2]
	cmp	r0, r3
	bne	.L39	@cond_branch
	add	r0, r1, #0
	b	.L43
.L45:
	.align	2, 0
.L44:
	.word	sRoamerPairs
.L39:
	add	r2, r2, #0x4
	add	r1, r1, #0x1
	cmp	r1, #0x2
	bls	.L40	@cond_branch
	mov	r0, #0x1
	neg	r0, r0
.L43:
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 GetRoamerIndex,.Lfe2-GetRoamerIndex
	.align	2, 0
	.type	 GetRoamerPokedexAreaMarkers,function
	.thumb_func
GetRoamerPokedexAreaMarkers:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r5, r1, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	GetRoamerIndex
	add	r4, r0, #0
	cmp	r4, #0
	blt	.L49	@cond_branch
	ldr	r0, .L52
	lsl	r4, r4, #0x2
	add	r4, r4, r0
	bl	GetStarterSpecies
	ldrh	r1, [r4, #0x2]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r1, r0
	bne	.L49	@cond_branch
	bl	GetRoamerLocationMapSectionId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0x0
	str	r1, [sp, #0x8]
	ldr	r1, .L52+0x4
	add	r3, sp, #0x8
	add	r2, sp, #0x4
	str	r2, [sp]
	mov	r2, #0x37
	bl	FindDexAreaByMapSec
	cmp	r0, #0
	beq	.L49	@cond_branch
	add	r0, sp, #0x4
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L49	@cond_branch
	add	r0, sp, #0x4
	ldrh	r1, [r0]
	mov	r0, #0x0
	add	r2, r5, #0
	bl	GetAreaMarkerSubsprite
	mov	r0, #0x1
	b	.L51
.L53:
	.align	2, 0
.L52:
	.word	sRoamerPairs
	.word	sDexAreas_Kanto
.L49:
	mov	r0, #0x0
.L51:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 GetRoamerPokedexAreaMarkers,.Lfe3-GetRoamerPokedexAreaMarkers
	.align	2, 0
	.type	 IsSpeciesOnMap,function
	.thumb_func
IsSpeciesOnMap:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, [r4, #0x4]
	mov	r2, #0xc
	bl	IsSpeciesInEncounterTable
	cmp	r0, #0
	bne	.L58	@cond_branch
	ldr	r0, [r4, #0x8]
	add	r1, r5, #0
	mov	r2, #0x5
	bl	IsSpeciesInEncounterTable
	cmp	r0, #0
	bne	.L58	@cond_branch
	ldr	r0, [r4, #0x10]
	add	r1, r5, #0
	mov	r2, #0xc
	bl	IsSpeciesInEncounterTable
	cmp	r0, #0
	bne	.L58	@cond_branch
	ldr	r0, [r4, #0xc]
	add	r1, r5, #0
	mov	r2, #0x5
	bl	IsSpeciesInEncounterTable
	cmp	r0, #0
	bne	.L58	@cond_branch
	mov	r0, #0x0
	b	.L59
.L58:
	mov	r0, #0x1
.L59:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 IsSpeciesOnMap,.Lfe4-IsSpeciesOnMap
	.align	2, 0
	.type	 IsSpeciesInEncounterTable,function
	.thumb_func
IsSpeciesInEncounterTable:
	push	{r4, lr}
	add	r4, r1, #0
	cmp	r0, #0
	beq	.L61	@cond_branch
	mov	r1, #0x0
	cmp	r1, r2
	bge	.L61	@cond_branch
	ldr	r3, [r0, #0x4]
.L65:
	ldrh	r0, [r3, #0x2]
	cmp	r0, r4
	bne	.L64	@cond_branch
	mov	r0, #0x1
	b	.L68
.L64:
	add	r3, r3, #0x4
	add	r1, r1, #0x1
	cmp	r1, r2
	blt	.L65	@cond_branch
.L61:
	mov	r0, #0x0
.L68:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 IsSpeciesInEncounterTable,.Lfe5-IsSpeciesInEncounterTable
	.align	2, 0
	.type	 GetMapSecIdFromWildMonHeader,function
	.thumb_func
GetMapSecIdFromWildMonHeader:
	push	{lr}
	ldrb	r2, [r0]
	ldrb	r1, [r0, #0x1]
	add	r0, r2, #0
	bl	Overworld_GetMapHeaderByGroupAndId
	ldrb	r0, [r0, #0x14]
	pop	{r1}
	bx	r1
.Lfe6:
	.size	 GetMapSecIdFromWildMonHeader,.Lfe6-GetMapSecIdFromWildMonHeader
	.align	2, 0
	.type	 FindDexAreaByMapSec,function
	.thumb_func
FindDexAreaByMapSec:
	push	{r4, r5, r6, lr}
	add	r4, r2, #0
	ldr	r6, [sp, #0x10]
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	ldr	r2, [r3]
	cmp	r2, r4
	bge	.L72	@cond_branch
	lsl	r0, r2, #0x2
	add	r1, r0, r1
.L74:
	ldrh	r0, [r1]
	cmp	r0, r5
	bne	.L73	@cond_branch
	ldrh	r0, [r1, #0x2]
	strh	r0, [r6]
	add	r0, r2, #0x1
	str	r0, [r3]
	mov	r0, #0x1
	b	.L77
.L73:
	add	r1, r1, #0x4
	add	r2, r2, #0x1
	cmp	r2, r4
	blt	.L74	@cond_branch
.L72:
	mov	r0, #0x0
.L77:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe7:
	.size	 FindDexAreaByMapSec,.Lfe7-FindDexAreaByMapSec
.text
	.align	2, 0 @ Don't pad with nop

