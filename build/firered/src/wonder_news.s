@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	WonderNews_SetReward
	.type	 WonderNews_SetReward,function
	.thumb_func
WonderNews_SetReward:
	push	{r4, r5, lr}
	add	r4, r0, #0
	bl	GetSavedWonderNewsMetadata
	add	r5, r0, #0
	mov	r0, #0x3
	add	r1, r4, #0
	and	r1, r1, r0
	ldrb	r2, [r5]
	mov	r0, #0x4
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r5]
	cmp	r4, #0x2
	bhi	.L10	@cond_branch
	cmp	r4, #0x1
	bcs	.L6	@cond_branch
	b	.L3
.L10:
	cmp	r4, #0x3
	beq	.L7	@cond_branch
	b	.L3
.L6:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xf
	bl	__umodsi3
	add	r0, r0, #0x10
	b	.L11
.L7:
	bl	Random
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r1, #0xf
	bl	__umodsi3
	add	r0, r0, #0x1
.L11:
	strb	r0, [r5, #0x1]
.L3:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe1:
	.size	 WonderNews_SetReward,.Lfe1-WonderNews_SetReward
	.align	2, 0
	.globl	WonderNews_Reset
	.type	 WonderNews_Reset,function
	.thumb_func
WonderNews_Reset:
	push	{lr}
	bl	GetSavedWonderNewsMetadata
	mov	r1, #0x0
	strb	r1, [r0]
	strb	r1, [r0, #0x1]
	ldr	r0, .L13
	bl	VarSet
	pop	{r0}
	bx	r0
.L14:
	.align	2, 0
.L13:
	.word	0x4028
.Lfe2:
	.size	 WonderNews_Reset,.Lfe2-WonderNews_Reset
	.align	2, 0
	.globl	WonderNews_IncrementStepCounter
	.type	 WonderNews_IncrementStepCounter,function
	.thumb_func
WonderNews_IncrementStepCounter:
	push	{r4, lr}
	ldr	r0, .L17
	bl	GetVarPointer
	add	r4, r0, #0
	bl	GetSavedWonderNewsMetadata
	add	r2, r0, #0
	ldr	r0, [r2]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x1d
	cmp	r0, #0x4
	bls	.L16	@cond_branch
	ldrh	r0, [r4]
	add	r0, r0, #0x1
	strh	r0, [r4]
	lsl	r0, r0, #0x10
	ldr	r1, .L17+0x4
	cmp	r0, r1
	bls	.L16	@cond_branch
	ldrb	r0, [r2]
	mov	r1, #0x1f
	and	r1, r1, r0
	strb	r1, [r2]
	mov	r0, #0x0
	strh	r0, [r4]
.L16:
	pop	{r4}
	pop	{r0}
	bx	r0
.L18:
	.align	2, 0
.L17:
	.word	0x4028
	.word	0x1f30000
.Lfe3:
	.size	 WonderNews_IncrementStepCounter,.Lfe3-WonderNews_IncrementStepCounter
	.align	2, 0
	.globl	WonderNews_GetRewardInfo
	.type	 WonderNews_GetRewardInfo,function
	.thumb_func
WonderNews_GetRewardInfo:
	push	{r4, r5, r6, lr}
	ldr	r6, .L33
	bl	GetSavedWonderNewsMetadata
	add	r4, r0, #0
	bl	IsMysteryGiftEnabled
	cmp	r0, #0
	beq	.L21	@cond_branch
	bl	ValidateSavedWonderNews
	cmp	r0, #0
	bne	.L20	@cond_branch
.L21:
	mov	r0, #0x0
	b	.L32
.L34:
	.align	2, 0
.L33:
	.word	gSpecialVar_Result
.L20:
	add	r0, r4, #0
	bl	GetRewardType
	lsl	r0, r0, #0x10
	lsr	r5, r0, #0x10
	cmp	r5, #0x6
	bhi	.L22	@cond_branch
	lsl	r0, r5, #0x2
	ldr	r1, .L35
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L36:
	.align	2, 0
.L35:
	.word	.L30
	.align	2, 0
	.align	2, 0
.L30:
	.word	.L22
	.word	.L24
	.word	.L24
	.word	.L22
	.word	.L25
	.word	.L26
	.word	.L22
.L24:
	add	r0, r4, #0
	bl	GetRewardItem
	strh	r0, [r6]
	b	.L22
.L25:
	add	r0, r4, #0
	bl	GetRewardItem
	strh	r0, [r6]
	add	r0, r4, #0
	bl	IncrementSentRewardCounter
	b	.L22
.L26:
	add	r0, r4, #0
	bl	GetRewardItem
	strh	r0, [r6]
	add	r0, r4, #0
	bl	ResetSentRewardCounter
.L22:
	add	r0, r5, #0
.L32:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 WonderNews_GetRewardInfo,.Lfe4-WonderNews_GetRewardInfo
	.align	2, 0
	.type	 GetRewardItem,function
	.thumb_func
GetRewardItem:
	push	{r4, lr}
	ldrb	r2, [r0]
	mov	r1, #0x4
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	ldrb	r4, [r0, #0x1]
	add	r4, r4, #0x84
	mov	r1, #0x0
	strb	r1, [r0, #0x1]
	bl	IncrementRewardCounter
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 GetRewardItem,.Lfe5-GetRewardItem
	.align	2, 0
	.type	 ResetSentRewardCounter,function
	.thumb_func
ResetSentRewardCounter:
	ldrb	r2, [r0]
	mov	r1, #0x1d
	neg	r1, r1
	and	r1, r1, r2
	strb	r1, [r0]
	bx	lr
.Lfe6:
	.size	 ResetSentRewardCounter,.Lfe6-ResetSentRewardCounter
	.align	2, 0
	.type	 IncrementSentRewardCounter,function
	.thumb_func
IncrementSentRewardCounter:
	push	{r4, lr}
	add	r3, r0, #0
	ldr	r0, [r3]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1d
	add	r0, r0, #0x1
	mov	r1, #0x7
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	ldrb	r1, [r3]
	mov	r4, #0x1d
	neg	r4, r4
	add	r2, r4, #0
	and	r2, r2, r1
	orr	r2, r2, r0
	strb	r2, [r3]
	ldr	r0, [r3]
	lsl	r0, r0, #0x1b
	lsr	r0, r0, #0x1d
	cmp	r0, #0x4
	bls	.L40	@cond_branch
	and	r2, r2, r4
	mov	r0, #0x10
	orr	r2, r2, r0
	strb	r2, [r3]
.L40:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 IncrementSentRewardCounter,.Lfe7-IncrementSentRewardCounter
	.align	2, 0
	.type	 IncrementRewardCounter,function
	.thumb_func
IncrementRewardCounter:
	push	{r4, lr}
	add	r3, r0, #0
	ldr	r0, [r3]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x1d
	add	r0, r0, #0x1
	lsl	r0, r0, #0x5
	ldrb	r1, [r3]
	mov	r4, #0x1f
	add	r2, r4, #0
	and	r2, r2, r1
	orr	r2, r2, r0
	strb	r2, [r3]
	ldr	r0, [r3]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x1d
	cmp	r0, #0x5
	bls	.L42	@cond_branch
	and	r2, r2, r4
	mov	r0, #0xa0
	orr	r2, r2, r0
	strb	r2, [r3]
.L42:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe8:
	.size	 IncrementRewardCounter,.Lfe8-IncrementRewardCounter
	.section .rodata
	.align	2, 0
.LC2:
	.ascii	"C:/WORK/POKeFRLG/src/pm_lgfr_ose/source/menews_jisan.c\000"
	.align	2, 0
.LC4:
	.ascii	"0\000"
.text
	.align	2, 0
	.type	 GetRewardType,function
	.thumb_func
GetRewardType:
	push	{lr}
	add	r2, r0, #0
	ldrb	r1, [r2]
	mov	r0, #0xe0
	and	r0, r0, r1
	cmp	r0, #0xa0
	bne	.L44	@cond_branch
	mov	r0, #0x6
	b	.L54
.L44:
	ldr	r1, [r2]
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x1
	beq	.L47	@cond_branch
	cmp	r0, #0x1
	bgt	.L53	@cond_branch
	cmp	r0, #0
	beq	.L46	@cond_branch
	b	.L51
.L53:
	cmp	r0, #0x2
	beq	.L48	@cond_branch
	cmp	r0, #0x3
	beq	.L49	@cond_branch
	b	.L51
.L46:
	mov	r0, #0x3
	b	.L54
.L47:
	mov	r0, #0x1
	b	.L54
.L48:
	mov	r0, #0x2
	b	.L54
.L49:
	lsl	r0, r1, #0x1b
	lsr	r0, r0, #0x1d
	cmp	r0, #0x2
	bhi	.L50	@cond_branch
	mov	r0, #0x4
	b	.L54
.L50:
	mov	r0, #0x5
	b	.L54
.L51:
	ldr	r0, .L55
	ldr	r1, .L55+0x4
	ldr	r2, .L55+0x8
	mov	r3, #0x1
	bl	AGBAssert
	mov	r0, #0x0
.L54:
	pop	{r1}
	bx	r1
.L56:
	.align	2, 0
.L55:
	.word	.LC2
	.word	0x17f
	.word	.LC4
.Lfe9:
	.size	 GetRewardType,.Lfe9-GetRewardType
.text
	.align	2, 0 @ Don't pad with nop

